{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"KEG Zettelkasten for Jared Rickert (jlrickert)","text":"<p>Hi I\u2019m Jared. This is my personal zettelkasten KEG site. It contains stuff on pretty much any topic I feel like writing about, mostly about baking, homlabs, and tech how too. You can think of it as my own personal stack overflow or arch wiki. The latest additions and changes are always indexed.</p> <p>A word of caution is that these are raw notes. They may be inaccurate, messy, and/or plain misleading. Please don\u2019t quote me here as I may not still hold the same opinion on the subject. That is what my blog is for.</p> <p>The reason that I make these notes available is that they may be helpful to some one out there.</p> <p>If your curious about the whole setup for this search for the overview for my note taking system.</p>"},{"location":"0/index.html","title":"Sorry, planned but not yet available","text":"<p>This is a filler until I can provide someone better for the link that brought you here. If you are really anxious, consider opening an issue describing why you would like this missing content created before the rest.</p>"},{"location":"00_dex/index.html","title":"Index","text":""},{"location":"00_dex/index.html#indexes","title":"Indexes","text":"<p>These indexes are automatically updated when new content is created or old content is updated.</p> <ul> <li>Latest additions and updates</li> <li>Tab-delimited by ID</li> <li>Baking</li> <li>Homelab</li> </ul>"},{"location":"00_dex/baking.html","title":"Baking","text":"<ul> <li>2025-10-31 Bake: Halloween Sourdough Loaf</li> <li>2025-07-25 Bake: Pearled Barley Sourdough Loaf with Lower Hydration</li> <li>2025-07-05 Bake: 4th of July 2025 sourdough bread bowl</li> <li>2025-04-10 Bake: Potluck pretzel bites</li> <li>2025-03-25 Bake: White sourdough batard with purple Barley pearls</li> <li>2025-02-20 Bake: 80/20 sourdough loaf</li> <li>2025-02-11 Bake: 50/50 Sourdough Loaf</li> <li>2025-01-27 Bake: 50/50 Wheat Sourdough Loaf</li> <li>2024-12-15 Bake: More Rye-Based Sourdough Loaf</li> <li>2024-11-03 Bake: Generic weekend sourdough</li> <li>2024-10-29 Bake: large 80/20 sourdough bowl</li> <li>2024-10-23 Bake: Whole wheat 50/50 sourdough batard</li> <li>2024-08-30 Bake: Labor day 2024 bread bowl</li> <li>2024-08-25 Bake: Simple 50/50 sourdough Batard</li> <li>2024-08-04 Bake: Simple half and half focaccia</li> <li>2024-07-28 Bake: Simple whole wheat focaccia</li> <li>2024-07-04 Bake: Fourth of July focaccia</li> <li>2024-06-30 Bake: Fourth of July Pizza dough</li> <li>2024-06-29 Bake: Experimental whole wheat focaccia</li> <li>2024-06-14 Bake: Fathers Day Weekend focaccia 2024</li> <li>2024-06-10 Bake: Mid week Focaccia sourdough</li> <li>2024-05-23 Bake: Memorial Day Weekend focaccia 2024</li> <li>2024-05-19 Basic sourdough batard</li> <li>2024-04-14 Sourdough batard with purple prairie barley</li> <li>2024-02-02 Bake: Sourdough bread batard February 02 2024</li> <li>2024-01-19 Sourdough bread batard January 19 2024</li> <li>2024-01-16 White sourdough batard</li> <li>2024-01-10 Sourdough batard</li> <li>2023-12-30 Sourdough batard</li> <li>2023-12-23 Christmas bread bowl 2023</li> <li>2023-12-01 Uzbek Lepyoshki take 2</li> <li>2023-12-01 Uzbek Lepyoshki experiment</li> <li>2023-11-26 Guesswork Sourdough bread</li> <li>2023-11-24 Thanksgiving bread bowl 2022</li> <li>2023-09-16 Sourdough rye and barley pancakes</li> <li>2023-09-06 Sourdough pizza dough batch request</li> <li>2023-09-01 Labor day weekend bread bowl</li> <li>2023-08-25 Pizza night at the cabin pizza dough</li> <li>2023-08-18 Sourdough rye and barley pita bread</li> <li>2023-08-06 Sourdough somewhat whole wheat pizza for the ooni</li> <li>2023-08-02 Whole wheat tortilla recipe</li> <li>2023-07-26 First bigga sourdough pizza batch for the Ooni</li> <li>2023-07-22 Bigga sourdough pizza dough Saturday July 22 2023</li> <li>2023-06-30 July fourth weekend 2023 sourdough pizza</li> <li>2023-06-30 July fourth weekend 2023 sourdough bread bowl</li> <li>2023-06-23 Large sourdough pizza batch for BYOT pizza event</li> <li>2023-06-16 Father\u2019s day whole wheat sourdough batard</li> <li>2023-05-26 Memorial day sourdough bread bowl</li> <li>2023-05-08 Whole wheat sourdough loaf</li> <li>2023-04-20 Thu Apr 20 2023 sourdough pizza</li> <li>2023-04-18 Sourdough Pizza experiment</li> <li>2023-04-16 Experimental whole wheat pizza sourdough small batch</li> <li>2023-03-31 Experimental rye and barley pullman loaf</li> <li>2023-01-01 Einkorn sourdough bread bowl</li> <li>2022-11-24 Sourdough pizza</li> </ul>"},{"location":"00_dex/changes.html","title":"Changes","text":"<ul> <li>2025-10-31 19:42:02Z Bake: Halloween Sourdough Loaf</li> <li>2025-10-31 19:41:48Z Bake: 50/50 Wheat Sourdough Loaf</li> <li>2025-10-31 19:31:57Z Overview: Baking (baking)</li> <li>2025-10-31 19:29:04Z Bake: Fourth of July Pizza dough</li> <li>2025-10-31 19:25:03Z Bake: Mid week Focaccia sourdough</li> <li>2025-10-31 19:24:50Z Bake: Fathers Day Weekend focaccia 2024</li> <li>2025-10-31 19:24:36Z Bake: Experimental whole wheat focaccia</li> <li>2025-10-31 19:24:20Z Bake: Sourdough bread batard February 02 2024</li> <li>2025-10-31 19:23:21Z Bake: 50/50 Sourdough Loaf</li> <li>2025-10-31 19:23:07Z Bake: Fourth of July focaccia</li> <li>2025-10-31 19:23:02Z Bake: Labor day 2024 bread bowl</li> <li>2025-10-31 19:22:54Z Bake: large 80/20 sourdough bowl</li> <li>2025-10-31 19:22:32Z Bake: Simple half and half focaccia</li> <li>2025-10-31 19:21:56Z Bake: Simple 50/50 sourdough Batard</li> <li>2025-10-31 19:21:50Z Bake: More Rye-Based Sourdough Loaf</li> <li>2025-10-31 19:21:39Z Bake: Whole wheat 50/50 sourdough batard</li> <li>2025-10-31 19:21:29Z Bake: 4th of July 2025 sourdough bread bowl</li> <li>2025-10-31 19:20:54Z Bake: Generic weekend sourdough ~batard~ focaccia</li> <li>2025-10-31 19:20:41Z Bake: Pearled Barley Sourdough Loaf with Lower Hydration</li> <li>2025-10-31 19:17:41Z Categorization of numbers</li> <li>2025-10-30 17:14:40Z LLM model comparison for use with mods (2025-04-17)</li> <li>2025-10-30 14:57:23Z Project: Current Homelab (homelab)</li> <li>2025-10-29 15:58:55Z PHP setup for Neovim</li> <li>2025-10-25 16:45:28Z Common network ranges used in private networks</li> <li>2025-10-25 16:44:48Z Home Assistant smart home (home-assistant)</li> <li>2025-10-25 16:44:45Z Home assistant research</li> <li>2025-10-24 23:04:35Z </li> <li>2025-10-24 23:04:31Z Hardware: Beelink SEi 9</li> <li>2025-10-24 23:04:28Z Current Homelab topology</li> <li>2025-10-23 15:40:10Z Private IPv4 ranges</li> <li>2025-10-21 21:22:28Z iMessage public key</li> <li>2025-10-17 21:08:27Z Article: Number 1 use case for GPT according to Harvard</li> <li>2025-10-16 01:18:42Z Salsa (salsa)</li> <li>2025-10-11 17:01:09Z Bundling and compiling typescript files</li> <li>2025-10-11 01:29:12Z Hardware: My hands</li> <li>2025-10-10 14:18:52Z App: Tiling window management on macOSX with Yabai</li> <li>2025-10-07 21:40:57Z Modern jive circle</li> <li>2025-10-07 21:32:40Z Modern jive dance moves</li> <li>2025-10-06 15:14:07Z Migrating Virtualbox VM to Proxmox</li> <li>2025-10-06 15:07:35Z My history of public IP addresses</li> <li>2025-10-05 21:05:57Z Place: Williston Fitness Center</li> <li>2025-10-05 21:05:52Z Event: Twin Cities Marathon 2025</li> <li>2025-10-05 21:04:23Z Project: MCP Fileystem (filesystem-mcp-server)</li> <li>2025-10-03 19:58:47Z Place: Evergreen park</li> <li>2025-10-03 18:42:43Z Research: search engines</li> <li>2025-10-03 18:42:38Z Open-Source search engine: Meilisearch</li> <li>2025-10-01 20:11:48Z Automating Keycloak setup with Terraform</li> <li>2025-10-01 20:11:44Z Software: Pocket</li> <li>2025-10-01 20:11:39Z Software: <code>Terraform</code> (terraform)</li> <li>2025-10-01 17:06:21Z Software: Keycloak (keycloak)</li> <li>2025-09-29 16:32:42Z Coffee shops in Minneapolis/St Paul for large coworking groups</li> <li>2025-09-25 14:27:35Z Patch: Add logging with Grafana Loki - 2025-09-14</li> <li>2025-09-24 15:42:39Z Place: Gigi\u2019s cafe</li> <li>2025-09-24 15:38:48Z Place: Misfit coffee</li> <li>2025-09-24 15:35:44Z Place: Spyhouse Coffee Roasters - NE Minneapolis</li> <li>2025-09-24 15:34:07Z Place: Up Coffee</li> <li>2025-09-21 22:45:30Z Patch: Add Home Assistant - homelab</li> <li>2025-09-15 17:21:46Z Golang development loop with multi repos</li> <li>2025-09-14 23:13:06Z MCP servers (mcp)</li> <li>2025-09-14 22:51:20Z Github MCP setup</li> <li>2025-09-13 20:57:50Z Patch: serving password protected static websites on my homelab</li> <li>2025-09-13 20:03:26Z How to work on a multirepo setup for golang projects</li> <li>2025-09-11 17:23:57Z Patch make ed get edit\u2019s zsh completions (temporary hack)</li> <li>2025-09-11 16:58:06Z Golang setup</li> <li>2025-09-08 16:08:39Z Opinionated way to handle logging with golang</li> <li>2025-09-07 16:16:58Z Opinionated way to build cli programs with GO</li> <li>2025-09-07 15:51:53Z Opinionated error handling strategy in Go</li> <li>2025-09-06 15:56:08Z Opinionated config management with golang examples</li> <li>2025-09-03 21:36:21Z Prose linting on neovim with vale</li> <li>2025-09-03 21:20:34Z Neovim intellisense for JSON files</li> <li>2025-09-03 21:02:40Z LSP setup on Neovim</li> <li>2025-08-26 13:46:13Z Dungeons and dragons (dnd)</li> <li>2025-08-24 15:46:25Z [x] Issue: EOL for 25.1 Opnsense</li> <li>2025-08-24 15:45:50Z Hardware: Garmin Forerunner 955</li> <li>2025-08-24 15:45:45Z [ ] Issue: Garmin smartwatch fails to update</li> <li>2025-08-23 16:14:31Z Software: Opnsense (opnsense)</li> <li>2025-08-23 15:46:32Z How to setup email using AWS SES</li> <li>2025-08-23 15:46:27Z Patch: homelab email admin@jlrickert.me</li> <li>2025-08-23 15:16:13Z Service: iCloud (icloud)</li> <li>2025-08-23 15:14:16Z AWS (aws)</li> <li>2025-08-23 14:53:51Z AWS Simple Queue Service (SQS)</li> <li>2025-08-23 14:53:45Z Simple Notification Service (SNS)</li> <li>2025-08-23 14:53:38Z CI/CD on AWS</li> <li>2025-08-23 14:53:28Z API Gateway</li> <li>2025-08-23 14:53:07Z Event monitoring with Amazon CloudWatch</li> <li>2025-08-23 14:53:01Z Amazon EventBridge</li> <li>2025-08-23 14:52:55Z X-Ray debugging tool</li> <li>2025-08-23 14:52:48Z Amazon CodeStar</li> <li>2025-08-23 14:52:43Z Amazon CodeCommit</li> <li>2025-08-23 14:52:37Z Amazon CodeBuild</li> <li>2025-08-23 14:52:30Z Amazon CodeDeploy</li> <li>2025-08-23 14:52:23Z Amazon CodePipeline</li> <li>2025-08-23 14:52:08Z AWS Service CloudFormation</li> <li>2025-08-23 14:51:57Z AWS Cloud Development Kit (CDK)</li> <li>2025-08-23 14:51:48Z AWS CloudWatch</li> <li>2025-08-23 14:51:41Z AWS Elastic Kubernetes Service EKS</li> <li>2025-08-23 14:51:26Z AWS Elastic Container Registry (ECR)</li> <li>2025-08-23 14:51:20Z AWS Cognito</li> <li>2025-08-23 14:51:00Z AWS Developer Associate study guide</li> <li>2025-08-23 14:50:53Z AWS Elastic Block Storage</li> <li>2025-08-23 14:50:45Z AWS AppSync</li> <li>2025-08-23 14:28:19Z Service: CloudFlare (cloudflare)</li> <li>2025-08-22 20:22:32Z Validating AWS SES credentials</li> <li>2025-08-19 20:10:36Z AWS simple email service - SES</li> <li>2025-08-14 21:26:07Z Spin up PostgreSQL cluster on k8s</li> <li>2025-08-14 21:21:14Z Bitnami chart</li> <li>2025-08-14 21:21:10Z Person: Rob Muhlestein</li> <li>2025-08-14 21:21:06Z Streamer: rwxrob</li> <li>2025-08-14 18:49:29Z PostgreSQL server (postgresql)</li> <li>2025-08-13 21:40:40Z Place: Shoreview</li> <li>2025-08-13 21:39:41Z Place: Lions Tap</li> <li>2025-08-13 21:36:36Z Activate Global League</li> <li>2025-08-13 21:34:01Z Place: Little Falls (little-falls)</li> <li>2025-08-13 21:33:19Z Place: Brainerd (brainerd)</li> <li>2025-08-13 21:32:03Z Place: St Paul (stpaul)</li> <li>2025-08-13 20:18:25Z Hennepin County DMV appoints</li> <li>2025-08-11 14:42:46Z Go release strategy</li> <li>2025-08-10 06:03:18Z Software: Task runner <code>task</code> (taskfile)</li> <li>2025-08-10 01:46:51Z Software: Releases with chglog (git-chglog)</li> <li>2025-08-10 01:46:16Z Software: Releases with goreleaser (goreleaser)</li> <li>2025-08-08 15:49:54Z Prompt: \u201cLinkify\u201d KEG notes</li> <li>2025-08-08 14:54:33Z Project: keg (keg)</li> <li>2025-08-05 18:00:37Z Managing disks on MacOS</li> <li>2025-08-05 12:35:49Z Article: Twin Cities dancing event calendar</li> <li>2025-08-05 12:33:22Z AI Vibe coding tools</li> <li>2025-08-05 03:21:42Z Trick: YAML based config management in Golang</li> <li>2025-08-05 02:18:29Z Article: Twin Cities event calendar</li> <li>2025-08-04 14:14:48Z Programming language Go (golang)</li> <li>2025-08-03 00:55:21Z Places to go hiking in the twin cities</li> <li>2025-08-02 22:40:52Z Software: monitoring with Prometheus (prometheus)</li> <li>2025-08-02 22:40:37Z Kubernetes (k8s)</li> <li>2025-08-02 22:31:33Z Section 174 tax code from The Big Beautiful Bill</li> <li>2025-08-02 20:33:40Z Fedora workstation setup</li> <li>2025-08-02 20:12:28Z Project: <code>mods</code> by Charmbracelets</li> <li>2025-08-02 15:54:07Z E2e and Integration testing for go</li> <li>2025-08-02 14:59:36Z GitHub (github)</li> <li>2025-08-02 14:21:51Z Trick: Embedding version information in go binaries</li> <li>2025-08-02 14:20:14Z [ ] Dotfiles Task | create <code>sync-project</code> script</li> <li>2025-08-02 14:19:32Z Software: <code>entr</code></li> <li>2025-08-02 14:17:18Z A quick to making a module in golang</li> <li>2025-08-02 14:14:14Z Programming languae rust (rust)</li> <li>2025-08-02 14:14:09Z Programming language node (node)</li> <li>2025-08-02 14:10:55Z Programming language deno (deno)</li> <li>2025-07-30 15:08:33Z Event: Flash project showoff - tentative summer 2025</li> <li>2025-07-29 15:55:50Z Project ideas</li> <li>2025-07-28 21:38:18Z Patch: Add fzf to ku script</li> <li>2025-07-28 17:24:29Z Bake: White sourdough batard with purple Barley pearls</li> <li>2025-07-28 04:59:40Z Node installation</li> <li>2025-07-28 03:18:58Z Recommend language sever to use for golang development</li> <li>2025-07-26 20:42:26Z Choice of cli framework in go 2025</li> <li>2025-07-26 20:41:28Z Trick with go to embed version info</li> <li>2025-07-26 20:01:39Z Setting up DHCP on OPNSense (2024-11-09)</li> <li>2025-07-26 20:01:31Z Trick: Alt pipelines in bash</li> <li>2025-07-26 20:01:21Z Ubuntu template cloud version 1 for my homelab</li> <li>2025-07-26 19:42:06Z Ubuntu template version 1 for my homelab</li> <li>2025-07-26 19:32:05Z Proxmox cheatsheet</li> <li>2025-07-26 19:30:02Z Networking on MacOSX</li> <li>2025-07-26 17:17:01Z MSP Tech meetup group (msptech)</li> <li>2025-07-26 17:16:51Z Place: Minneapolis (minneapolis)</li> <li>2025-07-26 16:56:29Z Chamber of commerce office for finding what jobs are available</li> <li>2025-07-26 16:38:01Z Largest gaming convention 2d con in Minnesota</li> <li>2025-07-26 15:55:26Z Trick: Enforce interface implementation in GO</li> <li>2025-07-26 15:46:07Z Project: Database to local FS mount</li> <li>2025-07-25 20:35:40Z Software: frizbee fuzzy matcher</li> <li>2025-07-25 18:13:48Z Ingredient: Organic Goods and Gather all purpose flour</li> <li>2025-07-25 18:12:34Z Dutch Oven and Cast Iron Skillet Method for baking bread</li> <li>2025-07-25 17:31:30Z Hardware: Lodge 12 cast iron skillet</li> <li>2025-07-25 17:31:28Z Hardware: Lodge dutch oven</li> <li>2025-07-24 20:18:03Z Sourdough baking (sourdough)</li> <li>2025-07-24 20:01:00Z Automatically rerunning commands with <code>entr</code></li> <li>2025-07-24 18:09:53Z Sourdough batard with purple prairie barley</li> <li>2025-07-24 18:09:26Z Ingredient: King Author all purpose flour</li> <li>2025-07-22 22:26:42Z Cloud init first experience on my homelab</li> <li>2025-07-22 20:51:59Z Example search output for my KEG</li> <li>2025-07-20 17:09:11Z Cloud init (cloud-init)</li> <li>2025-07-20 16:39:55Z Creating an [Ubuntu Server](../670) template my [Homelab](../578)</li> <li>2025-07-20 15:32:40Z Person: Leonard Leo</li> <li>2025-07-20 15:32:37Z The federalist society group</li> <li>2025-07-19 04:11:23Z Person: Trump</li> <li>2025-07-17 14:43:36Z Factorio resources</li> <li>2025-07-17 14:39:50Z LLM frontend research</li> <li>2025-07-17 14:33:24Z Example neovim setups that other people use</li> <li>2025-07-17 14:33:19Z Person: ThePrimeagon</li> <li>2025-07-17 14:33:12Z Person: streamer s9tpepper</li> <li>2025-07-16 18:48:38Z Place: FRGMNT Coffee Eden Prairie</li> <li>2025-07-16 14:48:16Z Modern Jive (modern-jive)</li> <li>2025-07-16 02:57:11Z Diagnostics in neovim</li> <li>2025-07-15 21:16:24Z Formating for neovim</li> <li>2025-07-12 16:30:20Z Package manager UV for python</li> <li>2025-07-12 16:22:39Z Website: temporal.io</li> <li>2025-07-12 16:22:22Z State machine libararies</li> <li>2025-07-12 15:55:28Z Neovim file explorers</li> <li>2025-07-12 15:45:54Z Entity: Chingu (chingu)</li> <li>2025-07-12 15:44:11Z Learning in public</li> <li>2025-07-10 18:55:48Z Installing JavaScript minifier uglify with deno</li> <li>2025-07-10 18:55:37Z Installing CSS compressor csso with deno</li> <li>2025-07-08 20:34:18Z rwxrob\u2019s current hardware sizes for his homelab</li> <li>2025-07-07 17:13:37Z Labor day weekend bread bowl</li> <li>2025-06-28 22:14:47Z Managing disk space on unix</li> <li>2025-06-27 18:19:02Z Hilarious way to copy and paste into a VM</li> <li>2025-06-25 22:33:09Z Place: Blues saloon</li> <li>2025-06-09 04:05:36Z Copy and paste support on remote systems</li> <li>2025-06-09 04:05:10Z Zsh things (zsh)</li> <li>2025-06-09 01:41:29Z Patch: Reconfiguring zsh for my dotfiles</li> <li>2025-06-07 19:21:00Z How to handle conditionals in bash scripting</li> <li>2025-06-07 16:37:25Z My personal Bash style guide</li> <li>2025-06-04 23:22:11Z Patch: Installing proxmox on Beelink SEi 9</li> <li>2025-06-04 23:21:09Z Resources to figure out what protest are happening in Minnesota</li> <li>2025-06-03 21:58:04Z Facebook (facebook)</li> <li>2025-06-03 21:43:34Z Deno shell script example</li> <li>2025-06-03 03:46:29Z How to benchmark zsh</li> <li>2025-06-02 19:25:05Z Using TrueNAS NFS for Proxmox images</li> <li>2025-05-31 18:20:12Z CSS grid attributes and cheatsheet</li> <li>2025-05-30 20:46:32Z Programmatic bash completions</li> <li>2025-05-29 14:01:54Z Article: Really cool terminal web site</li> <li>2025-05-28 18:48:36Z Stateful command tree design architecture</li> <li>2025-05-28 17:30:17Z Software: CLI cheat sheets with <code>navi</code></li> <li>2025-05-28 14:50:49Z I3 like tiling window manager on MacOSX with AeroSpace</li> <li>2025-05-25 00:48:25Z Software: image previewing on CLI with yazi</li> <li>2025-05-24 16:46:01Z Quake style dropdown terminal on MacOSX</li> <li>2025-05-17 15:34:57Z Ansible like text blocks with bash for my dotfiles</li> <li>2025-05-17 15:01:51Z Overview: Ansible (ansible)</li> <li>2025-05-17 15:01:22Z SPEC: encode bash script</li> <li>2025-05-17 15:00:59Z Overview: Bash scripting (bash)</li> <li>2025-05-16 17:12:00Z Project: dotfiles (dotfiles)</li> <li>2025-05-16 17:08:46Z My running event race times</li> <li>2025-05-16 17:07:35Z Activity: Running</li> <li>2025-05-15 16:39:35Z OS Fingerprinting strategies in bash</li> <li>2025-05-15 15:30:54Z Adding dark/light mode toggle to my dotfiles</li> <li>2025-05-15 14:27:03Z Project: Neovim editor</li> <li>2025-05-15 14:26:45Z Project: WezTerm as my terminal of choice (wezterm)</li> <li>2025-05-15 14:25:59Z Project: Zellij (zellij)</li> <li>2025-05-15 14:22:19Z Ceroc dancing</li> <li>2025-05-14 20:06:42Z Terminal color</li> <li>2025-05-13 22:17:47Z Dance move: First Move</li> <li>2025-05-13 21:45:33Z Jive (jive)</li> <li>2025-05-13 21:45:30Z Swing dancing (swing)</li> <li>2025-05-13 21:44:26Z Studio: TC Swing dance studio</li> <li>2025-05-13 20:10:30Z </li> <li>2025-05-13 19:56:16Z Resources for rebuilding my neovim setup</li> <li>2025-05-11 17:12:36Z Event: Minnebar19 2025</li> <li>2025-05-08 22:55:33Z Case of using webp over png</li> <li>2025-05-05 14:36:55Z Quick start on settup lsp for neovim lua hacking</li> <li>2025-05-05 14:36:50Z Mason manager thingy in neovim</li> <li>2025-05-05 14:35:52Z Running neovim in an isolated docker context</li> <li>2025-05-05 14:32:33Z My vim setup</li> <li>2025-05-04 14:25:54Z Package management in neovim with mason</li> <li>2025-05-03 20:16:25Z [x] Homelab Task: OPNSense installation on Beelink EQ12 N1000</li> <li>2025-05-03 16:56:25Z Combat Candies</li> <li>2025-05-03 16:56:17Z Guitar frequency spectrum</li> <li>2025-05-03 16:52:46Z Human hearing frequency ranges and preferences</li> <li>2025-05-01 14:04:44Z Hardware: Gretsch G1617 Synchromatic guitar</li> <li>2025-04-21 21:15:55Z Prompt: Instructions for commenting code</li> <li>2025-04-18 20:56:49Z Prompt: Details of how my KEG is setup</li> <li>2025-04-10 19:01:52Z Bake: Potluck pretzel bites</li> <li>2025-04-10 16:32:11Z Rust based static site generator Zola</li> <li>2025-04-10 16:31:49Z Template engine Tera</li> <li>2025-04-09 19:08:05Z Activity: Pickleball (pickleball)</li> <li>2025-04-09 17:32:48Z Ingredient: Turkey Red wheat flour</li> <li>2025-04-07 14:43:46Z Activity: Trail running (trail-running)</li> <li>2025-04-07 14:43:42Z Event: Wild Duluth 50K 2024</li> <li>2025-04-07 14:43:32Z Time log: Theo trail running with Thirsty Thursdays</li> <li>2025-04-07 14:43:21Z Hardware: Luna Leadville pacer</li> <li>2025-04-07 14:43:06Z Place: Theodore Wirth Parkway</li> <li>2025-04-07 14:42:52Z Thirsty Thursdays Theo Trail Runners</li> <li>2025-04-07 14:38:02Z Activity: Hiking (hiking)</li> <li>2025-03-31 14:52:12Z Event: Two Rivers 10 Mile 2025</li> <li>2025-03-31 14:48:28Z Event: Two rivers 10 mile 2024</li> <li>2025-03-28 14:33:30Z Dance classes in the twin cities</li> <li>2025-03-24 18:44:06Z Company: Timeless Seeds</li> <li>2025-03-24 17:43:00Z Ingredient: Semi-Pearled Purple Prairie Barley</li> <li>2025-03-23 15:50:54Z Place: Boil seafood Restaurant</li> <li>2025-03-23 15:50:19Z Place: St Cloud (stcloud)</li> <li>2025-03-23 00:19:28Z Typical places to go dancing in Twin Cities</li> <li>2025-03-22 17:43:29Z Place: Twin Cities (twincities)</li> <li>2025-03-22 17:37:49Z Bachata (bachata)</li> <li>2025-03-22 17:17:35Z Studio: Minneapolis salsa and bachata (msbd)</li> <li>2025-03-22 16:16:44Z Studio: Onereason dance studio</li> <li>2025-03-22 16:16:13Z Studio: Duende dance studio</li> <li>2025-03-22 16:13:51Z Group: Hazy Rhythms dance</li> <li>2025-03-22 15:57:01Z Lindy hop (lindy)</li> <li>2025-03-22 15:56:15Z East coast swing (ecs)</li> <li>2025-03-17 14:22:24Z App: skhd - a simple hotkey daemon for macOS</li> <li>2025-03-17 14:20:12Z Overview: MacOSX (macosx)</li> <li>2025-03-15 22:18:30Z DNS on OPNsense</li> <li>2025-03-13 20:00:12Z Bake: 54/46 sourdough loaf</li> <li>2025-03-13 14:21:24Z Bake: 80/20 sourdough loaf</li> <li>2025-03-12 20:48:10Z Article: The disaster that is Copilot+ Recall</li> <li>2025-03-04 19:09:09Z Article: Foony architecture post on twitter</li> <li>2025-03-04 19:09:02Z Website: Foony</li> <li>2025-02-28 02:30:47Z Article: UnderCurrent MPLS show list</li> <li>2025-02-22 19:24:48Z Article: Language learning website</li> <li>2025-02-22 19:10:16Z Ingredient: King Arthur\u2019s bread flour 12.7%</li> <li>2025-02-22 17:13:25Z Article: The Wildernet</li> <li>2025-02-20 21:30:12Z Hardware: 12 inch Cast iron pan</li> <li>2025-02-20 21:29:39Z Hardware: Enameled cast iron pot</li> <li>2025-02-19 15:09:56Z Game: Incremental epic hero 2 (ieh2)</li> <li>2025-02-19 05:20:05Z Warrior stat spread for IEH2</li> <li>2025-02-16 21:51:44Z Article: Website that compares different new providers</li> <li>2025-02-16 21:51:36Z Musk rats and DOGE take over</li> <li>2025-02-15 22:57:20Z Managing styles for block theme in WordPress</li> <li>2025-02-08 18:25:27Z My preferred way of handling text width in documents</li> <li>2025-02-08 17:42:47Z Place: Bar Zia</li> <li>2025-02-06 16:12:29Z Programming by composition in PHP</li> <li>2025-02-05 17:34:27Z Kleisli\u2019s in PHP</li> <li>2025-02-05 17:27:46Z Monads in PHP</li> <li>2025-02-05 17:25:41Z Functors in PHP</li> <li>2025-02-05 15:52:41Z Monoids in PHP</li> <li>2025-02-02 00:40:57Z Article: programming language foundations in agda</li> <li>2025-01-31 15:10:47Z Concerts of interest for 2025</li> <li>2025-01-31 15:10:38Z Band: Larkin Poe</li> <li>2025-01-31 03:14:29Z The style of music called Folk</li> <li>2025-01-30 15:34:10Z Band: Nick David &amp; Demitrious Rallis</li> <li>2025-01-30 15:31:29Z Place: Bear Cave Brewing</li> <li>2025-01-30 15:18:45Z Event: Moving out of the ECW office in St Louis Park</li> <li>2025-01-28 15:19:16Z Weekly outing plan</li> <li>2025-01-28 15:19:10Z Place: Palmers</li> <li>2025-01-28 15:17:19Z Local band The TH3</li> <li>2025-01-28 15:17:12Z Bands local to Minneapolis</li> <li>2025-01-28 01:19:49Z Purely instrumental music</li> <li>2025-01-28 01:18:40Z The style of music called Funk</li> <li>2025-01-26 16:37:05Z SPEC: <code>zetq</code></li> <li>2025-01-26 16:36:55Z My current zettelkasten note taking setup</li> <li>2025-01-26 16:36:49Z Keg searching techniques</li> <li>2025-01-26 16:36:41Z Project: Knutjs (knutjs)</li> <li>2025-01-26 16:36:35Z Knut mobile app workflow</li> <li>2025-01-21 18:25:03Z Prompt: Creating git comments</li> <li>2025-01-21 01:20:32Z Place: 321 Club</li> <li>2025-01-21 01:19:28Z Local band The Gentlemen\u2019s Anti-Temperance League</li> <li>2025-01-21 01:16:16Z Place: 612 Brewing</li> <li>2025-01-21 01:09:04Z Local band The Last Revel</li> <li>2025-01-20 16:03:56Z Guitar tone</li> <li>2025-01-12 22:06:41Z Skiing in the Twin Cities</li> <li>2025-01-04 16:49:33Z Places to play pickle ball in the twin cities</li> <li>2025-01-02 15:15:10Z Hardware: Ibanez RG421 Electric Guitar</li> <li>2024-12-28 16:49:32Z Place: Chanhassen Dinner Theater</li> <li>2024-12-27 16:34:17Z Place: Rojo St Louis park</li> <li>2024-12-21 22:10:47Z Place: Halftime sports barbershop</li> <li>2024-12-19 15:46:33Z Prompt: converting tables in word documents to markdown tables</li> <li>2024-12-19 15:45:08Z Article: [Choosing an AI Model]</li> <li>2024-12-19 15:23:04Z Issue: unable to change model of an ongoing <code>mods</code> conversation</li> <li>2024-12-17 19:12:37Z Issue: troubleshoot large holes in sourdough bread</li> <li>2024-12-17 01:55:22Z Hardware: Harrison gas stove</li> <li>2024-12-17 01:53:57Z Deploying a keg on MkDocs</li> <li>2024-12-17 01:11:43Z Steps to host a keg with GitHub pages</li> <li>2024-12-17 00:21:55Z Overview: keg specification</li> <li>2024-12-17 00:09:50Z Autolyse Flour</li> <li>2024-12-10 17:51:47Z Hardware: Think Server 140 (ts140)</li> <li>2024-12-05 15:27:39Z Project: <code>claude</code> stateful command line tree program (claude-cli)</li> <li>2024-12-05 15:27:11Z Issue: LSP may expose sensitive contents</li> <li>2024-12-02 05:35:19Z Research: upgrading to an adjustable desk with a treadmill</li> <li>2024-11-30 21:14:53Z Trick: type safe error handling with error maps</li> <li>2024-11-27 16:07:25Z Trick to prevent page reloading for debugging</li> <li>2024-11-24 19:54:19Z Place: Mac\u2019s Industrial Sports Bar</li> <li>2024-11-24 19:54:11Z Place: Dinky Town</li> <li>2024-11-24 19:52:36Z Place: 12 Cider</li> <li>2024-11-20 21:18:34Z Experimenting with AI context windows on LocalAI and OpenAI</li> <li>2024-11-20 15:17:38Z Skill stack log dumps</li> <li>2024-11-19 22:59:44Z SPEC: homelab multi call binary monolith</li> <li>2024-11-19 21:58:09Z Using environment variables to populate YAML configurations</li> <li>2024-11-17 18:24:55Z EDU: Skill stack beginner boost (skillstack)</li> <li>2024-11-17 17:17:37Z Article: code signing deno applications</li> <li>2024-11-16 20:31:35Z Creating a time machine backup on TrueNAS</li> <li>2024-11-16 19:13:29Z First impressions with localai on my mac</li> <li>2024-11-16 04:35:55Z Software: Local AI (localai)</li> <li>2024-11-15 14:15:45Z Migrating from pnpm to deno</li> <li>2024-11-15 02:25:34Z Article: Security Incident Survey Cheatsheet for Server Administrators</li> <li>2024-11-15 02:24:07Z SPEC: Unix utility convention specification</li> <li>2024-11-14 15:54:58Z Enabling vi mode editing in bash</li> <li>2024-11-14 15:10:19Z How to use docker for NodeJS development</li> <li>2024-11-13 16:27:40Z SPEC: nexi bash script</li> <li>2024-11-12 17:41:33Z Connecting to MariaDB from MacOSX CLI</li> <li>2024-11-12 02:51:54Z Person: het_tanis</li> <li>2024-11-12 02:17:29Z Trump 2024 presidential election ramifications</li> <li>2024-11-11 18:35:28Z Process for create my encode script</li> <li>2024-11-10 04:47:38Z SPEC: dotz package manager</li> <li>2024-11-09 23:00:57Z Vim filter cheatsheet</li> <li>2024-11-09 20:39:41Z Most efficient transpiler see go tool chain</li> <li>2024-11-09 19:56:26Z [x] Homelab Task | setup proxmox</li> <li>2024-11-09 19:35:14Z Tech GODS list</li> <li>2024-11-09 17:55:02Z Task: TrueNas Installation on ts140</li> <li>2024-11-09 16:56:21Z [x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense</li> <li>2024-11-09 16:50:58Z IPv6 Certification</li> <li>2024-11-07 15:16:33Z Article: macOS X Mount NFS Share / Set an NFS Client</li> <li>2024-11-07 15:16:32Z Connecting to Truenas storage volumes with NFS on my MacOS</li> <li>2024-11-07 03:45:33Z Docker compose service cli interactions</li> <li>2024-11-04 14:44:45Z Networking in Ubuntu 24.04</li> <li>2024-11-04 14:08:27Z [x] Homelab Task: Assign IP address to PHP VM\u2019s</li> <li>2024-11-03 18:41:18Z Bake: Generic weekend sourdough</li> <li>2024-11-01 14:15:19Z PHP Trick: react inspired reusable components</li> <li>2024-11-01 03:56:45Z Possibly solution to dynamic autocompletes in oclif</li> <li>2024-10-28 17:23:22Z Hash house harriers (m3h)</li> <li>2024-10-28 16:01:02Z Recipe: Thai inspired chili</li> <li>2024-10-27 16:24:27Z Event: Minnebar 18 details</li> <li>2024-10-25 02:04:55Z Person: cmgriffing the streamer</li> <li>2024-10-24 13:26:50Z Hardware: Kineses Advantage 360</li> <li>2024-10-23 20:39:40Z Bonzai/hashicorp based completions in zsh</li> <li>2024-10-23 20:39:36Z Person: Adrian Cantril</li> <li>2024-10-21 17:46:30Z Embedding data within go binaries</li> <li>2024-10-21 13:51:54Z Air purifiers for home research</li> <li>2024-10-21 13:21:39Z Hardware: Altra lone peak 8</li> <li>2024-10-20 16:58:47Z Article: The perfect loafs best sourdough pancakes</li> <li>2024-10-09 13:55:27Z FreeBSD networking overview</li> <li>2024-10-08 02:02:29Z Types of lighting for a home</li> <li>2024-10-07 01:00:42Z Event: Twin Cities Marathon 2024</li> <li>2024-10-06 21:27:03Z Music equipment concepts</li> <li>2024-10-05 19:25:54Z Hardware: Focusrite Scarlett 2i2</li> <li>2024-10-05 17:09:57Z Project: Personal music studio</li> <li>2024-10-04 19:19:32Z How to install homebrew on a MacOS</li> <li>2024-10-04 19:19:01Z MacOS vs Linux difference</li> <li>2024-10-03 18:13:59Z Issue: Bitbucket markdown rendering is different than GitHub</li> <li>2024-10-03 18:10:13Z Quick start guides to Unix, bash, terminal, etc</li> <li>2024-09-24 14:53:49Z Zeros shoe comparison chart</li> <li>2024-09-24 14:53:37Z Minimal sandal preferences</li> <li>2024-09-24 13:59:36Z Luna sandal comparison</li> <li>2024-09-23 20:53:50Z Hardware: HFS shoes</li> <li>2024-09-23 18:56:19Z Issue: handling nested links in html</li> <li>2024-09-23 14:11:40Z Local MN band Six to Midnight </li> <li>2024-09-23 14:06:55Z Place: Minnesota city Forest Lake</li> <li>2024-09-21 15:20:55Z SQL workflow example with neovim</li> <li>2024-09-21 15:16:58Z Person: Streamer MarekCounts</li> <li>2024-09-19 16:24:29Z Dynamic themes in sveltekit</li> <li>2024-09-19 16:08:41Z CSS naming conventions</li> <li>2024-09-16 20:33:35Z WOW the War within season 1</li> <li>2024-09-16 13:44:12Z The War Within season 1 timeline</li> <li>2024-09-16 03:22:52Z WOW rogue (rogue)</li> <li>2024-09-16 03:22:42Z The war within season 1 rogue comparisons</li> <li>2024-09-15 22:57:19Z The War Within dungeons season 1 dungeons</li> <li>2024-09-14 18:12:30Z Meetup: Code and coffee meetup group (codeandcoffee)</li> <li>2024-09-14 18:12:27Z Event: First code and coffee meetup</li> <li>2024-09-14 17:16:10Z Jevons paradox reason why junior devs will not be replaced</li> <li>2024-09-14 17:15:56Z Place: SK Coffee near Lake monster brewing</li> <li>2024-09-14 17:14:06Z Place: Lake Monster Brewing</li> <li>2024-09-14 16:45:45Z Software: Frappe an open source quickbook like thing</li> <li>2024-09-12 15:16:28Z Hosting platform Heroku (heroku)</li> <li>2024-09-12 12:03:02Z WOW The War Within expansion</li> <li>2024-09-12 12:00:48Z Game: World of Warcraft (WOW)</li> <li>2024-09-12 11:58:56Z WOW expansions and seasons</li> <li>2024-09-09 13:28:20Z [ ] Homelab task: quick password protected https server</li> <li>2024-09-05 14:54:58Z Trick: custom select menus in the browser</li> <li>2024-08-31 02:04:44Z July fourth weekend 2023 sourdough bread bowl</li> <li>2024-08-29 15:34:45Z Trick: pulling in a commit from upstream with git</li> <li>2024-08-29 02:48:55Z The War Within dungeons</li> <li>2024-08-27 18:12:52Z Reverse engineering Wagmi Github CI/CD pipeline</li> <li>2024-08-26 18:17:10Z Perfect T-Bone on portable Weber grill</li> <li>2024-08-26 18:15:17Z Hardware: Portable Weber grill</li> <li>2024-08-26 14:25:27Z Reusable Mariadb SQL scripts on the CLI</li> <li>2024-08-25 19:38:27Z Security: possible PHP vulnerability vector</li> <li>2024-08-25 19:14:48Z Company: Walmart</li> <li>2024-08-25 19:13:48Z Company: Hamilton Beach</li> <li>2024-08-25 19:13:19Z Sourdough batard</li> <li>2024-08-25 13:24:05Z A custom publish function for changeset</li> <li>2024-08-25 04:00:30Z Person: Twitch streamer BlaiseBits</li> <li>2024-08-25 04:00:20Z Trick to display iPad on a windows machine</li> <li>2024-08-24 19:43:02Z Github CLI tips and tricks</li> <li>2024-08-24 19:36:05Z Software: changeset</li> <li>2024-08-24 14:22:59Z Company: Blizzard (blizzard)</li> <li>2024-08-24 14:20:46Z Person: Thor</li> <li>2024-08-24 14:20:42Z Reason why WOW implemented wow tokens</li> <li>2024-08-24 14:15:42Z 3 day head start on WOW may prevent early server overload</li> <li>2024-08-22 03:14:38Z Deploying WordPress on single docker host </li> <li>2024-08-21 14:05:06Z Webdev cookies</li> <li>2024-08-21 14:04:48Z Overview: Website development (webdev)</li> <li>2024-08-21 13:57:58Z Article: Interesting article about obfuscation</li> <li>2024-08-20 17:26:44Z Company: The Stepping Stone Group</li> <li>2024-08-18 15:20:39Z SPEC: Data organization in Knutjs</li> <li>2024-08-18 06:43:01Z Opinionated way to to organize application data</li> <li>2024-08-18 06:07:06Z Modern software configuration management specification Unix systems</li> <li>2024-08-18 02:57:22Z Harrison neighborhood</li> <li>2024-08-18 02:26:17Z SCORE venture capital group</li> <li>2024-08-15 14:10:25Z <code>foreach</code> mutation weirdness in PHP</li> <li>2024-08-13 14:17:37Z Place: Finland group campsite</li> <li>2024-08-12 19:13:25Z CSS properties related to lists</li> <li>2024-08-06 23:55:06Z Place: Cuzzy\u2019s Grill and bar in downtown Minneapolis</li> <li>2024-08-06 23:53:50Z Neovim repositories</li> <li>2024-08-05 19:41:06Z Bake: Simple whole wheat focaccia</li> <li>2024-08-05 15:22:34Z Time log: Homelab</li> <li>2024-08-05 15:21:11Z [x] TS140 Task: Installing upgrades to TS140</li> <li>2024-08-05 15:13:46Z OPNSense for networking</li> <li>2024-08-05 15:01:18Z [ ] Homelab Task: Updating CloudFlare based email forwarding</li> <li>2024-08-05 01:38:11Z Task: Setup OPNsense backups on google drive</li> <li>2024-08-04 22:46:52Z Recommendations for good sleep</li> <li>2024-08-04 17:37:58Z Setting up Digital Ocean DDNS on OPNSense</li> <li>2024-08-03 20:51:06Z Issue: Proxmox inaccessible</li> <li>2024-08-03 20:29:56Z ts140 as a TrueNas server requirements</li> <li>2024-08-03 20:10:40Z Overview: Nextcloud (nextcloud)</li> <li>2024-08-03 20:09:07Z Overview: TrueNas</li> <li>2024-08-02 22:46:43Z Place: The Nordic WeWork building</li> <li>2024-08-02 19:42:34Z CSS image sizing strategies</li> <li>2024-08-02 16:11:46Z Zet schemas idea based on structured data</li> <li>2024-08-02 15:59:41Z Target uses OpenTelemetry Logging for centralized logging</li> <li>2024-08-02 14:49:37Z Place: Hewing Hotel Rooftop</li> <li>2024-08-02 14:49:35Z Time log: Minneapolis 20s and 30s something social meetup group</li> <li>2024-08-02 14:43:10Z Place: Wandering Leaf Brewing</li> <li>2024-08-02 14:31:14Z Time log: JavaScriptMN</li> <li>2024-08-02 14:31:05Z OPNSense <code>opnsense-patch</code> utility</li> <li>2024-08-01 19:24:23Z Place: Up Down</li> <li>2024-08-01 04:50:41Z Digital ocean regions</li> <li>2024-08-01 03:56:53Z Hardware: Beelink EQ12 N100</li> <li>2024-08-01 03:32:38Z Companies that hire Software Engineers in the Twin Cities</li> <li>2024-08-01 02:09:30Z Technique for aborting <code>fetch</code> in progress</li> <li>2024-07-31 23:59:30Z [x] Homelab Task | setup DNS</li> <li>2024-07-31 23:58:24Z Smooth user input handling for webdev</li> <li>2024-07-31 23:56:54Z JavaScript multi head library neomjs</li> <li>2024-07-31 23:07:48Z Company: Frontend Masters</li> <li>2024-07-31 22:54:11Z JavaScriptMN meetup group (jsmn)</li> <li>2024-07-31 17:29:06Z Kubernetes and notetaking blog</li> <li>2024-07-31 17:28:21Z Person: Yoytuber Sebastiondaschner</li> <li>2024-07-31 14:23:35Z Bootcamp Career Foundry</li> <li>2024-07-30 23:39:51Z Youtube channel Fireship</li> <li>2024-07-30 23:37:53Z AI Group in Minneapolis called C.R.E.A.T.E.</li> <li>2024-07-30 23:36:54Z Dave Farley has good content on CI/CD</li> <li>2024-07-30 23:34:35Z Fieldkit hardware</li> <li>2024-07-30 22:45:05Z How to sort an array with -1, 0, and 1 sort function</li> <li>2024-07-30 20:37:00Z Blog with good tips about react performance</li> <li>2024-07-30 13:51:54Z Versioned database migration strategies</li> <li>2024-07-30 13:38:19Z Bryn Mawr neighborhood</li> <li>2024-07-30 03:00:17Z React performance trick by using batching</li> <li>2024-07-29 23:49:07Z Research on recommended rental companies</li> <li>2024-07-29 01:53:12Z Hardware: 42\u201d Flexispot corner raiser</li> <li>2024-07-28 21:51:51Z Place: Sue falls</li> <li>2024-07-28 21:49:50Z Place: Polish Palace</li> <li>2024-07-28 20:55:29Z Overview: Raspberry pi (pi)</li> <li>2024-07-28 20:39:18Z App: appfolio</li> <li>2024-07-28 20:38:38Z Rich text editors for website development</li> <li>2024-07-28 19:05:24Z Community bread oven in the Harrison Neighborhood</li> <li>2024-07-28 17:35:39Z Testing raw performance of hard drives with dd</li> <li>2024-07-28 16:24:57Z Ingredient: Himalayan pink salt</li> <li>2024-07-28 16:20:27Z Sourdough pizza</li> <li>2024-07-28 16:20:08Z Ingredient: Einkorn wheat berries</li> <li>2024-07-28 16:18:42Z 100% whole wheat sourdough starter</li> <li>2024-07-28 16:18:26Z 100% Rye sourdough starter</li> <li>2024-07-28 16:14:30Z Ingredient: Rye Berries</li> <li>2024-07-28 16:12:17Z Company: King Arthur</li> <li>2024-07-28 16:05:56Z WordPress development overview</li> <li>2024-07-28 06:01:50Z Overview: of the service Mailchimp (mailchimp)</li> <li>2024-07-28 06:01:22Z How to implement a contact form with MailChimp</li> <li>2024-07-28 06:00:42Z What is platform requirements</li> <li>2024-07-28 06:00:24Z WordPress email integrations</li> <li>2024-07-28 05:59:58Z Recommended PHP language server to use</li> <li>2024-07-28 05:59:57Z Issue: saving files in vim updates the modified time stamp</li> <li>2024-07-28 05:58:53Z How to manage files in vanilla vim with netrw</li> <li>2024-07-28 05:58:31Z Overview of themes in WordPress</li> <li>2024-07-28 05:58:08Z How to effectively use cp</li> <li>2024-07-28 05:57:34Z How to get started developing themes and plugins with WordPress</li> <li>2024-07-28 05:56:52Z How to work with gradients with tailwind</li> <li>2024-07-28 05:56:31Z How to quickly test out space vim</li> <li>2024-07-28 05:56:08Z Overview of a classic theme in WordPress</li> <li>2024-07-28 05:55:42Z Event: Biking with 20s 30s somethings</li> <li>2024-07-28 05:55:08Z How to get started with the redfin api</li> <li>2024-07-28 05:54:43Z The service userzoom for doing UX research</li> <li>2024-07-28 05:53:35Z Domain model for yabai</li> <li>2024-07-28 05:53:13Z How to setup bbPress forums in WordPress</li> <li>2024-07-28 05:52:44Z Place: Como Park Zoo and Conservatory in St Paul Minnesota</li> <li>2024-07-28 05:51:42Z WordPress development key concepts</li> <li>2024-07-28 05:49:37Z Problems with Linux as a workstation</li> <li>2024-07-28 05:48:58Z How to configure bash scripting behavior</li> <li>2024-07-28 05:48:33Z WordPress plugin Gravity forms</li> <li>2024-07-28 05:48:12Z Fierce armor kit construction cost calculation</li> <li>2024-07-28 05:46:31Z Tmux integration with iTerm 2</li> <li>2024-07-28 05:46:04Z Managing contexts with bash</li> <li>2024-07-28 05:45:41Z Lando concepts</li> <li>2024-07-28 05:41:55Z Necromancer leveling build on Diablo 4</li> <li>2024-07-28 05:41:28Z Recommended android SDK target for new android apps</li> <li>2024-07-28 05:40:49Z How to quickly spin up a dev environment for testing with docker</li> <li>2024-07-28 05:40:27Z Thinking about a Zettelkasten organization as a form a taxonomy</li> <li>2024-07-28 05:39:06Z Official WordPress theme review process</li> <li>2024-07-28 05:38:30Z Issue: Task to fix keybinding issues between MacOS and ranger</li> <li>2024-07-28 05:37:29Z Event: M23SS brewery event at Blackstack Brewing</li> <li>2024-07-28 05:36:06Z How to create your own theme in WordPress</li> <li>2024-07-28 05:35:41Z Diablo 4 completions</li> <li>2024-07-28 05:35:19Z Nginx clear cache hack with echo \u201c\u201d</li> <li>2024-07-28 05:34:06Z How to use arrays in bash</li> <li>2024-07-28 05:33:36Z How to view and edit pdfs and the command line</li> <li>2024-07-28 05:32:39Z Overview: Samsung S22+ device specification</li> <li>2024-07-28 05:31:27Z My personal PHP style guide</li> <li>2024-07-28 05:31:07Z Unix help pages with color</li> <li>2024-07-28 05:30:12Z Date standards</li> <li>2024-07-28 05:29:44Z How to install lando on MacOS</li> <li>2024-07-28 05:28:49Z Concrete 5</li> <li>2024-07-28 05:27:58Z Using a temporary directory that require installing transient scripts</li> <li>2024-07-28 05:27:28Z How I manage my secret dot files using a usb stick</li> <li>2024-07-28 05:21:47Z Places that have good public WiFi in Minneapolis</li> <li>2024-07-28 05:11:02Z Gear for dual training in swimming and running</li> <li>2024-07-28 05:05:49Z Place: Cedar lake near Theo</li> <li>2024-07-28 04:48:05Z Creating backlinks using using schema objects</li> <li>2024-07-28 04:37:53Z Structured data on the web</li> <li>2024-07-28 02:17:40Z Favorite parking spot in the North Loop</li> <li>2024-07-28 01:54:51Z Devastation Evoker priorities</li> <li>2024-07-28 01:52:52Z Overview: MacOSX tools and software</li> <li>2024-07-28 01:50:06Z World of Warcraft Evoker game play</li> <li>2024-07-28 01:48:52Z Place: Blackstack Brewing</li> <li>2024-07-28 01:48:00Z FreeBSD for homelab exploration</li> <li>2024-07-28 01:43:16Z Place: Tavern on First</li> <li>2024-07-28 01:41:12Z Place: Minnesota (minnesota)</li> <li>2024-07-28 01:36:52Z Place: Como lake</li> <li>2024-07-28 01:34:54Z Place: Stillwater</li> <li>2024-07-28 00:52:37Z Company: Target</li> <li>2024-07-28 00:40:59Z pfSense for networking</li> <li>2024-07-26 22:43:05Z Overview: keg</li> <li>2024-07-26 22:30:45Z My MacOS workstation setup</li> <li>2024-07-26 22:29:51Z Node setup on MacOSX</li> <li>2024-07-26 22:29:45Z How to increase cursor speed on MacOSX</li> <li>2024-07-26 22:29:30Z <code>nmap</code> installation on macOSX</li> <li>2024-07-26 22:29:10Z Managing neovim versions with brew</li> <li>2024-07-26 20:45:04Z Company: Luna (luna)</li> <li>2024-07-26 20:37:40Z Minneapolis 20s 30s something social meetup group (M23SS)</li> <li>2024-07-26 20:37:09Z Place: Minneapolis airport</li> <li>2024-07-26 16:25:39Z Adding keyboard only navigation elements to websites</li> <li>2024-07-26 14:16:30Z Place: Padraigs Brewing</li> <li>2024-07-26 14:07:48Z Refurbished enterprise data center HDD for NAS</li> <li>2024-07-25 22:35:10Z Sorry, planned but not yet available</li> <li>2024-07-25 22:35:08Z Example fly out navigation menu in website development</li> <li>2024-07-25 18:00:24Z Styling tab focused items</li> <li>2024-07-25 01:03:13Z Service announcement protocols</li> <li>2024-07-24 23:00:59Z World of warcraft evoker preservation gameplay</li> <li>2024-07-24 19:19:10Z View CSS on interactive elements</li> <li>2024-07-24 19:16:41Z Hardware: Netgear R7000 router</li> <li>2024-07-24 18:57:20Z Hardware: Dell XPS 9710</li> <li>2024-07-24 18:56:29Z Hardware: My Ooni Karu 12G</li> <li>2024-07-24 18:45:26Z Bash trick to run things in parallel</li> <li>2024-07-24 18:41:34Z Mill city running group</li> <li>2024-07-22 23:24:48Z [ ] Homelab Task | Explore next cloud</li> <li>2024-07-22 23:24:41Z [ ] mintea Task | help with minttea</li> <li>2024-07-22 13:43:00Z Overview: Proxmox (proxmox)</li> <li>2024-07-22 13:36:20Z Overview: Beelink (beelink)</li> <li>2024-07-21 15:03:08Z How to setup VSCode for PHP and WordPress development</li> <li>2024-07-20 14:16:54Z Hardware: TP-Link BE550 (be550)</li> <li>2024-07-20 14:16:24Z Hardware: Custom built PC Trooper (trooper)</li> <li>2024-07-19 20:15:58Z CSS selectors and combinators</li> <li>2024-07-19 20:15:35Z Issue: Rounded borders for a table header</li> <li>2024-07-19 19:37:03Z World wide web consortium (w3c)</li> <li>2024-07-19 19:31:03Z Project: Personal Zettelkasten (notetaking)</li> <li>2024-07-19 19:30:17Z Tabular data in HTML</li> <li>2024-07-19 19:30:13Z WHATWG community (whatwg)</li> <li>2024-07-19 19:14:09Z Layout strategies for webdev</li> <li>2024-07-19 05:27:11Z Event: Fargo half marathon 2019</li> <li>2024-07-19 05:25:30Z Event: Ely marathon 2023</li> <li>2024-07-19 05:24:21Z Event: Fargo half marathon 2024</li> <li>2024-07-18 20:10:43Z How to add custom fonts to a website</li> <li>2024-07-18 19:21:02Z Place: Utepils</li> <li>2024-07-18 04:59:51Z Research: 2024 WiFi upgrade</li> <li>2024-07-18 00:10:00Z Colors in bash scripting</li> <li>2024-07-17 20:40:10Z Place: Huckleberry ridge conservatory</li> <li>2024-07-17 20:37:26Z Dispersed camping</li> <li>2024-07-17 17:11:23Z Improving CLS with blocking font loading</li> <li>2024-07-16 22:14:04Z Person: Foony\u2019s developer acorn1010</li> <li>2024-07-16 21:58:03Z Place: Mill city running</li> <li>2024-07-16 15:35:32Z Article: Really good article about software engineering principles</li> <li>2024-07-16 02:50:58Z Techniques for handling scrolling</li> <li>2024-07-15 20:59:55Z Overview: <code>rsync</code></li> <li>2024-07-15 16:43:52Z Overview: Neovim Telescope Plugin</li> <li>2024-07-15 16:42:43Z [ ] Neovim Task | hunk text object visual navigation issue</li> <li>2024-07-15 14:35:24Z Overview: Ubuntu</li> <li>2024-07-15 04:23:44Z Bash scripting tricks</li> <li>2024-07-15 02:56:29Z Networking in Linux</li> <li>2024-07-15 02:54:10Z Overview: Debian</li> <li>2024-07-15 02:03:45Z Overview: FreeBSD</li> <li>2024-07-15 02:03:30Z Overview: UNIX</li> <li>2024-07-15 02:02:18Z Dialog in website design</li> <li>2024-07-14 23:24:32Z Preferred click handling mouse down vs mouse up</li> <li>2024-07-14 23:13:30Z Overview: Quad9 DNS</li> <li>2024-07-14 21:43:35Z Keg introduction</li> <li>2024-07-14 21:09:20Z [ ] Dotfiles Task | create a zetq script</li> <li>2024-07-14 21:08:56Z Overview: Pi-Hole</li> <li>2024-07-14 20:53:29Z [x] Homelab Task | setup pfSense on ts140</li> <li>2024-07-14 20:39:31Z Issue: Generating documentation for nvim plugins</li> <li>2024-07-14 20:34:25Z [x] Homelab Task | setup a vpn</li> <li>2024-07-14 19:46:02Z Research: buying Ethernet adapters for a PC or server</li> <li>2024-07-14 18:16:23Z Hardware: My M2 Macbook Pro</li> <li>2024-07-12 20:21:57Z PCI-DSS compliance</li> <li>2024-07-12 19:58:38Z Overview: Mariadb</li> <li>2024-07-12 16:32:36Z Arial font</li> <li>2024-07-12 04:09:14Z Issue: stupid MacOSX permissions crap</li> <li>2024-07-11 17:04:44Z Handy pathing scripts</li> <li>2024-07-11 14:40:48Z Overview: My Note taking system</li> <li>2024-07-11 14:39:27Z How I organize my notes</li> <li>2024-07-11 14:35:06Z Other note taking structures</li> <li>2024-07-11 14:30:39Z How to utilize these notes</li> <li>2024-07-11 14:21:26Z Overview: Zettelkasten definition</li> <li>2024-07-11 14:07:28Z Reason why some things will not work on apple</li> <li>2024-07-11 14:02:58Z Overview: Mailhog</li> <li>2024-07-11 13:58:22Z </li> <li>2024-07-08 04:52:13Z Sourdough pizza dough batch request</li> <li>2024-07-08 04:51:57Z Place: Taste of India St Louis Park</li> <li>2024-07-04 23:27:04Z Ingredient: Einkorn wheat berries</li> <li>2024-07-04 18:22:35Z An example of a bash script that has tab completion</li> <li>2024-07-04 17:53:31Z Overview: Unix style search and replace utilities</li> <li>2024-07-04 17:05:52Z Research: a Rofi like experience on MacOSX</li> <li>2024-07-04 17:04:23Z fzf setup and usage</li> <li>2024-07-04 15:27:18Z Bake: Memorial Day Weekend focaccia 2024</li> <li>2024-07-04 15:24:26Z Ingredient: Turkey red wheat berries</li> <li>2024-07-03 18:31:43Z Feature: search domain in DNS</li> <li>2024-07-02 20:51:57Z Place: St Louis Park, MN</li> <li>2024-07-01 20:24:27Z Overview: backing up Unix systems</li> <li>2024-07-01 19:18:47Z Beelink mini computers</li> <li>2024-07-01 15:32:05Z Issue: Host only adapter not working in UTM</li> <li>2024-07-01 15:24:21Z Ingredient: Polselli 00 flour classica</li> <li>2024-07-01 15:23:03Z Ingredient: Hard red wheat</li> <li>2024-06-30 22:16:00Z Person: VTuber Mischa van den Burg</li> <li>2024-06-30 21:26:52Z Information normalization in note taking</li> <li>2024-06-30 20:42:07Z Research: Wowhead diablo 4 class ranking comparison</li> <li>2024-06-30 20:22:51Z Google structured data</li> <li>2024-06-30 19:22:45Z Neapolitan pizza</li> <li>2024-06-30 19:18:13Z Large sourdough pizza batch for BYOT pizza event</li> <li>2024-06-30 18:16:53Z Issue: Sticking issues with baking</li> <li>2024-06-30 18:02:07Z Hardware: Samsung S22+ android phone (s22)</li> <li>2024-06-30 17:53:15Z Hardware: Razer thunderbolt docking station</li> <li>2024-06-30 17:29:32Z Task to figure out how to make scrolling faster on MacOS</li> <li>2024-06-30 17:28:16Z Wireguard for AWS VPC access gateway for Ubuntu server</li> <li>2024-06-30 17:25:50Z Research: docker setup for multiple php websites</li> <li>2024-06-29 02:22:06Z Accessing <code>package.json</code> version for a TypeScript cli applicationg</li> <li>2024-06-28 14:18:21Z Overview of navicat</li> <li>2024-06-27 13:30:32Z Place: Loadstone Coffee and Games</li> <li>2024-06-26 22:40:40Z Cross compatibility with Windows Explorer zip files</li> <li>2024-06-26 22:28:22Z Zip cheatsheet</li> <li>2024-06-26 19:18:24Z Running FreeBSD VM on apple silicon with QEMU</li> <li>2024-06-24 14:33:28Z Git techniques and cheatsheet</li> <li>2024-06-23 17:17:21Z Covariance and contravariance in TypeScript</li> <li>2024-06-22 18:48:48Z Building guis with Dioxis in rust</li> <li>2024-06-22 15:25:52Z Issue: running a typescript library in deno</li> <li>2024-06-21 03:43:43Z Basic setup for a React Native app with expo and pnpm monorepo</li> <li>2024-06-21 03:43:40Z CommonJs module system in Node</li> <li>2024-06-21 03:43:38Z ESM module system in Node</li> <li>2024-06-21 02:22:52Z Optimal rice to water ratio</li> <li>2024-06-19 23:43:17Z [ ] Neovim Task | setup configuration</li> <li>2024-06-19 23:33:15Z Research: Running sandals</li> <li>2024-06-19 23:33:12Z Huarache</li> <li>2024-06-19 16:09:53Z WordPress docker container</li> <li>2024-06-19 15:48:26Z AWS service elastic beanstalk</li> <li>2024-06-18 01:42:48Z Recommended wine list</li> <li>2024-06-13 23:16:52Z Sat 17 Dec 2022 farrel\u2019s kick boxing party</li> <li>2024-06-11 21:35:55Z How to build a generic accordion in WordPress</li> <li>2024-06-11 21:09:04Z Accordion plugins for WordPress</li> <li>2024-06-11 19:38:23Z How to manage ssh keys</li> <li>2024-06-11 19:38:17Z Installing patched power line fonts for MacOS</li> <li>2024-06-11 15:11:40Z Network switch research</li> <li>2024-06-10 15:57:40Z AWS service CloudFront</li> <li>2024-06-10 15:56:58Z AWS service CloudTrail</li> <li>2024-06-09 17:13:01Z Node version management with nvm</li> <li>2024-06-09 16:10:11Z Think Server T140 hardware dump</li> <li>2024-06-08 18:15:39Z Package management in Ubuntu</li> <li>2024-06-08 16:19:09Z Converting a VirtualBox VDI to a QEMU on MacOSX</li> <li>2024-06-08 16:19:05Z VirtualBox on apple silicon</li> <li>2024-06-08 16:08:06Z File system recommendation for FreeBSD</li> <li>2024-06-08 15:44:24Z Manage virtual machines with QEMU</li> <li>2024-06-08 15:37:36Z How I use chezmoi to manage my dot files</li> <li>2024-06-07 22:37:58Z Package management in FreeBSD</li> <li>2024-06-07 21:48:22Z Wireguard topologies</li> <li>2024-06-07 20:03:47Z VLAN overview</li> <li>2024-06-07 18:00:23Z Tools needed to setup a npm library for typescript</li> <li>2024-06-07 17:56:20Z How to convert JSON typescript schema</li> <li>2024-06-07 03:53:05Z Full list of operating systems that ansible is able to detect</li> <li>2024-06-06 21:44:45Z KeePass is the only password manager resistant to Copilot+ Recall</li> <li>2024-06-05 22:02:05Z KEG website with CMS</li> <li>2024-05-30 22:27:52Z My personal typescript style guide</li> <li>2024-05-30 20:59:55Z All things sudo</li> <li>2024-05-28 14:15:40Z Basic sourdough batard</li> <li>2024-05-23 15:10:51Z Local network machine IP address discovery protocols</li> <li>2024-05-22 04:13:52Z Middleware pattern with typescript</li> <li>2024-05-21 14:29:19Z First exploration into Nix</li> <li>2024-05-21 14:27:01Z Releasing software with python</li> <li>2024-05-21 00:22:45Z World of Warcraft court of stars dungeon</li> <li>2024-05-21 00:04:29Z Mongo style filter example with typescript</li> <li>2024-05-20 22:50:53Z Proof of concept for a monorepo with changesets</li> <li>2024-05-20 21:41:36Z How to setup automated change logs with github actions</li> <li>2024-05-18 23:46:58Z Git clients</li> <li>2024-05-18 23:46:17Z Vexilla is using tailblocks</li> <li>2024-05-18 23:13:42Z In search of a configuration and data exchange language</li> <li>2024-05-18 23:13:30Z GitHub action using nix</li> <li>2024-05-18 20:41:58Z Snippets in neovim</li> <li>2024-05-18 19:20:13Z Known standards</li> <li>2024-05-18 15:31:14Z MariaDB SQL cheat sheet</li> <li>2024-05-17 19:42:00Z Database data management for MySQL with Navicat</li> <li>2024-05-15 21:58:49Z Sync a directory with rsync</li> <li>2024-05-15 19:47:32Z Recommended image types to use on the web</li> <li>2024-05-15 16:43:35Z My preferred intellij settings</li> <li>2024-05-14 02:28:04Z Flexbox CSS attributes</li> <li>2024-05-13 19:12:23Z How to swap caps lock on MacOS</li> <li>2024-05-10 15:18:01Z How to swap caps lock on windows</li> <li>2024-05-09 20:11:54Z How is width calculated within CSS</li> <li>2024-05-09 20:11:52Z Git gutter issues in Phpstorm based editor when using SMB protocol</li> <li>2024-05-09 20:09:38Z PHP awesome list</li> <li>2024-05-07 14:56:39Z Bootstrap 3 tips and tricks</li> <li>2024-05-06 14:58:07Z How to upload a SSH key pair from the CLI to AWS</li> <li>2024-05-06 14:57:36Z Traditional Italian Easter bread</li> <li>2024-05-04 22:14:46Z Uzbek Lepyoshki experiment</li> <li>2024-05-04 20:56:00Z Recommended temperature for bread rising with active dry yeast</li> <li>2024-05-04 20:47:48Z Uzbek Lepyoshki take 2</li> <li>2024-05-04 20:28:50Z keg create git issue</li> <li>2024-05-03 01:36:40Z Vim, tmux and ssh copy and paste madness</li> <li>2024-05-03 01:36:37Z How to setup fira code fonts on windows</li> <li>2024-05-01 16:23:17Z How do document php code</li> <li>2024-04-30 18:48:32Z Tips for adding TypeScript to legacy JavaScript code bases</li> <li>2024-04-29 22:05:50Z Add type checking to babel configuration</li> <li>2024-04-27 16:38:35Z How to mount a sambda drive on macosx CLI</li> <li>2024-04-23 17:01:39Z Nodejs ecosystem support on freebsd</li> <li>2024-04-22 18:01:49Z Installing software with curl</li> <li>2024-04-17 18:46:00Z User agent switcher</li> <li>2024-04-16 21:54:09Z My tmux setup</li> <li>2024-04-16 21:01:22Z SSH key rotation best practices</li> <li>2024-04-15 19:36:37Z Monday April 15 2024 daily entry</li> <li>2024-04-13 18:57:14Z A better zustand store</li> <li>2024-04-08 16:18:17Z Davy Crockett National Forest camping</li> <li>2024-04-08 15:57:04Z Primitive Camping in Texas</li> <li>2024-04-08 04:47:16Z Caddo national grasslands</li> <li>2024-04-08 04:01:13Z WOW Dragonflight season 4</li> <li>2024-04-02 19:03:30Z WOW Dragonflight Season 3</li> <li>2024-04-02 17:18:26Z Phone research for 2024</li> <li>2024-03-29 15:00:33Z Common bacteria in the human mouth</li> <li>2024-03-28 19:33:00Z React native design concepts</li> <li>2024-03-27 20:42:27Z Only fans PR move</li> <li>2024-03-27 16:14:58Z Flutter experiments</li> <li>2024-03-27 16:14:01Z Install flutter on macOSX with apple silicon</li> <li>2024-03-25 05:49:08Z Dependency injection using the Reader pattern</li> <li>2024-03-25 05:19:51Z Notes about the neurological impact of music from a podcast</li> <li>2024-03-12 21:09:33Z Air quality in my living area research</li> <li>2024-03-02 18:56:35Z Knut installation process on MacOSX</li> <li>2024-02-29 19:28:48Z Stateful command tree using commander js</li> <li>2024-02-28 06:03:46Z Java 16.02 bug with AMD processors</li> <li>2024-02-24 19:51:16Z Simple versioning using changesets</li> <li>2024-02-16 23:51:02Z Where to do research on the job market for tech jobs</li> <li>2024-02-14 17:49:39Z System interactions in Tauri</li> <li>2024-02-13 17:29:10Z OCaml awesome</li> <li>2024-02-13 17:26:50Z Mirage OS virtual library OS</li> <li>2024-02-13 17:18:33Z How to programmatically upload to S3</li> <li>2024-02-12 20:12:55Z TypeScript auto imports in neovim</li> <li>2024-02-12 19:08:39Z Strange .pnpm-store appearing in my repo</li> <li>2024-02-12 19:07:28Z Example usage of Ethereum block chain being used</li> <li>2024-02-11 15:08:48Z JavaScript article</li> <li>2024-02-09 17:11:21Z leostera the streamer</li> <li>2024-02-09 17:11:20Z Biomarkers associated to centenarians</li> <li>2024-02-09 16:36:26Z Recommended formatting for OCaml</li> <li>2024-02-08 18:06:37Z Convert physically pointing to the stream to a virtual one</li> <li>2024-02-05 21:19:34Z Research on Webpack\u2019s plugin architecture</li> <li>2024-02-05 21:03:46Z Plugin architecture of vscode</li> <li>2024-02-05 19:17:49Z SVG security in public extensions for VSCode</li> <li>2024-02-05 19:02:51Z Knutjs project idea</li> <li>2024-02-05 05:15:32Z Rock paper scissors game</li> <li>2024-02-05 05:15:31Z Ice Skating in Twin Cities</li> <li>2024-02-05 03:51:06Z AWS Certifications</li> <li>2024-02-04 01:25:15Z jq cheat sheet</li> <li>2024-02-02 20:17:42Z Sourdough bread batard January 19 2024</li> <li>2024-01-27 21:24:29Z Moving over to a different way to handle my public KEG</li> <li>2024-01-27 20:40:38Z Guesswork Sourdough bread</li> <li>2024-01-27 20:39:55Z Sourdough rye and barley pita bread</li> <li>2024-01-27 20:39:08Z Sourdough rye and barley pancakes</li> <li>2024-01-27 20:36:59Z Pizza night at the cabin pizza dough</li> <li>2024-01-27 20:36:04Z Sourdough somewhat whole wheat pizza for the ooni</li> <li>2024-01-27 20:35:24Z Whole wheat tortilla recipe</li> <li>2024-01-21 20:37:20Z How to sort an array with -1, 0, and 1 sort function</li> <li>2024-01-21 13:25:17Z Material to learn functional programming</li> <li>2024-01-19 16:28:12Z White sourdough batard</li> <li>2024-01-19 16:26:50Z Companies that are hiring remote works in 2024</li> <li>2024-01-19 02:47:54Z Companies in the Twin Cities that hire Software Engineers</li> <li>2024-01-19 02:21:38Z Junior Automation Application Developer</li> <li>2024-01-17 20:42:34Z Sourdough batard</li> <li>2024-01-17 19:34:45Z Portable pizza oven buying checklist</li> <li>2024-01-15 04:03:12Z AWS Typescript CDK Quick start</li> <li>2024-01-14 02:19:27Z Concerts of interest in 2024</li> <li>2024-01-14 00:26:20Z IEEE 754 floating point format</li> <li>2024-01-13 20:21:25Z STAR method</li> <li>2024-01-12 23:59:44Z Basil for culinary use</li> <li>2024-01-12 23:59:42Z How to grow basil indoors</li> <li>2024-01-12 22:13:55Z First bigga sourdough pizza batch for the Ooni</li> <li>2024-01-11 18:49:56Z Bigga sourdough pizza dough Saturday July 22 2023</li> <li>2024-01-11 18:49:29Z July fourth weekend 2023 sourdough pizza</li> <li>2024-01-11 18:47:48Z SQL and DBMS concepts</li> <li>2024-01-11 18:31:41Z Father\u2019s day whole wheat sourdough batard</li> <li>2024-01-11 17:55:47Z Memorial day sourdough bread bowl</li> <li>2024-01-11 17:55:26Z Whole wheat sourdough loaf</li> <li>2024-01-11 17:55:05Z Thu Apr 20 2023 sourdough pizza</li> <li>2024-01-11 17:54:31Z Sourdough Pizza experiment</li> <li>2024-01-11 17:54:03Z Experimental whole wheat pizza sourdough small batch</li> <li>2024-01-11 17:53:18Z Experimental rye and barley pullman loaf</li> <li>2024-01-11 17:53:05Z Einkorn sourdough bread bowl</li> <li>2024-01-11 17:49:14Z Thanksgiving bread bowl 2022</li> <li>2024-01-11 15:08:44Z Bartender terminology</li> <li>2024-01-11 14:57:28Z A list of tech communities on slack</li> <li>2024-01-10 23:39:31Z Drink mixing tools and strategies</li> <li>2024-01-10 23:21:43Z Bartender tips</li> <li>2024-01-08 04:14:37Z .Net core setup for MacOSX and neovim</li> <li>2023-12-30 23:41:04Z How to shape a batard</li> <li>2023-12-30 17:16:12Z How to make good sourdough bread</li> <li>2023-12-30 16:23:23Z Christmas bread bowl 2023</li> <li>2023-12-26 23:43:04Z Lazy sourdough Uzbek Lepyoshki experiment</li> <li>2023-12-25 16:28:29Z Dill Pickle Tortilla Roll Up recipe</li> <li>2023-12-23 20:07:29Z Karble cheat sheet</li> <li>2023-12-23 20:05:27Z Spinach dip recipe</li> <li>2023-12-22 23:01:48Z How to implement \u201ccook mode\u201d on a website</li> <li>2023-12-22 17:19:13Z Tool and strategies for making sourdough bread</li> <li>2023-12-22 17:04:10Z Professional Full Stack developer prompt for ChatGPT</li> <li>2023-12-21 18:09:42Z The science of motivation</li> <li>2023-12-17 14:34:26Z How to belay top rope at climbing gym</li> <li>2023-12-11 06:43:37Z Triton Purple radish sprouts</li> <li>2023-12-11 00:24:36Z General Index</li> <li>2023-12-10 19:01:45Z Micro green index</li> <li>2023-12-10 18:52:12Z Purple radish micro green batch 1</li> <li>2023-12-05 20:38:11Z My personal website design</li> <li>2023-12-05 19:53:42Z Creating KEG commands plugin in NeoVim</li> <li>2023-12-05 18:20:52Z Coco coir for micro green growing</li> <li>2023-12-01 18:30:11Z Git techniques and cheat sheet</li> <li>2023-12-01 17:38:30Z Types of sourdough preferments</li> <li>2023-11-30 18:39:27Z My first user experience with keg</li> <li>2023-11-30 18:37:37Z Example for how to build a KEG for use with google docs</li> <li>2023-11-26 00:08:56Z How to setup HP Officejet j4680 for printing</li> <li>2023-11-26 00:08:49Z Strategy for learning</li> <li>2023-11-26 00:08:45Z Neuroscience on how learning occurs</li> <li>2023-11-25 22:22:23Z Different types of learning</li> <li>2023-11-24 17:50:56Z Netmagic cloud</li> <li>2023-11-22 22:38:07Z Raw module 4 instructions</li> <li>2023-11-22 20:51:08Z Test exams</li> <li>2023-11-19 01:33:46Z AWS Developer Associate Exam</li> <li>2023-11-18 21:11:59Z AWS Chat app tutorial</li> <li>2023-11-17 16:35:51Z Deploying a sveltkit app on AWS</li> <li>2023-11-13 17:30:24Z Research for tendonitis issue</li> <li>2023-11-13 00:27:38Z Interesting bug in AWS ECS</li> <li>2023-11-12 23:20:35Z ECS cluster tutorial</li> <li>2023-11-02 03:07:34Z Message de-duplication on AWS FIFO topics</li> <li>2023-11-02 02:12:26Z AWS Lambda</li> <li>2023-11-02 01:53:39Z Setup OpenSearch AWS for learning</li> <li>2023-11-02 01:45:21Z Chrome book comparison</li> <li>2023-11-02 01:14:41Z Solid Principles</li> <li>2023-10-30 15:23:06Z Tyler Industries entry level .Net role</li> <li>2023-10-24 21:37:33Z mono repo setup with pnpm</li> <li>2023-10-24 21:24:09Z pnpm mono repo strategy</li> <li>2023-10-24 20:57:05Z Frontend masters OpenAI and NodeJS</li> <li>2023-10-24 03:56:50Z How I created my first nvim plugin</li> <li>2023-10-21 14:21:49Z Green curry recipe</li> <li>2023-10-20 21:32:36Z Project management for python</li> <li>2023-10-17 15:09:21Z Web authentication strategies</li> <li>2023-10-17 14:58:47Z AWS Aura serverless database</li> <li>2023-10-13 15:41:20Z Volunteering at Habitat for Humanity</li> <li>2023-10-08 15:59:25Z Sveltekit how to debounce input</li> <li>2023-10-06 22:28:16Z Resources to get started with Ocaml</li> <li>2023-10-04 23:06:13Z React experts</li> <li>2023-10-04 23:05:24Z Reactivity concepts in web development</li> <li>2023-10-04 16:30:32Z Dynamic colors with SvelteKit and tailwind</li> <li>2023-10-04 16:30:30Z Battle tanks the game</li> <li>2023-10-04 14:58:15Z Multiplayer game with FireBase video</li> <li>2023-10-02 01:29:00Z Power lifting workout routines</li> <li>2023-10-01 05:09:44Z Effecting centralized logging strategy</li> <li>2023-09-30 20:24:35Z Proper way to read user input when using Go</li> <li>2023-09-30 17:34:14Z Recommended regex syntax to use</li> <li>2023-09-30 17:20:55Z Docker compose host name resolution</li> <li>2023-09-29 17:34:11Z Handling flags in bash</li> <li>2023-09-28 18:55:51Z AWS EC2</li> <li>2023-09-28 18:55:49Z how to login to AWS via command line</li> <li>2023-09-27 23:01:04Z AWS Access management</li> <li>2023-09-26 23:50:09Z AWS free tier</li> <li>2023-09-26 23:46:54Z Cool facts about octopus</li> <li>2023-09-26 23:46:26Z Society requires perfect trust</li> <li>2023-09-26 23:46:09Z Setting up a new KEG app with tina and jekyll</li> <li>2023-09-26 23:46:00Z Managing ruby version on MacOSX with chruby</li> <li>2023-09-21 19:05:25Z Hugo theme development loop</li> <li>2023-09-18 15:50:10Z Testing in Go</li> <li>2023-09-16 15:55:05Z Chia jam recipe</li> <li>2023-09-16 02:19:26Z KEG repo with tina cms and jekyll experiment</li> <li>2023-09-15 20:21:14Z The processes of migrating my private zets to my public zets</li> <li>2023-09-12 19:23:17Z Cool idea for my own website</li> <li>2023-09-11 22:48:40Z Streaming setup research</li> <li>2023-09-11 04:32:54Z Recommend wheat flour to use for different bakes</li> <li>2023-09-11 03:24:05Z Brewery Bahaus Brew Labs</li> <li>2023-09-10 19:05:06Z Digital fonts</li> <li>2023-09-07 02:26:52Z Ergonomic mouse research</li> <li>2023-09-07 02:26:52Z How to set path variables on MacOS</li> <li>2023-09-07 02:26:52Z Must have plugins for google chrome</li> <li>2023-09-07 02:26:52Z Sanity content management system</li> <li>2023-09-07 02:26:52Z Logitech G604 issues on macOS</li> <li>2023-09-07 02:26:52Z Logitech G604 issues on macOS</li> <li>2023-09-07 02:26:52Z How to verify file integrity on the cli</li> <li>2023-09-07 02:26:52Z How to install rust properly to prevent mucking with dotfiles</li> <li>2023-09-07 02:26:52Z Managing personal secrets with an external USB drive</li> <li>2023-09-07 02:26:52Z How to give credit to the original script owner</li> <li>2023-09-07 02:26:52Z rwxrob\u2019s list of go packages</li> <li>2023-09-07 02:26:52Z Pop_OS! unable to run jest</li> <li>2023-09-07 02:26:52Z Quick fix menus in vim</li> <li>2023-09-07 02:26:52Z Harpoon keybindings in vscode</li> <li>2023-09-07 02:26:52Z Tiling window management in windows with komorebi</li> <li>2023-09-07 02:26:52Z Example of keyword searching with awk</li> <li>2023-09-07 02:26:52Z Pop_OS! setup</li> <li>2023-09-07 02:26:52Z Useful oh my zsh plugins list</li> <li>2023-09-07 02:26:52Z A Linux distribution called Pop_OS!</li> <li>2023-09-07 02:26:52Z Recommended warlock spec for Aberrus bosses</li> <li>2023-09-07 02:26:52Z Top gear for warlock</li> <li>2023-09-07 02:26:52Z How does a generic search engine work for the web</li> <li>2023-09-07 02:26:52Z Zettelkasten search engine</li> <li>2023-09-07 02:26:52Z How to setup fira code fonts on windows</li> <li>2023-09-07 02:26:52Z Dragonflight leather working recipes</li> <li>2023-09-07 02:26:52Z Pop_OS! window management setup</li> <li>2023-09-07 02:26:52Z Skeuomorphism website design</li> <li>2023-09-07 02:26:52Z Top typing program out there</li> <li>2023-09-07 02:26:52Z Interesting things that I ran into when researching neovim as an ide</li> <li>2023-09-07 02:26:52Z Broodkeeper diurna boss fight</li> <li>2023-09-07 02:26:52Z Gold and black armor for dragon riding mounts</li> <li>2023-09-07 02:26:52Z Obsidian Dracthyr Battlegear</li> <li>2023-09-07 02:26:52Z Alacrity configuration notes</li> <li>2023-09-07 02:26:52Z Neovim workspaces</li> <li>2023-09-07 02:26:52Z December 2022 week 2 2022 world of warcraft checklist</li> <li>2023-09-07 02:26:52Z Formatting in neovim</li> <li>2023-09-07 02:26:52Z World of warcraft weekly checklist </li> <li>2023-09-07 02:26:52Z Transmogs for windborne velocidrake</li> <li>2023-09-07 02:26:52Z Mon 26 Dec 2022 world of warcraft weekly checklist</li> <li>2023-09-07 02:26:52Z Cool streaming setup that I should look into</li> <li>2023-09-07 02:26:52Z How to do complex filtering with mongosh</li> <li>2023-09-07 02:26:52Z How to update fields using mongosh</li> <li>2023-09-07 02:26:52Z References to other peoples dotfiles that I find interesting</li> <li>2023-09-07 02:26:52Z How to get a portal mailbox in world of warcraft</li> <li>2023-09-07 02:26:52Z World of warcraft dragonflight season 1 dungeons</li> <li>2023-09-07 02:26:52Z Halls of valor dungeon</li> <li>2023-09-07 02:26:52Z Shadow moon burial grounds dungeon</li> <li>2023-09-07 02:26:52Z File type specific settings in neovim</li> <li>2023-09-07 02:26:52Z Key things that make neovim as an ide</li> <li>2023-09-07 02:26:52Z How to manually install a package from the AUR</li> <li>2023-09-07 02:26:52Z Halls of Valor dungeon</li> <li>2023-09-07 02:26:52Z World of warcraft dragonflight season 1</li> <li>2023-09-07 02:26:52Z Linux desktop comparison</li> <li>2023-09-07 02:26:52Z Solution to being locked out of arch linux</li> <li>2023-09-07 02:26:52Z Arch linux setup on blaze</li> <li>2023-09-07 02:26:52Z Mythic plus progress on Ravalock for season 2</li> <li>2023-09-07 02:26:52Z Meetup.com alternative idea</li> <li>2023-09-07 02:26:52Z PGP cheatsheet</li> <li>2023-09-07 02:26:52Z Personal dotfiles</li> <li>2023-09-07 02:26:52Z Configuration of IntelliJ IDEA and friends</li> <li>2023-09-07 02:26:52Z How to replace a missing MN license plate</li> <li>2023-09-07 02:26:52Z AwesomeWM Terminology</li> <li>2023-09-07 02:26:52Z Ranger alternatives</li> <li>2023-09-07 02:26:52Z EDID emulator</li> <li>2023-09-07 02:26:52Z Setting up refind as a boot loader</li> <li>2023-09-07 02:26:52Z Pacman cheatsheet and usage patterns</li> <li>2023-09-07 02:26:52Z Arch linux setup on Terra</li> <li>2023-09-07 02:26:52Z Thanksgiving bread bowl 2022</li> <li>2023-09-07 02:26:52Z When to use CGO_ENABLED</li> <li>2023-09-07 02:26:52Z Jekyll theme hacker google analytics issue</li> <li>2023-09-07 02:26:52Z The idea of cognitive distance</li> <li>2023-09-07 02:26:52Z Research on type of mic for my streaming</li> <li>2023-09-07 02:26:52Z An interesting article about LINQ in JavaScript</li> <li>2023-09-07 02:26:52Z Seamless navigation between tmux and vim</li> <li>2023-09-07 02:26:52Z Types of pizza</li> <li>2023-09-07 02:26:52Z How to export postman files</li> <li>2023-09-07 02:26:52Z Managing encrypted data with ssh keys</li> <li>2023-09-07 02:26:52Z Article about how PostCSS is an alternatie to SCSS</li> <li>2023-09-07 02:26:52Z Introductory material for statistics</li> <li>2023-09-07 02:26:52Z List of core blocks for the block editor</li> <li>2023-09-07 02:26:52Z Schema google thing</li> <li>2023-09-07 02:26:52Z Keg and Case Market</li> <li>2023-09-07 02:26:52Z Chezmoi cheatsheet</li> <li>2023-09-07 02:26:52Z How to add a new post type in WordPress</li> <li>2023-09-07 02:26:52Z WordPress block editor domain model</li> <li>2023-09-07 02:26:52Z How to create a new category for blocks</li> <li>2023-09-07 02:26:52Z Bertello portable 12\u201d pizza oven</li> <li>2023-09-07 02:26:52Z 980 pro NVME upgrade on the XPS 9710</li> <li>2023-09-07 02:26:52Z Example of a vm with out a garbage collect</li> <li>2023-09-07 02:26:52Z The Word of Warcraft addons that I use</li> <li>2023-09-07 02:26:52Z Wooden ship brewing</li> <li>2023-09-07 02:26:52Z COC Categorization</li> <li>2023-09-07 02:26:52Z What is Multi-Factor authentication</li> <li>2023-09-07 02:26:52Z Problem solution sets</li> <li>2023-09-07 02:26:52Z Article about HCTA real world outcomes</li> <li>2023-09-07 02:26:52Z What is critical thinking</li> <li>2023-09-07 02:26:52Z WordPress plugin development overview</li> <li>2023-09-07 02:26:52Z Tips when researching laptops</li> <li>2023-09-07 02:26:52Z How to setup a contact us page in WordPress</li> <li>2023-09-07 02:26:52Z How to grab a specific item in a tar file</li> <li>2023-09-07 02:26:52Z Rust installation process annoyances</li> <li>2023-09-07 02:26:52Z How to configure the editor in WordPress</li> <li>2023-09-07 02:26:52Z How to load custom CSS for a WordPress block</li> <li>2023-09-07 02:26:52Z The brewery Clutch Brewing</li> <li>2023-09-07 02:26:52Z WordPress domain experts</li> <li>2023-09-07 02:26:52Z WordPress community</li> <li>2023-09-07 02:26:52Z Quick fix list in neovim</li> <li>2023-09-07 02:26:52Z What is the idea width for readable text</li> <li>2023-09-07 02:26:52Z My typical pattern of devices to target</li> <li>2023-09-07 02:26:52Z Common breakpoints between browsers on different devices</li> <li>2023-09-07 02:26:52Z SEO concepts</li> <li>2023-09-07 02:26:52Z What is the benefit of paid for SSL</li> <li>2023-09-07 02:26:52Z Web development security risk types</li> <li>2023-09-07 02:26:52Z A possible thing to look out for if you see a spike in traffic</li> <li>2023-09-07 02:26:52Z Pattern for managing keybindings in neovim</li> <li>2023-09-07 02:26:52Z Top stats for warlock in dragon flight season 2</li> <li>2023-09-07 02:26:52Z How to manage dependencies with git submodules</li> <li>2023-09-07 02:26:52Z A nifty way to compare versions</li> <li>2023-09-07 02:26:52Z WordPress hosting with WPEngine</li> <li>2023-09-07 02:26:52Z WordPress hosting</li> <li>2023-09-07 02:26:52Z Opinionated go repo naming conventions</li> <li>2023-09-07 02:26:52Z MX Vertical mouse</li> <li>2023-09-07 02:26:52Z What is <code>mim</code></li> <li>2023-09-07 02:26:52Z Common patterns that I use for headers for my Zettelkasten</li> <li>2023-09-07 02:26:52Z Mental health disability anomia</li> <li>2023-09-07 02:26:52Z How to use <code>PostCSS</code> and <code>autoprefixer</code> in WordPress</li> <li>2023-09-07 02:26:52Z How to include CSS in a block theme for WordPress</li> <li>2023-09-07 02:26:52Z WordPress hosting on WP Engine</li> <li>2023-09-07 02:26:52Z WordPress hosting on GoDaddy</li> <li>2023-09-07 02:26:52Z WordPress block theme development prompt for chatGPT</li> <li>2023-09-07 02:26:52Z What is a custom wire cutting service</li> <li>2023-09-07 02:26:52Z What is an electrical component distributor</li> <li>2023-09-07 02:26:52Z Example scan line effect with tailwind</li> <li>2023-09-07 02:26:52Z MLSGrid</li> <li>2023-09-07 02:26:52Z E-commerce headless CMS domain model</li> <li>2023-09-07 02:26:52Z Headless CMS options for managing content</li> <li>2023-09-07 02:26:52Z Overview of the sales CMS Zendesk</li> <li>2023-09-07 02:26:52Z Look into the fidget rewrite issue</li> <li>2023-09-07 02:26:52Z Overview of the block editor in WordPress</li> <li>2023-09-07 02:26:52Z Overview of a block theme in WordPress</li> <li>2023-09-07 02:26:52Z Query strings are thought to impede indexing of dynamic pages</li> <li>2023-09-07 02:26:52Z How to setup tailwind for WordPress</li> <li>2023-09-07 02:26:52Z Basics of skip links in web development</li> <li>2023-09-07 02:26:52Z Useful WordPress plugins</li> <li>2023-09-07 02:26:52Z Where to get started when design a system</li> </ul>"},{"location":"00_dex/hardware.html","title":"Physical haredware that I own","text":"<ul> <li>Hardware: Kineses Advantage 360</li> <li>Hardware: My Ooni Karu 12G</li> <li>Hardware: Think Server 140 (ts140)</li> <li>Hardware: Dell XPS 9710</li> <li>Hardware: Custom built PC Trooper (trooper)</li> <li>Hardware: TP-Link BE550 (be550)</li> <li>Hardware: Beelink EQ12 N100</li> <li>Hardware: Luna Leadville pacer</li> <li>Hardware: 42\u201d Flexispot corner raiser</li> <li>Hardware: My hands</li> <li>Hardware: Portable Weber grill</li> <li>Hardware: HFS shoes</li> <li>Hardware: Ibanez RG421 Electric Guitar</li> <li>Hardware: Focusrite Scarlett 2i2</li> <li>Hardware: Altra lone peak 8</li> </ul>"},{"location":"00_dex/homelab.html","title":"Homelab","text":"<ul> <li>Patch: Installing proxmox on Beelink SEi 9</li> <li>Creating an [Ubuntu Server](../670) template my [Homelab](../578)</li> <li>Ubuntu template version 1 for my homelab</li> <li>Ubuntu template cloud version 1 for my homelab</li> <li>Cloud init first experience on my homelab</li> <li>Patch: serving password protected static websites on my homelab</li> <li>Patch: homelab email admin@jlrickert.me</li> <li>[x] Issue: EOL for 25.1 Opnsense</li> <li>Patch: Add logging with Grafana Loki - 2025-09-14</li> <li>Patch: Add Home Assistant - homelab</li> <li>Home assistant research</li> <li>FreeBSD for homelab exploration</li> <li>Hardware: Think Server 140 (ts140)</li> <li>Project: Current Homelab (homelab)</li> <li>Hardware: Netgear R7000 router</li> <li>Think Server T140 hardware dump</li> <li>Hardware: Custom built PC Trooper (trooper)</li> <li>Time log: Homelab</li> <li>[x] Homelab 2024 Task | experiment with setup site to site configuration</li> <li>[x] Homelab Task | setup a vpn</li> <li>Issue: Generating documentation for nvim plugins</li> <li>Current Homelab topology</li> <li>[x] Homelab Task | setup pfSense on ts140</li> <li>[x] Homelab Task | setup proxmox</li> <li>Overview: Raspberry pi (pi)</li> <li>[x] Homelab Task | setup DNS</li> <li>Hardware: TP-Link BE550 (be550)</li> <li>Hardware: Beelink EQ12 N100</li> <li>[ ] Homelab Task | Explore next cloud</li> <li>Service announcement protocols</li> <li>[x] Homelab Task: OPNSense installation on Beelink EQ12 N1000</li> <li>Setting up Digital Ocean DDNS on OPNSense</li> <li>Task: TrueNas Installation on ts140</li> <li>[x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense</li> <li>[ ] Homelab Task: Updating CloudFlare based email forwarding</li> <li>[x] Homelab Task: Assign IP address to PHP VM\u2019s</li> <li>[ ] Homelab task: quick password protected https server</li> <li>Connecting to Truenas storage volumes with NFS on my MacOS</li> <li>Migrating Virtualbox VM to Proxmox</li> <li>Using TrueNAS NFS for Proxmox images</li> <li>Patch | Homelab - Setting up DNS with Unbound with DHCP DNS registration</li> <li>Setting up DHCP on OPNSense (2024-11-09)</li> <li>Creating a time machine backup on TrueNAS</li> <li>SPEC: homelab multi call binary monolith</li> </ul>"},{"location":"00_dex/issues.html","title":"Issues","text":"<ul> <li>Issue: Task to fix keybinding issues between MacOS and ranger</li> <li>Issue: Sticking issues with baking</li> <li>Issue: running a typescript library in deno</li> <li>Issue: saving files in vim updates the modified time stamp</li> <li>Issue: Rounded borders for a table header</li> <li>Layout strategies for webdev</li> <li>World wide web consortium (w3c)</li> <li>Issue: Proxmox inaccessible</li> <li>Issue: LSP may expose sensitive contents</li> <li>Issue: unable to change model of an ongoing <code>mods</code> conversation</li> <li>keg create git issue</li> </ul>"},{"location":"00_dex/overviews.html","title":"Overviews","text":"<ul> <li>Overview: Baking (baking)</li> <li>Overview: Zettelkasten definition</li> <li>Overview: Neovim Telescope Plugin</li> <li>Overview: My Note taking system</li> <li>Overview: Website development (webdev)</li> </ul>"},{"location":"00_dex/persons.html","title":"Persons","text":"<ul> <li>Person: ThePrimeagon</li> <li>Person: streamer s9tpepper</li> <li>Person: Trump</li> <li>Person: cmgriffing the streamer</li> <li>Person: Foony\u2019s developer acorn1010</li> <li>Person: VTuber Mischa van den Burg</li> <li>Person: Rob Muhlestein</li> <li>Person: Thor</li> <li>Person: Twitch streamer BlaiseBits</li> <li>Person: Streamer MarekCounts</li> <li>Person: het_tanis</li> <li>Person: Adrian Cantril</li> </ul>"},{"location":"00_dex/projects.html","title":"Projects","text":"<ul> <li>Hardware: My Ooni Karu 12G</li> <li>Flutter experiments</li> <li>Hardware: Think Server 140 (ts140)</li> <li>Hardware: Dell XPS 9710</li> <li>Research: buying Ethernet adapters for a PC or server</li> <li>Netgear R7000 router</li> <li>Hardware: Custom built PC Trooper (trooper)</li> <li>Hardware: My M2 Macbook Pro</li> <li>Hardware: Samsung S22+ android phone (s22)</li> <li>Hardware: Razer thunderbolt docking station</li> <li>Research: 2024 WiFi upgrade</li> <li>Overview: Raspberry pi</li> <li>Hardware: TP-Link BE550 (be550)</li> <li>Beelink EQ12 N100</li> <li>Overview: Beelink (beelink)</li> </ul>"},{"location":"00_dex/tasks.html","title":"Tasks","text":"<ul> <li>[ ] mintea Task | help with minttea</li> <li>[ ] Neovim Task | setup configuration</li> <li>[x] Homelab 2024 Task | experiment with setup site to site configuration</li> <li>[x] Homelab Task | setup a vpn</li> <li>[x] Homelab Task | setup pfSense on ts140</li> <li>[x] Homelab Task | setup proxmox</li> <li>[ ] Dotfiles Task | create a zetq script</li> <li>[x] Homelab Task | setup DNS</li> <li>[ ] Neovim Task | hunk text object visual navigation issue</li> <li>[ ] Dotfiles Task | create <code>sync-project</code> script</li> <li>[ ] Homelab Task | Explore next cloud</li> <li>[x] Homelab Task: OPNSense installation on Beelink EQ12 N1000</li> <li>Task: TrueNas Installation on ts140</li> <li>[x] TS140 Task: Installing upgrades to TS140</li> <li>[x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense</li> <li>[ ] Homelab task: quick password protected https server</li> </ul>"},{"location":"1/index.html","title":"World of Warcraft Evoker game play","text":"<p>The Evoker is a mobile caster who specializes whose utilities to do well with disruption. The available specs to play are devastation and preservation.</p>","tags":["wow","gaming","evoker"]},{"location":"10/index.html","title":"How I manage my secret dot files using a usb stick","text":"<p>For managing secrets I use a thumb drive in combination with a git work tree. How it works is lets say you have a thumbdrive mounted at <code>/media/user/secrets</code>. I use a script called <code>git-secrets</code> that allows for installing, and version managing. It is basically a wrapper around git using the git worktree feature.</p> <p>Here is a basic script so you get the idea</p> <pre><code>#!/usr/bin/env bash\n\ngit --git-dir=/media/user/secrets/ --work-tree=$HOME \"$@\"\n</code></pre> <p>This is the actual script that I am currently using. The value for DOT_SECRETS is set at <code>$HOME/.env</code> which is parsed by my <code>.bashrc</code>.</p> <pre><code>#!/usr/bin/env bash\n\nif [[ -z $DOT_SECRETS ]]; then\n    echo \"DOT_SECRETS needs to be set\"\n    exit 1\nfi\n\ngit --git-dir=$DOT_SECRETS/ --work-tree=$HOME \"$@\"\n</code></pre>","tags":["dotfiles","secrets","vcs","git"]},{"location":"10/index.html#creating-your-own","title":"Creating your own","text":"<p>To get started with your own run the following make a repo in a directory in your thumb drive using git. Lets say that is at <code>/media/jack/secrets</code>:</p> <pre><code>mkdir /media/jack/secrets\ncd /media/jack/secrets\ngit init --bare\ngit config --local status.showUntrackedFiles no\n# create an alias for for zshrc or bashrc\necho \"alias git-secrets='git --git-dir=/media/jack/secrets --work-tree=$HOME'\" &gt;&gt; ~/.bashrc\necho \"alias git-secrets='git --git-dir=/media/jack/secrets --work-tree=$HOME'\" &gt;&gt; ~/.zshrc\n</code></pre> <p>From there use the use <code>git-secrets</code> like you would with git.</p>","tags":["dotfiles","secrets","vcs","git"]},{"location":"100/index.html","title":"Install flutter on macOSX with apple silicon","text":"<p>Run the script to install flutter</p> <pre><code>mkdir -p ~/.local/share\ncd \"$(mktemp -d)\" || exit 1\ncurl -fsSL -O https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.10.2-stable.zip\nunzip flutter_macos_arm64_3.10.2-stable.zip -d ~/.local/share\n</code></pre> <p>The android tool chain needs to be setup. The easiest way to do this is to install android studio and let it handle installation. Download it from there website. Once android studio is installed run it and use android studio setup wizard. See flutters docs for trouble shooting if running <code>flutter doctor</code> doesn\u2019t see the android tool chain.</p> <p>To allow development on apple xcode and CocoaPods needs to be setup. Go to apples website to download xcode. This requires some apple account shenanigans (haven\u2019t done this step). Once installed run the following:</p> <pre><code>sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer\nsudo xcodebuild -runFirstLaunch\n</code></pre> <p>See also:</p> <ul> <li>Install with curl</li> </ul> <p>Meta:</p> <pre><code>tags: #programming #macOS\n</code></pre>","tags":["programming","macosx"]},{"location":"1000/index.html","title":"Hardware: Gretsch G1617 Synchromatic guitar","text":"<p>My grandpas old guitar</p>","tags":["music","guitar"]},{"location":"1001/index.html","title":"Event: Minnebar19 2025","text":"<p>Minnebar19 unconference event on 2025-05-03. Located at the Best Buy headquarters.</p>","tags":["event","minnebar","bestbuy","unconference"]},{"location":"1001/index.html#event-attended","title":"Event attended","text":"<p>Event list may be found on https://sessions.minnestar.org/</p> <ul> <li>09:35 - 10:30 Legacy code thing</li> <li>10:30 - 11:25 Creatine candy thing.  <li>13:05 - 14:00 Building Efficient &amp; Resilient Engineering Teams in Minnetonka</li> <li>14:00 - 16:00 Hacking away at nvim setup</li> <li>16:00 Happy hour</li>","tags":["event","minnebar","bestbuy","unconference"]},{"location":"1002/index.html","title":"Combat Candies","text":"<p>A creatine supplement</p>","tags":["health","nutrition"]},{"location":"1003/index.html","title":"Running neovim in an isolated docker context","text":"<p>Need a way to run neovim using my configuration outside of my production neovim setup so I can configure things independently without breaking my current setup.</p> <p>This is what I am thinking:</p> <ul> <li>Creating a dvim (docker nvim) command that work as if I am running something like vim or nvim on the command line. This will run neovim in docker.</li> <li>dvim will use a persistent state and data directory. State will be located at ~/.local/state/dvim and data will be located at ~/.local/share/dvim.</li> <li>For now only needs to run MacOS. Mac handles permissions differently.</li> <li>Version 0.11 or higher of neovim is required</li> </ul>","tags":["neovim"]},{"location":"1003/index.html#patch","title":"Patch","text":"<p>This patch introduces a Docker-based development environment for Neovim with local installation support. It allows for containerized builds and testing while enabling symlinking the configuration into your local Neovim setup. Importantly, the <code>dvim</code> script now utilizes and mounts data and state directories:</p> <ul> <li><code>DATA_DIR=\"${HOME}/.local/share/dvim\"</code>: This variable, set in <code>nvim/bin/dvim</code>, defines the path on the host machine to the directory that will be mounted inside the container as <code>/root/.local/share/nvim</code>. This directory is intended for storing persistent data, such as plugin data, language server information, and other files that should be preserved between container sessions.</li> <li><code>STATE_DIR=\"${HOME}/.local/state/dvim\"</code>: Similarly, this variable defines the path on the host to the directory mounted inside the container as <code>/root/.local/state/nvim</code>. This directory is for storing state information\u2014things like session data, undo history, and other temporary files that are specific to the current working session. This will persist different changes and sessions</li> </ul> <p>In summary, this patch enhances the dvim environment, allowing configurations to be used across the local build of Neovim while building Neovim into the container. This creates a containerization to use as a consistent build and includes the data, allowing saves across different containers. The symlinking creates a reference to test changes for Neovim across containers.</p> <pre><code>commit 5aa9a9772de05d30a33c664a683f53914b5fd186\nAuthor: Jared Rickert &lt;jaredrickert52@gmail.com&gt;\nDate:   Sun May 4 23:55:31 2025 -0500\n\n    feat: Enable containerized neovim development and local installation\n\n    Introduce a Docker setup for neovim, alongside an installation script\n    that allows for local configuration.\n\n    The Docker setup provides an isolated environment for building and\n    testing neovim configurations. The installation script then symlinks the\n    configuration for use in the local environment. This ensures consistency\n    between development and production and simplifies configuration\n    management. A .gitignore file is included to ignore temporary files.\n\ndiff --git a/.gitignore b/.gitignore\nindex c3364e8..b56e869 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -9,3 +9,4 @@ venv\n home/.config/nvim/plugin/packer_compiled.lua\n vault.key\n home/.config/gh/hosts.yml\n+tmp\ndiff --git a/nvim/Dockerfile b/nvim/Dockerfile\nnew file mode 100644\nindex 0000000..3c50884\n--- /dev/null\n+++ b/nvim/Dockerfile\n@@ -0,0 +1,57 @@\n+# Use the latest Ubuntu image as the base.  This provides a stable and up-to-date environment.\n+FROM ubuntu:latest\n+\n+# Set noninteractive mode to avoid prompts during package installation.\n+ARG DEBIAN_FRONTEND=noninteractive\n+\n+# Update the package lists and install necessary dependencies. See\n+# https://github.com/nvim-lua/kickstart.nvim?tab=readme-ov-file#Install-Recipes\n+# for ubuntu\n+RUN apt-get update &amp;&amp; \\\n+   apt-get install -y --no-install-recommends \\\n+   build-essential \\\n+   cmake \\\n+   curl \\\n+   fd-find \\\n+   fontconfig \\\n+   gcc \\\n+   git \\\n+   luarocks \\\n+   make \\\n+   pkg-config \\\n+   python3 \\\n+   python3-pip \\\n+   ripgrep \\\n+   software-properties-common \\\n+   unzip \\\n+   wget \\\n+   xclip\n+\n+# Install stylua\n+RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs &gt; ./rustup.sh &amp;&amp; \\\n+   bash ./rustup.sh -y &amp;&amp; \\\n+   rm ./rustup.sh\n+RUN . /root/.cargo/env &amp;&amp; cargo install stylua --features luajit\n+\n+# Add the Neovim PPA to get the latest version.  This is the recommended way to install Neovim on Ubuntu.\n+RUN add-apt-repository ppa:neovim-ppa/unstable &amp;&amp; \\\n+   apt-get update\n+\n+# Install Neovim.\n+RUN apt-get install -y neovim\n+\n+# Install Node.js and npm (optional, but often needed for plugins).  Use the\n+# NodeSource repository for a more up-to-date version.\n+# Probably used for TypeScript\n+RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash - &amp;&amp; \\\n+   apt-get install -y nodejs\n+\n+# Install Ruby and gem (optional, but often needed for plugins).\n+# No clue if I use this at all\n+# RUN apt-get install -y ruby ruby-dev\n+\n+# Copy over the neovim configuration\n+COPY ./src /root/.config/nvim\n+\n+# Define the entry point command.  This is the command that will be executed when the container starts.\n+ENTRYPOINT [\"nvim\"]\ndiff --git a/nvim/bin/dvim b/nvim/bin/dvim\nnew file mode 100755\nindex 0000000..3739eea\n--- /dev/null\n+++ b/nvim/bin/dvim\n@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+\n+set -o errexit  # exit if non-zero status code is returned\n+set -o nounset  # exit if undefined variable is used\n+set -o pipefail # exit if no-zero status code is returned in a pipeline\n+\n+declare NOCOLOR=\n+[[ -t 1 ]] || NOCOLOR=y\n+declare RED='\u001b[38;2;255;0;0m'\n+declare RESET='\u001b[0m'\n+\n+if [[ -n \"$NOCOLOR\" ]]; then\n+   RED=\n+   RESET=\n+fi\n+\n+SCRIPT_DIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n+PROJECT_DIR=\"$(cd \"${SCRIPT_DIR}\" &amp;&amp; git rev-parse --show-toplevel)\"\n+CONFIG_DIR=\"${PROJECT_DIR}/nvim/src\"\n+CONFIG_DIR=\"${PROJECT_DIR}/nvim/old-src\"\n+DATA_DIR=\"${HOME}/.local/share/dvim\"\n+STATE_DIR=\"${HOME}/.local/state/dvim\"\n+\n+# Define the Docker image to use.\n+IMAGE_NAME=\"dvim:latest\" # Or a more specific Ubuntu version\n+\n+# Check if Docker is installed.\n+if ! command -v docker &amp;&gt;/dev/null; then\n+   echo \"${RED}Error: Docker is not installed. Please install Docker.${RESET}\"\n+   exit 1\n+fi\n+\n+# Check if the image exists, and set it up if it doesn't.\n+if ! docker image inspect \"${IMAGE_NAME}\" &amp;&gt;/dev/null; then\n+   ../setup.sh\n+fi\n+\n+docker run -it \\\n+   --volume \"${DATA_DIR}:/root/.local/share/nvim\" \\\n+   --volume \"${STATE_DIR}:/root/.local/state/nvim\" \\\n+   --volume \"${CONFIG_DIR}:/root/.config/nvim\" \\\n+   --volume \"${PWD}:/mnt/volume\" \\\n+   --workdir \"/mnt/volume\" \\\n+   \"${IMAGE_NAME}\" \\\n+   \"$@\"\ndiff --git a/nvim/install.sh b/nvim/install.sh\nnew file mode 100755\nindex 0000000..93a18ca\n--- /dev/null\n+++ b/nvim/install.sh\n@@ -0,0 +1,42 @@\n+#!/usr/bin/env bash\n+# Installs nvim configuration by symlink\n+\n+declare NOCOLOR=\n+[[ -t 1 ]] || NOCOLOR=y\n+declare GREEN='\u001b[38;2;0;255;0m'\n+declare RESET='\u001b[0m'\n+\n+if [[ -n \"${NOCOLOR}\" ]]; then\n+   GREEN=\n+   RESET=\n+fi\n+\n+SCRIPT_DIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n+SOURCE_DIR=\"${SCRIPT_DIR}/src\"\n+TARGET_DIR=\"${HOME}/.config/nvim\"\n+BACKUP_DIR=\"${HOME}/.local/state/dotfiles/backups\"\n+BACKUP_FILE=\"${BACKUP_DIR}/nvim\" # Backup file name will be just \"nvim\"\n+\n+# Check if the target directory already exists.\n+if [ -e \"${TARGET_DIR}\" ]; then\n+   # If it exists, check if it's a symlink.\n+   if [ -L \"${TARGET_DIR}\" ]; then\n+       # If it's a symlink, check if it points to the correct directory.\n+       if [ \"$(readlink \"${TARGET_DIR}\")\" = \"${SOURCE_DIR}\" ]; then\n+           echo \"${GREEN}Symlink already exists and points to the correct directory: ${TARGET_DIR} -&gt; ${SOURCE_DIR}${RESET}\"\n+           exit 0 # Exit successfully if the symlink is already correct.\n+       else\n+           # If it's a symlink but points to the wrong directory, remove it.\n+           echo \"${GREEN}Removing existing symlink: ${TARGET_DIR}${GREEN}\"\n+           rm \"${TARGET_DIR}\"\n+       fi\n+   else\n+       # If it's not a symlink (i.e., it's a regular directory or file), back it up.\n+       echo \"${GREEN}Backing up existing directory/file: ${TARGET_DIR} to ${BACKUP_FILE}${RESET}\"\n+       mv \"${TARGET_DIR}\" \"${BACKUP_FILE}\"\n+   fi\n+fi\n+\n+# Create the symlink.\n+echo \"${GREEN}Creating symlink: ${TARGET_DIR} -&gt; ${SOURCE_DIR}${RESET}\"\n+ln -s \"${SCRIPT_DIR}\" \"${TARGET_DIR}\"\ndiff --git a/nvim/setup.sh b/nvim/setup.sh\nnew file mode 100755\nindex 0000000..287f120\n--- /dev/null\n+++ b/nvim/setup.sh\n@@ -0,0 +1,48 @@\n+#!/usr/bin/env bash\n+\n+# Script to build the Neovim Docker image.\n+\n+set -o errexit  # exit if non-zero status code is returned\n+set -o nounset  # exit if undefined variable is used\n+set -o pipefail # exit if no-zero status code is returned in a pipeline\n+\n+declare NOCOLOR=\n+[[ -t 1 ]] || NOCOLOR=y\n+declare RED='\u001b[38;2;255;0;0m'\n+declare GREEN='\u001b[38;2;0;255;0m'\n+declare RESET='\u001b[0m'\n+\n+if [[ -n \"$NOCOLOR\" ]]; then\n+   RED=\n+   GREEN=\n+   RESET=\n+fi\n+\n+SCRIPT_DIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n+cd \"${SCRIPT_DIR}\"\n+\n+# Define the Docker image name.\n+IMAGE_NAME=\"dvim\"\n+\n+# Define the Dockerfile path.\n+DOCKERFILE_PATH=\"./Dockerfile\"\n+\n+# Check if Docker is installed.\n+if ! command -v docker &amp;&gt;/dev/null; then\n+   echo \"${RED}Error: Docker is not installed. Please install Docker.${RESET}\"\n+   exit 1\n+fi\n+\n+# Check if the Dockerfile exists.\n+if [ ! -f \"${DOCKERFILE_PATH}\" ]; then\n+   echo \"${RED}Error: Dockerfile not found at: ${DOCKERFILE_PATH}${RESET}\"\n+   exit 1\n+fi\n+\n+# Build the Docker image.\n+echo \"${GREEN}Building Docker image: ${IMAGE_NAME}${RESET}\"\n+if ! docker build -t \"${IMAGE_NAME}\" -f \"${DOCKERFILE_PATH}\" .; then\n+   :\n+fi\n+\n+echo \"${GREEN}Docker image built successfully: ${IMAGE_NAME}${RESET}\"\ndiff --git a/nvim/src/.editorconfig b/nvim/src/.editorconfig\nnew file mode 100644\nindex 0000000..26aa98e\n--- /dev/null\n+++ b/nvim/src/.editorconfig\n@@ -0,0 +1,15 @@\n+[*]\n+indent_style = tab\n+indent_size = 4\n+end_of_line = lf\n+charset = utf-8\n+trim_trailing_whitespace = true\n+insert_final_newline = true\n+\n+[*.md]\n+indent_style = space\n+tab_width = 2\n+\n+[{*.yaml,*.yml}]\n+indent_style = space\n+tab_width = 2\ndiff --git a/nvim/src/init.lua b/nvim/src/init.lua\nnew file mode 100644\nindex 0000000..59af8cb\n--- /dev/null\n+++ b/nvim/src/init.lua\n@@ -0,0 +1 @@\n+require(\"jlrickert\")\ndiff --git a/nvim/src/lua/jlrickert/init.lua b/nvim/src/lua/jlrickert/init.lua\nnew file mode 100644\nindex 0000000..e69de29\ndiff --git a/nvim/src/stylua.toml b/nvim/src/stylua.toml\nnew file mode 100644\nindex 0000000..331b288\n--- /dev/null\n+++ b/nvim/src/stylua.toml\n@@ -0,0 +1,3 @@\n+indent_type = \"Tabs\"\n+indent_width = 4\n+quote_style = \"AutoPreferDouble\"\n</code></pre>","tags":["neovim"]},{"location":"1003/index.html#dump","title":"Dump","text":"<ul> <li>Ubuntu setup found at https://github.com/nvim-lua/kickstart.nvim?tab=readme-ov-file#Install-Recipes</li> </ul> <pre><code>-- Set data directory\nvim.opt.runtimepath:prepend(vim.fn.expand(\"~/.local/share/nvim\"))\n-- Set state directory\nvim.opt.directory = vim.fn.expand(\"~/.local/state/nvim//\") -- Note the double-slash\nvim.opt.swapfile = true\n</code></pre>","tags":["neovim"]},{"location":"1004/index.html","title":"Mason manager thingy in neovim","text":"","tags":["neovim"]},{"location":"1005/index.html","title":"Resources for rebuilding my neovim setup","text":"<p>I am at a point where I need to do a near complete rebuild of my Neovim setup as there are breaking changes in the 0.11 version and that a lot of my plugins are blasting me with warnings and has been causing issues.</p> <ul> <li>Kickstart</li> </ul> <p>Shows the basics of whats needed. Has an example of the newer plugins that should be used</p> <ul> <li>Primeagen</li> </ul> <p>He has a good setup for himself. Good place to steal things from</p>","tags":["neovim"]},{"location":"1005/index.html#planned-plugins","title":"Planned plugins","text":"<ul> <li>Completion\u2019s with blink</li> </ul> <p>This replaces the auto complete plugin nvim-cmp that I am using currently. Looks like it is significantly better. This needs rust, git, and curl to function.</p> <ul> <li>Status line with lualine</li> </ul>","tags":["neovim"]},{"location":"1006/index.html","title":"Person: ThePrimeagon","text":"<p>Twitch streamer. Has come to Minneapolis before.</p>","tags":["twitch","person"]},{"location":"1007/index.html","title":"Modern Jive (modern-jive)","text":"","tags":["ceroc","modern-jive","swing"]},{"location":"1007/index.html#genres-of-music","title":"Genres of music","text":"<p>Pop, R&amp;B, Soul, Funk, Swing (modern interpretations), Blues, Rock &amp; Roll, Latin (some styles), Disco.</p> <ul> <li>Pop:</li> <li>\u201cBlinding Lights\u201d - The Weeknd</li> <li>\u201cUptown Funk\u201d - Mark Ronson ft. Bruno Mars</li> <li>R&amp;B: \u201cCrazy in Love\u201d - Beyonc\u00e9 ft. Jay-Z, \u201cNo Scrubs\u201d - TLC</li> <li>Soul:</li> <li>\u201cSigned, Sealed, Delivered I\u2019m Yours\u201d Stevie Wonder</li> <li>\u201cValerie\u201d - Amy Winehouse</li> <li>Funk:</li> <li>\u201cPlay That Funky Music\u201d - Wild Cherry</li> <li>\u201cSeptember\u201d - Earth, Wind &amp; Fire</li> <li>Swing (modern interpretations):</li> <li>\u201cJump Jive An\u2019 Wail\u201d - Brian Setzer Orchestra</li> <li>\u201cZoot Suit Riot\u201d - Cherry Poppin\u2019 Daddies</li> <li>Blues:</li> <li>\u201cSweet Home Chicago\u201d - The Blues Brothers</li> <li>\u201cPride and Joy\u201d - Stevie Ray Vaughan</li> <li>Rock &amp; Roll</li> <li>\u201cGreat Balls of Fire\u201d - Jerry Lee Lewis</li> <li>\u201cJohnny B. Goode\u201d - Chuck Berry</li> <li>Latin (some styles)</li> <li>\u201cSmooth\u201d - Santana ft. Rob Thomas</li> <li>\u201cHavana\u201d - Camila Cabello ft. Young Thug</li> <li>Disco</li> <li>\u201cStayin\u2019 Alive\u201d - Bee Gees</li> <li>\u201cI Will Survive\u201d - Gloria Gaynor</li> </ul>","tags":["ceroc","modern-jive","swing"]},{"location":"1008/index.html","title":"Article: Ceroc\u00ae New Zealand Competition Rules, Categories and Judging Criteria","text":"<p>This document, \u201cCeroc\u00ae New Zealand Competition Rules, Categories and Judging Criteria (Version: April 2025),\u201d outlines the framework for Ceroc\u00ae dance competitions in New Zealand.</p> <p>Here\u2019s a summary of its key sections:</p> <ol> <li>Introduction &amp; Scope:</li> </ol> <ul> <li>Rules for Classic and Cabaret categories are standardized across all NZ events.</li> <li>Creative category rules can vary regionally and will be detailed by event organisers (found via www.cerocevents.co.nz).</li> <li>Not all listed categories will be at every event.</li> </ul> <ol> <li>Responsibilities:</li> </ol> <ul> <li>Organiser: Ensure fair and professional events, communicate changes (e.g., cancelling/combining categories with fewer than four entries).</li> <li>Competitor: Understand rules, know eligible categories, wear appropriate non-damaging shoes (heel caps for small heels), appropriate costumes, display numbers clearly, and be ready on time. Actions unacceptable in social dance are prohibited.</li> </ul> <ol> <li>Points System for Competitor Levels:</li> </ol> <ul> <li>Competitors earn points for placings, determining their level (Newcomer, Intermediate B/A, Advanced B/A, Champions).</li> <li>Points are individual and reset to the minimum for the new level upon advancing.</li> <li>A centralized \u201cPoints Registry\u201d (myceroc.co.nz/registrations) tracks points.</li> <li>Points awarded vary by category type (Classic, Cabaret, Creative) and level, with minimum entry numbers often required for points.</li> <li>Teachers are allocated a minimum of 100 points.</li> <li>International/NZ Modern Jive competitors have their level assessed based on prior experience.</li> </ul> <ol> <li>General Rules (Apply to all categories):</li> </ol> <ul> <li>Ceroc\u00ae Style: Partner dance with lead/follow, concertina action, maintaining contact, and expressing fun.</li> <li>Timing: Dance in time to the music, with steps generally on the beat.</li> <li>Non-Contact Dancing: Limited use (max 8 continuous counts). Specific limits for Newcomer Teams (2 periods, not consecutive) and Teams/Showcases (3 periods, not consecutive).</li> <li>Floor Craft: Use space considerately; stay in assigned areas (Showcases/Teams use entire floor).</li> <li>Aerials: Only in approved categories. Defined types: Baby (one foot below waist), Full (both feet above waist), Acrobatics (flyer thrown, contact broken), Death Spirals.</li> <li>Newcomer Moves: A specific list of approved Ceroc\u00ae Beginner moves.</li> </ul> <ol> <li>Classic Categories (Freestyle &amp; Dance With A Stranger - DWAS):</li> </ol> <ul> <li>Dance to undisclosed music, non-sequenced moves preferred.</li> <li>Freestyle: Category level by higher-pointed partner. Aerial rules vary by level (e.g., Newcomer - no aerials; Intermediate A+ - baby aerials). Death spirals/Acrobatics generally not allowed (except Champions Spotlights for death spirals).</li> <li>DWAS: Individuals judged, partner interaction key. Category by individual points. No aerials. Max 8 couples on floor.</li> <li>Judging Criteria (Order of Importance): Timing, Technique, Partnership, Musicality, Moves, Presentation.</li> </ul> <ol> <li>Cabaret Categories (Showcase &amp; Teams):</li> </ol> <ul> <li>Choreographed performances to own music, focus on entertainment.</li> <li>Showcase: Higher-pointed partner &gt;= 80 points. Couple or triple. Music 2.5-4 mins. All moves/aerials allowed.</li> <li>Newcomer Teams: Competitors &lt;= 2 points. Music 2 mins. Min 3 couples. Beginner moves only.</li> <li>Teams: Open to all. Music 2.5-4 mins. Min 3 couples. All moves/aerials allowed.</li> <li>Judging Criteria (Showcase): Timing, Technique, Partnership, Performance, Choreography, Presentation.</li> <li>Judging Criteria (Teams): Timing, Technique, Teamwork, Choreography, Presentation.</li> </ul> <ol> <li>Creative Categories:</li> </ol> <ul> <li>Dance to undisclosed music. Can enter multiple. Partnerships don\u2019t require same point level.</li> <li>Death spirals/Acrobatics usually not allowed (exceptions: Open Freestyle, Champions/Invitational Spotlights).</li> <li>Regional organisers detail specific rules (partnership, levels, structure, moves, judging order).</li> <li>Examples include:<ul> <li>Open Freestyle: Leader &gt;=60 pts. All aerials/death spirals/acro allowed. Min 2 different full aerials. Stringent floor craft.</li> <li>Switch: Consistent role interchange. No baby/full aerials, death spirals/acro.</li> <li>Triples: One lead, two follows. Baby/full aerials allowed.</li> <li>Ceroc\u00ae X: Selected Beginner moves only.</li> <li>Infinity: Constant hand-to-hand contact. Any move allowed if contact maintained.</li> <li>Music Mash Up: Adapt to 3-5 different song clips. No baby/full aerials.</li> <li>Adam and Eve: Intermediate paired with Advanced. No baby/full aerials.</li> <li>Pro-Am: Teacher with Newcomer. Beginner moves. No baby/full aerials.</li> <li>Blind Date: Follow blindfolded. Random pairings. No baby/full aerials.</li> <li>Swap &amp; Steals: Triad (2 leads/1 follow or vice versa). Stealing partners. No baby/full aerials.</li> <li>45 and Over: Both partners &gt;=45. Aerial rules vary by sub-category level.</li> <li>Lucky Dip: Random pairings by organiser. No baby/full aerials.</li> <li>Dance Off: Min 5 min song, all couples on floor, solo spotlights. Baby/full aerials allowed.</li> <li>Invitational: Invited competitors. Baby/full aerials allowed.</li> </ul> </li> <li>Judging Criteria: Timing, Partnership, Musicality, Presentation, Technique, Moves (order varies by region).</li> </ul> <ol> <li>Judging:    - Criteria Defined: Timing, Technique, Presentation, Partnership, Teamwork, Choreography, Musicality, Moves (Difficulty, Originality, Selection).    - Penalties &amp; Disqualifications: Judges report rule breaches to the Head Judge, who decides on warnings, penalties (loss of place), or disqualification, considering unfair advantage, interference, and prior warnings. Breaches identified by competitors/audience/video replay are not addressed.</li> </ol> <p>In essence, the document provides a comprehensive guide for participants and organisers, ensuring consistency for core categories while allowing flexibility for creative and regional variations, all underpinned by a points-based progression system and clear judging standards.</p> <p>See https://cerocevents.co.nz/wp-content/uploads/Ceroc%C2%AE-NZ-Competition-Rules-Categories-Judging-Criteria-6-April-2025.pdf</p>","tags":["article","dancing","pdf","ceroc"]},{"location":"1009/index.html","title":"Ceroc dancing","text":"<p>Ceroc is a specific brand or style of modern jive dance. It\u2019s a partner dance derived from jive, swing, and salsa, known for its smooth, flowing movements and lack of complex footwork, making it relatively easy to learn.</p>","tags":["ceroc","dancing","swing"]},{"location":"101/index.html","title":"Installing software with curl","text":"<p>Often times packages need to be installed from the internet. Sometimes it is need to be automated. <code>curl</code> is one of the tools that may be used. This is the typical pattern that I use:</p> <pre><code>cd \"$(mktemp -d)\" || exit 1\ncurl -fsSL -O https://example.com/releases/package_macos_arm64_3.10.2-stable.zip\n</code></pre> <p>Here are the follow options that I pass in:</p> <ul> <li><code>-s</code> or <code>--silent</code>.</li> <li><code>-S</code> or <code>--show-error</code></li> <li><code>-f</code> or <code>--fail</code>. This attempts to return an error code depending on the http code.</li> <li><code>-l</code> or <code>--location</code>. Re-attempts downloading if 3XX code is give with the new location.</li> </ul> <p>This script will create a temporary directory and place the downloaded file in it. To unpack here a couple patterns that may be run.</p> <pre><code># unzip if it is a zip folder\nunzip package_macos_arm64_3.10.2-stable.zip -d /some/path\n\n# tar\ntar xf package_macos_arm64_3.10.2-stable.tar.xz\n</code></pre> <ul> <li> TODO: figure out the tar equivalent of <code>unzip -d</code></li> </ul>","tags":["programming","todo"]},{"location":"1010/index.html","title":"Swing dancing (swing)","text":"<p>Swing dance is a group of partner dances that originated with the swing style of jazz music in the 1920s-1940s. Characterized by its rhythmic bounce, often lively tempo, and emphasis on improvisation and connection between partners, it evolved alongside the music, adapting to different tempos and regional styles.</p> <p>Different kinds of swing dance include:</p> <ul> <li>Lindy Hop: Considered the original and most iconic swing dance, originating in Harlem, New York. Known for its energetic \u201cswing-out\u201d move, acrobatics (\u201cair steps\u201d), and improvisation.</li> <li>Charleston: Popular in the 1920s and 1930s, often danced solo or with a partner. Features distinctive kicks, twists, and a rhythmic step-together tap. Can be danced to faster jazz music.</li> <li>East Coast Swing (ECS): A simpler, formalized six-count dance evolved from Lindy Hop by dance studios. Typically danced in a circular motion with basic triple steps and rock steps.</li> <li>West Coast Swing (WCS): Developed in California. Danced in a \u201cslot,\u201d with the follower traveling back and forth along a line. Known for its elastic look, smooth feel, and adaptability to a wide range of music genres beyond swing (blues, R&amp;B, pop, hip-hop).</li> <li>Jive: A competitive ballroom version of swing developed in the US and UK. Faster and more structured than Lindy Hop or ECS, featuring dynamic kicks and flicks.</li> <li>Balboa: Originated in Southern California. A more compact partner dance designed for fast tempos and crowded dance floors. Features intricate footwork and subtle body lead, primarily danced chest-to-chest in close embrace (\u201cPure Bal\u201d). A variant, \u201cBal-Swing,\u201d incorporates turns and positions away from close embrace.</li> <li>Collegiate Shag: A partner dance originating in the Carolinas. Typically danced to speedy swing and ragtime music, featuring quick footwork, hop steps, and a distinctive athletic style.</li> <li>Modern Jive / Ceroc: A partner dance developed more recently (late 20th century), heavily influenced by jive and swing but simplified for accessibility. Characteristic its lack of complex footwork and emphasis on smooth, continuous turns and passes, adaptable to a wide range of popular and contemporary music. Ceroc is one of the major brands/styles of Modern Jive.</li> </ul>"},{"location":"1011/index.html","title":"Dance move: First Move","text":"<p>This note describes the concept of the \u201cFirst Move\u201d in dancing, often referring to the initial step or leading action that begins a dance or a sequence of movements. It\u2019s fundamental to establishing rhythm, connection with a partner (if applicable), and setting the tone for the dance.</p> <p>The \u201cFirst Move\u201d can vary significantly depending on the dance style:</p> <ul> <li>In Partner Dances: It\u2019s typically the leader\u2019s cue or step that signals the start of the dance and indicates the direction or rhythm. The follower responds to this initial lead.</li> <li>In Solo Dances: It\u2019s the dancer\u2019s first physical action that initiates movement, often aligned with the music\u2019s downbeat or a specific musical phrase.</li> </ul> <p>Understanding the \u201cFirst Move\u201d is a key part of learning various styles like East coast swing (ecs), Lindy hop (lindy), Salsa (salsa), Bachata (bachata), and Modern Jive (jive). Different dance studios, such as Duende dance studio, TC Swing dance studio, Onereason dance studio, and Minneapolis salsa and bachata (msbd), will teach variations or specific techniques for starting a dance within their curriculum.</p> <p>Developing a clear and confident \u201cFirst Move\u201d is crucial for effective communication and flow, whether dancing solo or with a partner.</p>","tags":["modern-jive","dancing","dance-move"]},{"location":"1012/index.html","title":"Terminal color","text":"","tags":["cli","bash"]},{"location":"1012/index.html#color-palettes","title":"Color palettes","text":"<ul> <li>Gogh color scheme palettes</li> </ul>","tags":["cli","bash"]},{"location":"1012/index.html#bash-terminal-color-codes-ansi-escape-sequences","title":"Bash Terminal Color Codes (ANSI Escape Sequences)","text":"<p>These codes are used with <code>echo -e</code> or similar commands to format terminal output.</p>","tags":["cli","bash"]},{"location":"1012/index.html#text-attributes","title":"Text Attributes","text":"<ul> <li><code>\\033[0m</code> - Reset/Normal (Turns off all attributes)</li> <li><code>\\033[1m</code> - Bold/Bright</li> <li><code>\\033[4m</code> - Underline</li> <li><code>\\033[5m</code> - Blink (Often not supported or ignored by terminals)</li> <li><code>\\033[7m</code> - Invert/Reverse (Swaps foreground and background color)</li> <li><code>\\033[8m</code> - Hidden/Invisible</li> <li><code>\\033[21m</code> - Bold off</li> <li><code>\\033[24m</code> - Underline off</li> <li><code>\\033[25m</code> - Blink off</li> <li><code>\\033[27m</code> - Reverse off</li> <li><code>\\033[28m</code> - Hidden off</li> </ul>","tags":["cli","bash"]},{"location":"1012/index.html#foreground-colors","title":"Foreground Colors","text":"<ul> <li><code>\\033[30m</code> - Black</li> <li><code>\\033[31m</code> - Red</li> <li><code>\\033[32m</code> - Green</li> <li><code>\\033[33m</code> - Yellow</li> <li><code>\\033[34m</code> - Blue</li> <li><code>\\033[35m</code> - Magenta</li> <li><code>\\033[36m</code> - Cyan</li> <li><code>\\033[37m</code> - White</li> <li><code>\\033[39m</code> - Default foreground color</li> </ul>","tags":["cli","bash"]},{"location":"1012/index.html#bright-foreground-colors","title":"Bright Foreground Colors","text":"<p>(Combine <code>1m</code> for Bold/Bright attribute with standard color codes)</p> <ul> <li><code>\\033[1;30m</code> - Bright Black (Often appears as Gray)</li> <li><code>\\033[1;31m</code> - Bright Red</li> <li><code>\\033[1;32m</code> - Bright Green</li> <li><code>\\033[1;33m</code> - Bright Yellow</li> <li><code>\\033[1;34m</code> - Bright Blue</li> <li><code>\\033[1;35m</code> - Bright Magenta</li> <li><code>\\033[1;36m</code> - Bright Cyan</li> <li><code>\\033[1;37m</code> - Bright White</li> </ul>","tags":["cli","bash"]},{"location":"1012/index.html#background-colors","title":"Background Colors","text":"<ul> <li><code>\\033[40m</code> - Black background</li> <li><code>\\033[41m</code> - Red background</li> <li><code>\\033[42m</code> - Green background</li> <li><code>\\033[43m</code> - Yellow background</li> <li><code>\\033[44m</code> - Blue background</li> <li><code>\\033[45m</code> - Magenta background</li> <li><code>\\033[46m</code> - Cyan background</li> <li><code>\\033[47m</code> - White background</li> <li><code>\\033[49m</code> - Default background color</li> </ul>","tags":["cli","bash"]},{"location":"1012/index.html#bright-background-colors","title":"Bright Background Colors","text":"<p>(These are separate codes, not typically achieved by combining <code>1m</code> with standard backgrounds)</p> <ul> <li><code>\\033[100m</code> - Bright Black background</li> <li><code>\\033[101m</code> - Bright Red background</li> <li><code>\\033[102m</code> - Bright Green background</li> <li><code>\\033[103m</code> - Bright Yellow background</li> <li><code>\\033[104m</code> - Bright Blue background</li> <li><code>\\033[105m</code> - Bright Magenta background</li> <li><code>\\033[106m</code> - Bright Cyan background</li> <li><code>\\033[107m</code> - Bright White background</li> </ul> <p>Example Usage:</p> <pre><code>echo -e \"\\033[41;37m White text on Red background \\033[0m\"\necho -e \"\\033[1;32m This is bold green text\\033[0m\"\n</code></pre> <p>Remember to always end your colored text with <code>\\033[0m</code> to reset the attributes, otherwise, subsequent text in your terminal might inherit the formatting.</p>","tags":["cli","bash"]},{"location":"1013/index.html","title":"Project: Zellij (zellij)","text":"","tags":["project","zellij"]},{"location":"1014/index.html","title":"Project: WezTerm as my terminal of choice (wezterm)","text":"","tags":["wezterm","project"]},{"location":"1015/index.html","title":"Adding dark/light mode toggle to my dotfiles","text":"<p>Need to checkout https://github.com/cormacrelf/dark-notify/tree/master to see if it solves the automatic toggling of dark/light modes in neovim.</p> <ul> <li>dotfiles</li> <li>Terminal color</li> </ul> <p>Need to figure out a way to get zellij to automatically toggle.</p>","tags":["zellij","wezterm","neovim","dotfiles","colors"]},{"location":"1016/index.html","title":"Article: Twin Cities dancing event calendar","text":"<p>A public calendar of all the dancing events going on in the twin cities that I actively maintain. iCal Download.</p> <p>Some places to look for events include:</p> <ul> <li>MSBD events</li> <li>Duende events</li> <li>Onereason events</li> </ul>","tags":["dancing","article"]},{"location":"1017/index.html","title":"Event: Twin Cities Marathon 2025","text":"<p>Twin cities marathon on 2025-10-05 08:00. Starts in downtime Minneapolis</p> <p>Packet pickup is at 11 AM - 7 PM on Friday and 10 AM - 6 PM on Saturday at 175 Kellogg Blvd, St Paul, MN 55102.</p> <p>Ran 3:45</p>","tags":["running","marathon","twincities"]},{"location":"1018/index.html","title":"Deno shell script example","text":"<pre><code>#!/usr/bin/env -S deno run --allow-all\n\nfunction main() {\n}\n\nmain();\n</code></pre>"},{"location":"1019/index.html","title":"Ansible like text blocks with bash for my dotfiles","text":"<p>I came up with a way for letting bash manage block of text within text files in a similar way that Ansible does with <code>blockinfile</code> module. This is a trick that I use for my dotfiles.</p>","tags":["dotfiles","ansible","devops"]},{"location":"1019/index.html#patch","title":"Patch","text":"<p>Here\u2019s a summary of the <code>blockinfile</code> technique I\u2019m using:</p> <p>I\u2019ve added a <code>blockinfile</code> function to my <code>lib/func.sh</code> script. Its purpose is to manage specific blocks of text within a file, which is super useful for integrating my dotfiles configuration without wiping out existing user settings in files like <code>.zshenv</code> or <code>.zshrc</code>.</p> <p>Here\u2019s how it works:</p> <ul> <li>I call <code>blockinfile</code> with the target filename, a unique name for the block (like \u201czshenv\u201d or \u201czshrc\u201d), and the actual content I want in that block.</li> <li>It looks for lines like <code># BEGIN block_name</code> and <code># END block_name</code> in the target file. These act as markers for my managed block.</li> <li>If it finds those markers, it knows the block exists and replaces whatever is between the markers with the new content I provided. This updates my configuration section.</li> <li>If it doesn\u2019t find the markers, it means the block isn\u2019t there yet. In this case, it appends the markers and my content to the end of the file.</li> <li>It also makes a backup (<code>.bak</code>) of the file before making changes, which is a nice safety net.</li> </ul> <p>I\u2019m using this in my <code>pkg/shell/install.sh</code> script to add logic to my <code>~/.zshenv</code> and <code>~/.zshrc</code>.</p> <ul> <li>For <code>~/.zshenv</code>, I use <code>blockinfile</code> with the block name <code>zshenv</code> to insert a line that sources my main Zsh environment file (<code>. ${PKG_ROOT}/lib/zshenv</code>).</li> <li>For <code>~/.zshrc</code>, I use <code>blockinfile</code> with the block name <code>zshrc</code> to insert a line that sources my main Zsh configuration file (<code>. ${PKG_ROOT}/lib/zshrc</code>).</li> </ul> <p>This way, my dotfiles setup gets included in the user\u2019s shell startup files, but I don\u2019t have to worry about blowing away any custom stuff they might already have in there. It makes the installation much smoother!</p> <p>Added in commit 3f3920594cac16cf7f20625699d6b3ba78bcc992 for shell version v0.1.0.</p>","tags":["dotfiles","ansible","devops"]},{"location":"102/index.html","title":"Using a temporary directory that require installing transient scripts","text":"<p>Here is a script that I ran into that solves a problem that I often encounter:</p> <pre><code>#!/bin/sh\nset -e\n\ncd $(mktemp -d)\ncurl -fsSL -O https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\n#export HELM_INSTALL_DIR=\"${HOME}/.local/bin\"\nbash ./get-helm-3\n</code></pre> <p>The key here is the <code>cd \"$(mktemp -d)\"</code>. It creates a directory and changes the current working directory to it.</p>","tags":["bash","cli"]},{"location":"1020/index.html","title":"Overview: Ansible (ansible)","text":"","tags":["ansible"]},{"location":"1021/index.html","title":"Software: CLI cheat sheets with <code>navi</code>","text":"<p>Navigation cheat sheet software. Learned about this at a MSP Tech meetup from CENSORED.</p>","tags":["software","cli"]},{"location":"1022/index.html","title":"Software: image previewing on CLI with yazi","text":"<p>File navigation tui. Learned about this at a MSP Tech meetup from CENSORED.</p>","tags":["software","cli"]},{"location":"1023/index.html","title":"Quake style dropdown terminal on MacOSX","text":"<p>A quake style dropdown terminal as a possible replacement for apple spotlight.</p> <p>Things to possibly look into</p> <ul> <li>tabby</li> </ul>","tags":["cli","macosx"]},{"location":"1024/index.html","title":"I3 like tiling window manager on MacOSX with AeroSpace","text":"<p>A possible better alternative to yabai is AeroSpace.</p>","tags":["macosx","gui"]},{"location":"1025/index.html","title":"Stateful command tree design architecture","text":"<p>An opinionated way to structure composable command line applications.</p> <ul> <li>Program includes the completions in the binary or script rather than external</li> <li>Program options are passed in through state rather than options</li> <li>Command tree is a sequence of subcommands with a given set of arguments</li> <li>Command tree may be dynamically generated from the root down</li> </ul>"},{"location":"1025/index.html#examples","title":"Examples","text":"<p>Some examples include many of my scripting utilise that use this structure and have completions:</p> <ul> <li>ku</li> <li>zet</li> </ul>"},{"location":"1026/index.html","title":"Article: Really cool terminal web site","text":"<p>Found a really nice open source example of a terminal example in the browser. It may be found on GitHub.</p>"},{"location":"1027/index.html","title":"Resources to figure out what protest are happening in Minnesota","text":"<p>Protests where preventing a friend of mine from getting around on 2025-06-03. Wanted to found resource on how to figure out what was going on.</p> <p>List of resources that I found:</p> <ul> <li>https://www.facebook.com/groups/MinneapolisScanner</li> </ul>","tags":["protests","minneapolis","twincities","resources","facebook"]},{"location":"1028/index.html","title":"Facebook (facebook)","text":"","tags":["facebook","socialmedia"]},{"location":"1029/index.html","title":"Hardware: Beelink SEi 9","text":"<p>Bought for my main proxmox server so I could use my old one as a playground. Also this way I have a backup. Setup on 2025-06-04.</p> <ul> <li>Use screw PH1</li> <li>Rip rubber thingies out with the tweezer thing</li> <li>Upgraded with Samsung 990 pro</li> <li>Upgraded with Crucial 2x48 GB ram (modal CT48G56C46S5) CT2K48G56C46S5</li> <li>ASUS portable monitor works for BIOS. Just need to spam delete   and F7 for a while and then re-plug in the monitor</li> </ul>","tags":["beelink","hardware","proxmox"]},{"location":"103/index.html","title":"App: Tiling window management on macOSX with Yabai","text":"<p>Yabai is the tiling window manager that I use on my mac. Works with [skhd].</p> <p>See docs for how to install</p>","tags":["twm","macosx","workstation","yabai","app"]},{"location":"103/index.html#dump","title":"Dump","text":"<pre><code>brew install koekeishiya/formulae/yabai\nbrew install koekeishiya/formulae/skhd\n</code></pre> <pre><code>cp /opt/homebrew/opt/skhd/share/skhd/examples/skhdrc ~/.skhdrc\ncp /opt/homebrew/opt/yabai/share/yabai/examples/yabairc ~/.yabairc\n</code></pre> <pre><code># start service\nskhd --start-service\n# stop service\nskhd --stop-service\n# restart\nskhd --restart-service\n</code></pre> <pre><code># start service\nyabai --start-service\n# stop service\nyabai --stop-service\n# restart\nyabai --restart-service\n</code></pre> <p>For hacking on configs. This is actually unnecessary for skhd as restarting is build right into the service. I am keeping it here for reference.</p> <pre><code>ls .skhdrc  | entr -s 'skhd --restart-service'\nls .yabirc  | entr -s 'yabai --restart-service'\n</code></pre>","tags":["twm","macosx","workstation","yabai","app"]},{"location":"103/index.html#upgrading","title":"Upgrading","text":"<p>Frequently after updating yabai will break. Follow the steps below:</p> <ul> <li>Edit <code>/private/etc/sudoers.d/yabai</code> to update the hash.   <code>echo \"jlrickert ALL=(root) NOPASSWD: sha256:$(shasum -a 256 $(which yabai) | cut -d \" \" -f 1) $(which yabai) --load-sa\"</code>   will create the line needed. Typically, I will comment out the previous line.</li> <li>Restart with <code>yabai --restart-service</code></li> </ul> <p>References:</p> <ul> <li>official docs</li> <li>josean blog post</li> <li>josean\u2019s dotfiles</li> <li>anuj-chandra</li> <li>sgoodluck</li> </ul>","tags":["twm","macosx","workstation","yabai","app"]},{"location":"1030/index.html","title":"Patch: Installing proxmox on Beelink SEi 9","text":"<ul> <li>Followed instructions on https://pve.proxmox.com/pve-docs/chapter-pve-installation.html for mac to a T</li> </ul>","tags":["homelab","patch","proxmox","beelink"]},{"location":"1031/index.html","title":"Patch: Reconfiguring zsh for my dotfiles","text":"<p>Around 2025-06-08 I redid my zsh setup for my dotfiles to remove oh-my-zsh as a dependency in an attempt to increase performance.</p>","tags":["dotfiles","zsh","cli"]},{"location":"1031/index.html#dump","title":"Dump","text":"<ul> <li><code>sudo su -l test-user</code>: Login as a user with a login shell. This runs .zshrc</li> <li>``:</li> <li>zsh plugin standards: https://zdharma-continuum.github.io/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html#_what_is_a_zsh_plugin</li> </ul>","tags":["dotfiles","zsh","cli"]},{"location":"1032/index.html","title":"Copy and paste support on remote systems","text":"<p>While working on updating zsh for my dotfiles I ran into a utility for managing Copy and paste support on remote systems. See lemonade.</p>","tags":["cli","linux","dotfiles","terminal"]},{"location":"1033/index.html","title":"Place: Blues saloon","text":"<ul> <li>Open blues jam session on Tuesdays</li> <li>Dancing on Tuesdays</li> </ul>","tags":["place","dancing"]},{"location":"1034/index.html","title":"Hilarious way to copy and paste into a VM","text":"<p>Learned from <code>tehbread</code> on rwxrob\u2019s stream. Basically, generate an error value in the log and get it from there.</p> <p>[!NOTE]</p> <p>Don\u2019t do this with secrets</p> <pre><code># On host\nssh -l \"$(awk \"{print $2}\" ~/.ssh/id_ed25519.pub)\"\n\n# On machine\njournalctl -u sshd | grep \"Invalid user\"\n</code></pre>","tags":["devops","cli"]},{"location":"1034/index.html#the-hacker-ways-to-do-it","title":"The hacker ways to do it","text":"<p><code>nc</code> is another great way.</p> <p>On server</p> <pre><code>nc -l 4545 | tee -a /tmp/buffer\n</code></pre> <p>On client</p> <pre><code>echo \"message\" | nc example.com -p 4545\n</code></pre>","tags":["devops","cli"]},{"location":"1035/index.html","title":"rwxrob\u2019s current hardware sizes for his homelab","text":"<ul> <li>3x control at 8gb ram and 2 vcore</li> <li>3x workers at 16gb ram and 2 vcore</li> </ul>"},{"location":"1036/index.html","title":"Managing disk space on unix","text":"<p>Tools to measure space:</p> <ul> <li><code>du</code></li> <li><code>nsdu</code> (gui)</li> </ul>","tags":["unix","cli"]},{"location":"1037/index.html","title":"Formating for neovim","text":"<p>This is what I use on my dotfiles for neovim.</p> <p>I use conform.</p>","tags":["neovim","dotfiles","cli"]},{"location":"1037/index.html#current-features","title":"Current features","text":"<ul> <li>format specific text. This is buggy in php at the moment</li> </ul>","tags":["neovim","dotfiles","cli"]},{"location":"1038/index.html","title":"Bake: 4th of July 2025 sourdough bread bowl","text":"<p>Forth of July bread bowl based on a loaf that came out really well. Just sized up a bit more. Forgot my banneton and bread lame. Also was too lazy to add in the rye berries.</p> <p></p>","tags":["holiday","baking","bake"]},{"location":"1038/index.html#ingredients","title":"Ingredients","text":"Ingredients Amount Bakers % Comment All purpose flour 500g 100% Water 385g rye starter 50g 10% salt","tags":["holiday","baking","bake"]},{"location":"1038/index.html#time-log","title":"Time log","text":"<ul> <li>2025-07-04 12:30 autolyse</li> <li>2025-07-04 15:00 Mixed ingredients</li> <li>2025-07-04 22:00 Placed in fridge</li> <li>2025-07-05 15:00 Baked at 500f for 22 minutes. 475 with lid off for 18   minutes. No steam. Used my usual method</li> </ul>","tags":["holiday","baking","bake"]},{"location":"1039/index.html","title":"Installing JavaScript minifier uglify with deno","text":"<p>I found a way to install npm binaries with deno. One caveat of this is the large binary size. Uglify has a size of 66M.</p> <p>This is the process of installing that I used:</p> <pre><code>deno compile -A npm:uglify-js\nchmod +x uglify-js\nmv uglify-js ~/.local/bin/uglify\n</code></pre>","tags":["cli","deno","JavaScript"]},{"location":"104/index.html","title":"Overview: MacOSX tools and software","text":"","tags":["macosx","worksation"]},{"location":"104/index.html#networking","title":"Networking","text":"<p>[!NOTE]</p> <p>Only for newer macos versions</p> <ul> <li>flush dns: <code>sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder</code></li> </ul>","tags":["macosx","worksation"]},{"location":"104/index.html#tools","title":"Tools","text":"App Source Description Mission Control Apple Shows all open apps Spotlight Apple Focus or open an app. By default Command space Alfred Yabai tiling window manager xkhd keyboard shortcuts Activity Monitor Apple system monitor like the tui btop","tags":["macosx","worksation"]},{"location":"1040/index.html","title":"Installing CSS compressor csso with deno","text":"<p>I found a way to install npm binaries with deno. One caveat of this is the large binary size. Uglify has a size of 66M.</p> <p>This is the process of installing that I used:</p> <pre><code>deno compile -A npm:csso-cli\nchmod +x csso-cli\nmv csso-cli ~/.local/bin/csso\n</code></pre>","tags":["css","deno"]},{"location":"1041/index.html","title":"Creating an Ubuntu Server template my Homelab","text":"<p>Created a base template for my homelab. Ideally, it should be cloud init based.</p>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#template-version","title":"Template version","text":"<ul> <li>Version 1</li> <li>Version 2</li> </ul>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#steps-to-recreate","title":"Steps to recreate","text":"<ul> <li>Generate ssh keys to allow VM\u2019s to pull code</li> </ul> <p><code>bash   ssh-keygen -t ed25519 -C \"Github deploy key the homelab\" -f ./id_ed25519_homelab</code></p>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#configuration","title":"Configuration","text":"<ul> <li>General</li> <li>name: ubuntu-2404-lts-v1</li> <li>OS</li> <li>iso: ubuntu-24.04.2-live-server-amd64.iso</li> <li>System</li> <li>BIOS: OVMF</li> <li>EFI Storage: local-lvm</li> <li>Qemu Agent: [x]</li> <li>SCSI Controller: VirtIO SCSI single</li> <li>Disk</li> <li>Bus/Device: SCSI</li> <li>Disk Size: 32G</li> <li>Cache: No Cache</li> <li>Discard: [x] Running on local nvme drive</li> <li>CPU</li> <li>2 cores</li> <li>MEMORY</li> <li>2048 MiB</li> </ul> <p>[!NOTE]</p> <p>AI Garbage below</p> <p>This note outlines the steps for setting up a new Ubuntu Server 24.04 instance within my homelab environment, from initial installation to essential post-setup configurations. It aims to provide a quick start guide for deploying a reliable server ready for various homelab projects, from hosting services to managing infrastructure.</p>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#prerequisites","title":"Prerequisites","text":"<p>Before beginning, ensure you have the following:</p> <ul> <li>Ubuntu Server 24.04 LTS (Noble Numbat) ISO: Downloadable from the official Ubuntu website (Ubuntu Server Download).</li> <li>Bootable USB Drive or VM Environment: For physical hardware, use tools like Rufus or Etcher to create a bootable USB. For virtualization, consider Proxmox, VirtualBox (VirtualBox on apple silicon), or UTM (VM setup on apple silicon with UTM).</li> <li>Network Cable: For a wired connection, which is recommended for servers.</li> <li>SSH Client: For remote access after installation (e.g., OpenSSH on Linux/macOS, PuTTY on Windows).</li> </ul>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#installation-steps","title":"Installation Steps","text":"<ol> <li>Boot from Installation Media:</li> </ol> <ul> <li>Insert the bootable USB or mount the ISO in your virtual machine.</li> <li>Power on the machine and boot from the selected media.</li> </ul> <ol> <li>Language and Keyboard Layout:</li> </ol> <ul> <li>Select your preferred language.</li> <li>Choose the correct keyboard layout.</li> </ul> <ol> <li>Network Configuration:</li> </ol> <ul> <li>The installer will attempt to acquire an IP address via DHCP. For a homelab server, it\u2019s highly recommended to configure a static IP address. Refer to Networking in Ubuntu 24.04 for detailed guidance on static IP setup. This ensures your server\u2019s address remains consistent for easy access and service configuration.</li> <li>Consider setting a descriptive hostname during this step.</li> </ul> <ol> <li>Installer Updates:</li> </ol> <ul> <li>The installer may prompt to update itself. Proceed with the update for the latest installer features and bug fixes.</li> </ul> <ol> <li>Storage Configuration:</li> </ol> <ul> <li>Choose \u201cUse an entire disk\u201d for simplicity, or \u201cCustom storage layout\u201d for advanced partitioning. For most homelab setups, using the entire disk is sufficient.</li> <li>Ensure to confirm the proposed storage layout before proceeding, as this will erase all data on the selected disk.</li> </ul> <ol> <li>Profile Setup:</li> </ol> <ul> <li>Enter your name, the server\u2019s name, and create a strong username and password. This will be your primary administrative user.</li> </ul> <ol> <li>SSH Setup:</li> </ol> <ul> <li>Crucially, select \u201cInstall OpenSSH server\u201d to enable remote access.</li> <li>You can optionally import public SSH keys from GitHub or Launchpad for immediate key-based authentication. If not, you\u2019ll set this up manually post-installation.</li> </ul> <ol> <li>Featured Snaps (Optional):</li> </ol> <ul> <li>Review the list of recommended snaps. You can skip this for a minimal installation, as additional software can be installed later via Package management in Ubuntu or Docker.</li> </ul> <ol> <li>Installation Process:</li> </ol> <ul> <li>The installer will now proceed with installing Ubuntu Server. This may take some time depending on your hardware.</li> </ul> <ol> <li>Reboot:<ul> <li>Once the installation is complete, remove the installation media and reboot the server.</li> </ul> </li> </ol>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#post-installation-configuration","title":"Post-Installation Configuration","text":"<p>After the first boot, log in with the user created during installation.</p> <ol> <li> <p>System Updates:</p> <ul> <li>Always start by updating your package lists and upgrading installed packages:   <code>bash   sudo apt update   sudo apt upgrade -y</code></li> </ul> </li> <li> <p>Firewall (<code>ufw</code>):</p> <ul> <li>Enable the Uncomplicated Firewall (<code>ufw</code>) to secure your server. Allow SSH access and any other necessary services:   <code>bash   sudo ufw allow ssh   # Example: if you plan to run a web server   # sudo ufw allow http   # sudo ufw allow https   sudo ufw enable   sudo ufw status</code></li> </ul> </li> <li> <p>SSH Key Authentication (if not set up during install):</p> <ul> <li>For enhanced security, disable password authentication for SSH and rely solely on SSH keys.</li> <li>Copy your public key to the server: <code>ssh-copy-id username@your_server_ip</code></li> <li>Edit <code>/etc/ssh/sshd_config</code> to set <code>PasswordAuthentication no</code> and <code>PermitRootLogin no</code>.</li> <li>Restart SSH service: <code>sudo systemctl restart sshd</code>.</li> </ul> </li> <li> <p>Time Synchronization (NTP):</p> <ul> <li>Ubuntu generally uses <code>systemd-timesyncd</code> for NTP. Verify its status if needed:   <code>bash   timedatectl status</code></li> </ul> </li> </ol>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1041/index.html#common-homelab-use-cases","title":"Common Homelab Use Cases","text":"<p>Your new Ubuntu server is a versatile foundation for many homelab projects:</p> <ul> <li>Containerization: Install Docker to easily deploy applications in isolated containers.</li> <li>Network Services: Set up Pi-Hole for network-wide ad blocking and DNS caching, or configure WireGuard topologies for secure remote access (Road Warrior WireGuard VPN setup on OPNSense).</li> <li>File Storage/Cloud: Deploy Nextcloud for a personal cloud storage solution.</li> <li>Virtualization (Nested): If running on a powerful machine, you could install another hypervisor like Proxmox to manage more VMs (though typically Proxmox would be the base OS).</li> </ul>","tags":["homelab","ubuntu","linux","networking"]},{"location":"1042/index.html","title":"Open-Source search engine: Meilisearch","text":"<p>A quick note on Meilisearch, an open-source search engine, identified as a potential component for the Knutjs project. This tool can enable fast and relevant search capabilities for various data types within the project\u2019s scope, including KEG notes. It aligns with previous research on search engines.</p> <p>Meilisearch is an API-first, typo-tolerant, and blazing-fast search engine that is highly customizable and embeddable. Its focus on speed and ease of use makes it an attractive option for integrating powerful search functionality directly into an application like Knutjs without the overhead of larger, more complex solutions. Being open-source further aligns it with the project\u2019s goals.</p>","tags":["software","search-engine","knutjs"]},{"location":"1043/index.html","title":"Entity: Chingu (chingu)","text":"<p>Chingu is a global online developer community focused on collaborative learning and career development in the tech field. It aims to help aspiring and junior developers gain practical experience and get hired by working together on real-world projects.</p>","tags":["entity","education","career","programming","community","webdev","collaboration","project","learning"]},{"location":"1043/index.html#description","title":"Description","text":"<p>Chingu organizes \u201cVoyages,\u201d which are structured, collaborative programs where participants form teams to build web applications and other programming projects. This project-based approach helps members:</p> <ul> <li>Develop and hone their programming skills.</li> <li>Build a professional portfolio of completed projects.</li> <li>Gain experience working in a team environment, including aspects of project management.</li> <li>Receive mentorship and guidance from experienced developers.</li> <li>Network with peers and industry professionals, aiding in job searching and career advancement.</li> </ul> <p>It serves as a bridge, similar to a bootcamp or specialized skill development program, connecting theoretical knowledge with practical application necessary for entering or advancing within the tech industry. It strongly aligns with the concept of \u201clearning in public\u201d and builds upon shared knowledge, much like a KEG itself.</p>","tags":["entity","education","career","programming","community","webdev","collaboration","project","learning"]},{"location":"1043/index.html#purpose","title":"Purpose","text":"<p>The primary purpose of Chingu is to provide a structured, supportive environment for developers to:</p> <ol> <li>Gain practical experience: Through collaborative, real-world project development.</li> <li>Build a portfolio: To showcase their abilities to potential employers.</li> <li>Network: Connect with other developers and mentors.</li> <li>Enhance employment prospects: By developing in-demand skills and practical experience.</li> </ol>","tags":["entity","education","career","programming","community","webdev","collaboration","project","learning"]},{"location":"1043/index.html#benefits","title":"Benefits","text":"<ul> <li>Pattern Identification: By participating in structured project sprints and contributing to a shared codebase, individuals can identify common development patterns and best practices.</li> <li>Prompt Engineering Insights: The collaborative nature and focus on project specifications could yield insights useful for prompt engineering, particularly in defining project requirements or structuring problem-solving narratives for LLMs.</li> <li>Discovery of Information: Through working with diverse groups and tackling various project challenges, participants often discover new technologies, tools, and problem-solving approaches that they might not have encountered independently.</li> </ul>","tags":["entity","education","career","programming","community","webdev","collaboration","project","learning"]},{"location":"1043/index.html#related-keg-entries","title":"Related KEG Entries","text":"<ul> <li>MSP Tech meetup group: A local example of a developer community, similar to the collaborative spirit of Chingu.</li> <li>Project management for python: Chingu projects require project management skills.</li> <li>Bootcamp Career Foundry: Another avenue for career development and education in tech.</li> <li>Skill stack beginner boost: Focuses on skill development, a core aspect of Chingu.</li> <li>Companies that hire Software Engineers: Chingu directly supports individuals aiming for these roles.</li> <li>Programming by composition in PHP: An example of specific programming knowledge that might be applied or learned within Chingu projects.</li> <li>Different types of learning: Chingu heavily utilizes experiential and collaborative learning.</li> <li>Learning in public: A philosophy often embraced by Chingu participants to maximize learning and networking.</li> </ul>","tags":["entity","education","career","programming","community","webdev","collaboration","project","learning"]},{"location":"1044/index.html","title":"Neovim file explorers","text":"<p>Neotree is the go to plugin for a file explorer in neovim that I use for my dotfiles.</p>","tags":["neovim","dotfiles"]},{"location":"1044/index.html#patches","title":"Patches","text":"","tags":["neovim","dotfiles"]},{"location":"1044/index.html#hotkeys","title":"Hotkeys","text":"<pre><code>-- File explorer\nvim.keymap.set('n', '&lt;leader&gt;e', function()\n    require('neo-tree.command').execute({ toggle = true, dir = vim.fn.getcwd() })\nend, { desc = '[E]xplore files' })\n</code></pre>","tags":["neovim","dotfiles"]},{"location":"1045/index.html","title":"Diagnostics in neovim","text":"","tags":["neovim","dotfiles"]},{"location":"1045/index.html#hotkeys","title":"Hotkeys","text":"<pre><code>vim.keymap.set('n', 'gl', function()\n    vim.diagnostic.open_float({ border = 'rounded' })\nend, { desc = 'Show diagnostic details in float' })\n</code></pre>","tags":["neovim","dotfiles"]},{"location":"1046/index.html","title":"State machine libararies","text":""},{"location":"1046/index.html#website-temporalio","title":"Website: temporal.io","text":"<p>Frontend state machine thingy</p>"},{"location":"1047/index.html","title":"Website: temporal.io","text":"<p>Frontend state machine library thingy</p>"},{"location":"1048/index.html","title":"Package manager UV for python","text":""},{"location":"1049/index.html","title":"Software: frizbee fuzzy matcher","text":"<p>Frizbee is a SIMD fuzzy string matcher.</p>"},{"location":"105/index.html","title":"Concrete 5","text":"<p>Concrete 5 is a CMS platform similar to WordPress.</p> <p>Setup</p> <ul> <li>docker</li> <li>lando</li> <li>is a development tool</li> <li>let Lando install docker</li> </ul> <p>Development loop</p> <pre><code>lambo start\n# do edits; reload browser\n</code></pre> <pre><code>tags: #php #cms\n</code></pre>","tags":["php","cms"]},{"location":"1050/index.html","title":"Prose linting on neovim with vale","text":"<p>I found a prose writing linter called vale that I use with neovim.</p>","tags":["neovim","writing","english"]},{"location":"1050/index.html#configuration","title":"Configuration","text":"<p>Look in <code>~/.config/vale/.vale.ini</code>. Run <code>vale sync</code> after making changes in that file.</p> <p>Look up packages on https://vale.sh/explorer</p>","tags":["neovim","writing","english"]},{"location":"1050/index.html#see-also","title":"See also","text":"<ul> <li>neovim diagnostics</li> </ul>","tags":["neovim","writing","english"]},{"location":"1051/index.html","title":"PHP setup for Neovim","text":"<p>My PHP related things to Neovim.</p>","tags":["neovim","php","dotfiles"]},{"location":"1051/index.html#diagnostic","title":"Diagnostic","text":"<ul> <li><code>phpstan</code></li> </ul>","tags":["neovim","php","dotfiles"]},{"location":"1051/index.html#formatter-setup","title":"Formatter setup","text":"<p>Currently, I am using <code>pretty-php</code>. <code>pretty-php</code> config snippet. Defaults found on GitHub.</p> <pre><code>local confg = {\n  opts = {\n    formatters_by_ft = {\n      opts = {\n        php = { 'pretty_php' },\n      }\n      formatters = {\n        pretty_php = function()\n          return {\n            meta = {\n              url = 'https://github.com/lkrms/pretty-php',\n              description = 'The opinionated PHP code formatter.',\n            },\n            command = require('conform.util').find_executable({\n              'vendor/bin/pretty-php',\n            }, 'pretty-php'),\n            args = { '$FILENAME', '--tab' },\n            stdin = false,\n          }\n        end,\n      },\n    }\n  },\n}\n</code></pre>","tags":["neovim","php","dotfiles"]},{"location":"1051/index.html#language-server-protocol-lsp","title":"Language Server Protocol (LSP)","text":"<ul> <li><code>intelephense</code></li> </ul>","tags":["neovim","php","dotfiles"]},{"location":"1051/index.html#phpactor-setup","title":"PHPActor setup","text":"<p>Install <code>phpactor</code> bin to <code>~/.local/bin/phpactor</code>. Follow the manual installation on there website.</p>","tags":["neovim","php","dotfiles"]},{"location":"1052/index.html","title":"LSP setup on Neovim","text":"<p>This is what I use on my dotfiles for neovim.</p>","tags":["neovim","dotfiles"]},{"location":"1053/index.html","title":"Modern jive dance moves","text":"<p>Modern jive dance moves</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#moves","title":"Moves","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#back-pass","title":"Back Pass","text":"<p>Similar to a Guy\u2019s Pass, but the follower is sent across the slot traveling behind the leader.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#basket","title":"Basket","text":"<p>Often follows a Comb or similar entry. Involves the follower tucking under the leader\u2019s arm(s) and potentially rotating into a \u201cbasket\u201d hold behind the leader.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#break-through","title":"Break Through","text":"<p>A leading technique or a move where the leader creates space or changes a handhold by stepping forward or \u2018breaking\u2019 through the connection, often to start a pass.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#catapult","title":"Catapult","text":"<p>An early intermediate move. Uses momentum to send the follower out into a spin, maintaining connection, and then drawing them back in sharply. Requires good connection and timing.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#ceroc-new-yorker","title":"Ceroc New Yorker","text":"<p>A foundational Ceroc move. Involves the leader stepping back and forward, changing handholds while the follower steps forward and back relatively in place or across the slot slightly. Creates a back-and-forth feel.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#ceroc-spin","title":"Ceroc Spin","text":"<p>A basic spin for the follower, typically initiated by the leader lifting one arm for the follower to turn under. A core element used in many other moves.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#check-step","title":"Check Step","text":"<p>A specific footwork sequence often used to create a pause or tension before moving on. Leader steps back, follower steps forward, creating a slight resistance.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#fan","title":"Fan","text":"<p>A method of guiding the follower out to the side, creating a fanning-out motion, often leading into other moves like the Figure of 8.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#figure-of-8","title":"Figure of 8","text":"<p>An early intermediate move. Involves the follower traveling in a path that traces a figure-of-8 around the leader, often incorporating passes and turns.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#first-move","title":"First Move","text":"<p>This usually refers to the very first, basic sequence taught. It establishes the slot, rhythm, and fundamental lead/follow connection (e.g., often involving a pass or return).</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#first-move-push-spin","title":"First Move push spin","text":"<p>A variation of the fundamental \u201cFirst Move\u201d sequence where the follower\u2019s spin is initiated using a \u2018push\u2019 lead (an impulse on the back or arm) from the leader, rather than just a simple arm lift. It\u2019s a common way to introduce the push spin concept within the basic beginner pattern.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#hatchback","title":"Hatchback","text":"<p>(Specific name, often school-dependent). Likely a variation of a Return or Pass, perhaps bringing the follower back in a specific orientation or direction. Can be a specific way of returning \u2018backwards\u2019.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#hand-hold","title":"Hand hold","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#slow-comb","title":"Slow Comb","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#leads-comb","title":"Leads Comb","text":"<p>Same as \u201cThe Comb\u201d. After sending the follower across in a pass, the leader maintains hold and brings the follower straight back into the slot, like pulling a comb through hair.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#loop-through","title":"Loop Through","text":"<p>The follower loops around the leader, often involves passing behind the leader or circling under a raised arm.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#octopus","title":"Octopus","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#manhattan","title":"Manhattan","text":"<p>An early intermediate sequence. Often involves multiple turns and changes of direction for the follower, sometimes incorporating a pretzel-like element or ending in a specific hold like a cuddle.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#man-spin","title":"Man Spin","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#push-spin","title":"Push Spin","text":"<p>A type of spin where the leader initiates the turn with a forward or outward impulse (\u201cpush\u201d) on the follower\u2019s back or arm, rather than just lifting an arm to guide.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#return","title":"Return","text":"<p>The core action of bringing the follower back into the main dance slot after they have traveled out of it (e.g., after a pass or spin).</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#should-slide","title":"Should Slide","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#shoulder-block","title":"Shoulder Block","text":"<p>A leading technique where the leader uses their shoulder or torso position to guide the follower\u2019s direction or create a stop/pause.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#should-drop","title":"Should Drop","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#side-to-side","title":"Side to Side","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#slide-break","title":"Slide Break","text":"<p>A footwork detail or transition often used rhythmically. Involves a sliding step to stop or change momentum, creating a small \u2018break\u2019 or pause.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#squeeze-box","title":"Squeeze Box","text":"<p>An early intermediate move. Involves bringing the follower in very close, often with a specific hold, and executing a turn or change of direction in close proximity.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#step-across","title":"Step across","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#sway","title":"Sway","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#step-across_1","title":"Step Across","text":"<p>Footwork detail. A step where one foot crosses in front of the other. Can be used in transitions or as part of specific move patterns.</p> <p>[YouTube Video Placeholder]</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#travelling-return","title":"Travelling Return","text":"<p>A variation of the Return where the couple, or just the follower, travels along the length of the slot as the follower is brought back in, rather than returning to the exact same spot.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#travelling-flick-spin","title":"Travelling flick spin","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#wurlitzer","title":"Wurlitzer","text":"<p>(Intermediate/Advanced name, often specific). Typically describes a complex sequence involving multiple interconnected spins, often with a flowing, slightly mechanical feel.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#yoyo","title":"Yoyo","text":"<p>An early intermediate move. Characterized by the follower being sent out away from the leader and then quickly pulled back in, mimicking the action of a yoyo.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#yoyo-pushspin","title":"Yoyo pushspin","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#dump","title":"DUMP","text":"","tags":["modern-jive","dancing"]},{"location":"1053/index.html#basic-moves","title":"Basic Moves","text":"<ol> <li> <p>Basic Step: The foundational step involves a simple step pattern where    partners move in sync, typically comprising a quick step and rock step.</p> </li> <li> <p>Side Step: Dancers step to the side, maintaining the rhythm. This allows    for smooth transitions between moves.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#turns-and-spins","title":"Turns and Spins","text":"<ol> <li> <p>Inside Turn: One partner is guided into a turn towards the center of the    dance floor, typically performed with a lead and follow framework.</p> </li> <li> <p>Outside Turn: Similar to the inside turn, but the partner turns away from    the center, adding variation to the dance.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#partner-holds","title":"Partner Holds","text":"<ol> <li> <p>Open Hold: Partners maintain a loose grip, allowing for fluid movements    and turns.</p> </li> <li> <p>Closed Hold: A closer grip that provides more connection, often used in    slower dances or to lead specific moves.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#variations-and-styling","title":"Variations and Styling","text":"<ol> <li> <p>Kick Ball Change: A stylish footwork combination where the dancer kicks    one foot forward, ball of the foot down on that foot, then shifts weight back    to the other direction.</p> </li> <li> <p>Body Movement: Incorporating body rolls or sways to add personality and    style to basic steps.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#advanced-moves","title":"Advanced Moves","text":"<ol> <li> <p>Sway / Rock Step: Partners gently shift their weight back and forth or in    circles to create a laid-back feel.</p> </li> <li> <p>Chass\u00e9: A side-step move that involves stepping to the side, joining     feet, and then stepping again to the side, creating a smooth lateral     movement.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#complex-combinations","title":"Complex Combinations","text":"<ol> <li> <p>Underarm Turn: The lead raises their arm to allow the follow to turn     under it, creating a smooth and stylish transition.</p> </li> <li> <p>Casey: This is a playful spin where partners switch places while facing     each other, often involving a turn.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#additional-moves","title":"Additional Moves","text":"<ol> <li> <p>Lindy Hop: While traditionally associated with swing dance, modern jive     often incorporates elements of Lindy hop footwork, which adds flair and     rhythm.</p> </li> <li> <p>Twist: A stylish addition where partners twist in unison, emphasizing     the rhythm of the music.</p> </li> </ol>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#conclusion","title":"Conclusion","text":"<p>These moves form the vocabulary of Modern Jive dancing. Each can be styled and mixed based on personal preference, making Modern Jive a dynamic and engaging partner dance. Practicing these movements allows dancers to develop their technique, musicality, and confidence on the dance floor.</p>","tags":["modern-jive","dancing"]},{"location":"1053/index.html#see-also","title":"See also","text":"<ul> <li>Ceroc competition rules</li> </ul>","tags":["modern-jive","dancing"]},{"location":"1054/index.html","title":"Place: FRGMNT Coffee Eden Prairie","text":"<p>A coffeeshop located in Eden Prairie.</p> <pre><code>FRGMNT Coffee - EP\n11095 Viking Dr \u00b7 Eden Prairie, MN\n</code></pre>","tags":["place","coworking"]},{"location":"1055/index.html","title":"Coffee shops in Minneapolis/St Paul for large coworking groups","text":"<ul> <li>FRGMNT Coffee</li> </ul> <p>The have a few large tables</p> <ul> <li>NE Spyhouse Coffee</li> </ul> <p>Have a large central table</p> <ul> <li>Up Coffee</li> </ul> <p>Large table. WiFi is ok. Most of the time the large table is available</p>","tags":["coworking"]},{"location":"1056/index.html","title":"Person: streamer s9tpepper","text":"","tags":["twitch","person"]},{"location":"1057/index.html","title":"Factorio resources","text":"<ul> <li>Speed running guide: https://docs.google.com/presentation/d/1XgyTdHzQM1cQrv1YpZJuRGtMv6AE9j4h6Phdn4Fe8-c/edit?slide=id.g91035a48d7_686_467#slide=id.g91035a48d7_686_467</li> <li>Cheatsheet: https://factoriocheatsheet.com</li> </ul>","tags":["factorio","gaming"]},{"location":"1058/index.html","title":"LLM frontend research","text":"<p>Research into a frontend to interface with different LLMs to use with my dotfiles.</p>","tags":["ai","llm","research","dotfiles"]},{"location":"1058/index.html#web-interfaces","title":"Web interfaces","text":"","tags":["ai","llm","research","dotfiles"]},{"location":"1058/index.html#olama-client","title":"Olama client","text":"<p>Web frontend similarly to gemini studio or openai web interface. Has a proxy that allows using other models. Has a cli interface as well.</p> <ul> <li>https://github.com/Shishir435/ollama-client</li> <li> <p>https://shishir435.github.io/ollama-client/ollama-client</p> </li> <li> <p>Using a Proxy like LiteLLM</p> </li> </ul>","tags":["ai","llm","research","dotfiles"]},{"location":"1058/index.html#cli-only","title":"CLI only","text":"<ul> <li>mods</li> </ul>","tags":["ai","llm","research","dotfiles"]},{"location":"1058/index.html#vibe-coding-tools","title":"Vibe coding tools","text":"<ul> <li>https://github.com/Aider-AI/aider</li> </ul>","tags":["ai","llm","research","dotfiles"]},{"location":"1059/index.html","title":"Person: Leonard Leo","text":"<p>The Federalist Society Group person. Broke up with Trump around 2025.</p>"},{"location":"106/index.html","title":"How to install lando on MacOS","text":"<p>Prior to installing lando docker should be uninstalled. This is to prevent a couple of issues. Something to note is that Docker should be uninstalled before lando is installed. This allows lando to install the latest version that it supports. Follow the installation docs for a more detailed explanation of how to install.</p> <p>Here is a quick script to get to get started. It should do most of the work.</p> <pre><code># only if you haven't ran this before\nsudo softwareupdate --install-rosetta --agree-to-license\ncd \"$(mktemp -d)\" || exit 1\nVERSION=3.18.0\nARCH=arm64\ncurl -fsSL -O \"https://github.com/lando/lando/releases/download/v${VERSION}/lando-${ARCH}-v${VERSION}.dmg\"\nsudo hdiutil attach \"lando-${ARCH}-${VERSION}\".dmg\n# this needs to be fixed\nopen /Volumes/Lando\\ ${VERSION}/LandoInstaller.pkg\nsudo hdiutil detach \"/Volumes/Lando ${VERSION}\"\n</code></pre> <p>Once everything is installed x86 emulation may need to be enabled if using apple silicon. To enable go into the settings in docker and enable Use Rosetta for x86/amd64 emulation on Apple Silicon. This is found in features in development.</p> <p>An alternative installation is with brew. This is initially what I tried but it installed a newer version of docker desktop that didn\u2019t work. This is here for future reference.</p> <pre><code>brew install lando\n</code></pre>","tags":["programming","macosx","php"]},{"location":"1060/index.html","title":"Person: Trump","text":"<p>The orange turd</p>","tags":["person"]},{"location":"1061/index.html","title":"The federalist society group","text":"<p>Apparently have been working to redo the American Judiciary system for 4 decades.</p> <ul> <li>Leonard Leo</li> <li>Ronald Reagan influenced?</li> </ul>","tags":["politics"]},{"location":"1061/index.html#sources","title":"Sources","text":"<ul> <li> <p>https://www.youtube.com/watch?v=T7CIg-XyuUE</p> </li> <li> <p>Are they biased?</p> </li> </ul>","tags":["politics"]},{"location":"1062/index.html","title":"Ubuntu template version 1 for my homelab","text":"<p>My first template for my homelab is version 1. It is a simple template of Ubuntu 24.04. Template name is <code>ubunut-2404-base-v1</code>.</p>","tags":["homelab","proxmox","ubuntu"]},{"location":"1062/index.html#steps-to-recreate","title":"Steps to recreate","text":"<ul> <li>Simply Create an Ubuntu VM. Username is <code>jlrickert</code> with my usual password. Setup default shell as zsh.</li> </ul>","tags":["homelab","proxmox","ubuntu"]},{"location":"1062/index.html#base-configuration","title":"Base configuration","text":"<ul> <li>General</li> <li>name: ubuntu-2404-lts-v1</li> <li>OS</li> <li>iso: ubuntu-24.04.2-live-server-amd64.iso</li> <li>System</li> <li>BIOS: OVMF</li> <li>EFI Storage: local-lvm</li> <li>QEMU Agent: [x]</li> <li>SCSI Controller: VirtIO SCSI single</li> <li>Disk</li> <li>Bus/Device: SCSI</li> <li>Disk Size: 32G</li> <li>Cache: No Cache</li> <li>Discard: [x] Running on local NVME drive</li> <li>CPU</li> <li>2 cores</li> <li>MEMORY</li> <li>2048 MiB</li> </ul>","tags":["homelab","proxmox","ubuntu"]},{"location":"1063/index.html","title":"Ubuntu template cloud version 1 for my homelab","text":"<p>My second template for my homelab is my fist attempt at making a cloud based VM. It is a simple template of Ubuntu 24.04. Template name is <code>ubunut-2404-cloud-v1</code>. This is an experment initiating a VM using cloud init. Patch applied on 2025-07-26.</p>","tags":["ubuntu","proxmox","homelab"]},{"location":"1063/index.html#configuration-dump","title":"Configuration dump","text":"<pre><code>root@pve:~# qm config 105\nagent: 1\nboot: order=scsi0;ide2;net0\ncipassword: **********\nciuser: jlrickert\ncores: 2\ncpu: x86-64-v2-AES\nide0: local-lvm:vm-105-cloudinit,media=cdrom\nide2: pxe-data:iso/noble-server-cloudimg-amd64.img,media=cdrom,size=600338K\nipconfig0: ip=dhcp,ip6=dhcp\nmemory: 4096\nmeta: creation-qemu=9.2.0,ctime=1753555327\nname: ubuntu-2404-cloud-v1\nnet0: virtio=BC:24:11:3B:FC:BD,bridge=vmbr0,firewall=1\nnuma: 0\nostype: l26\nscsi0: local-lvm:base-105-disk-1,size=36352M\nscsihw: virtio-scsi-single\nserial0: socket\nsmbios1: uuid=5b5570dc-3d12-43aa-88c1-9a1e6940c0ef\nsockets: 1\nsshkeys: ssh-ed25519%20AAAAC3NzaC1lZDI1NTE5AAAAIKZQPSbEwoDXP42HyE5v4uJ5EC6OpYecPeslMdxQ3KUw%20admin%40jlrickert.me%0A\ntemplate: 1\nvmgenid: 7b247ce6-f484-487d-b743-94efd6a21e86\n</code></pre>","tags":["ubuntu","proxmox","homelab"]},{"location":"1063/index.html#steps-to-recreate","title":"Steps to recreate","text":"<p>Steps are taken from https://pve.proxmox.com/wiki/Cloud-Init_Support#_preparing_cloud_init_templates</p> <ul> <li>Upload the latest image from https://cloud-images.ubuntu.com/. I put it on the pxe-data storage.</li> <li>Create the VM from the config dump. Skip adding a hardrive for now</li> <li>Create the hard drive on the cli</li> </ul> <p><code>bash   qm set &lt;vmid&gt; --scsi0 local-lvm:0,import-from=/mnt/pve/pxe-data/template/iso/noble-server-cloudimg-amd64.img</code></p> <ul> <li>Increate the hard drive by 32G increment</li> <li>Hit clone and your off</li> <li>Login via <code>ssh &lt;vmname&gt;.int.jlrickert.me</code>. May have to wait a while</li> </ul>","tags":["ubuntu","proxmox","homelab"]},{"location":"1063/index.html#resources","title":"Resources","text":"<ul> <li>https://pve.proxmox.com/wiki/Cloud-Init_FAQ</li> <li>https://pve.proxmox.com/wiki/Cloud-Init_Support</li> <li>https://blog.themaxtor.boo/post/2024-10-12-how-to-create-proxmox-template-with-cloud-image/</li> <li>https://blog.themaxtor.boo/post/2024-10-19-how-to-create-vm-with-cloud-init-in-proxmox/</li> </ul>","tags":["ubuntu","proxmox","homelab"]},{"location":"1064/index.html","title":"Cloud init first experience on my homelab","text":"<p>This is a dump of what I learned when experimenting with cloud-init on my homelab with proxmox. This is what I did for the version 2 template.</p>","tags":["proxmox","homelab","ubuntu","devops"]},{"location":"1064/index.html#dump","title":"Dump","text":"<ul> <li>VM configuration</li> <li>Promox support</li> </ul>","tags":["proxmox","homelab","ubuntu","devops"]},{"location":"1065/index.html","title":"Cloud init (cloud-init)","text":"<p>Devops thingy</p>","tags":["devops","cloud-init"]},{"location":"1066/index.html","title":"Example search output for my KEG","text":"<ul> <li>Each line is max 80 characters wide, including padding.</li> <li> <p>Columns:</p> </li> <li> <p>ID: KEG node number, right-padded to 5 chars for alignment.</p> </li> <li>Title: Node title, truncated if too long to keep line width.</li> <li>Tags: A short list of main tags or categories (kept brief).</li> <li> <p>Link: Short relative path/link, e.g., <code>keg:example/123</code> to node source.</p> </li> <li> <p>Header and footer lines with dashes visually separate the search output.</p> </li> <li>A short footer reminds user how to view the full note with a simple command.</li> <li>A summary should be given about the search results</li> <li>By default do 10 results</li> <li>The top result should be on the bottom</li> </ul> <p>Here is an example output for a search:</p> <pre><code>**Summary:**\n\nThis search result displays five entries related to \"Asana Task,\" including completed tasks and project updates. The entries cover various topics such as project updates, compliance module commits, task reviews, and marketing project prompts. Each entry is linked to a specific note ID for further reference.\n\n--------------------------------------------------------------------------------\nSearch Results for query: \"Asana Task\"\n-------------------------------------------------------------------------------\nID    | Title                                                   | Link\n-------------------------------------------------------------------------------\n0045  | [x] Project Alpha Update | improved search and speedup   | keg:abc/45\n0361  | Compliance Module git commit                             | keg:abc/361\n0911  | [x] Task Review | Beta Corp - February Dev Timeline      | keg:abc/911\n1314  | Prompt: Drafting a marketing project note                | keg:abc/1314\n1350  | [x] Task Complete | Delta Rider - Q3 2025                | keg:abc/1350\n1420  | [ ] New Feature Planning | Q4 Roadmap                    | keg:abc/1420\n1475  | [x] Bug Fixes and Improvements | Sprint 12               | keg:abc/1475\n1502  | [ ] Client Feedback Summary | March 2025                 | keg:abc/1502\n1580  | [x] Team Retrospective Notes | April 2025                | keg:abc/1580\n1623  | [ ] Resource Allocation | Project Phoenix                | keg:abc/1623\n-------------------------------------------------------------------------------\nFound 10 results. Use \"zet abc cat &lt;ID&gt;\" to view note content.\n-------------------------------------------------------------------------------\n</code></pre>","tags":["llm","prompt"]},{"location":"1068/index.html","title":"Bake: Pearled Barley Sourdough Loaf with Lower Hydration","text":"<p>Baked today with a modification to the White sourdough batard with purple Barley pearls by lowering the hydration to improve dough handling and crumb structure.</p> <p></p>","tags":["baking","bake"]},{"location":"1068/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 450g 100% Organic target bread Water 300g 66% Reduced hydration from last bake Pearled barley berries 100g 22% Semi-pearled purple prairie barley Rye starter 50g 7% 100% hydration, fed Salt 8g 1% Sea salt <p>Total weight is approximately 908g.</p>","tags":["baking","bake"]},{"location":"1068/index.html#key-events","title":"Key events","text":"<ul> <li>2025-07-24 09:00 Fed starter</li> <li>2025-07-24 13:10 Autolyse Flour</li> <li>2025-07-24 15:18 Mixed ingredients</li> <li>2025-07-24 11:00 Shaped and placed in the fridge</li> <li>2025-07-25 12:27 Placed in the oven</li> </ul> <p>Baked with usual trick with the Dutch Oven and   Cast iron frying pan. 500f for 21 minutes with lid on, 16 minutes   with lid off at 450f.</p>","tags":["baking","bake"]},{"location":"1068/index.html#retrospect","title":"Retrospect","text":"","tags":["baking","bake"]},{"location":"1068/index.html#see-also","title":"See also","text":"<ul> <li>Sourdough batard with purple prairie barley</li> <li>White sourdough batard with purple Barley pearls</li> <li>Autolyse Flour</li> <li>Baking index</li> </ul>","tags":["baking","bake"]},{"location":"1069/index.html","title":"Sourdough baking (sourdough)","text":"<p>Sourdough is a type of bread made using a naturally fermented mixture of flour and water, known as a starter. This starter contains wild yeast and beneficial bacteria, which leaven the dough and give sourdough its characteristic tangy flavor and chewy texture. Unlike breads made with commercial yeast, sourdough fermentation is slower and can enhance the bread\u2019s flavor, texture, and shelf life.</p>","tags":["sourdough"]},{"location":"1069/index.html#bakers-percentage","title":"Bakers Percentage","text":"<p>Bakers percentage is a method used in baking to express the ratio of each ingredient to the total flour weight in a recipe. The flour is always set at 100%, and all other ingredients are expressed as a percentage of the flour weight. This system helps bakers easily scale recipes and understand the hydration and composition of doughs.</p> <p>For example, if a recipe has 1000g of flour and 700g of water, the water is 70% of the flour weight, so the baker\u2019s percentage for water is 70%.</p> <p>This method is commonly used in bread baking, especially for sourdough and artisan breads, to maintain consistency and control over dough hydration and fermentation.</p>","tags":["sourdough"]},{"location":"1069/index.html#example-table","title":"Example Table","text":"Ingredient Weight Bakers Percentage Comment Flour 1000g 100% Base ingredient Water 700g 70% Hydration level Starter 200g 20% Leavening agent Salt 20g 2% Flavor enhancer <p>The total weight of the dough is the sum of all ingredients, but the baker\u2019s percentages always relate back to the flour weight.</p>","tags":["sourdough"]},{"location":"1069/index.html#benefits","title":"Benefits","text":"<ul> <li>Easy scaling of recipes</li> <li>Clear understanding of hydration levels</li> <li>Consistent dough characteristics across batches</li> </ul>","tags":["sourdough"]},{"location":"107/index.html","title":"Date standards","text":"Command Isosec Platform Output example <code>date -I</code> MacOS 20023-06-01 <code>date -Iseconds</code> MacOS 2023-06-01T14:01:39-05:00","tags":["isosec","cli","bash"]},{"location":"1070/index.html","title":"Hardware: Lodge dutch oven","text":"<p>I own a dutch oven from Lodge.</p>","tags":["hardware","baking","cooking"]},{"location":"1071/index.html","title":"Hardware: Lodge 12 cast iron skillet","text":"<p>I own a 12 inch cast iron skillet from Lodge.</p>","tags":["cooking","baking","hardware"]},{"location":"1072/index.html","title":"Ingredient: Organic Goods and Gather all purpose flour","text":"","tags":["baking","ingredient","flour"]},{"location":"1073/index.html","title":"Project: Database to local FS mount","text":"<p>CMS typically have a crappy UI for editing HTML and CSS. Mount the relevant rows to allow doing CRUD operations on them.</p>","tags":["project"]},{"location":"1073/index.html#ai-go-example","title":"AI GO Example","text":"<p>This doesn\u2019t work but will get you started</p> <pre><code>package main\n\nimport (\n    \"context\"\n    \"database/sql\"\n    \"flag\"\n    \"fmt\"\n    \"log\"\n    \"sync\"\n    \"syscall\"\n\n    _ \"github.com/go-sql-driver/mysql\"\n    \"github.com/hanwen/go-fuse/v2/fs\"\n    \"github.com/hanwen/go-fuse/v2/fuse\"\n)\n\n// TemplateFile is a file node backed by a specific DB field\ntype TemplateFile struct {\n    fs.Inode\n    db         *sql.DB\n    templateID int\n    fieldName  string // \"content\" or \"description\"\n    mu         sync.Mutex\n}\n\nvar _ = (fs.NodeReadFile)((*TemplateFile)(nil))\nvar _ = (fs.NodeSetattrer)((*TemplateFile)(nil))\n\nfunc (f *TemplateFile) Read(ctx context.Context, dest []byte, off int64) (fuse.ReadResult, syscall.Errno) {\n    f.mu.Lock()\n    defer f.mu.Unlock()\n\n    var data string\n    err := f.db.QueryRowContext(ctx,\n        fmt.Sprintf(\"SELECT %s FROM cms_layout_templates WHERE id=?\", f.fieldName),\n        f.templateID).Scan(&amp;data)\n    if err != nil {\n        log.Printf(\"Read DB error: %v\", err)\n        return nil, syscall.EIO\n    }\n\n    // Handle offset\n    if int(off) &gt;= len(data) {\n        return fuse.ReadResultData(nil), 0\n    }\n    sl := []byte(data)\n    if int(off)+len(dest) &gt; len(sl) {\n        dest = dest[:len(sl)-int(off)]\n    }\n    return fuse.ReadResultData(sl[off : off+int64(len(dest))]), 0\n}\n\n// Write updates the DB field with new data\nfunc (f *TemplateFile) Write(ctx context.Context, data []byte, off int64) (uint32, syscall.Errno) {\n    f.mu.Lock()\n    defer f.mu.Unlock()\n\n    // Read current data\n    var current string\n    err := f.db.QueryRowContext(ctx,\n        fmt.Sprintf(\"SELECT %s FROM cms_layout_templates WHERE id=?\", f.fieldName),\n        f.templateID).Scan(&amp;current)\n    if err != nil {\n        log.Printf(\"Write read DB error: %v\", err)\n        return 0, syscall.EIO\n    }\n\n    // Modify current content with new data\n    // Convert to slice []byte for modification\n    contentBytes := []byte(current)\n    endPos := int(off) + len(data)\n    if endPos &gt; len(contentBytes) {\n        // Extend slice to accommodate writes beyond current length\n        newContent := make([]byte, endPos)\n        copy(newContent, contentBytes)\n        contentBytes = newContent\n    }\n    copy(contentBytes[off:], data)\n\n    updated := string(contentBytes)\n\n    // Update DB field with new content\n    _, err = f.db.ExecContext(ctx,\n        fmt.Sprintf(\"UPDATE cms_layout_templates SET %s = ?, modified = UNIX_TIMESTAMP() WHERE id=?\", f.fieldName),\n        updated, f.templateID)\n    if err != nil {\n        log.Printf(\"DB update error: %v\", err)\n        return 0, syscall.EIO\n    }\n\n    return uint32(len(data)), 0\n}\n\n// Getattr returns file attributes for content and description files\nfunc (f *TemplateFile) Getattr(ctx context.Context, fh fs.FileHandle, out *fuse.AttrOut) syscall.Errno {\n    out.Mode = 0644\n    return 0\n}\n\n// TemplateDir represents a directory named `id-name` with files content and description\ntype TemplateDir struct {\n    fs.Inode\n    db         *sql.DB\n    templateID int\n    name       string\n}\n\nvar _ = (fs.NodeLookuper)((*TemplateDir)(nil))\nvar _ = (fs.NodeGetattrer)((*TemplateDir)(nil))\n\nfunc (d *TemplateDir) Lookup(ctx context.Context, name string, out *fuse.EntryOut) (*fs.Inode, syscall.Errno) {\n    switch name {\n    case \"content\", \"description\":\n        child := &amp;TemplateFile{\n            db:         d.db,\n            templateID: d.templateID,\n            fieldName:  name,\n        }\n        ch := d.NewPersistentInode(ctx, child, fs.StableAttr{Ino: uint64(d.templateID*10 + len(name))})\n        return ch, 0\n    default:\n        return nil, syscall.ENOENT\n    }\n}\n\nfunc (d *TemplateDir) Getattr(ctx context.Context, fh fs.FileHandle, out *fuse.AttrOut) syscall.Errno {\n    out.Mode = 0755 | fuse.S_IFDIR\n    return 0\n}\n\n// CmsRoot is the root node that lists all templates under templates/\ntype CmsRoot struct {\n    fs.Inode\n    db *sql.DB\n}\n\nvar _ = (fs.NodeLookuper)((*CmsRoot)(nil))\nvar _ = (fs.NodeGetattrer)((*CmsRoot)(nil))\nvar _ = (fs.NodeReaddirer)((*CmsRoot)(nil))\n\nfunc (r *CmsRoot) Lookup(ctx context.Context, name string, out *fuse.EntryOut) (*fs.Inode, syscall.Errno) {\n    // For simplicity, we expose a single directory \"templates\"\n    if name == \"templates\" {\n        d := &amp;TemplatesDir{\n            db: r.db,\n        }\n        ch := r.NewPersistentInode(ctx, d, fs.StableAttr{Ino: 2})\n        return ch, 0\n    }\n    return nil, syscall.ENOENT\n}\n\nfunc (r *CmsRoot) Getattr(ctx context.Context, fh fs.FileHandle, out *fuse.AttrOut) syscall.Errno {\n    out.Mode = 0755 | fuse.S_IFDIR\n    return 0\n}\n\n// TemplatesDir lists all templates as directories\ntype TemplatesDir struct {\n    fs.Inode\n    db *sql.DB\n}\n\nvar _ = (fs.NodeReaddirer)((*TemplatesDir)(nil))\nvar _ = (fs.NodeLookuper)((*TemplatesDir)(nil))\n\nfunc (d *TemplatesDir) Readdir(ctx context.Context) (fs.DirStream, syscall.Errno) {\n    rows, err := d.db.QueryContext(ctx, \"SELECT id, name FROM cms_layout_templates\")\n    if err != nil {\n        log.Printf(\"DB query error: %v\", err)\n        return nil, syscall.EIO\n    }\n    defer rows.Close()\n\n    var entries []fuse.DirEntry\n    for rows.Next() {\n        var id int\n        var name string\n        if err := rows.Scan(&amp;id, &amp;name); err != nil {\n            return nil, syscall.EIO\n        }\n        ename := fmt.Sprintf(\"%d-%s\", id, name)\n        entries = append(entries, fuse.DirEntry{Name: ename, Mode: fuse.S_IFDIR})\n    }\n\n    return fs.NewListDirStream(entries), 0\n}\n\nfunc (d *TemplatesDir) Lookup(ctx context.Context, name string, out *fuse.EntryOut) (*fs.Inode, syscall.Errno) {\n    // name format: \"id-name\"\n    var id int\n    var title string\n    n, err := fmt.Sscanf(name, \"%d-%s\", &amp;id, &amp;title)\n    if n != 2 || err != nil {\n        return nil, syscall.ENOENT\n    }\n\n    child := &amp;TemplateDir{\n        db:         d.db,\n        templateID: id,\n        name:       name,\n    }\n    ch := d.NewPersistentInode(ctx, child, fs.StableAttr{Ino: uint64(id)})\n    return ch, 0\n}\n\nfunc main() {\n    debug := flag.Bool(\"debug\", false, \"print debug data\")\n    flag.Parse()\n    if len(flag.Args()) &lt; 1 {\n        log.Fatal(\"Usage:\\n  main MOUNTPOINT\")\n    }\n\n    // NOTE: Update below DSN for your mariadb connection: user:pass@tcp(host:port)/primomed.202504\n    db, err := sql.Open(\"mysql\", \"user:pass@tcp(localhost:3306)/primomed.202504\")\n    if err != nil {\n        log.Fatalf(\"DB open error: %v\", err)\n    }\n    defer db.Close()\n\n    opts := &amp;fs.Options{}\n    opts.Debug = *debug\n    server, err := fs.Mount(flag.Arg(0), &amp;CmsRoot{db: db}, opts)\n    if err != nil {\n        log.Fatalf(\"Mount fail: %v\\n\", err)\n    }\n    server.Wait()\n}\n</code></pre>","tags":["project"]},{"location":"1074/index.html","title":"Trick: Enforce interface implementation in GO","text":"<p>An example would be <code>var _ = (SomeInterface)((*SomeStruct)(nil))</code></p>"},{"location":"1075/index.html","title":"Chamber of commerce office for finding what jobs are available","text":"<p>Learned this is a good place to figure out who is hiring.</p>","tags":["career"]},{"location":"1076/index.html","title":"Largest gaming convention 2d con in Minnesota","text":"<p>Largest gaming convention in Minnesota is 2D CON.</p>","tags":["convention","gaming","minnesota","minneapolis"]},{"location":"1077/index.html","title":"Patch: Add fzf to ku script","text":"<p>A patch to my dotfiles <code>ku</code> script.</p>","tags":["patch","dotfiles","cli"]},{"location":"1077/index.html#patch","title":"Patch","text":"<p>This patch introduces a new subcommand <code>fzf</code> to the <code>ku</code> shell script. The <code>fzf</code> subcommand enables interactive fuzzy searching and selection of items from a list, with a preview feature that shows the first heading and content of a corresponding README file for the selected item. After selecting an item via the <code>fzf</code> interface, the patch automatically triggers the item\u2019s editing command. This addition enhances usability by providing a quick, interactive way to find and edit items within the tool. The patch replaces previously commented-out experimental code with a clean implementation and integrates the new <code>_ku_fzf</code> function as a recognized subcommand.</p> <pre><code>commit 8e3e46497949c173d3927a0de55f39ad30808758\nAuthor: Jared Rickert &lt;jaredrickert52@gmail.com&gt;\nDate:   Sat Jul 26 11:54:24 2025 -0500\n\n    feat: add fzf subcommand for interactive item selection and editing\n\n    Introduce a new fzf subcommand to enable fuzzy searching through items\n    with preview support. This improves usability by allowing quick\n    selection and editing of items via an interactive interface.\n\ndiff --git a/pkg/00_shell/bin/ku b/pkg/00_shell/bin/ku\nindex be5f329..e5bfc68 100755\n--- a/pkg/00_shell/bin/ku\n+++ b/pkg/00_shell/bin/ku\n@@ -229,21 +229,16 @@ _ku_edit() {\n    keg edit \"$@\"\n }\n\n-   # # shellcheck disable=SC2034\n-   # FZF_DEFAULT_COMMAND=\"$RG_PREFIX '$INITIAL_QUERY'\" fzf \\\n-   #     --bind \"change:reload:$RG_PREFIX {q} || true\" \\\n-   #     --sort \\\n-   #     --preview 'echo -n {1} \" \"; rg \"^#\" docs/{1}/README.md --no-heading | head -n 1;bat --style \"grid,numbers,snip\" --color=always --paging never docs/{1}/README.md' \\\n-   #     --height=100% \\\n-   #     --width=80% \\\n-   #     --ansi --phony --query \"$INITIAL_QUERY\" \"$@\"\n-   #\n-   # FZF_DEFAULT_COMMAND=\"$RG_PREFIX '$INITIAL_QUERY'\" fzf \\\n-   #     --bind \"change:reload:$RG_PREFIX {q} || true\" \\\n-   #     --sort \\\n-   #     --preview 'echo -n {1} \" \"; rg \"^#\" docs/{1}/README.md --no-heading | head -n 1;bat --style \"grid,numbers,snip\" --color=always --paging never docs/{1}/README.md' \\\n-   #     --height=100% \\\n-   #     --ansi --phony --query \"$INITIAL_QUERY\" \"$@\"\n+_ku_fzf() {\n+   local item_list=$(_ku_list | awk '{print $1}')\n+   local item\n+   item=$(\n+       _ku_list | fzf \\\n+           --bind \"change:reload:ku list\" \\\n+           --preview 'echo -n {1} \" \"; rg \"^#\" {1}/README.md --no-heading | head -n 1;bat --style \"grid,numbers,snip\" --color=always --paging never {1}/README.md'\n+\n+   )\n+   _ku_edit \"$(echo \"${item}\" | awk '{print $1}')\"\n }\n\n _ku_update_tags() {\n@@ -415,7 +410,7 @@ pwd)\n    fi\n    pwd\n    ;;\n-fzf) zets \"$@\" ;;\n+fzf) _ku_fzf \"$@\" ;;\n *)\n    NODE=$CMD\n    SUB_CMD=\"$(echo \"$@\" | awk '{print $1}')\"\n</code></pre>","tags":["patch","dotfiles","cli"]},{"location":"1078/index.html","title":"Event: Flash project showoff - tentative summer 2025","text":"<p>A possible MSP Tech meetup group (msptech) event in the talks.</p> <p>Text snippet from discord</p> <pre><code>XYZ: I'm looking to gauge interest in a recurring event dedicated to presenting projects you are working on or have worked on in the past. I think it would be a fun way to 1) see the cool projects everyone is working on and 2) motivate people (myself included) to finish up some of those old side projects.\n\nI can host and we could make it really relaxed and do short presentations or demos.\n\nIs this something people would be interested in attending?\n</code></pre>"},{"location":"1079/index.html","title":"Proxmox cheatsheet","text":"<p>My cheatsheet for proxmox</p>","tags":["proxmox","cheatsheet"]},{"location":"108/index.html","title":"Research: Wowhead diablo 4 class ranking comparison","text":"<p>Wowhead created a guide on the ranking classes for Diablo 4.</p> Class Leveling Ease of play Survivability Combat mobility Resource management Gear depedency Sorcerer 4.5 3 3-4 3 3 Low Bone Necromancer 4 2.5 5 4 3 Moderate Necromancer 4 5 5 4 3 Moderate Rogue 3.5 3 4 5 3 Moderate Barbarian 2.5 4 3 2 2 High Caster Druid 2.5 3 4 3 2 Low Werebear Druid 2.5 3 4 3 2 Moderate Werewolf Druid 2.5 3 4 4 2 Moderate","tags":["research","diablo","diablo4"]},{"location":"1080/index.html","title":"Trick: Alt pipelines in bash","text":"<p>I discovered a trick on how to do alt pipelines in bash:</p> <p>Here is an example:</p> <pre><code>KEG_CURRENT=\"${KEG_CURRENT:-\"\"}\"\n# Try KEG_CURRENT if defined\nif [ -n \"$KEG_CURRENT\" ]; then\n    :\n# Try fd to find the keg docs directory\nelif KEG_CURRENT=\"$(fd keg --absolute-path)\"; then\n    KEG_CURRENT=\"$(dirname $KEG_CURRENT)\"\n# Try git project docs directory\nelif KEG_CURRENT=\"$(git rev-parse --show-toplevel)\"; then\n    KEG_CURRENT=\"${KEG_CURRENT}/docs\"\nelse\n    echo \"No KEG found\"\nfi\n</code></pre>","tags":["trick","bash"]},{"location":"1081/index.html","title":"Patch: serving password protected static websites on my homelab","text":"<p>I needed a way to serve my KEG out to cowokers in a protected way from my homelab. I would like to host it using docker compose files. I want to keep it nice and simple.</p> <p>Requirements:</p> <ul> <li>HTTPS</li> <li>basic http authentication</li> <li>needs to restart if the server is restarted</li> <li>Needs to be able to server static content</li> </ul>","tags":["homelab","patch"]},{"location":"1081/index.html#patch","title":"Patch","text":"<p>I spun up a v1 cloud instance to setup static web hosting.</p>","tags":["homelab","patch"]},{"location":"1081/index.html#1-install-docker","title":"1. Install docker","text":"<pre><code>sudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\nsudo usermod -aG docker \"$(whoami)\"\n</code></pre>","tags":["homelab","patch"]},{"location":"1081/index.html#2-create-project-structure","title":"2. Create project structure","text":"<pre><code>mkdir ~/www-ecw-keg\ncd ~/www-ecw-keg\ntouch Caddyfile\ntouch docker-compose.yml\n</code></pre>","tags":["homelab","patch"]},{"location":"1081/index.html#3-install-caddy","title":"3. Install caddy","text":"<pre><code>mkdir -p ~/repos/github.com\ncd ~/repos/github.com\ngit clone \"https://github.com/caddyserver/caddy.git\"\ncd caddy/cmd/caddy\ngo build\nsudo mkdir /opt/caddy/bin\nsudo cp caddy /opt/caddy/bin/\necho 'export PATH=\"$PATH:/opt/caddy/bin\"' &gt;&gt; ~/.bashrc\n# reload bash\n</code></pre>","tags":["homelab","patch"]},{"location":"1081/index.html#4-create-a-password","title":"4. Create a password","text":"<p>I used the username and password with the ECW test server credentials.</p> <p>Use the command <code>caddy hash-password</code> to generate a blob value. Password for Bob is jiberish - not literally.</p>","tags":["homelab","patch"]},{"location":"1081/index.html#5-create-a-caddyfile-file","title":"5. Create a <code>Caddyfile</code> file","text":"<pre><code>ecw.keg.jlrickert.me {\n  root * /usr/share/caddy\n  basic_auth {\n    Bob JDJhJDEwJEVCNmdaNEg2Ti5iejRMYkF3MFZhZ3VtV3E1SzBWZEZ5Q3VWc0tzOEJwZE9TaFlZdEVkZDhX\n  }\n  encode\n  file_server\n}\n</code></pre>","tags":["homelab","patch"]},{"location":"1081/index.html#6-create-a-docker-composeyml-file","title":"6. Create a <code>docker-compose.yml</code> file","text":"<pre><code>name: ecw-keg-registry\nservices:\n  caddy:\n    image: caddy:2.10-alpine\n    restart: always\n    ports:\n      - 80:80\n      - 443:443\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - ./static:/usr/share/caddy\n      - caddy_data:/data\n\nvolumes:\n  caddy_data:\n  # caddy SSL volume\n</code></pre>","tags":["homelab","patch"]},{"location":"1081/index.html#8-add-the-content","title":"8. Add the content","text":"<p>Copy over content to the <code>static</code> directory</p>","tags":["homelab","patch"]},{"location":"1081/index.html#7-start-the-service","title":"7. Start the service","text":"<pre><code>docker compose up -d\n</code></pre>","tags":["homelab","patch"]},{"location":"1081/index.html#8-systemd-service","title":"8. Systemd service","text":"<pre><code>[Unit]\nDescription=ECW Keg Docker Compose\nRequires=docker.service\nAfter=docker.service network-online.target\nWants=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/home/jlrickert/www-ecw-keg\nExecStart=/usr/bin/docker compose up -d\nExecStop=/usr/bin/docker compose down\nTimeoutStartSec=120\nTimeoutStopSec=60\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable myapp.service\nsudo systemctl start myapp.service\n</code></pre>","tags":["homelab","patch"]},{"location":"1082/index.html","title":"Choice of cli framework in go 2025","text":"<ul> <li>https://github.com/spf13/cobra</li> <li>https://github.com/urfave/cli</li> </ul> <p>For tui</p> <ul> <li>https://github.com/charmbracelet/bubbletea</li> </ul>","tags":["golang"]},{"location":"1083/index.html","title":"Golang setup","text":"<p>Golang setup</p> <p>Binaries may be installed on the golang release page</p>","tags":["golang"]},{"location":"1083/index.html#ubuntu-setup","title":"Ubuntu setup","text":"<pre><code>VERSION=go1.25.1\nsudo rm -rf /opt/go\ncurl -LO https://go.dev/dl/go${VERSION}.linux-amd64.tar.gz\nsudo tar -C /opt -xzf ${VERSION}.linux-amd64.tar.gz go/\n</code></pre> <p>Add the following to your dotfiles</p> <pre><code>export PATH=\"$PATH:/opt/go/bin\"\n</code></pre>","tags":["golang"]},{"location":"1083/index.html#macos","title":"MacOS","text":"<p>I just use brew as go seems to be stable enough that the latest go version is the way to go.</p>","tags":["golang"]},{"location":"1083/index.html#windows","title":"Windows","text":"","tags":["golang"]},{"location":"1083/index.html#freebsd","title":"FreeBSD","text":"<pre><code>VERSION=go1.25.1\nsudo rm -rf /usr/local/go\ncurl -LO https://go.dev/dl/${VERSION}.freebsd-amd64.tar.gz\nsudo tar -C /usr/local -xzf ${VERSION}.freebsd-amd64.tar.gz go/\n</code></pre> <p>Add to ~/.bashrc</p> <pre><code>export GOROOT=/usr/local/go\nexport GOBIN=\"$HOME/.local/bin\"\nexport GOPATH=\"$HOME/.local/share/go\"\nexport PATH=\"$GOPATH/bin:$GOROOT/bin:$PATH\"\n\n# For bash completions\n. /usr/local/share/bash-completion/bash_completion\nsource $(ecw completion bash)\n</code></pre>","tags":["golang"]},{"location":"1084/index.html","title":"Node installation","text":""},{"location":"1084/index.html#ubuntu-installation","title":"Ubuntu installation","text":"<pre><code># Download and install nvm:\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash\n# in lieu of restarting the shell\n\\. \"$HOME/.nvm/nvm.sh\"\n# Download and install Node.js:\nnvm install 22\n# Verify the Node.js version:\nnode -v # Should print \"v22.17.1\".\nnvm current # Should print \"v22.17.1\".\n# Download and install pnpm:\ncorepack enable pnpm\n# Verify pnpm version:\npnpm -v\n</code></pre>"},{"location":"1085/index.html","title":"Programming language Go (golang)","text":"<p>The programming language Go</p>","tags":["programming-language","golang"]},{"location":"1086/index.html","title":"Programming language deno (deno)","text":"<p>I consider deno to be separate from node and a slightly different but compatible TypeScript. I find it is incompatible with node. I am been using it to replace my bash scripts.</p>","tags":["deno","programming-language"]},{"location":"1087/index.html","title":"Programming language node (node)","text":"<p>JavaScript on the server. I find I like deno better but is incompatible. This is not my preferred backend anymore and prefer to use either go or rust.</p>","tags":["node","programming language"]},{"location":"1088/index.html","title":"Programming languae rust (rust)","text":"<p>Programming language rust.</p>","tags":["rust","programming-language"]},{"location":"1089/index.html","title":"Go release strategy","text":"<p>This repository uses git-chglog and GoReleaser to generate changelogs and produce release artifacts. Tagging a new version (semver, e.g. v1.2.3) triggers the release pipeline (CI or local), which runs goreleaser to build and publish artifacts.</p> <p>This document describes the local setup, the release flow, and the example helper scripts and config used in this project.</p> <p>Prerequisites</p> <ul> <li>git</li> <li>Go (as required by your project)</li> <li>git-chglog (for changelog generation)</li> <li>goreleaser (for building releases and artifacts)</li> <li>task (optional, for Taskfile convenience)</li> </ul> <p>Mac setup</p> <pre><code># install git-chglog\nbrew tap git-chglog/git-chglog\nbrew install git-chglog\n\n# install goreleaser (cask or regular Homebrew tap)\nbrew install goreleaser/tap/goreleaser\n# or: brew install goreleaser\n</code></pre> <p>Release flow (high level)</p> <ol> <li>Ensure your working tree is clean.</li> <li>Determine latest tag (or v0.0.0 if none).</li> <li>Inspect commits since the latest tag and decide the next bump (major/minor/patch) using conventional commit cues:    - BREAKING CHANGE or type! -&gt; major    - feat -&gt; minor    - fix/perf/security -&gt; patch    - otherwise no release</li> <li>Generate changelog for the next tag with git-chglog.</li> <li>Commit the changelog and create an annotated tag.</li> <li>Push branch and tag.</li> <li>Run goreleaser (locally or via CI) to produce artifacts and optionally publish a GitHub release.</li> </ol> <p>Note: You can automate this with a small Go helper script (example below) and/or Taskfile tasks.</p> <p>Example: release helper (hack/release/main.go)</p> <p>This example script decides the next version from commits and automates changelog generation, commit, tagging, and push. It assumes conventional commit messages.</p> <pre><code>package main\n\nimport (\n    \"bytes\"\n    \"context\"\n    \"errors\"\n    \"fmt\"\n    \"os\"\n    \"os/exec\"\n    \"regexp\"\n    \"strings\"\n\n    semver \"github.com/Masterminds/semver/v3\"\n)\n\nfunc run(ctx context.Context, name string, args ...string) (string, error) {\n    cmd := exec.CommandContext(ctx, name, args...)\n    var out bytes.Buffer\n    cmd.Stdout = &amp;out\n    cmd.Stderr = &amp;out\n    err := cmd.Run()\n    return strings.TrimSpace(out.String()), err\n}\n\nfunc latestTag(ctx context.Context) (string, error) {\n    out, err := run(ctx, \"git\", \"describe\", \"--tags\", \"--abbrev=0\")\n    if err != nil {\n        // no tags yet -&gt; treat as v0.0.0\n        return \"v0.0.0\", nil\n    }\n    return out, nil\n}\n\nfunc commitsSince(ctx context.Context, tag string) (string, error) {\n    out, err := run(ctx, \"git\", \"log\", fmt.Sprintf(\"%s..HEAD\", tag), \"--pretty=format:%s%n%n%b\")\n    if err != nil {\n        return \"\", err\n    }\n    return out, nil\n}\n\nfunc decideBump(commits string) (string, error) {\n    // detect breaking change in body or \"type!:\" syntax\n    breakingRe := regexp.MustCompile(`(?m)BREAKING CHANGE|^[a-zA-Z]+(!):`)\n    if breakingRe.MatchString(commits) {\n        return \"major\", nil\n    }\n    // detect feat:\n    feature := regexp.MustCompile(`(?m)^(feat)(\\(|:)?`)\n    if feature.MatchString(commits) {\n        return \"minor\", nil\n    }\n    // detect fix:\n    fixRe := regexp.MustCompile(`(?m)^(?:fix|perf|security)(\\(|:)?`)\n    if fixRe.MatchString(commits) {\n        return \"patch\", nil\n    }\n    return \"\", errors.New(\"no release needed\")\n}\n\nfunc bumpVersion(old string, kind string) (string, error) {\n    verStr := strings.TrimPrefix(old, \"v\")\n    v, err := semver.NewVersion(verStr)\n    if err != nil {\n        return \"\", err\n    }\n    maj := int(v.Major())\n    min := int(v.Minor())\n    pat := int(v.Patch())\n\n    switch kind {\n    case \"major\":\n        maj++\n        min = 0\n        pat = 0\n    case \"minor\":\n        min++\n        pat = 0\n    case \"patch\":\n        pat++\n    default:\n        return \"\", fmt.Errorf(\"unknown bump kind: %s\", kind)\n    }\n    return fmt.Sprintf(\"v%d.%d.%d\", maj, min, pat), nil\n}\n\nfunc main() {\n    ctx := context.Background()\n    // ensure git working dir is clean\n    if out, _ := run(ctx, \"git\", \"status\", \"--porcelain\"); out != \"\" {\n        fmt.Fprintln(os.Stderr, \"working tree not clean; commit or stash changes first\")\n        os.Exit(1)\n    }\n\n    tag, err := latestTag(ctx)\n    if err != nil {\n        fmt.Fprintln(os.Stderr, \"failed to get latest tag:\", err)\n        os.Exit(1)\n    }\n    fmt.Println(\"latest tag:\", tag)\n\n    commits, err := commitsSince(ctx, tag)\n    if err != nil {\n        fmt.Fprintln(os.Stderr, \"failed to get commits:\", err)\n        os.Exit(1)\n    }\n    if strings.TrimSpace(commits) == \"\" {\n        fmt.Println(\"no commits since last tag; nothing to release\")\n        os.Exit(0)\n    }\n\n    kind, err := decideBump(commits)\n    if err != nil {\n        fmt.Println(\"no release needed (no feat/fix/BREAKING)\")\n        os.Exit(0)\n    }\n    fmt.Println(\"decided bump:\", kind)\n\n    nextTag, err := bumpVersion(tag, kind)\n    if err != nil {\n        fmt.Fprintln(os.Stderr, \"failed to bump version:\", err)\n        os.Exit(1)\n    }\n    fmt.Println(\"next tag will be:\", nextTag)\n\n    // Generate changelog for the next tag (requires git-chglog installed)\n    fmt.Println(\"generating changelog with git-chglog...\")\n    if _, err := run(ctx, \"git-chglog\", \"--next-tag\", nextTag, \"-o\", \"CHANGELOG.md\"); err != nil {\n        fmt.Fprintln(os.Stderr, \"git-chglog failed:\", err)\n        os.Exit(1)\n    }\n\n    // commit changelog and create annotated tag\n    if _, err := run(ctx, \"git\", \"add\", \"CHANGELOG.md\"); err != nil {\n        fmt.Fprintln(os.Stderr, \"git add failed:\", err)\n        os.Exit(1)\n    }\n\n    msg := fmt.Sprintf(\"chore(release): %s\", nextTag)\n    if _, err := run(ctx, \"git\", \"commit\", \"-m\", msg); err != nil {\n        fmt.Fprintln(os.Stderr, \"git commit failed:\", err)\n        os.Exit(1)\n    }\n\n    if _, err := run(ctx, \"git\", \"tag\", \"-a\", nextTag, \"-m\", nextTag); err != nil {\n        fmt.Fprintln(os.Stderr, \"git tag failed:\", err)\n        os.Exit(1)\n    }\n\n    // push branch and tag\n    if _, err := run(ctx, \"git\", \"push\"); err != nil {\n        fmt.Fprintln(os.Stderr, \"git push failed:\", err)\n        os.Exit(1)\n    }\n    if _, err := run(ctx, \"git\", \"push\", \"origin\", nextTag); err != nil {\n        fmt.Fprintln(os.Stderr, \"git push tag failed:\", err)\n        os.Exit(1)\n    }\n\n    fmt.Println(\"tag pushed:\", nextTag)\n    fmt.Println(\"Now run goreleaser (locally or let CI run it) to produce artifacts and GitHub release.\")\n    fmt.Println(\"goreleaser release --snapshot --clean\")\n}\n</code></pre> <p>Taskfile (Taskfile.yml)</p> <p>This Taskfile provides convenience tasks for running, building, testing, generating changelogs, and releasing.</p> <pre><code># https://taskfile.dev\nversion: \"3\"\nvars:\n  VERSION: v1.0.0\ntasks:\n  run:\n    cmd: go run ./cmd/ecw\n    silent: true\n  build:\n    - go build -ldflags \"-X github.com/jlrickert/example/pkg/example/cmd.Version={{.VERSION}}\" ./cmd/example\n  install:\n    desc: \"\"\n    cmds:\n      - go install ./cmd/ecw\n      - ecw completion zsh &gt; '{{env \"HOME\"}}/.cache/dotfiles/zsh/completions/_ecw'\n  test:\n    cmd: go test ./...\n  test-watch:\n    - fd go | entr task test\n  watch:\n    cmds:\n      - fd go | entr task install\n  changelog:\n    cmds:\n      - git-chglog\n    generates:\n      - CHANGELOG.md\n  release:\n    desc: Bump version, generate changelog, tag &amp; push, build artifacts, upload to Bitbucket Downloads\n    cmds:\n      - go run ./hack/release\n      - goreleaser release --snapshot --clean\n      # - ./hack/upload_to_bitbucket.sh\n</code></pre> <p>.goreleaser.yaml (example)</p> <p>This is an example GoReleaser configuration with sensible defaults. Adjust as needed for your project and CI.</p> <pre><code># Schema: https://goreleaser.com/static/schema.json\n# yaml-language-server: $schema=https://goreleaser.com/static/schema.json\n\nversion: 2\nbefore:\n  hooks:\n    - go mod tidy\n    - go generate ./...\nbuilds:\n  - id: default\n    binary: example\n    main: ./cmd/example\n    env:\n      - CGO_ENABLED=0\n    goos:\n      - linux\n      - windows\n      - darwin\n      - freebsd\n    goarch:\n      - amd64\n      - \"386\"\n      - arm64\n    ldflags:\n      - -s -w -X github.com/jlrickert/example/pkg/example/cmd.Version={{ .Version }}\n    hooks: {}\narchives:\n  - id: default\n    formats:\n      - tar.gz\n    files:\n      - LICENSE\n      - README.md\n      - CHANGELOG.md\n    name_template: \"{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\"\n    format_overrides:\n      - goos: windows\n        formats:\n          - zip\nchecksum:\n  name_template: \"{{ .ProjectName }}_{{ .Version }}_checksums.txt\"\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - \"^docs:\"\n      - \"^test:\"\nsigns: []\nrelease:\n  footer: |-\n    ---\n    Released by GoReleaser.\n</code></pre> <p>git-chglog configuration (./.chglog/config.yml)</p> <p>Example configuration for git-chglog that groups commits by type and supports BREAKING CHANGE notes.</p> <pre><code>style: github\ntemplate: CHANGELOG.tpl.md\ninfo:\n  title: CHANGELOG\n  repository_url: https://github.com/jlrickert/example\noptions:\n  commits:\n    filters:\n      Type:\n        - feat\n        - fix\n        - perf\n        - security\n        - refactor\n        - chore\n  commit_groups:\n    title_maps:\n      feat: Features\n      fix: Bug Fixes\n      perf: Performance Improvements\n      security: Security Improvements\n      refactor: Code Refactoring\n      chore: Chores\n  header:\n    pattern: \"^(\\\\w*)(?:\\\\(([\\\\w\\\\$\\\\.\\\\-\\\\*\\\\s]*)\\\\))?\\\\:\\\\s(.*)$\"\n    pattern_maps:\n      - Type\n      - Scope\n      - Subject\n  notes:\n    keywords:\n      - BREAKING CHANGE\n</code></pre> <p>CHANGELOG template (./chglog/CHANGELOG.tpl.md)</p> <p>A simple template used by git-chglog to render changelogs.</p> <pre><code>{{ if .Versions -}}\n&lt;a name=\"unreleased\"&gt;&lt;/a&gt;\n## [Unreleased]\n\n{{ if .Unreleased.CommitGroups -}}\n{{ range .Unreleased.CommitGroups -}}\n### {{ .Title }}\n{{ range .Commits -}}\n- {{ if .Scope }}**{{ .Scope }}:** {{ end }}{{ .Subject }}\n{{ end }}\n{{ end -}}\n{{ end -}}\n{{ end -}}\n\n{{ range .Versions }}\n&lt;a name=\"{{ .Tag.Name }}\"&gt;&lt;/a&gt;\n## {{ if .Tag.Previous }}[{{ .Tag.Name }}]{{ else }}{{ .Tag.Name }}{{ end }} - {{ datetime \"2006-01-02\" .Tag.Date }}\n{{ range .CommitGroups -}}\n### {{ .Title }}\n{{ range .Commits -}}\n- {{ if .Scope }}**{{ .Scope }}:** {{ end }}{{ .Subject }}\n{{ end }}\n{{ end -}}\n\n{{- if .RevertCommits -}}\n### Reverts\n{{ range .RevertCommits -}}\n- {{ .Revert.Header }}\n{{ end }}\n{{ end -}}\n\n{{- if .MergeCommits -}}\n### Pull Requests\n{{ range .MergeCommits -}}\n- {{ .Header }}\n{{ end }}\n{{ end -}}\n\n{{- if .NoteGroups -}}\n{{ range .NoteGroups -}}\n### {{ .Title }}\n{{ range .Notes }}\n{{ .Body }}\n{{ end }}\n{{ end -}}\n{{ end -}}\n{{ end -}}\n\n{{- if .Versions }}\n[Unreleased]: {{ .Info.RepositoryURL }}/compare/{{ $latest := index .Versions 0 }}{{ $latest.Tag.Name }}...HEAD\n{{ range .Versions -}}\n{{ if .Tag.Previous -}}\n[{{ .Tag.Name }}]: {{ $.Info.RepositoryURL }}/compare/{{ .Tag.Previous.Name }}...{{ .Tag.Name }}\n{{ end -}}\n{{ end -}}\n{{ end -}}\n</code></pre> <p>To create a release locally</p> <pre><code>task release\n# or manually:\n# 1. run ./hack/release (generates CHANGELOG.md, commits, tags, and pushes)\n# 2. run goreleaser release --rm-dist\n</code></pre> <p>CI/CD</p> <ul> <li>Add goreleaser to your CI pipeline to run on new tags (or let goreleaser run in a release pipeline).</li> <li>Ensure any required secrets (e.g. GitHub token, signing keys) are available in CI.</li> <li>Optionally publish artifacts to homebrew, chocolatey, GitHub Releases, or other providers via goreleaser configuration.</li> </ul> <p>Notes and tips</p> <ul> <li>Use conventional commits to allow automated bump detection and changelog generation.</li> <li>Keep your .goreleaser.yml and git-chglog config under source control and adapt to project conventions.</li> <li>Test the release flow in a branch and use dry-run/snapshot flags locally: goreleaser release \u2013snapshot \u2013clean</li> </ul> <p>If you want, I can:</p> <ul> <li>Tailor the .goreleaser.yml to your exact project layout.</li> <li>Add CI example (GitHub Actions) that runs on tag push and runs goreleaser.</li> <li>Add instructions for signing or uploading to specific providers.</li> </ul>","tags":["golang","operations"]},{"location":"109/index.html","title":"MacOS vs Linux difference","text":"<p>Here are some of the differences between Linux and MacOS that I have found.</p> <ul> <li>Systemd isn\u2019t on macOS. I am not sure yet what macOS has in its place&gt;</li> <li>date between the 2 systems work different</li> <li>free doesn\u2019t exist on macOS</li> </ul>","tags":["linux","macosx"]},{"location":"1090/index.html","title":"MCP servers (mcp)","text":"<p>Standardized way for AI to access things.</p> <p>For using remote mcp servers see mcp-remote.</p>","tags":["mcp"]},{"location":"1091/index.html","title":"Github MCP setup","text":"<p>An MCP server for GitHub. See the project on GitHub.</p> <p>I have setup this up with mods using the cli from brew.</p>"},{"location":"1091/index.html#installation","title":"Installation","text":"<pre><code>brew install github-mcp-server\n</code></pre>"},{"location":"1091/index.html#token-setup","title":"Token setup","text":"<p>Add token to <code>~/.local/share/dotfiles/secrets/personal.sh</code></p>"},{"location":"1091/index.html#testing-example","title":"Testing example","text":"<pre><code>github-mcp-server stdio &lt;&lt;EOF\n{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2024-11-05\",\"capabilities\":{},\"clientInfo\":{\"name\":\"test\",\"version\":\"1.0\"}}}\n{\"jsonrpc\":\"2.0\",\"id\":2,\"method\":\"tools/call\",\"params\":{\"name\":\"search_repositories\",\"arguments\":{\"query\":\"user:jlrickert\"}}}\nEOF\n</code></pre>"},{"location":"1091/index.html#claude-desktop-application","title":"Claude desktop application","text":"<p>Config is located at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code></p> <pre><code>{\n    \"mcpServers\": {\n        \"github\": {\n            \"command\": \"github-mcp-server\",\n            \"args\": [\"stdio\", \"--read-only\"],\n            \"env\": {\n                \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"github_pat_xxxxyyyyzzzz\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"1092/index.html","title":"GitHub (github)","text":"","tags":["github"]},{"location":"1093/index.html","title":"E2e and Integration testing for go","text":"<p>Optionally run test with flags in go. This is useful for end to end test and integration tests. Run into an example when looking at the code for github mcp server.</p> <pre><code>//go:build e2e\n\npackage e2e_test\n</code></pre>"},{"location":"1094/index.html","title":"Section 174 tax code from The Big Beautiful Bill","text":"<p>One good thing from Trumps big beatify bill. This means more demand for software engineers in the US.</p>","tags":["taxes"]},{"location":"1095/index.html","title":"Software: monitoring with Prometheus (prometheus)","text":"<p>Monitoring for k8s</p>","tags":["prometheus"]},{"location":"1096/index.html","title":"Kubernetes (k8s)","text":"","tags":["k8s"]},{"location":"1097/index.html","title":"Trick: YAML based config management in Golang","text":"<p>The general strategy for managing configs in this codebase can be summarized as follows:</p> <ol> <li>Versioned Configuration Structures:</li> </ol> <ul> <li>The configuration format supports multiple versions.</li> <li>Version 1 (ConfigV1) would be an initial version</li> <li>Version 2 (ConfigV2) would be an updated version</li> <li>Previous versions should be automatically migrated to an updated version</li> <li>An alias of the latest config should be set the newest types</li> </ul> <ol> <li>Conversion and Parsing:</li> </ol> <ul> <li>When loading config data, the version is first detected by unmarshaling into a map.</li> <li>Based on the version, the data is unmarshaled into the appropriate struct (ConfigV1 or ConfigV2).</li> <li>ConfigV1 can be converted to ConfigV2 via a conversion method that restructures environment data into the new format.</li> <li>Unknown versions result in an error.</li> </ul> <ol> <li>Loading Configuration from Files:</li> </ol> <ul> <li>Configuration is loaded from a default location or a specified file path.</li> <li>Functions exist to get the default config directory based on OS conventions (Unix-like or Windows).</li> <li>Reading configuration returns raw file data, and parsing converts it into structured Config.</li> <li>Errors are handled if files do not exist or if parsing fails.</li> </ul> <ol> <li>Environment Variable Expansion:</li> </ol> <ul> <li>Configuration strings and slices are recursively expanded with OS environment variables to support dynamic values.</li> </ul> <ol> <li>Serialization:    - Options to marshal current config back to YAML format are provided for inspection or saving.</li> </ol>","tags":["trick","golang","configuration"]},{"location":"1097/index.html#examples","title":"Examples","text":"<p>A general strategy for managing configs involves several key points:</p> <ol> <li>Flexible Versioning: Support multiple config versions for backward compatibility and easy migration.</li> <li>Structured Config Models: Define clear, typed structs representing config schema for versions.</li> <li>Load and Parse: Implement reading config files from default/user-specified paths, and parsing YAML/JSON.</li> <li>Conversion: Provide functions to convert old config versions to newer ones.</li> <li>Accessors: Methods to retrieve projects, environments, or specific config values in a convenient way.</li> <li>Environment Expansion: Support expanding environment variables in config strings.</li> <li>Serialization: Ability to marshal config structs back to YAML/JSON.</li> <li>Defaults and Fallbacks: Use sensible defaults if config values are missing.</li> </ol> <p>Below are is an illustrative example from my tapper project demonstrating key aspects of the configuration management strategy:</p> <pre><code>commit cf162e41c57851f7ba7872abb69ffe9340050d2f\nAuthor: Jared Rickert &lt;jaredrickert52@gmail.com&gt;\nDate:   Mon Aug 4 18:19:06 2025 -0500\n\n    feat: add versioned KEG config management with env var expansion\n\n    - Introduce ConfigV1 and ConfigV2 structs for KEG configuration versions\n    - Implement parsing and conversion from V1 to V2 with version detection\n    - Add recursive environment variable expansion for config fields and\n      links\n    - Provide unit tests for parsing, version handling, and env expansion\n    - Add utility functions for config directory paths on different OSes\n    - Initialize go.mod with yaml.v3 dependency for YAML parsing\n\ndiff --git a/go.mod b/go.mod\nnew file mode 100644\nindex 0000000..99b674b\n--- /dev/null\n+++ b/go.mod\n@@ -0,0 +1,6 @@\n+module github.com/jlrickert/tapper\n+\n+go 1.24.5\n+\n+require gopkg.in/yaml.v3 v3.0.1\n+\ndiff --git a/go.sum b/go.sum\nnew file mode 100644\nindex 0000000..4bc0337\n--- /dev/null\n+++ b/go.sum\n@@ -0,0 +1,3 @@\n+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n+gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\n+gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ndiff --git a/pkg/keg/config.go b/pkg/keg/config.go\nnew file mode 100644\nindex 0000000..bd95a33\n--- /dev/null\n+++ b/pkg/keg/config.go\n@@ -0,0 +1,182 @@\n+package keg\n+\n+// Package config provides versioned configuration management for the KEG application.\n+// It supports loading, parsing, converting, and accessing configuration data with\n+// environment variable expansion and version migration.\n+\n+import (\n+   \"fmt\"\n+   \"os\"\n+   \"reflect\"\n+\n+   \"gopkg.in/yaml.v3\"\n+)\n+\n+const (\n+   ConfigV1VersionString = \"2023-01\"\n+   ConfigV2VersionString = \"2025-07\"\n+)\n+\n+// ConfigV1 represents the initial version of the KEG configuration specification.\n+type ConfigV1 struct {\n+   // Kegv is the version of the specification.\n+   Kegv string `yaml:\"kegv\"`\n+\n+   // Updated indicates when the keg was last indexed.\n+   Updated string `yaml:\"updated,omitempty\"`\n+\n+   // Title is the title of the KEG worklog or project.\n+   Title string `yaml:\"title,omitempty\"`\n+\n+   // URL is the main URL where the KEG can be found.\n+   URL string `yaml:\"url,omitempty\"`\n+\n+   // Creator is the URL or identifier of the creator of the KEG.\n+   Creator string `yaml:\"creator,omitempty\"`\n+\n+   // State indicates the current state of the KEG (e.g., living, archived).\n+   State string `yaml:\"state,omitempty\"`\n+\n+   // Summary provides a brief description or summary of the KEG content.\n+   Summary string `yaml:\"summary,omitempty\"`\n+\n+   // Indexes is a list of index entries that link to related files or nodes.\n+   Indexes []IndexEntry `yaml:\"indexes,omitempty\"`\n+}\n+\n+// ConfigV1 represents the initial version of the KEG configuration specification.\n+type ConfigV2 struct {\n+   // Kegv is the version of the specification.\n+   Kegv string `yaml:\"kegv\"`\n+\n+   // Updated indicates when the keg was last indexed.\n+   Updated string `yaml:\"updated,omitempty\"`\n+\n+   // Title is the title of the KEG worklog or project.\n+   Title string `yaml:\"title,omitempty\"`\n+\n+   // URL is the main URL where the KEG can be found.\n+   URL string `yaml:\"url,omitempty\"`\n+\n+   // Creator is the URL or identifier of the creator of the KEG.\n+   Creator string `yaml:\"creator,omitempty\"`\n+\n+   // State indicates the current state of the KEG (e.g., living, archived).\n+   State string `yaml:\"state,omitempty\"`\n+\n+   // Summary provides a brief description or summary of the KEG content.\n+   Summary string `yaml:\"summary,omitempty\"`\n+\n+   // Links holds a list of LinkEntry objects representing related links or references in the configuration.\n+   Links []LinkEntry `yaml:\"links,omitempty\"`\n+\n+   // Indexes is a list of index entries that link to related files or nodes.\n+   Indexes []IndexEntry `yaml:\"indexes,omitempty\"`\n+}\n+\n+type LinkEntry struct {\n+   Alias string `json:\"alias\"` // Alias for the link\n+   URL   string `json:\"url\"`   // URL of the link\n+}\n+\n+type IndexEntry struct {\n+   File    string `yaml:\"file\"`\n+   Summary string `yaml:\"summary\"`\n+}\n+\n+// Since there is no version 2 yet, ConfigV1 is the latest version\n+type Config = ConfigV2\n+\n+func (c *ConfigV1) toV2() ConfigV2 {\n+   return ConfigV2{\n+       Kegv:    ConfigV2VersionString,\n+       Updated: c.Updated,\n+       Title:   c.Title,\n+       URL:     c.URL,\n+       Creator: c.Creator,\n+       State:   c.State,\n+       Summary: c.Summary,\n+       Indexes: c.Indexes,\n+       Links:   nil, // No links in v1, so empty slice or nil\n+   }\n+}\n+\n+// ParseConfigData parses raw YAML config data into the latest Config version.\n+func ParseConfigData(data []byte) (Config, error) {\n+   var configV2 ConfigV2\n+\n+   // Detect version by unmarshaling into a generic map\n+   var raw map[string]any\n+   if err := yaml.Unmarshal(data, &amp;raw); err != nil {\n+       return configV2, err\n+   }\n+\n+   // Check for \"kegv\" version field\n+   version, ok := raw[\"kegv\"].(string)\n+   if !ok {\n+       return configV2, fmt.Errorf(\"missing or invalid kegv version field\")\n+   }\n+\n+   switch version {\n+   case ConfigV1VersionString:\n+       var configV1 ConfigV1\n+       if err := yaml.Unmarshal(data, &amp;configV1); err != nil {\n+           return configV2, err\n+       }\n+       return configV1.toV2(), nil\n+   case ConfigV2VersionString:\n+       if err := yaml.Unmarshal(data, &amp;configV2); err != nil {\n+           return configV2, err\n+       }\n+   default:\n+       return configV2, fmt.Errorf(\"unsupported config version: %s\", version)\n+   }\n+\n+   return configV2, nil\n+}\n+\n+// expandEnvRecursively recursively expands environment variables in strings and string slices.\n+func expandEnvRecursively(v reflect.Value) {\n+   if !v.IsValid() {\n+       return\n+   }\n+\n+   switch v.Kind() {\n+   case reflect.Ptr:\n+       if !v.IsNil() {\n+           expandEnvRecursively(v.Elem())\n+       }\n+   case reflect.Struct:\n+       for i := 0; i &lt; v.NumField(); i++ {\n+           field := v.Field(i)\n+           if field.CanSet() {\n+               expandEnvRecursively(field)\n+           }\n+       }\n+   case reflect.String:\n+       if v.CanSet() {\n+           expanded := os.ExpandEnv(v.String())\n+           v.SetString(expanded)\n+       }\n+   case reflect.Slice:\n+       if v.Type().Elem().Kind() == reflect.String {\n+           for i := 0; i &lt; v.Len(); i++ {\n+               elem := v.Index(i)\n+               if elem.CanSet() {\n+                   expanded := os.ExpandEnv(elem.String())\n+                   elem.SetString(expanded)\n+               }\n+           }\n+       }\n+   }\n+}\n+\n+// ExpandEnv expands environment variables in the Config fields.\n+func (c *Config) ExpandEnv() {\n+   expandEnvRecursively(reflect.ValueOf(c).Elem())\n+\n+   // Additionally, expand environment variables in Links URLs if present\n+   for i := range c.Links {\n+       c.Links[i].URL = os.ExpandEnv(c.Links[i].URL)\n+   }\n+}\ndiff --git a/pkg/keg/config_test.go b/pkg/keg/config_test.go\nnew file mode 100644\nindex 0000000..1469198\n--- /dev/null\n+++ b/pkg/keg/config_test.go\n@@ -0,0 +1,149 @@\n+package keg\n+\n+import (\n+   \"os\"\n+   \"testing\"\n+)\n+\n+func TestParseConfigDataV1(t *testing.T) {\n+   v1Yaml := `\n+kegv: \"2023-01\"\n+updated: \"2023-01-01\"\n+title: \"Test KEG V1\"\n+url: \"https://example.com\"\n+creator: \"creator-id\"\n+state: \"living\"\n+summary: \"This is a test KEG V1 config\"\n+indexes:\n+  - file: \"index1.md\"\n+    summary: \"Index 1 summary\"\n+  - file: \"index2.md\"\n+    summary: \"Index 2 summary\"\n+`\n+\n+   config, err := ParseConfigData([]byte(v1Yaml))\n+   if err != nil {\n+       t.Fatalf(\"ParseConfigData failed: %v\", err)\n+   }\n+\n+   if config.Kegv != ConfigV2VersionString {\n+       t.Errorf(\"Expected Kegv to be %s, got %s\", ConfigV2VersionString, config.Kegv)\n+   }\n+   if config.Title != \"Test KEG V1\" {\n+       t.Errorf(\"Expected Title to be 'Test KEG V1', got %s\", config.Title)\n+   }\n+   if len(config.Indexes) != 2 {\n+       t.Errorf(\"Expected 2 indexes, got %d\", len(config.Indexes))\n+   }\n+   if len(config.Links) != 0 {\n+       t.Errorf(\"Expected Links to be nil or empty, got %v\", config.Links)\n+   }\n+}\n+\n+func TestParseConfigDataV2(t *testing.T) {\n+   v2Yaml := `\n+kegv: \"2025-07\"\n+updated: \"2025-07-01\"\n+title: \"Test KEG V2\"\n+url: \"https://example.com/v2\"\n+creator: \"creator-v2\"\n+state: \"archived\"\n+summary: \"This is a test KEG V2 config\"\n+links:\n+  - alias: \"home\"\n+    url: \"https://home.example.com\"\n+  - alias: \"docs\"\n+    url: \"https://docs.example.com\"\n+indexes:\n+  - file: \"index1.md\"\n+    summary: \"Index 1 summary\"\n+`\n+\n+   config, err := ParseConfigData([]byte(v2Yaml))\n+   if err != nil {\n+       t.Fatalf(\"ParseConfigData failed: %v\", err)\n+   }\n+\n+   if config.Kegv != ConfigV2VersionString {\n+       t.Errorf(\"Expected Kegv to be %s, got %s\", ConfigV2VersionString, config.Kegv)\n+   }\n+   if config.Title != \"Test KEG V2\" {\n+       t.Errorf(\"Expected Title to be 'Test KEG V2', got %s\", config.Title)\n+   }\n+   if len(config.Links) != 2 {\n+       t.Errorf(\"Expected 2 links, got %d\", len(config.Links))\n+   }\n+   if len(config.Indexes) != 1 {\n+       t.Errorf(\"Expected 1 index, got %d\", len(config.Indexes))\n+   }\n+}\n+\n+func TestExpandEnv(t *testing.T) {\n+   os.Setenv(\"TEST_TITLE\", \"EnvTitle\")\n+   os.Setenv(\"TEST_URL\", \"https://env.url\")\n+\n+   config := Config{\n+       Kegv:    ConfigV2VersionString,\n+       Title:   \"${TEST_TITLE}\",\n+       URL:     \"${TEST_URL}\",\n+       Creator: \"creator\",\n+       State:   \"living\",\n+       Summary: \"summary\",\n+       Links: []LinkEntry{\n+           {Alias: \"alias1\", URL: \"${TEST_URL}\"},\n+       },\n+       Indexes: []IndexEntry{\n+           {File: \"file1.md\", Summary: \"summary1\"},\n+       },\n+   }\n+\n+   config.ExpandEnv()\n+\n+   if config.Title != \"EnvTitle\" {\n+       t.Errorf(\"Expected Title to be 'EnvTitle', got %s\", config.Title)\n+   }\n+   if config.URL != \"https://env.url\" {\n+       t.Errorf(\"Expected URL to be 'https://env.url', got %s\", config.URL)\n+   }\n+   if config.Links[0].URL != \"https://env.url\" {\n+       t.Errorf(\"Expected Links[0].URL to be 'https://env.url', got %s\", config.Links[0].URL)\n+   }\n+}\n+\n+func TestExpandEnvPartial(t *testing.T) {\n+   os.Setenv(\"PARTIAL\", \"partial_value\")\n+\n+   config := Config{\n+       Kegv:  ConfigV2VersionString,\n+       Title: \"Title with ${PARTIAL}\",\n+   }\n+\n+   config.ExpandEnv()\n+\n+   if config.Title != \"Title with partial_value\" {\n+       t.Errorf(\"Expected Title to be 'Title with partial_value', got %s\", config.Title)\n+   }\n+}\n+\n+func TestParseConfigDataInvalidVersion(t *testing.T) {\n+   invalidYaml := `\n+kegv: \"invalid-version\"\n+title: \"Invalid version test\"\n+`\n+\n+   _, err := ParseConfigData([]byte(invalidYaml))\n+   if err == nil {\n+       t.Fatal(\"Expected error for unsupported config version, got nil\")\n+   }\n+}\n+\n+func TestParseConfigDataMissingVersion(t *testing.T) {\n+   missingVersionYaml := `\n+title: \"Missing version test\"\n+`\n+\n+   _, err := ParseConfigData([]byte(missingVersionYaml))\n+   if err == nil {\n+       t.Fatal(\"Expected error for missing version field, got nil\")\n+   }\n+}\ndiff --git a/pkg/keg/keg.go b/pkg/keg/keg.go\nnew file mode 100644\nindex 0000000..fb5477d\n--- /dev/null\n+++ b/pkg/keg/keg.go\n@@ -0,0 +1 @@\n+package keg\n</code></pre>","tags":["trick","golang","configuration"]},{"location":"1098/index.html","title":"Article: Twin Cities event calendar","text":"<p>A public calendar for events in the twin cities. iCal Download</p> <p>There are some more specialized calendars:</p> <ul> <li>Twin cities dancing</li> </ul>","tags":["calendar","article"]},{"location":"1099/index.html","title":"AI Vibe coding tools","text":"<ul> <li>Claude codes</li> </ul>","tags":["ai","llm","vibe-coding"]},{"location":"11/index.html","title":"Unix help pages with color","text":"<p>It is nice to have colors in man pages as well as other programs. After searching around I found that colors are controlled by either termcap or terminfo<sup>1</sup>.</p> <p>This is configured by the LESS_TERMCAP_xx variables where xx is a capability found in the man page for termcap.</p> <p>Here is a dump of the variables and things that I found works:</p> <pre><code>export LESS=\"-R\"\nexport LESS_TERMCAP_mb=$(tput bold; tput setaf 5) # start blinking magenta\nexport LESS_TERMCAP_md=$(tput bold; tput setaf 2) # star bold mode green\nexport LESS_TERMCAP_me=$(tput sgr0)\nexport LESS_TERMCAP_so=$(tput bold; tput setaf 3; tput setab 4) # start standout mode yellow on blue\nexport LESS_TERMCAP_se=$(tput rmso; tput sgr0)\nexport LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 7) # white\nexport LESS_TERMCAP_ue=$(tput rmul; tput sgr0)\nexport LESS_TERMCAP_mr=$(tput rev)\nexport LESS_TERMCAP_mh=$(tput dim)\nexport LESS_TERMCAP_ZN=$(tput ssubm)\nexport LESS_TERMCAP_ZV=$(tput rsubm)\nexport LESS_TERMCAP_ZO=$(tput ssupm)\nexport LESS_TERMCAP_ZW=$(tput rsupm)\n</code></pre> <p>The values for setaf and settab can be found with the following script.</p> <pre><code>#!/bin/bash\ncolor(){\n    for c; do\n        printf '\\e[48;5;%dm%03d' $c $c\n    done\n    printf '\\e[0m \\n'\n}\n\nIFS=$' \\t\\n'\ncolor {0..15}\nfor ((i=0;i&lt;6;i++)); do\n    color $(seq $((i*36+16)) $((i*36+51)))\ndone\ncolor {232..255}\n</code></pre> <ol> <li> <p>https://unix.stackexchange.com/questions/119/colors-in-man-pages\u00a0\u21a9</p> </li> </ol>","tags":["bash","cli"]},{"location":"110/index.html","title":"My personal PHP style guide","text":"<p>I don\u2019t know enough about php currently to to form my own opinion yet. There is the wordpress style guide and the php standards recommendation or psr for short.</p> <p>So far here is my preferences</p> <ul> <li>Do only use <code>&lt;?php ... ?&gt;</code> style tags</li> </ul> <p>Please note this is still largely a work in progress as I learn more</p>","tags":["php","programming"]},{"location":"1100/index.html","title":"Software: Releases with chglog (git-chglog)","text":"<p><code>git-chglog</code> is a software version tool. Tool that I use for releasing go based programs.</p>","tags":["git-chglog","golang"]},{"location":"1100/index.html#installation","title":"Installation","text":"<p>Installation on my mac</p> <pre><code>brew tap git-chglog/git-chglog\nbrew install git-chglog\n</code></pre>","tags":["git-chglog","golang"]},{"location":"1101/index.html","title":"Software: Releases with goreleaser (goreleaser)","text":"<p>goreleaser is an oss on GitHub for releasing software that is used often with go projects.</p>","tags":["golang","goreleaser"]},{"location":"1101/index.html#installation","title":"Installation","text":"<p>Installation on my mac</p> <pre><code>brew install --cask goreleaser/tap/goreleaser\n</code></pre>","tags":["golang","goreleaser"]},{"location":"1102/index.html","title":"Software: Task runner <code>task</code> (taskfile)","text":"<p>A task runner tool common in go programs.</p>","tags":["software","golang","taskfile"]},{"location":"1103/index.html","title":"Place: Brainerd (brainerd)","text":"<p>Town north of Little Falls.</p>","tags":["brainerd","minneapolis"]},{"location":"1104/index.html","title":"Hennepin County DMV appoints","text":"<p>Appoints may be made on there website at https://qw-hennepincounty.us.qmatic.cloud/qmaticwebbooking/#/.</p> <p>The closed DMV to home is the one in north Minneapolis.</p>","tags":["appointment","minneosta","minneapolis","government","dmv"]},{"location":"1105/index.html","title":"Place: Lions Tap","text":"<p>Some place near Minneapolis near Eden Prairie. Apparently it is a good hike and then eat spot. Perfect for a first date.</p>"},{"location":"1106/index.html","title":"Activate Global League","text":"<p>This is some sports game thing. Its like squid games but without the dying.</p>","tags":["sports"]},{"location":"1107/index.html","title":"Place: Shoreview","text":"<p>Suburb of Minneapolis.</p>","tags":["minneapolis"]},{"location":"1108/index.html","title":"Spin up PostgreSQL cluster on k8s","text":"<p>Learned from Rob a way to spin up a PostgreSQL cluster on k8s very quickly. This used to not be recommended but now is.</p> <pre><code>---\napiVersion: postgresql.cnpg.io/v1\nkind: Cluster\nmetadata:\n  name: grafana-cnpg\n  namespace: grafana\nspec:\n  instances: 3\n  storage:\n    #storageClass: dcnas-volumes size: 1Gi bootstrap: initdb:\n    database: grafana\n    owner: admin\n    secret:\n      name: grafana-db-creds\n</code></pre> <p>Related:</p> <p>See YAML notes</p>","tags":["k8s","postgresql"]},{"location":"1109/index.html","title":"PostgreSQL server (postgresql)","text":"<p>A database</p>","tags":["postgresql","database"]},{"location":"111/index.html","title":"My personal Bash style guide","text":"<p>Mostly based of off googles and on the tools I use.</p> <ul> <li>shellckeck</li> <li>shfmt</li> </ul>","tags":["bash","programming","cli"]},{"location":"1110/index.html","title":"Bitnami chart","text":"<p>Shouldn\u2019t use any more. Source is from Rob Muhlestein</p> <p>References:</p> <ul> <li>k8s</li> </ul>","tags":["k8s"]},{"location":"1111/index.html","title":"Validating AWS SES credentials","text":"<p>I wanted a way to quickly check if credentials where valid for AWS SES so I created a script.</p> <p>I built it using GPT and the docs. See script below:</p> <pre><code>#!/usr/bin/env bash\n\ndeclare NOCOLOR=\n[[ -t 1 ]] || NOCOLOR=y\ndeclare GOLD='\u001b[38;2;184;138;0m'\ndeclare RED='\u001b[38;2;255;0;0m'\ndeclare GREY='\u001b[38;2;100;100;100m'\ndeclare CYAN='\u001b[38;2;0;255;255m'\ndeclare GREEN='\u001b[38;2;0;255;0m'\ndeclare RESET='\u001b[0m'\n\nif [[ -n \"$NOCOLOR\" ]]; then\n    GOLD=\n    RED=\n    GREY=\n    CYAN=\n    GREEN=\n    RESET=\nfi\n\nUSER=$1\nPASS=$2\nREGION=${3:-}\n\ndie() {\n    local msg=\"$1\"\n    echo -e \"${RED}ERROR:${RESET} $msg\" &gt;&amp;2\n    exit 1\n}\n\ninfo() {\n    local msg=\"$1\"\n    echo -e \"${GREEN}INFO:${RESET} $msg\"\n}\n\n# Basic validation:\n# - both USER and PASS must be provided\n# - must not contain whitespace\n# - enforce reasonable length bounds to catch obvious mistakes\n\nif [[ -z \"$USER\" || -z \"$PASS\" ]]; then\n    die \"USER and PASS are required. Usage: $0 USER PASS [REGION]\"\nfi\n\nif [[ \"$USER\" =~ [[:space:]] || \"$PASS\" =~ [[:space:]] ]]; then\n    die \"USER and PASS must not contain whitespace characters\"\nfi\n\n# USER length: 4..128 (covering short test values and real keys)\nuser_len=${#USER}\nif ((user_len &lt; 4 || user_len &gt; 128)); then\n    die \"USER length is $user_len; expected between 4 and 128 characters\"\nfi\n\n# PASS length: at least 8, max 512\npass_len=${#PASS}\nif ((pass_len &lt; 8 || pass_len &gt; 512)); then\n    die \"PASS length is $pass_len; expected between 8 and 512 characters\"\nfi\n\n# Default region if not supplied\nif [[ -z \"$REGION\" ]]; then\n    REGION=\"us-east-1\"\n    info \"No region supplied, defaulting to $REGION\"\nfi\n\n# Ensure required tools are present\nif ! command -v openssl &gt;/dev/null 2&gt;&amp;1; then\n    die \"openssl is required but not installed or not in PATH\"\nfi\nif ! command -v base64 &gt;/dev/null 2&gt;&amp;1; then\n    die \"base64 is required but not installed or not in PATH\"\nfi\n\nENDPOINT=\"email-smtp.${REGION}.amazonaws.com\"\nPORT=587\n\ninfo \"Performing a simple SMTP AUTH test against SES endpoint ${ENDPOINT}:${PORT} (will not print the password).\"\n\n# Build SMTP conversation: EHLO, AUTH LOGIN &lt;base64 user&gt; &lt;base64 pass&gt;, QUIT\nb64_user=$(echo -n \"$USER\" | openssl enc -base64)\nb64_pass=$(echo -n \"$PASS\" | openssl enc -base64)\n\nsmtp_payload=\"EHLO localhost\nAUTH LOGIN\n$b64_user\n$b64_pass\nQUIT\"\n\nOPENSSL_CMD=(openssl s_client -starttls smtp -quiet -crlf -connect \"${ENDPOINT}:${PORT}\")\nRESP=$(printf \"%s\" \"$smtp_payload\" | \"${OPENSSL_CMD[@]}\" 2&gt;/dev/null || true)\n\n# Check for successful authentication. SES responds with 235 on success.\nif printf \"%s\" \"$RESP\" | grep -qE \"^235| 235 \"; then\n    info \"SMTP authentication succeeded (credentials valid for SES SMTP endpoint).\"\n    # Return the USER value as originally intended.\n    echo -n \"$USER\"\nelse\n    # Extract relevant SMTP server response lines (codes and final messages) for diagnosis, avoid printing the password\n    server_summary=$(printf \"%s\" \"$RESP\" | sed -n '1,200p' | sed -n '/^220/,/^QUIT/p' | tr -s '\\r\\n' '\\n' | sed -n '1,20p')\n    # Fallback: if server_summary empty, show some of the response for debugging (still safe: no passwords in server output)\n    if [[ -z \"$server_summary\" ]]; then\n        server_summary=$(printf \"%s\" \"$RESP\")\n    fi\n    die \"SMTP authentication failed. Server response:\\n$server_summary\"\nfi\n</code></pre>","tags":["aws","email"]},{"location":"1111/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>The hostname is arbitrary. Clients my use this for filtering and such</li> <li>Can\u2019t send emails from outside domains unless the email is validated in the SES admin</li> </ul>","tags":["aws","email"]},{"location":"1112/index.html","title":"AWS simple email service - SES","text":"<p>A service of AWS</p>","tags":["aws","email"]},{"location":"1113/index.html","title":"Patch: homelab email admin@jlrickert.me","text":"<p>I setup email on 2025-08-23 on my homelab so I have a working setup for experimentation.</p> <p>Here is my current setup:</p> <ul> <li>CloudFlare for DNS</li> <li>iCloud custom domain for email storage Email storage for custom domains is offered if you subscribe. Its like 1$ per month</li> <li>AWS SES for sending and receiving email programmatically. See SES setup for credentials</li> </ul>","tags":["patch","homelab","aws","email"]},{"location":"1113/index.html#patch","title":"Patch","text":"<p>Pay for the iCloud subscriptions and setup custom domain. Apple has some setup magic with CloudFlare which makes it seamless.</p> <p>[!NOTE]</p> <p>The import magic will override conflicting things</p> <p>Setup <code>app.mail</code> with iCloud. Just use <code>admin@jlrickert.me</code> credentials</p> <p>References</p> <ul> <li>AWS SES</li> <li>homelab</li> <li>iCloud</li> <li>CloudFlare</li> </ul>","tags":["patch","homelab","aws","email"]},{"location":"1114/index.html","title":"Service: CloudFlare (cloudflare)","text":"","tags":["service"]},{"location":"1115/index.html","title":"Service: iCloud (icloud)","text":"<p>Services that apple provides</p>","tags":["icloud","email","apple"]},{"location":"1116/index.html","title":"[x] Issue: EOL for 25.1 Opnsense","text":"<p>Ran into an issue on my homelab where the path to upgrade form 25.1 to 25.7 is not available on my opnsense router.</p>","tags":["opnsense","homelab"]},{"location":"1116/index.html#context","title":"Context","text":"<ul> <li>Current date 2025-08-23</li> </ul>","tags":["opnsense","homelab"]},{"location":"1116/index.html#description","title":"Description","text":"<p>OPNsense 25.1 \u201cUltimate Unicorn\u201d has reached its end of life. As such it will not receive any more updates, but the upgrade to the new 25.7 series is seamless and can be performed right here from the web GUI.</p> <p>Another method is to import and reinstall using a new installation image, which will retain your settings using \u201cImport Configuration\u201d, then reformat the disk and apply a clean system using either \u201cInstall (ZFS)\u201d or \u201cInstall (UFS)\u201d.</p> <p>You can also upgrade via console / SSH by using option 12 from the menu by typing \u201c25.7\u201d when prompted.</p> <p>Make sure to read the migration notes and account for possible breaking changes.</p> <p>Please backup your configuration, preview the new version via live image or in a virtual machine. If applicable, create VM snapshots or use the built-in snapshot feature available on ZFS installations. If all else fails, report back in the [forums][opnsense-forums] for assistance.</p> <p>opnsense-forums</p>","tags":["opnsense","homelab"]},{"location":"1116/index.html#solution","title":"Solution","text":"<p>Just needed to wait longer before the update path was available.</p>","tags":["opnsense","homelab"]},{"location":"1117/index.html","title":"Software: Opnsense (opnsense)","text":"<p>Open source router software</p>","tags":["software","opnsense"]},{"location":"1118/index.html","title":"Hardware: Garmin Forerunner 955","text":"<p>Current sports watch that I own. Bought on October 12, 2022 (2022-10-12)</p>","tags":["running","garmin"]},{"location":"1118/index.html#notes-considerations","title":"Notes / considerations","text":"","tags":["running","garmin"]},{"location":"1119/index.html","title":"[ ] Issue: Garmin smartwatch fails to update","text":"<p>Around 2025-08-23 my smartwatch kept failing to update</p>","tags":["garmin"]},{"location":"1119/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>Current version is 24.12</li> <li>Garmin express for mac.</li> </ul>","tags":["garmin"]},{"location":"1119/index.html#solution","title":"Solution","text":"<p>References</p> <ul> <li>https://forums.garmin.com/sports-fitness/running-multisport/f/forerunner-955-series/405537/update-stuck</li> </ul>","tags":["garmin"]},{"location":"112/index.html","title":"My personal typescript style guide","text":"<p>Defaults of prettier but with tabs and tab with of 4. I really have no preference between tabs and spaces. I just cant read 2 space indents.</p>","tags":["typescript","programming","react","node","deno"]},{"location":"1120/index.html","title":"Dungeons and dragons (dnd)","text":"","tags":["dnd"]},{"location":"1121/index.html","title":"Opinionated way to build cli programs with GO","text":"","tags":["golang","prompt"]},{"location":"1121/index.html#project-structure","title":"Project structure","text":"<ul> <li>cmd/project_name</li> <li>pkg/project_name</li> </ul> <p>Core library for the program</p> <ul> <li>pkg/project_name/cmd</li> </ul> <p>Cobra tree</p> <ul> <li>pkg/other_lib</li> </ul> <p>Some other library. I often times do monorepo things</p>","tags":["golang","prompt"]},{"location":"1121/index.html#command-tree-structure","title":"Command tree structure","text":"","tags":["golang","prompt"]},{"location":"1121/index.html#configuration-managment","title":"Configuration managment","text":"<p>Configuration priorities</p> <ul> <li>CLI: from cli</li> <li>ENV: from env</li> <li>Local config: usually in the git repo or cwd</li> <li>User config: usually in $HOME/.config</li> <li>Global config: usually from /etc/</li> </ul>","tags":["golang","prompt"]},{"location":"1121/index.html#testing","title":"Testing","text":"","tags":["golang","prompt"]},{"location":"1121/index.html#prompt","title":"Prompt","text":"<pre><code>Use the following prompt to drive an \u201cautocomplete / refactor\u201d code generator\n(or LLM) so it produces or updates code that follows the patterns and test\nfixtures we\u2019ve iterated on. Provide values for the placeholders (PACKAGE_PATH\nand PACKAGE_NAME) before running the generator.\n\nHigh-level intent\n\n- Produce or minimally refactor a small Go package that implements:\n  - Cobra-based CLI wiring (root + serve + version commands)\n  - Minimal JSON/YAML config loader (no viper)\n  - slog-based logging helpers\n  - An application type with Run(ctx)\n  - A hermetic test fixture for command integration tests that can set env,\n    args, stdin, capture stdout/stderr, and create temp config files\n- Tests must be deterministic, self-contained, and pass with go test ./...\n- Allowed external dependency: github.com/spf13/cobra only and gopkg.in/yaml.v3.\n  Everything else must be stdlib (including log/slog).\n- If existing files are supplied, treat them as the starting point and refactor\n  conservatively (preserve exported APIs where possible). Add only the files or\n  edits needed to satisfy the requirements below.\n\nPlaceholders to fill before generation\n\n- PACKAGE_PATH \u2014 top-level module import path (e.g., github.com/me/myrepo)\n- PACKAGE_NAME \u2014 package name for non-main files (e.g., myapp). The generator\n  should use PACKAGE_NAME at the top of all package files.\n\nFiles to produce or update (exact file names)\n\n- cmd/myapp/main.go\n- pkg/config.go\n- pkg/logging.go\n- pkg/app.go\n- pkg/cmd/root.go\n- pkg/cmd/serve.go (example)\n- pkg/cmd/version.go\n- pkg/cmd/testutil.go\n- pkg/cmd/root_test.go\n\nStrict functional requirements and behaviors\n\n1. Config loader (pkg/config.go)\n\n- Type: Config { LogLevel string `json:\"log_level\"`; Foo string `json:\"foo\"` }.\n- Function: LoadFromEnvOrFile(path string) (\\*Config, error)\n  - If path != \"\" read JSON file into Config (error if file missing/unreadable).\n  - Defaults: LogLevel=\"info\", Foo=\"bar\".\n  - Override with env vars: LOG_LEVEL or MYAPP_LOG_LEVEL -&gt; LogLevel; FOO or\n    MYAPP_FOO -&gt; Foo.\n  - Return fully populated Config.\n\n2. Logging (pkg/logging.go)\n\n- Use stdlib log/slog.\n- Provide NewLogger(level string) *slog.Logger and NewDiscard() *slog.Logger.\n- parseLevel helper should map common strings to slog.Level\n  (debug/info/warn/error) and default to info.\n\n3. Application (pkg/app.go)\n\n- Type App with cfg *Config and log *slog.Logger (or minimal wrapper matching\n  pattern).\n- New(cfg *AppConfig, logger *slog.Logger) \\*App where AppConfig { Foo string }\n  (or compatible).\n- Run(ctx context.Context) error logs running + cfg.Foo and returns nil.\n\n4. Cobra wiring (pkg/cmd/root.go, serve.go, version.go)\n\n- NewRootCmd(cfg *PACKAGE_NAME.Config, logger *slog.Logger) \\*cobra.Command:\n  - Root must define persistent flags:\n    - --config, -c string: optional JSON config file path\n    - --log-level, -l string: overrides log level (empty default to detect\n      override)\n    - --foo string: overrides Foo\n  - PersistentPreRunE must:\n    - If --config provided, call LoadFromEnvOrFile(path), copy into cfg\n      (overwrite fields).\n    - Apply --log-level and --foo flag overrides onto cfg (flags take\n      precedence).\n    - Recreate the application instance using the effective cfg and make it\n      available to subcommands.\n  - Example subcommands:\n    - serve: newServeCmd(app *app.App, logger *slog.Logger) \\*cobra.Command\n      - Reads a single first line from stdin if present (use cmd.InOrStdin()).\n      - If firstLine != \"\" print \"stdin: &lt;firstLine&gt;\" to stdout (use\n        cmd.OutOrStdout()).\n      - Obtain application via appGetter(); if nil return error \"application not\n        initialized\".\n      - Call application.Run(ctx) and on success print \"started\".\n    - version: prints effective config:\n      - Output exactly: version: 1.0 log_level: &lt;cfg.LogLevel&gt; foo: &lt;cfg.Foo&gt;\n      - Use cmd.OutOrStdout() for writing.\n  - Root must set default outputs to bytes.Buffer so tests can capture\n    (root.SetOut(&amp;bytes.Buffer{}); root.SetErr(&amp;bytes.Buffer{})).\n\n5. Flags precedence &amp; config file override\n\n- Precedence: flags &gt; env vars &gt; config file defaults.\n- --config reloads config from the provided path; then other flags still\n  override after reload.\n- If the file is missing, LoadFromEnvOrFile must return an error and\n  PersistentPreRunE should propagate it.\n\n6. Test utilities (pkg/cmd/testhelpers_test.go)\n\n- Provide RunCommand(root \\*cobra.Command, env map[string]string, args []string,\n  stdin string) (stdout, stderr string, err error)\n  - Temporarily set each env var in env map, recording previous values and\n    restoring them after run.\n  - Set cmd.SetOut and cmd.SetErr to buffers and cmd.SetIn to provided stdin\n    (strings.NewReader).\n  - Use root.SetArgs(args) and root.ExecuteC() to run command (avoid os.Exit).\n  - Return captured stdout/stderr and error.\n- Provide a Fixture type with convenience methods:\n  - NewFixture(t *testing.T) *Fixture: constructs a fixture with t.TempDir(),\n    base config cfg := &amp;Config{LogLevel:\"debug\", Foo:\"test\"}, logger :=\n    NewDiscard(), root := NewRootCmd(cfg, logger), Env map initialized empty.\n    Tests should call defer f.Teardown().\n  - (f *Fixture) WithEnv(key, val string) *Fixture to set env for fixture.\n  - (f \\*Fixture) WithConfigFile(content string) (path string, err error) writes\n    content to temp file in fixture TempDir and returns path.\n  - (f \\*Fixture) Run(args []string, stdin string) (stdout, stderr string, err\n    error) \u2014 uses RunCommand with fixture.Env merged in.\n  - (f \\*Fixture) Teardown() \u2014 placeholder (no-op is fine).\n- Fixture must use t.TempDir() so temporary files are cleaned up.\n\n7. Tests (pkg/cmd/root_test.go)\n\n- Use standard testing package only.\n- Use fixture.NewFixture in each test and defer f.Teardown().\n- Tests to include (each as a separate TestXxx):\n  - TestServeCommand_PrintStarted_NoStdin:\n    - f.WithEnv(\"HOME\",\"/tmp\") optionally.\n    - stdout, stderr, err := f.Run([]string{\"serve\"}, \"\")\n    - Assert err==nil and stdout contains \"started\".\n  - TestServeCommand_ReadsStdinAndPrints:\n    - stdin := \"hello-from-stdin\\n\"\n    - stdout, stderr, err := f.Run([]string{\"serve\"}, stdin)\n    - Assert err==nil and stdout contains \"stdin: hello-from-stdin\" and\n      \"started\".\n  - TestFlagsOverrideConfig:\n    - f.Run([]string{\"--foo\",\"overridden\",\"--log-level\",\"debug\",\"version\"}, \"\")\n    - Assert stdout contains \"foo: overridden\" and \"log_level: debug\".\n  - TestConfigFlagLoadsFile:\n    - cfgPath, \\_ := f.WithConfigFile(`{\"log_level\":\"debug\",\"foo\":\"fromfile\"}`)\n    - stdout, stderr, err := f.Run([]string{\"--config\", cfgPath, \"version\"}, \"\")\n    - Assert stdout contains \"foo: fromfile\" and \"log_level: debug\".\n- Tests must use only stdlib and cobra (no testify).\n- Use t.Fatalf/fatal when assertions fail.\n\n8. Stdin behavior\n\n- Commands must use cmd.InOrStdin() and cmd.OutOrStdout() (not\n  os.Stdin/os.Stdout) to allow test harness to inject readers/writers.\n- readFirstLine helper should read up to newline and trim trailing\n  newline/carriage return characters.\n\n9. Error handling\n\n- Read config file must return a descriptive error when missing/unreadable.\n- PersistentPreRunE must return errors from config loading/flag parsing so tests\n  can detect them.\n\n10. Style &amp; constraints\n\n- Keep code idiomatic and well-commented.\n- Avoid global mutable state; pass cfg and logger into NewRootCmd and into\n  app.New.\n- Tests must be hermetic: fixture Run must restore env after each invocation.\n- Do not add any other external dependencies besides github.com/spf13/cobra.\n- Generator must produce only the files listed (no extra files). If refactoring\n  existing code, modify only these files.\n- Top of each file must use the provided PACKAGE_NAME (or \"main\" for\n  cmd/myapp/main.go).\n- Use go:build or other build directives only if necessary.\n\nAutocompletion / refactor behavior (apply when the generator is given existing\ncode)\n\n- If existing files are present:\n  - Parse and analyze them and reuse definitions (struct names, function names)\n    when compatible.\n  - Preserve exported APIs where possible. When a breaking change is\n    unavoidable, document it in comments clearly.\n  - Keep existing comments; when replacing a function, include the original\n    comment text in the new code (migrating comments).\n  - Make minimal non-breaking edits to satisfy the above tests and APIs.\n- If there is no existing content, generate complete new implementations for all\n  files above.\n\nOutput required from the generator\n\n- The final response must contain only the full contents of each file (separated\n  by clear file headers or the generator\u2019s normal multi-file output format), and\n  must compile and have tests that pass with go test ./... (given placeholder\n  PACKAGE_PATH and PACKAGE_NAME are substituted correctly).\n- If the generator couldn't implement some requirement, it must explicitly list\n  which requirement it could not satisfy and why.\n\nExample minimal scenario (for reference only \u2014 generator need not echo this)\n\n- Running TestConfigFlagLoadsFile should create a temp JSON config file, supply\n  --config &lt;path&gt;, and version command should print config values from that file\n  (and other flags should still override).\n</code></pre>","tags":["golang","prompt"]},{"location":"1122/index.html","title":"Project: MCP Fileystem (filesystem-mcp-server)","text":"<p>A golang project to give AI access to the file system.</p> <p>Coding strategies used:</p> <ul> <li>Cli</li> <li>Config</li> <li>Error handling</li> </ul> <p>References</p> <ul> <li>Example</li> </ul>","tags":["mcp","project","filesystem-mcp-server"]},{"location":"1123/index.html","title":"Opinionated config management with golang examples","text":"<p>You are a Go code generator assistant. Generate or refactor code implementing a YAML-backed, migratable configuration library for an MCP server that controls filesystem access. This prompt is an \u201cautocomplete/refactor\u201d style instruction: if the caller provides existing content (one or more files or snippets), treat that content as the starting point and minimally refactor/complete it to meet these requirements. Preserve existing exported APIs, comments, and tests where reasonable; when changes are necessary, prefer additive, non-breaking edits and clearly document any breaking changes in comments.</p> <p>High-level intent</p> <ul> <li>Produce exactly two files in a single package:   1. <code>config.go</code> (implementation)   2. <code>config_test.go</code> (tests)</li> <li>The generated code must compile and tests must pass with: <code>go test ./...</code></li> <li>Use only the Go standard library plus <code>gopkg.in/yaml.v3</code>.</li> <li>Accept generation-time placeholders:</li> <li><code>PACKAGE_NAME</code> (string) \u2014 put at the top of both files as the package name.</li> <li>Schema description for v1 and v2 (fields and YAML names).</li> <li>Example YAML snippets for:<ul> <li><code>v2_with_comments</code> (for <code>TestParseV2PreservesComments</code>).</li> <li><code>v1_legacy_example</code> (for <code>TestParseV1ConversionToV2</code>).</li> <li><code>small_v2_for_expand</code> (for <code>ExpandEnv</code> tests, as needed).</li> </ul> </li> </ul> <p>Core functional requirements (implementation \u2014 <code>config.go</code>)</p> <ul> <li>Constants:</li> <li><code>ConfigV1VersionString = \"1.0\"</code></li> <li><code>ConfigV2VersionString = \"2.0\"</code></li> <li>Any extra <code>ConfigVxVersionString = \"xxx\"</code> for other versions in schema</li> <li><code>DefaultConfigFilename = \"config.yaml\"</code></li> <li>Types and structs:</li> <li>Define Go structs matching the provided schema for v1 and v2.</li> <li>Provide a canonical exported <code>Config</code> type for the current version (v2) and     exported legacy types for v1 as needed.</li> <li>Conversion:</li> <li>Implement <code>(c *ConfigV1) ToV2() Config</code> (or equivalent) to convert legacy v1     to v2; choose sensible defaults for missing fields (document choices in     comments).</li> <li>Platform-aware path helpers:</li> <li><code>GetUserConfigPath() (string, error)</code></li> <li><code>GetUserCachePath() (string, error)</code></li> <li>Behavior: use <code>os.UserHomeDir()</code>; on unix-like prefer <code>XDG_CONFIG_HOME</code> /     <code>XDG_CACHE_HOME</code>; on Windows prefer <code>APPDATA</code> / <code>LOCALAPPDATA</code>; fallback to     sensible defaults.</li> <li>File read helpers:</li> <li><code>ReadConfigData(configPath string) ([]byte, error)</code> \u2014 must error if file     does not exist (use <code>os.Stat</code> or equivalent).</li> <li><code>ReadDefaultConfigData() ([]byte, error)</code> \u2014 build default path     <code>GetUserConfigPath()</code> + <code>DefaultConfigFilename</code> and call <code>ReadConfigData</code>.</li> <li><code>ParseConfigData(data []byte) (Config, error)</code>:</li> <li>Parse into <code>yaml.Node</code> (document node) first and detect top-level     <code>\"version\"</code> scalar so comments can be preserved.</li> <li>If version == <code>ConfigV1VersionString</code>: unmarshal into <code>ConfigV1</code> and convert     to <code>ConfigV2</code> via <code>ToV2()</code>.</li> <li>If version == <code>ConfigV2VersionString</code>: unmarshal into <code>ConfigV2</code>; save the     parsed <code>yaml.Node</code> (top-level document node) inside the returned <code>ConfigV2</code>     (unexported field) for comment-preserving <code>ToYAML</code>.</li> <li>Ensure v1-&gt;v2 conversion does not need to preserve v1 comments (acceptable     to lose comments in conversion).</li> <li>Config helpers:</li> <li><code>GetDefaultConfig() (Config, error)</code> \u2014 read default config and parse.</li> <li><code>GetConfig(filePath string) (Config, error)</code> \u2014 read file and parse.</li> <li><code>ExpandEnv()</code>:</li> <li>Implement <code>(c *Config) ExpandEnv() error</code> on the current Config type (v2     pointer receiver).</li> <li>Implement <code>expandEnvRecursively(v reflect.Value)</code> that recursively walks     structs, pointers, maps, slices and applies <code>os.ExpandEnv</code> to string fields     and string-slice elements, mutating the struct in place.</li> <li>The top-level <code>ExpandEnv</code> should iterate through appropriate collections     (projects/environments/paths/etc. per provided schema) and call the     recursive helper.</li> <li><code>ToYAML</code> methods:</li> <li><code>(c *Config) ToYAML() (string, error)</code><ul> <li>If a saved <code>yaml.Node</code> (from <code>ParseConfigData</code> for v2 input) is present,   use <code>yaml.Encoder</code> to encode that node (preserving comments) and return   the string.</li> <li>Otherwise fall back to <code>yaml.Marshal</code> on the struct.</li> </ul> </li> <li>Provide <code>ToYAML()</code> helpers for major sub-structs if useful (e.g.,     <code>ProjectDef</code>, <code>EnvDef</code>) using <code>yaml.Marshal</code>.</li> <li>Comment preservation:</li> <li>Ensure that parsing v2 and re-emitting via <code>ToYAML</code> preserves comments from     the original v2 document by storing and re-encoding the <code>yaml.Node</code>.</li> <li>YAML tags:</li> <li>Use yaml struct tags consistent with provided schema and examples.</li> <li>Style and documentation:</li> <li>Keep code well-commented and idiomatic.</li> <li>If refactoring existing content, add comments explaining any important     transformations or default choices.</li> <li>Avoid global mutable state; keep APIs testable and deterministic.</li> </ul> <p>Testing requirements (<code>config_test.go</code>)</p> <ul> <li>Tests must be deterministic and self-contained using <code>testing</code> package.</li> <li>Use <code>t.TempDir()</code> and explicit <code>os.Setenv</code>/<code>os.Unsetenv</code> in tests; clean up   environment changes with <code>defer os.Unsetenv</code>.</li> <li>Tests to include (each as separate <code>TestXxx</code> functions):   1. <code>TestParseV2PreservesComments</code>:<ul> <li>Use the provided v2 YAML example (with comments).</li> <li>Call <code>ParseConfigData([]byte(yamlText))</code>.</li> <li>Call <code>cfg.ToYAML()</code> and assert the returned YAML contains the original    comment text(s) (substring match).   2. <code>TestParseV1ConversionToV2</code>:</li> <li>Use the provided v1 YAML example.</li> <li>Parse it and assert:</li> <li>The returned <code>Config.Version</code> equals <code>ConfigV2VersionString</code>.</li> <li>Items present in v1 were converted and exist in <code>cfg</code> (e.g., projects,      paths).</li> <li>Expected derived defaults from conversion exist (e.g., derived working      dirs).   3. <code>TestExpandEnvSubstitutes</code>:</li> <li>Build a small v2 Config (by parsing a provided minimal YAML or    constructing the struct inline) containing at least one string or    <code>[]string</code> element with env refs like <code>\"${FOO}/bar\"</code>.</li> <li>Set env vars via <code>os.Setenv</code>, call <code>cfg.ExpandEnv()</code>, and assert expected    expansions.   4. <code>TestReadConfigDataMissingFile</code>:</li> <li>Call <code>ReadConfigData</code> on a path that does not exist and assert an error    is returned.</li> </ul> </li> <li>Tests must use provided YAML examples exactly as given (do not invent new   content).</li> <li>Avoid platform-specific assertions; make tests portable.</li> </ul> <p>Autocompletion/refactor behavior (important)</p> <ul> <li>If the generator is provided with existing file contents, it must:</li> <li>Parse and analyze the content (structs, functions, comments).</li> <li>Reuse existing struct definitions and function names where compatible.</li> <li>Modify or add code only as necessary to satisfy all constraints above.</li> <li>Preserve comments and formatting where possible; when replacing a function     or changing behavior, keep the original comments as part of the new code or     add clear migrating comments.</li> <li>Ensure all exported identifiers remain stable unless a breaking change is     unavoidable; document any breaking change.</li> <li>If there is no existing content, generate a complete, new implementation   matching the spec.</li> </ul> <p>Edge cases and constraints</p> <ul> <li>Only use standard library + <code>gopkg.in/yaml.v3</code>.</li> <li>Do not produce any files beyond <code>config.go</code> and <code>config_test.go</code>.</li> <li>Ensure <code>ParseConfigData</code> uses <code>yaml.Node</code> to detect top-level <code>\"version\"</code> and   to preserve comments for v2 re-emit.</li> <li>Tests must succeed under <code>go test ./...</code></li> <li>Keep implementations safe: <code>ReadConfigData</code> must error if file doesn\u2019t exist.</li> </ul> <p>Output expectations</p> <ul> <li>Produce two files (<code>config.go</code> and <code>config_test.go</code>) content only. Do not   produce any other files or auxiliary outputs.</li> <li>The top of both files must begin with the provided <code>PACKAGE_NAME</code>.</li> <li>If you are refactoring provided content, ensure the final combined code   (existing + generated changes) appears in these two files and the tests cover   the provided examples.</li> </ul> <p>Placeholders the caller will fill at generation-time:</p> <ul> <li><code>PACKAGE_NAME</code>: the package name to use at top of both files.</li> <li>Schema description (fields, types, YAML names) for v1 and v2.</li> <li>Example YAML texts for:</li> <li><code>v2_with_comments</code> (for comment preservation test)</li> <li><code>v1_legacy_example</code> (for conversion test)</li> <li><code>small_v2_for_expand</code> (for ExpandEnv test)</li> </ul> <p>If you understand, generate or refactor <code>config.go</code> and <code>config_test.go</code> accordingly when given <code>PACKAGE_NAME</code>, schema, and example YAMLs. When refactoring, be conservative and preserve as much of the original content as possible while meeting the requirements above.</p>","tags":["golang","prompt"]},{"location":"1124/index.html","title":"Opinionated error handling strategy in Go","text":"<p>Here are two short autocomplete prompts you can paste into an editor/AI completion tool (plus example completions). Pick the one matching your Go version.</p> <p>Notes</p> <ul> <li>Use a package-level error created with <code>errors.New(...)</code> (shown below as   <code>PACKAGE_ERR</code>).</li> <li>Function names and the internal operation are intentionally   generic/placeholders \u2014 replace <code>YourFunc</code> / <code>doWork</code> / <code>Result</code> with names and   concrete logic used in your project.</li> </ul> <ol> <li>Quick Copilot-style prompt (works for Go 1.13+; wrap a package-level error    with <code>%w</code> so <code>errors.Is(...)</code> works):</li> </ol> <pre><code>Generate Go code that declares a package-level error var PACKAGE_ERR = errors.New(\"package error\"), implements a function (e.g., func YourFunc(data []byte) (*Result, error)) which performs an operation and on error returns fmt.Errorf(\"%w: operation failed: %v\", PACKAGE_ERR, err). Also show a caller that handles the returned error with errors.Is(err, PACKAGE_ERR) and prints or handles the underlying cause.\n</code></pre> <p>Example completion for that prompt:</p> <pre><code>package example\n\nimport (\n    \"errors\"\n    \"fmt\"\n)\n\nvar PACKAGE_ERR = errors.New(\"package error\")\n\ntype Result struct {\n    // fields...\n}\n\nfunc YourFunc(data []byte) (*Result, error) {\n    var res Result\n    if err := doWork(data, &amp;res); err != nil {\n        // wrap the package-level error so callers can detect this class of error\n        return nil, fmt.Errorf(\"%w: operation failed: %v\", PACKAGE_ERR, err)\n    }\n    return &amp;res, nil\n}\n\n// Caller example\nfunc DoSomething(data []byte) {\n    res, err := YourFunc(data)\n    if err != nil {\n        if errors.Is(err, PACKAGE_ERR) {\n            // handle this class of error specifically\n            fmt.Println(\"operation error:\", err)\n            return\n        }\n        // other errors\n        fmt.Println(\"other error:\", err)\n        return\n    }\n    _ = res\n}\n\n// doWork is a placeholder for whatever work you do in your package.\n// Replace with concrete logic (e.g., json.Unmarshal, network call, DB op).\nfunc doWork(data []byte, out *Result) error {\n    // implementation omitted for example purposes\n    return fmt.Errorf(\"underlying failure\")\n}\n</code></pre> <ol> <li>Copilot-style prompt for Go 1.20+ (use <code>errors.Join</code> to preserve both the    package error and the original error so <code>errors.Is</code> can match the package    error):</li> </ol> <pre><code>Generate Go code that declares a package-level error var PACKAGE_ERR = errors.New(\"package error\"), implements a function (e.g., func YourFunc(data []byte) (*Result, error)) which performs an operation and on error returns fmt.Errorf(\"operation failed: %w\", errors.Join(PACKAGE_ERR, err)). Show a caller that uses errors.Is to check for PACKAGE_ERR as well as handling other errors.\n</code></pre> <p>Example completion for that prompt:</p> <pre><code>package example\n\nimport (\n    \"errors\"\n    \"fmt\"\n)\n\nvar PACKAGE_ERR = errors.New(\"package error\")\n\ntype Result struct {\n    // fields...\n}\n\nfunc YourFunc(data []byte) (*Result, error) {\n    var res Result\n    if err := doWork(data, &amp;res); err != nil {\n        // errors.Join preserves both PACKAGE_ERR and the underlying cause\n        return nil, fmt.Errorf(\"operation failed: %w\", errors.Join(PACKAGE_ERR, err))\n    }\n    return &amp;res, nil\n}\n\n// Caller example\nfunc DoSomething(data []byte) {\n    res, err := YourFunc(data)\n    if err != nil {\n        if errors.Is(err, PACKAGE_ERR) {\n            // detect the package-level error\n            fmt.Println(\"operation error:\", err)\n            return\n        }\n        // other errors\n        fmt.Println(\"other error:\", err)\n        return\n    }\n    _ = res\n}\n\n// doWork is a placeholder for whatever work you do in your package.\nfunc doWork(data []byte, out *Result) error {\n    // implementation omitted for example purposes\n    return fmt.Errorf(\"underlying failure\")\n}\n</code></pre>","tags":["prompt","golang"]},{"location":"1125/index.html","title":"How to work on a multirepo setup for golang projects","text":"<p>Working on a multirepo set with go is relatively strait forward. In your project use <code>go work</code> to add the current project and relative paths to other packages on your local filesystem.</p> <p>Below is an example</p> <pre><code>go work init\ngo work use .\ngo work use ../go-work\n</code></pre>","tags":["golang"]},{"location":"1126/index.html","title":"Opinionated way to handle logging with golang","text":"","tags":["golang"]},{"location":"1127/index.html","title":"Patch make ed get edit\u2019s zsh completions (temporary hack)","text":"<p>Quick hacky patch to my installed dotfiles on my macOS.</p> <p>Purpose</p> <ul> <li>Short-term hack so the CLI program <code>ed</code> receives the same zsh completions as   <code>edit</code>.</li> <li>Not intended as a permanent system change. Documented here so you can   reproduce or revert.</li> </ul> <p>Environment / context</p> <ul> <li>Commands were done from your shell history on macOS/Linux (example snippet   shown in history).</li> <li>Completions live in your zsh completion directory (in your dotfiles cache:   <code>~/.cache/dotfiles/zsh/completions</code> in your case).</li> <li>zsh caches compiled completions at <code>~/.zcompdump</code>; removing it forces zsh to   regenerate completions.</li> </ul> <p>What I did (commands I ran)</p> <ul> <li>Checked which <code>ed</code> and <code>edit</code> executables are used:   <code>which ed   which edit</code></li> <li>Copied the <code>edit</code> binary over the <code>ed</code> binary (this replaces <code>ed</code> with   <code>edit</code>):   <code>cp $(which edit) $(which ed)</code>   Note: this is destructive if <code>which ed</code> points at a real system <code>ed</code>. See   revert below.</li> <li>Worked in the completion directory and duplicated <code>_edit</code> to <code>_ed</code>:   <code>cd ~/.cache/dotfiles/zsh/completions   ls   cp _edit _ed</code></li> <li>Edited the new <code>_ed</code> completion (I used <code>ed</code> to open/edit it):   <code>ed _ed</code>   (Inside that edit I used sed-like changes \u2014 see recommended sed below.)</li> <li>Removed the zsh completion dump so zsh will rebuild completions:   <code>rm ~/.zcompdump</code>   Then either restart the shell or re-run <code>compinit</code> / <code>exec zsh</code> to rebuild   completions.</li> </ul>","tags":["dotfiles"]},{"location":"1128/index.html","title":"Patch: Add logging with Grafana Loki - 2025-09-14","text":"<p>I added centralized logging on my homelab on 2025-09-14.</p>","tags":["homelab","patch"]},{"location":"1128/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>Web access as at http://cloud9.int.jlrickert.me:3000/</li> </ul>","tags":["homelab","patch"]},{"location":"1128/index.html#application-server-setup","title":"Application server setup","text":"<p>In docker-compose.yml</p> <pre><code>version: \"3.3\"\n\nnetworks:\n    loki:\n\nservices:\n    loki:\n        image: grafana/loki:latest\n        ports:\n            - \"3100:3100\"\n        command: -config.file=/etc/loki/local-config.yaml\n        networks:\n            - loki\n\n    promtail:\n        image: grafana/promtail:latest\n        volumes:\n            - /var/log:/var/log\n        command: -config.file=/etc/promtail/config.yml\n        networks:\n            - loki\n\n    grafana:\n        environment:\n            - GF_PATHS_PROVISIONING=/etc/grafana/provisioning\n            - GF_AUTH_ANONYMOUS_ENABLED=true\n            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin\n            - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode\n        entrypoint:\n            - sh\n            - -euc\n            - |\n                  mkdir -p /etc/grafana/provisioning/datasources\n                  cat &lt;&lt;EOF &gt; /etc/grafana/provisioning/datasources/ds.yaml\n                  apiVersion: 1\n                  datasources:\n                  - name: Loki\n                    type: loki\n                    access: proxy\n                    orgId: 1\n                    url: http://loki:3100\n                    basicAuth: false\n                    isDefault: true\n                    version: 1\n                    editable: false\n                  EOF\n                  /run.sh\n        image: grafana/grafana:latest\n        ports:\n            - \"3000:3000\"\n        networks:\n            - loki\n</code></pre> <p>In <code>loki-config.yml</code></p> <pre><code>auth_enabled: false\n\nserver:\n  http_listen_port: 3100\n  grpc_listen_port: 9096\n  log_level: debug\n  grpc_server_max_concurrent_streams: 1000\n\ncommon:\n  instance_addr: 127.0.0.1\n  path_prefix: /tmp/loki\n  storage:\n    filesystem:\n      chunks_directory: /tmp/loki/chunks\n      rules_directory: /tmp/loki/rules\n  replication_factor: 1\n  ring:\n    kvstore:\n      store: inmemory\n\nquery_range:\n  results_cache:\n    cache:\n      embedded_cache:\n        enabled: true\n        max_size_mb: 100\n\nlimits_config:\n  metric_aggregation_enabled: true\n\nschema_config:\n  configs:\n    - from: 2020-10-24\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n\npattern_ingester:\n  enabled: true\n  metric_aggregation:\n    loki_address: localhost:3100\n\nruler:\n  alertmanager_url: http://localhost:9093\n\nfrontend:\n  encoding: protobuf\n\n# By default, Loki will send anonymous, but uniquely-identifiable usage and configuration\n# analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/\n#\n# Statistics help us better understand how Loki is used, and they show us performance\n# levels for most users. This helps us prioritize features and documentation.\n# For more information on what's sent, look at\n# https://github.com/grafana/loki/blob/main/pkg/analytics/stats.go\n# Refer to the buildReport method to see what goes into a report.\n#\n# If you would like to disable reporting, uncomment the following lines:\nanalytics:\n  reporting_enabled: false\njlrickert@cloud9:~/grafana$ cat loki-config.yml\nauth_enabled: false\n\nserver:\n  http_listen_port: 3100\n  grpc_listen_port: 9096\n  log_level: debug\n  grpc_server_max_concurrent_streams: 1000\n\ncommon:\n  instance_addr: 127.0.0.1\n  path_prefix: /tmp/loki\n  storage:\n    filesystem:\n      chunks_directory: /tmp/loki/chunks\n      rules_directory: /tmp/loki/rules\n  replication_factor: 1\n  ring:\n    kvstore:\n      store: inmemory\n\nquery_range:\n  results_cache:\n    cache:\n      embedded_cache:\n        enabled: true\n        max_size_mb: 100\n\nlimits_config:\n  metric_aggregation_enabled: true\n\nschema_config:\n  configs:\n    - from: 2020-10-24\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n\npattern_ingester:\n  enabled: true\n  metric_aggregation:\n    loki_address: localhost:3100\n\nruler:\n  alertmanager_url: http://localhost:9093\n\nfrontend:\n  encoding: protobuf\n\n# By default, Loki will send anonymous, but uniquely-identifiable usage and configuration\n# analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/\n#\n# Statistics help us better understand how Loki is used, and they show us performance\n# levels for most users. This helps us prioritize features and documentation.\n# For more information on what's sent, look at\n# https://github.com/grafana/loki/blob/main/pkg/analytics/stats.go\n# Refer to the buildReport method to see what goes into a report.\n#\n# If you would like to disable reporting, uncomment the following lines:\nanalytics:\n  reporting_enabled: false\n</code></pre> <p>In <code>promtail-config.yml</code></p> <pre><code>server:\n    http_listen_port: 9080\n    grpc_listen_port: 0\n\npositions:\n    filename: /tmp/positions.yaml\n\nclients:\n    - url: http://loki:3100/loki/api/v1/push\n\nscrape_configs:\n    - job_name: system\n      static_configs:\n          - targets:\n                - localhost\n            labels:\n                job: varlogs\n                __path__: /var/log/*log\n</code></pre> <p>In <code>/etc/systemd/system/grafana.service</code>:</p> <pre><code>[Unit]\nDescription=Grafana Docker Compose\nRequires=docker.service\nAfter=docker.service network-online.target\nWants=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/home/jlrickert/grafana\nExecStart=/usr/bin/docker compose up -d\nExecStop=/usr/bin/docker compose down\nTimeoutStartSec=120\nTimeoutStopSec=60\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Create the files and run the following</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable grafana.service\nsudo systemctl start grafana.service\n</code></pre>","tags":["homelab","patch"]},{"location":"1128/index.html#log-forwarding-on-macosx","title":"Log forwarding on MacOSX","text":"<p>I forward a bunch of logs from my mac</p>","tags":["homelab","patch"]},{"location":"1128/index.html#installation","title":"Installation","text":"<p>Followed installation docs</p> <pre><code>brew tap grafana/grafana\nbrew install grafana/grafana/alloy\n</code></pre>","tags":["homelab","patch"]},{"location":"1128/index.html#configuration","title":"Configuration","text":"<p>Followed configuration docs to configure.</p> <p>Configuration build loop is as follows:</p> <pre><code>ed /opt/homebrew/etc/ally/config.alloy # edit config\nbrew services restart grafana/grafana/alloy\n</code></pre> <p>Debug logs may be followed with <code>tail -f $(brew --prefix)/var/log/alloy.err.log</code></p> <p>Configuration in <code>/opt/homebrew/etc/alloy/config.alloy</code></p> <pre><code>logging {\n  level = \"debug\"\n  format = \"logfmt\"\n}\n\nlivedebugging {\n  enabled = true\n}\n\nlocal.file_match \"local_files\" {\n  path_targets = [\n    {\n      \"__path__\" = \"/Users/jlrickert/.local/state/github-mcp-server/log.json\",\n      \"service\" = \"github-mcp-server\",\n      \"hostname\" = constants.hostname,\n    },\n    {\n      \"__path__\" = \"/Users/jlrickert/.local/state/mcpfs/log.json\",\n      \"service\" = \"fileserver-mcp-server\",\n      \"hostname\" = constants.hostname,\n    },\n  ]\n  sync_period  = \"5s\"\n}\n\nloki.source.file \"log_scrape\" {\n  targets    = local.file_match.local_files.targets\n  forward_to = [loki.write.local.receiver]\n  tail_from_end = true\n}\n\nloki.write \"local\" {\n  endpoint {\n    url = \"http://cloud9.int.jlrickert.me:3100/loki/api/v1/push\"\n  }\n}\n</code></pre> <p>The following is also mentioned but doesn\u2019t seem to do anything</p> <pre><code>brew edit grafana/grafana/alloy # doesn't seem to work\nbrew reinstall --formula  grafana/grafana/alloy\nbrew services restart  grafana/grafana/alloy\n</code></pre>","tags":["homelab","patch"]},{"location":"1128/index.html#time-log","title":"Time log","text":"<ul> <li>2025-09-13 18:00 (2.00h) Setup Grafana and Loki Setup this up while co working   with msptech so not the most productive</li> <li>2025-09-14 12:57 (1.00h) Figured out a working example</li> </ul> <p>References</p> <ul> <li>https://grafana.com/docs/alloy/latest/reference/components/local/local.file_match/</li> </ul>","tags":["homelab","patch"]},{"location":"1129/index.html","title":"Patch: Add Home Assistant - homelab","text":"<p>I added Home Assistant to my homelab to add smart features. I installed the VM on my Proxmox server.</p>","tags":["homelab","proxmox"]},{"location":"1129/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>BIOS needs to be OVMF (UEFI)</li> <li>Web UI: http://homeassistant.local:8123/</li> <li>Observer: http://homeassistant.local:4357/</li> <li>MISO is the zone for energy thing</li> <li>Use OpenAI plugin for ChatGPT assistant</li> </ul>","tags":["homelab","proxmox"]},{"location":"113/index.html","title":"Managing contexts with bash","text":"<p>Homebrew bootstraps itself with <code>source &lt;(/opt/homebrew/bin/brew shellenv)</code></p> <p>Here is a similar thing that I have come up with. Here is my <code>shellenv</code> bash script.</p> <pre><code>#!/bin/bash\n\nset -o errexit  # exit if non-zero status code is returned\nset -o nounset  # exit if undefined variable is used\nset -o pipefail # exit if no-zero status code is returned in a pipeline\n\nSCRIPT_DIR=$(cd -- \"$(dirname -- \"${BASH_SOURCE[0]}\")\" &amp;&gt;/dev/null &amp;&amp; pwd)\nSCRIPT=$(\n    cat &lt;&lt;-EOF\nexport PATH=\"${PATH}:${SCRIPT_DIR}/bin\"\nEOF\n)\n\necho -e \"${SCRIPT}\"\n</code></pre> <p>This may be sourced with <code>source &lt;(/path/to/shellenv)</code>. This is a work around for the fact that a subshell is not able to modify the caller. This allows the shellenv script to have the environment that we expect.</p>","tags":["bash","cli"]},{"location":"1130/index.html","title":"Place: Gigi\u2019s cafe","text":"<p>Coffee shop in Up town Minneapolis</p>","tags":["coffee","coworking","publicwifi"]},{"location":"1130/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>Coworkers says it has large tables and outlets</li> </ul>","tags":["coffee","coworking","publicwifi"]},{"location":"1131/index.html","title":"Automating Keycloak setup with Terraform","text":"<p>Automating identity and access management with <code>Keycloak</code> using <code>Terraform</code> makes deployments repeatable, auditable, and easier to move between environments. This note explains how to use the <code>Terraform</code> Keycloak provider to provision realms, clients, roles, and users, and how to keep those configurations in version control and CI pipelines. See <code>Terraform</code> and <code>Keycloak</code> for background and provider details.</p>","tags":["oidc","keycloak"]},{"location":"1132/index.html","title":"Software: Pocket","text":"<p>Pocket is a lightweight identity and access management option that aims to be a simpler alternative to Keycloak. It prioritizes fast setup, clear developer experience, and maintainable defaults while still supporting common needs such as OAuth2, single sign-on, and basic user federation. Choose Pocket when you want a minimal IAM that is quick to deploy and easy to integrate with web apps and APIs. For a more feature rich, enterprise-grade solution see Keycloak (<code>../1133</code>).</p>","tags":["pocket","oidc"]},{"location":"1133/index.html","title":"Software: Keycloak (keycloak)","text":"<p>An open source OIDC server</p>","tags":["oidc","keycloak"]},{"location":"1134/index.html","title":"Software: <code>Terraform</code> (terraform)","text":"<p><code>Terraform</code> is an open source infrastructure-as-code tool that lets you define, preview, and apply changes to cloud and on-prem resources using declarative configuration files. It enables consistent provisioning across providers from a single workflow and helps reduce manual configuration drift.</p>","tags":["terrafom","devops"]},{"location":"1135/index.html","title":"Place: Evergreen park","text":"<p>Park where there is pickleball. Typically, very crowded. The nearby parking lot is usually full but the nearby elementary parking lot has a lot of room.</p>","tags":["place","pickleball","minnesota","minneapolis","stpaul","twincities"]},{"location":"1136/index.html","title":"My history of public IP addresses","text":"<ul> <li>65.128.236.54</li> <li>67.4.236.80</li> <li>174.20.206.73</li> <li>65.128.225.107 (current)</li> </ul>","tags":["networking"]},{"location":"1137/index.html","title":"Modern jive circle","text":"<p>An attempt to come up with a circle similar to Salsa Rueda for Modern jive.</p>","tags":["dancing","modern-jive"]},{"location":"1137/index.html#basics","title":"Basics","text":"<p>First 4 counts the inner hands are released. Together for the last 4 counts.</p>","tags":["dancing","modern-jive"]},{"location":"1137/index.html#simple-swap-calls","title":"Simple swap calls","text":"<ul> <li><code>Rotate</code>: everyone swaps partners clockwise.</li> <li><code>Reverse</code>: rotate counter-clockwise.</li> <li><code>Double</code>: rotate two partners instead of one.</li> </ul>","tags":["dancing","modern-jive"]},{"location":"1137/index.html#basic-figure-calls","title":"Basic figure calls","text":"<ul> <li><code>Octopus</code>: leads send follows under both arms then rotate out (adapted from   salsa rueda\u2019s Pulpo).</li> <li><code>Windmill</code>: continuous hand-change turn, exit into partner swap.</li> <li><code>Slide</code>: leaders lead a travelling return, then pass to the next partner.</li> </ul>","tags":["dancing","modern-jive"]},{"location":"1137/index.html#positioning-calls","title":"Positioning calls","text":"<ul> <li><code>Cross</code>: partners trade places through the middle of the circle.</li> <li><code>Center spin</code>: one couple goes into the middle, does a free spin, then   rejoins.</li> <li><code>Switchback</code>: two couples trade across the circle instead of adjacent couples.</li> </ul>","tags":["dancing","modern-jive"]},{"location":"1137/index.html#novelty-calls","title":"Novelty calls","text":"<ul> <li><code>Mirror</code>: half the circle does the move left-handed, half right-handed.</li> <li><code>Freeze</code>: everyone pauses one beat, then restart together.</li> <li><code>Chain</code>: send your partner to the next leader or follow with continuous turns   (like a contra-dance chain).</li> </ul>","tags":["dancing","modern-jive"]},{"location":"1138/index.html","title":"Article: Number 1 use case for GPT according to Harvard","text":"<p>An article about something creepy as fuck about Meta. See youtube video.</p>","tags":["article"]},{"location":"1139/index.html","title":"iMessage public key","text":"<p>My public key for iMessage</p> <p>My key is <code>APKTID97uSAjCeDDaCeHGQzh91EJeh7wkheYshyeDPFGQjygXrMw</code></p> <p>I found the key on my mac under Settings -&gt; Apple Account -&gt; Contact Key Verification</p>","tags":["apple","cryptography","secrets"]},{"location":"114/index.html","title":"Overview: Samsung S22+ device specification","text":"<p>Device specifications for my S22+ device.</p> Spec Value Comment Dimensions 75.8 x 157.4 x 7.6 mm Weight 195 Display 6.6 in Dynamic AMOLED 2x 1080 x 2340pixels, 24bit RAM 8GB 5500 MHZ Storage 128G, 258G CPU 1x 2.885 GHz Cortex-X2, 3x 2.496 GHz Cortex-A710, 4x 1.78GHz Cortex-A510","tags":["hardware","android","samsung"]},{"location":"1140/index.html","title":"Home assistant research","text":"<p>Initial research for setting up a smarthome. Home assistant is hosted on my homelab.</p> <ul> <li>speakerphones for voice and speaker</li> <li>HomePod is a smart speaker and voice assistant hub</li> <li>MQTT</li> <li>IoT things separation with VLANS. Need a managed switch</li> <li>BE550 doesn\u2019t support VLANs</li> </ul>","tags":["homelab","smarthome"]},{"location":"1141/index.html","title":"Home Assistant smart home (home-assistant)","text":"<p>Open source smart home software</p>","tags":["home-assistant"]},{"location":"1142/index.html","title":"Bake: Halloween Sourdough Loaf","text":"<p>A 50/50 sourdough loaf using equal parts bread flour and whole wheat flour.</p>","tags":["baking","bake","holiday","sourdough"]},{"location":"1142/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 300g 60% King Arthur Whole wheat flour 200g 40% Hard red wheat Water 350g 70% Adjust based on humidity Starter 50g 10% 100% hydration, fed Salt 5g 1.0% <p>Total weight is approximately 905g.</p>","tags":["baking","bake","holiday","sourdough"]},{"location":"1142/index.html#time-log","title":"Time log","text":"<ul> <li>2025-10-31 10:00 Fed starter</li> <li>2025-10-31 14:45 Mixed ingredients (first mix)</li> <li>[pending] Shaped</li> <li>[pending] Placed in fridge</li> <li>[pending] Baked</li> </ul>","tags":["baking","bake","holiday","sourdough"]},{"location":"1142/index.html#notes","title":"Notes","text":"<ul> <li>Kitchen temperature and humidity to be monitored during bulk fermentation</li> </ul>","tags":["baking","bake","holiday","sourdough"]},{"location":"1142/index.html#see-also","title":"See Also","text":"<ul> <li>Baking index</li> <li>50/50 Wheat Sourdough Loaf</li> </ul>","tags":["baking","bake","holiday","sourdough"]},{"location":"115/index.html","title":"Recommended android SDK target for new android apps","text":"<p>The recommended SDK to use according to google is version 33 if you are targeting the play store. Starting August 31, 2023 this will be required.</p>","tags":["programming","android","google"]},{"location":"116/index.html","title":"Lando concepts","text":"<p>Lando wraps a bunch of technologies to simplify the developer environment setup.</p> <ul> <li>npm</li> <li>webpack</li> <li>php</li> <li>docker desktop version v4.16.2</li> </ul>","tags":["architecture","cli","php","design"]},{"location":"117/index.html","title":"Overview: Mailhog","text":"<p>Mailhog is an outgoing SMTP server.</p> <p>Some use cases include:</p> <ul> <li>intercept outgoing mail while development</li> </ul> <p>Some alternatives include:</p> <ul> <li>Mailpit</li> </ul>","tags":["operations","email"]},{"location":"118/index.html","title":"Reason why some things will not work on apple","text":"<p>While researching for an ergonomic vertical mouse I ran into a quote from evoluent on why they do not have drivers.</p> <p>Due to recent Mac OS update, our driver must be updated to maintain compatibility. We need a driver development kit from Apple but they have not replied to our request even after repeated emails. Therefore our driver development is unable to proceed. We apologize for the delay and will continue to contact Apple for the resource. Alternatively, the third party software USB Overdrive www.usboverdrive.com may be used to program the buttons on VerticalMouse. (Evoluent is not affiliated with USB Overdrive.)</p> <p>Basically apple doesn\u2019t support small vendors</p>","tags":["fleeting","macosx"]},{"location":"119/index.html","title":"Tmux integration with iTerm 2","text":"<p>Ran into a comment while researching about different on tiling window managers on MacOS that iTerm 2 has some tmux integrations. It mentions that <code>tmux -CC</code> may be needed in order to use the integrations</p>","tags":["workstation","macosx"]},{"location":"12/index.html","title":"How to view and edit pdfs and the command line","text":"<p>On a Debian based Linux distribution the program <code>pdftotext</code> can be installed from the package <code>poppler-utils</code>. From there you can open up a pdf with <code>less</code>.</p>","tags":["cli","linux","office"]},{"location":"120/index.html","title":"Diablo 4 completions","text":"","tags":["diablo","gaming"]},{"location":"120/index.html#fractured-peaks","title":"Fractured Peaks","text":"","tags":["diablo","gaming"]},{"location":"120/index.html#quests","title":"Quests","text":"<ul> <li>: Exorcist\u2019s Cache</li> <li>: Gold well spent</li> <li>: Legacy of lights watch</li> <li>: Ravenous dead</li> <li>: Secret of the Spring</li> <li>: The cleansing flame</li> <li>: The sealed door</li> <li>: What do you need</li> <li>: Raising Spirits</li> <li>: Bound by blood</li> <li>: Menestad Coffers</li> <li>: Travelers prayers</li> </ul>","tags":["diablo","gaming"]},{"location":"121/index.html","title":"Necromancer leveling build on Diablo 4","text":"<p>Skill tree</p> Order Skill Cluster 1 Bone Splinters Basic Skill 2 Enhanced Bone Splinters Basic Skill 3 Blood Surge or Bone Spear Core Skill 4 Blood Surge or Bone Spear Level 2 Core Skill 5 Blood Surge or Bone Spear Level 3 Core Skill 6 Blood Surge or Bone Spear Level 4 Core Skill 7 Blood Surge or Bone Spear Level 5 Core Skill 8 Corpse Explosion Corpse &amp; Macabre Skill 9 Enhanced Corpse ExplosionEnhanced Corpse Explosion Corpse &amp; Macabre Skill 10 Hewed Flesh Core Skill 11 Hewed Flesh Level 2 Core Skill 12 Hewed Flesh Level 3 Core Skill 13 Grim Harvest Corpse &amp; Macabre Skill 14 Grim Harvest Level 2 Corpse &amp; Macabre Skill 15 Grim Harvest Level 3 Corpse &amp; Macabre Skill 16 Enhanced Bone Spear Core Skill 17 Supernatural Bone Spear Core Skill 18 Corpse Explosion Level 2 Corpse &amp; Macabre Skill 19 Corpse Explosion Level 3 Corpse &amp; Macabre Skill 20 Corpse Explosion Level 4 Corpse &amp; Macabre Skill 21 Corpse Explosion Level 5 Corpse &amp; Macabre Skill 22 Skeletal Warrior Mastery Corpse &amp; Macabre Skill 23 Skeletal Warrior Mastery Level 2 Corpse &amp; Macabre Skill 24 Skeletal Warrior Mastery Level 3 Corpse &amp; Macabre Skill 25 Plagued Corpse Explosion Corpse &amp; Macabre Skill 26 Serration Corpse &amp; Macabre Skill 27 Serration Level 2 Corpse &amp; Macabre Skill 28 Serration Level 3 Corpse &amp; Macabre Skill 29 Compound Fracture Corpse &amp; Macabre Skill 30 Evulsion Corpse &amp; Macabre Skill 31 Evulsion Level 2 Corpse &amp; Macabre Skill 32 Ossified Essence Key Passives 33 Evulsion Level 3 Corpse &amp; Macabre Skill 34 Unliving Energy Core Skill 35 Unliving Energy Level 2 Core Skill 36 Unliving Energy Level 3 Core Skill 37 Fueled by Death Corpse &amp; Macabre Skill 38 Fueled by Death Level 2 Corpse &amp; Macabre Skill 39 Fueled by Death Level 3 Corpse &amp; Macabre Skill 40 Blood Mist Corpse &amp; Macabre Skill 41 Compound Fracture Level 2 Corpse &amp; Macabre Skill 42 Compound Fracture Level 3 Corpse &amp; Macabre Skill 43 Imperfectly Balanced Core Skill 44 Imperfectly Balanced Level 2 Core Skill 45 Imperfectly Balanced Level 3 Core Skill 46 Decrepify Curse Skill 47 Enhanced Decrepify Curse Skill 48 Necrotic Carapace Corpse &amp; Macabre Skill 49 Necrotic Carapace Level 2 Corpse &amp; Macabre Skill 50 Necrotic Carapace Level 3 Corpse &amp; Macabre Skill 51 Death\u2019s Reachs Reach Curse Skill 52 Death\u2019s Reachs Reach Level 2 Curse Skill 53 Death\u2019s Reachs Reach Level 3 Curse Skill 54 Amplify Damage Curse Skill 55 Amplify Damage Level 2 Curse Skill 56 Amplify Damage Level 3 Curse Skill 57 Decrepify Level 2 Curse Skill 58 Decrepify Level 3 Curse Skill <p>At level 15 swap blood surge for bone spear</p>","tags":["diablo","gaming","necromancer"]},{"location":"122/index.html","title":"My vim setup","text":"<p>Lately I have been using neovim rather than vim. The reason being is that I spent some time setting up neovim and is more setup that my vim setup currently. However, vim might be a better choice as it is more stable than neovim. I also don\u2019t really use neovim as an IDE like I originally planned.</p> <p>For managing dependencies is plug.vim. Here is how to quickly install it.</p> <pre><code>curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n</code></pre> <p>This is automated for me using chezmoi. See how I use chezmoi to manage my dotfiles for more information.</p> <p>See my vimrc in my dotfiles repo</p> <p>Here are my requirements:</p> <ul> <li>VSCode like tab completion</li> <li>Help docs</li> <li>LSP</li> <li>Formatting</li> <li>Linting</li> <li>Snippets</li> </ul>","tags":["vim","cli","dotfiles"]},{"location":"123/index.html","title":"Problems with Linux as a workstation","text":"<p>Here are some common</p> <ul> <li>Tiling window managers are too minimal</li> <li>Hardware compatibility tends to be problematic. For example, the WIFI on my desktop tends to drop packets. Works fine under windows.</li> <li>Gnome desktop is buggy</li> <li>Different way to manage time between windows and Linux.</li> <li>Can\u2019t configure some hardware devices such as keyboard on mouse under Linux.</li> <li>Usually end up dual booting with windows adding some extra complexity</li> <li>Easier to disable secure boot so no TPM out of the box</li> <li>Screen sharing is broken on Linux</li> <li>Common cross-platform software is missing features. Zoom for example doesn\u2019t have blur</li> </ul>","tags":["linux","worksation"]},{"location":"124/index.html","title":"Sync a directory with rsync","text":"<p>Here is some terminology</p> <ul> <li>sync:: make directory a look like directory b.</li> <li>overwrite: make contents of a write over contents of b.</li> </ul> <p>Here is the command in question</p> <pre><code>rsync -avv jlrickert@jlrickert.me:/home/crazy_app/public_html/application/files/ application/files\n</code></pre> <p>The <code>-a</code> is an alias for <code>--archive</code>. This is the same as <code>-rlptgoD</code>.</p> Option Description <code>-r</code> recursive <code>-l</code> copy symlinks as symlinks <code>-p</code> preserve permissions <code>-t</code> preserve times <code>-g</code> preserve group <code>-o</code> preserve owner (sudo only) <code>-D</code> same as <code>--devices --specials</code>. Ignored under most conditions. <p>The <code>-v</code> just adds more verbosity.</p> <p>The ending <code>/</code> in for the source directory keeps <code>rsync</code> from creating nested directories. For example, it is not desirable to have <code>file/file</code> when we want <code>file</code>. This is a common error that I find myself making often. This will overwrite files. If you want to sync add the <code>--delete</code> flag.</p>","tags":["cli","devops"]},{"location":"125/index.html","title":"Programmatic bash completions","text":"<p>Opinionated way to do completions in bash. Completions are located in the script itself</p> <ul> <li><code>inputrc</code></li> </ul> <p>Relevant variables:</p> Variable Description <code>COMPREPLY</code> An array to push to for options that are available for completions <code>COMP_WORDS</code> an array of all the words typed after the name of the program <code>COMP_LINE</code> the current command line <p><code>complete options</code>:</p> Option name Description <code>-o</code> option comp-option <code>-C</code> Executed in a Subshell <code>-c</code> <p>Overall this is my preferred way to do bash completions</p>","tags":["bash","cli"]},{"location":"125/index.html#enabling-completions","title":"Enabling completions","text":"<p>For bash I use all you need to do is <code>complete -C prog prog</code> where prog is a program found within your path.</p>","tags":["bash","cli"]},{"location":"125/index.html#example","title":"Example","text":"<p>Okay, here is a Bash script example using <code>zet</code> as the command name, demonstrating completion detection with <code>COMP_LINE</code> and exiting early.</p> <p>Okay, here are two Bash script examples (<code>ku</code> and <code>zet</code>), demonstrating completion handling using the <code>COMP_LINE</code> environment variable for detection. As requested, the <code>complete</code> command itself is not in the scripts and needs to be run in your shell session. The scripts will echo the suggested completions to standard output and exit early when <code>COMP_LINE</code> is set.</p> <p>This approach requires the shell\u2019s <code>complete -C</code> to do the final filtering based on what the user has typed (<code>$cur</code>).</p> <p>1. Simple Example (<code>ku</code>) - <code>ku.sh</code>:</p> <p>This script provides a fixed list of directions (<code>up</code>, <code>down</code>, <code>left</code>, <code>right</code>) for completion.</p> <pre><code>#!/bin/bash\n\n# This is the script 'ku.sh'\n\n# --- Completion Detection and Handling ---\n\n# Check if the COMP_LINE environment variable is set.\n# This variable is set by the shell's 'complete' built-in when it calls\n# this script to get completion candidates. If it's set (non-empty),\n# we know we are in a completion context.\nif [[ -n \"$COMP_LINE\" ]]; then\n    # We are in completion mode.\n\n    # Define the full list of possible completion words.\n    # These are the suggestions we want to offer.\n    local completion_words=\"up down left right forward backward\"\n\n    # We don't need to parse COMP_WORDS or COMP_CWORD directly here\n    # if we rely on 'complete -C' to do the filtering.\n    # We just echo the full list of possibilities relevant to *some* context\n    # and let compgen/complete filter it.\n\n    # Echo the list of possible words, separated by spaces or newlines.\n    # Bash's 'complete -C' expects words on standard output.\n    echo \"$completion_words\"\n\n    # Exit immediately after providing the completion list.\n    exit 0\nfi\n\n# --- Normal Command Execution (if not in completion mode) ---\n\n# If COMP_LINE was NOT set, the script proceeds here to execute the command logic.\necho \"--- Running the actual ku command ---\"\necho \"Arguments received: $@\"\n\n# Placeholder for your actual command logic\ncase \"$1\" in\n    up)    echo \"Moving up!\" ;;\n    down)  echo \"Moving down!\" ;;\n    left)  echo \"Turning left.\" ;;\n    right) echo \"Turning right.\" ;;\n    *)\n        echo \"Unknown direction: $1\"\n        echo \"Usage: ku &lt;up|down|left|right&gt;\"\n        exit 1\nesac\n\nexit 0\n</code></pre> <p>2. Delegation Example (<code>zet</code>) - <code>zet.sh</code>:</p> <p>This script provides different completion suggestions based on whether you\u2019re completing the first argument (subcommand) or a subsequent argument (like a note ID after <code>view</code> or <code>link</code>). This does require looking at <code>COMP_CWORD</code> and <code>COMP_WORDS</code> to understand the context of the completion, even if we don\u2019t use <code>COMPREPLY</code>.</p> <pre><code>#!/bin/bash\n\n# This is the script 'zet.sh'\n\n# --- Completion Detection and Handling ---\n\n# Check if we are being invoked by Bash's completion system.\nif [[ -n \"$COMP_LINE\" ]]; then\n    # We are in completion mode.\n    # (Optional) Uncomment for debug:\n    # echo \"DEBUG: COMP_LINE='$COMP_LINE', POINT='$COMP_POINT', CWORD='$COMP_CWORD'\" &gt;/dev/stderr\n    # echo \"DEBUG: WORDS='${COMP_WORDS[@]}'\" &gt;/dev/stderr\n\n    local cur prev\n\n    # Get the current word being completed\n    cur=\"${COMP_WORDS[COMP_CWORD]}\"\n    # Get the word immediately before the current word, if one exists\n    if [[ \"$COMP_CWORD\" -gt 0 ]]; then\n      prev=\"${COMP_WORDS[COMP_CWORD-1]}\"\n    else\n      prev=\"\" # No previous word if completing the first arg\n    fi\n\n    # --- Define possible completion candidates (static lists for this example) ---\n    local subcommands=\"create view search link update delete\"\n    # Example IDs and aliases from your KEG, simulate this being dynamic\n    local keg_candidates=\"0 16 35 459 887 921 keg-intro bash-guide dotfiles homelab neovim-editor my-project keg-specifications\"\n\n    # --- Determine which list of suggestions to provide based on context ---\n\n    local suggestions=\"\"\n\n    # Context 1: Completing the first argument (the subcommand)\n    # If COMP_CWORD is 1, the previous word (COMP_WORDS[0]) is the command name ('zet')\n    if [[ \"$COMP_CWORD\" -eq 1 ]]; then\n        suggestions=\"$subcommands\"\n    # Context 2: Completing an argument after 'view', 'link', 'update', or 'delete'\n    # Check the previous word ($prev)\n    elif [[ \"$prev\" == \"view\" || \"$prev\" == \"link\" || \"$prev\" == \"update\" || \"$prev\" == \"delete\" ]]; then\n        suggestions=\"$keg_candidates\"\n    # Add more elif cases for other contexts if needed (e.g., args after 'search')\n\n    # Default: If no specific context is matched, provide general candidates or nothing\n    # (For this example, we'll provide nothing if the context isn't recognized)\n    # else\n    #    suggestions=\"$keg_candidates\" # Could fallback to general keg items\n    fi\n\n    # --- Output the suggestions ---\n    # compgen filters the list ($suggestions) based on the current input ($cur)\n    # compgen -W \"$suggestions\" -- \"$cur\" outputs results relevant to $cur prefix\n    # We echo these results directly for 'complete -C'\n    echo \"$(compgen -W \"$suggestions\" -- \"$cur\")\"\n\n    # Exit immediately after providing the list.\n    exit 0\nfi\n\n# --- Normal Command Execution (if not in completion mode) ---\n\n# If COMP_LINE was NOT set, the script proceeds here to execute the command logic.\necho \"--- Running the actual zet script ---\"\n\n# Access command-line arguments passed by the user\nCOMMAND=\"$1\"\nshift # Remove subcommand\nARGS=(\"$@\") # Remaining arguments\n\necho \"Subcommand: '$COMMAND'\"\necho \"Remaining Arguments: '${ARGS[@]}'\"\n\n# Placeholder logic for your command execution\ncase \"$COMMAND\" in\n    create) echo \"Action: Creating...\" ;;\n    view) echo \"Action: Viewing ${ARGS[0]}...\" ;;\n    search) echo \"Action: Searching for ${ARGS[@]}...\" ;;\n    link) echo \"Action: Linking ${ARGS[@]}...\" ;;\n    update) echo \"Action: Updating ${ARGS[0]}...\" ;;\n    delete) echo \"Action: Deleting ${ARGS[0]}...\" ;;\n    *)\n        if [[ -z \"$COMMAND\" ]]; then\n            echo \"No subcommand provided.\"\n        else\n            echo \"Unknown subcommand: $COMMAND\"\n        fi\n        echo \"Usage: zet &lt;subcommand&gt; [args...]\"\n        exit 1\nesac\n\nexit 0\n</code></pre> <p>How to Use Both Examples:</p> <ol> <li>Save the scripts: Save the first code block as <code>ku.sh</code> and the second as <code>zet.sh</code>.</li> <li>Make them executable: <code>bash     chmod +x ./ku.sh     chmod +x ./zet.sh</code></li> <li> <p>Register the scripts for completion (<code>in your shell session</code>):     ```bash     # Register ku:     complete -C \u201c./ku.sh\u201d ku</p> </li> <li> <p>Test completion for <code>zet</code>:</p> <ul> <li>Type <code>zet</code> (with a space) and press Tab. You should see <code>create delete link search update view</code>. (These are the <code>subcommands</code>).</li> <li>Type <code>zet v</code> and press Tab. It should complete to <code>zet view</code>.</li> <li>Type <code>zet view</code> (with a space) and press Tab. You should then see the list of <code>keg_candidates</code> like <code>0 16 35 459 887 921 bash-guide dotfiles ...</code>.</li> <li>Type <code>zet link</code> (with a space) and press Tab. You should also see the <code>keg_candidates</code> list again.</li> <li>Type <code>zet link 16</code> (with a space) and press Tab. For this simple example, it will fall back to default completion (like files/directories) because we didn\u2019t add logic for arguments after the first one for view/link/update/delete. In a real application, you\u2019d add more <code>elif</code> checks based on <code>COMP_CWORD</code> and preceding words to offer relevant suggestions (e.g., tags, filenames, etc.).</li> </ul> </li> <li> <p>Test normal execution:</p> <ul> <li>Type <code>ku right</code> and press Enter.</li> <li>Type <code>zet view 921</code> and press Enter.</li> <li>Type <code>zet unknown_command test</code> and press Enter.</li> </ul> </li> </ol> <p>Notice that when you press Tab, you only see the output relevant to completion (the lists). When you press Enter, you see the \u201c\u2014 Running the actual\u2026 \u2014\u201d message and the command\u2019s normal output.</p>","tags":["bash","cli"]},{"location":"125/index.html#register-zet","title":"Register zet:","text":"<p>complete -C \u201c./zet.sh\u201d zet <code>`` *(To make these persistent across shell sessions, add the</code>complete<code>lines to your</code>~/.bashrc<code>or similar shell configuration file).* 4.  **Test completion for</code>ku<code>:** *   Type</code>ku <code>(with a space) and press Tab. You should see</code>backward forward down left right up<code>. *   Type</code>ku d<code>and press Tab. It should show</code>down`. Type Tab again to select or complete.</p>","tags":["bash","cli"]},{"location":"126/index.html","title":"Golang development loop with multi repos","text":"<p>Version 1.18 of go has workspace feature. This allows using a <code>go.work</code> file to use override the location of the source of dependencies.</p> <ul> <li>Create a repo</li> <li>Create a module</li> <li>Include dependencies</li> </ul> <p>Files related to the project</p> <ul> <li><code>go.work</code></li> <li> <p><code>go.mod</code></p> </li> <li> <p>Create a new project with</p> </li> </ul> <p><code>go.mod init domain.com/name</code></p> <ul> <li>Fetch all dependencies</li> </ul> <p><code>go get .</code></p>","tags":["golang","programming"]},{"location":"126/index.html#tutorial-dump","title":"Tutorial dump","text":"<p>The tutorial runs everything relative to a workspace <code>directory</code>.</p> <p>Files and their contents once everything has been modified.</p> <ul> <li><code>hello/hello.go</code></li> </ul> <p>```go   package main</p> <p>import (       \u201cfmt\u201d</p> <pre><code>  \"golang.org/x/example/hello/reverse\"\n</code></pre> <p>)</p> <p>func main() {       fmt.Println(reverse.String(\u201cHello\u201d))   }   ```</p> <ul> <li> <p><code>hello/go.mod</code> Contains the package name and the <code>example/hello</code> dependency.</p> </li> <li> <p><code>example/go.work</code> is where the magic happens</p> </li> </ul> <p><code>go   go 1.18   use (       ./hello       ./example/hello   )</code></p> <ul> <li><code>example/hello/reverse</code></li> </ul> <p>```go   package reverse</p> <p>import \u201cstrconv\u201d</p> <p>// Int returns the decimal reversal of the integer i.   func Int(i int) int {       i, _ = strconv.Atoi(String(strconv.Itoa(i)))       return i   }   ```</p> <ul> <li><code>example/go.mod</code></li> </ul> <p><code>go   module golang.org/x/example/hello   go 1.19</code></p> <p>One thing that I have figure out is that I am able to change the working directory to <code>workspace/hello</code> rather than <code>workspace</code>. This is accomplished by modifying the <code>go.work</code> file to the following:</p> <pre><code>go 1.18\nuse (\n    .\n    ../example/hello\n)\n</code></pre> <p>Found with this setup is that I can change the root directory that I want to work out of.</p>","tags":["golang","programming"]},{"location":"126/index.html#see-also","title":"See also","text":"<ul> <li>Go workspace tutorial</li> </ul>","tags":["golang","programming"]},{"location":"127/index.html","title":"A quick to making a module in golang","text":"<p>Create a go module with <code>go mod init domain.com/name/repo</code></p>","tags":["golang","programming"]},{"location":"128/index.html","title":"WordPress plugin Gravity forms","text":"<p>Gravity forms is a form management plugin for word press. It offers an accessible GUI for building forms. For more details see there website.</p>","tags":["php","wordpress"]},{"location":"129/index.html","title":"How to use arrays in bash","text":"Syntax Result <code>arr=()</code> Create an empty array <code>arr=(1 2 3)</code> Initialize array <code>${arr[2]}</code> Retrieve third element <code>${arr[@]}</code> Retrieve all elements <code>${!arr[@]}</code> Retrieve array indices <code>${#arr[@]}</code> Calculate array size <code>arr[0]=3</code> Overwrite 1st element <code>arr+=(4)</code> Append value(s) <code>str=$(ls)</code> Save ls output as a string <code>arr=( $(ls) )</code> Save ls output as an array of files <code>${arr[@]:s:n}</code> Retrieve n elements starting at index s <p>Here are some examples:</p> <ul> <li>Print out all elements in an array.</li> </ul> <p><code>bash   # print out contents in the array   echo \"${arr[@]}\"</code></p> <ul> <li>Print out the first element in an array. Need to verify this</li> </ul> <p><code>bash   # print out contents in the array   echo \"${arr}\"</code></p>","tags":["bash","programming"]},{"location":"13/index.html","title":"Nginx clear cache hack with echo \u201c\u201d","text":"<p>I learned a cool thing from krisnova where you can clear the cache without having to restart. This is accomplished by running <code>echo \"\" &gt; /nginx/cache</code>. The reason why it works is that it keeps all the file descriptors open.</p> <p>It is apparently based on an older kernel hack.</p> <p>Timestamps of the mention Fri 09 Dec 2022 01:14:34 PM CST</p>","tags":["linux","operations","www","devops","nginx"]},{"location":"130/index.html","title":"How to configure bash scripting behavior","text":"<p>Here are some of the long form options that I know of.</p> <pre><code>set -o errexit  # exit if non-zero status code is returned\nset -o nounset  # exit if undefined variable is used\nset -o pipefail # exit if no-zero status code is returned in a pipeline\n</code></pre> <p>For more in depth information read the bash docs about the built in set command.</p>","tags":["bash","cli"]},{"location":"131/index.html","title":"WordPress development key concepts","text":"<p>WordPress is a platform originally built to be a blogging platform. Currently, it has expanded to be a generic website builder with a traditional CMS.</p> <p>Here are the key concepts to learn.</p> <ul> <li>Core concepts: CMS, Multisite network, plugin, theme.</li> <li>Data: database, database table, loop, metadata, query.</li> <li>Content types: attachment, category, page, post, post format, post type, tag, taxonomy, term, revision.</li> <li>File types: child theme, config file, functions file, include file, stylesheet, template file, template hierarchy, template part.</li> <li>Admin tools: Customizer, meta box, navigation menu, options, settings, shortcode, widget.</li> <li>Code: action hook, API, class, filter hook, function, object, Object Oriented Programming, property, method, template tag.</li> <li>Permissions: capability, role.</li> <li>Security: NONCE keys, SALT keys, sanitization, validation.</li> </ul> <p>See the developer [documentation] for a deep dive.</p> <p>Common development tools</p> <ul> <li>wordpressify</li> </ul> <p>Hosting platforms</p> <ul> <li>WP Engine</li> <li>GoDaddy managed WordPress</li> <li>WP Pusher</li> </ul>","tags":["wordpress","php","wysiwyg"]},{"location":"131/index.html#key-concepts-for-plugin-development","title":"Key concepts for plugin development","text":"","tags":["wordpress","php","wysiwyg"]},{"location":"131/index.html#key-concepts-for-theme-development","title":"Key concepts for theme development","text":"<p>The domain is as follows</p> <ul> <li>Full site editor</li> </ul> <p>The Full site editor (FSE) is what the user managing content uses. It is also known as the Gutenberg editor</p> <ul> <li>block</li> </ul> <p>A block is an atomic piece that is designed to be composed with other blocks to build up pages, posts, and reusable blocks.</p> <p>Some blocks may allow nesting of other blocks, also called InnerBlocks. This allows compositions of blocks create to build up pages, posts, and reusable blocks. This is the items that you use to build things in the FSE. For example, a Group block with a child paragraph block can be used to create a page with colored background and a paragraph in the center of the group. A block has attributes. See the core block reference on the documentation for what blocks are available.</p> <ul> <li>block variant</li> </ul> <p>A block variant is a predefined set of attributes for a block</p> <ul> <li>pattern</li> </ul> <p>A pattern is a template that generates a series of blocks in a particular arrangement. A pattern is not reusable by itself but can be used to make a site specific reusable block. A pattern may be part of a plugin or theme.</p> <ul> <li>template part</li> </ul> <p>A part is a theme specific reusable block. Its primary role is to build up templates.</p> <ul> <li>reusable block</li> </ul> <p>A reusable block allows for a shared block to be used across the site. This is site specific. A template part may also be thought of as a reusable block that is theme specific.</p> <ul> <li>theme</li> </ul> <p>A theme is how the contents are generated. The data built out for a site utilizing the FSE creates and manages data in the database. This is then fed into a theme that then decides how the content is displayed for the user. A theme is managed through code. This means that it may be managed with version control.</p> <ul> <li>site</li> </ul> <p>A site is the website that is being built. Typically this is stateful data and is placed in a database. Site data may managed via database migrations and backups.</p>","tags":["wordpress","php","wysiwyg"]},{"location":"131/index.html#opinionated-development-setup","title":"Opinionated development setup","text":"<p>See also:</p> <ul> <li>https://dev.to/ingosteinke/classic-themes-with-block-patterns-in-wordpress-1ncp</li> </ul>","tags":["wordpress","php","wysiwyg"]},{"location":"132/index.html","title":"How to get started developing themes and plugins with WordPress","text":"<p>WordPress can be hosted and developed locally on you machine. It consists of 4 things: content, themes, plugins, and the core.</p> <p>Use this docker compose file</p> <pre><code>bash\nversion: \"3.1\"\n\nservices:\n  wordpress:\n    image: wordpress\n    restart: always\n    ports:\n      - 8080:80\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: exampleuser\n      WORDPRESS_DB_PASSWORD: examplepass\n      WORDPRESS_DB_NAME: exampledb\n    volumes:\n      - .:/var/www/html/wp-content\n\n  db:\n    image: mysql:5.7\n    platform: linux/x86_64\n    restart: always\n    environment:\n      MYSQL_DATABASE: exampledb\n      MYSQL_USER: exampleuser\n      MYSQL_PASSWORD: examplepass\n      MYSQL_RANDOM_ROOT_PASSWORD: \"1\"\n    volumes:\n      - db:/var/lib/mysql\n\nvolumes:\n  db:\n</code></pre> <p>Running <code>docker-compose up</code> with docker compose file will spin up a new WordPress site. It will create a themes and plugins directory. It gives you a few starter plugins and themes to use.</p> <pre><code>docker-compose up\n</code></pre> <p>See also:</p> <ul> <li>VSCode setup for php and WordPress development</li> </ul>","tags":["wordpress","php","javascript"]},{"location":"133/index.html","title":"OS Fingerprinting strategies in bash","text":"<p>Being able to detect what environment is problem that comes up often. It is a requirement when writing install scripts that need to support multiple environments. Some environments include: MacOS, Debian, Ubuntu, Arch, Windows, WSL 1, WSL 2, and different CI/CD environments.</p> <ul> <li>Detect if running in WSL</li> </ul> <p>```bash   if [[ \u201c$(uname -r)\u201d =~ Microsoft ]]; then   fi</p> <p># Untested   if grep -q -i microsoft /proc/version; then   fi   ```</p> <ul> <li>Detect if running in MacOSX</li> </ul> <p><code>bash   if [[ \"$(uname -r)\" =~ Darwin ]]; then   fi</code></p> <ul> <li>Detect Linux distribution being used</li> </ul> <p><code>bash   NAME=\"$(cat /etc/*-release | grep \"^ID=\" | awk -F'=' '{print $2}')\"   case $NAME in   'fedora') ;;   'debian') ;;   'ubuntu') ;;   'arch') ;;   esac</code></p>","tags":["bash","cli","sysadmin"]},{"location":"134/index.html","title":"Recommended PHP language server to use","text":"<p>The 3 choices of language servers for PHP are as follows: intelephense, phpactor, psalm, and devsense. Neovim has the option of running all but devsense. VSCode really only has 2 choices, intelephense and devsense.</p> <p>Intelephense is not open source. The o</p> LSP Open source Comments intelephense no phpactor yes psalm yes is this old? devsense no Deprecated. Can\u2019t remember name. Don\u2019t care <p>I found the available php servers from the mason lspconfig extension\u2019s list of available servers.</p> <p>Visual studio has another popular plugin simply named PHP from devsense</p> <p>Visual studio plugins</p> <p>Recommended Visual studio plugins</p> <ul> <li>PHP intelephense</li> <li>PHP Debug</li> <li>WordPress snippet</li> </ul> <p>Comparison</p> Feature psalm phpactor intelephense Code completion x x search symbol x signature help x x diagnostics x formatting x rename x x highlighting x html/css/js integration x code folding paid go to type def paid go to declaration paid code actions paid <p>For WordPress stuff use WordPress snippet PHP Debug</p>","tags":["php","lsp","neovim"]},{"location":"135/index.html","title":"Task to figure out how to make scrolling faster on MacOS","text":"<p>For some reason holding j doesn\u2019t behave as expected. I am expecting to continuously move down as I hold it.</p> <p>I found an issue on GitHub that sounds like the one that I am having.</p> <p>Tried running this from the comments about the issue but no luck. Have not tried restarting anything after running though.</p> <pre><code>defaults write com.Microsoft.VisualStudioCode ApplePressAndHoldEnabled -bool false\n</code></pre> <ul> <li> TODO: fix j behavior on MacOS for VSCode</li> </ul> <p>Meta:</p> <pre><code>tags: #fixme #macOS #vscode #programming\n</code></pre>"},{"location":"136/index.html","title":"How to setup VSCode for PHP and WordPress development","text":"<p>VSCode is a decent IDE for WordPress development. Currently, I am using Intelphense for a language server. It is missing some key features that I would like as I am using the free version. Phpactor seems like It might be a free option that does everything that is needed but doesn\u2019t look like it is available.</p> <p>Here are the steps to setup</p> <p>Add some where to the stubs in <code>.vscode/settings.json</code> for either the current workspace or globally.</p> <pre><code>\"intelephense.stubs\": [\n    \"wordpress\"\n]\n</code></pre>","tags":["wordpress","webdev","programming"]},{"location":"137/index.html","title":"Place: Como Park Zoo and Conservatory in St Paul Minnesota","text":"<p>Como zoo is a small zoo located on the north side of St Paul. It is completely free to visit. Parking is no issue here.</p>","tags":["place","zoo","twincities"]},{"location":"138/index.html","title":"Place: Cuzzy\u2019s Grill and bar in downtown Minneapolis","text":"<p>Cuzzies is an old dive located in downtown Minneapolis. It is located within walking distance of the office at Br8kthru.</p>","tags":["place"]},{"location":"139/index.html","title":"How to setup bbPress forums in WordPress","text":"<p>Word press that has a plugin for creating forums. In order to use forums the theme has to have support for it. For more details read the post at bbPress about theme compatibility. A default theme that has support is <code>twentytwentyone</code>.</p> <p>To get started copy over <code>plugins/bbpress/templates/default</code> to <code>themes/</code></p> <pre><code>cp plugins/bbpress/templates/default/bbpress themes/YOUR_THEME/bbpress\ncp plugins/bbpress/templates/default/css/ themes/YOUR_THEME/css\ncp plugins/bbpress/templates/default/js themes/YOUR_THEME/js\ncp plugins/bbpress/templates/default/extras/ themes/YOUR_THEME/\ncp plugins/bbpress/templates/default/bbpress-functions.php themes/bbpress-function.php\n</code></pre> <p>If you don\u2019t want <code>css</code> and <code>js</code> at the root of your theme modify <code>bbpress-functions.php</code></p>","tags":["wordpress","php","development"]},{"location":"14/index.html","title":"Fierce armor kit construction cost calculation","text":"<p>This is for crafting a bunch of fierce armor kits to level up leveling leather working on my evoker ravaire.</p> <p>These calculations have been calculated on Fri 09 Dec 2022 07:50:30 PM CST during season 1 of Dragonflight.</p> item cost amount cost cost for 5 awakened earth 400 10 4000 20000 Stone crust Hide (3) 1650 4 6600 33000 Stone crust Hide (2) 885 4 4425 22125 Resilient Leather (2) 3 60 180 900 Resilient Leather (3) 15 60 900 4500 Fierce Armor Kit (2) 2600 1 2600 13000 Fierce Armor Kit (3) 15000 1 15000 75000 all mats (2) 8425 1 8425 42125 all mats (3) 8425 1 10600 53000 <p>Despite seemly looking like it is high profit a high skill is required. I am only able to create level 1 at the time.</p>","tags":["evoker","wow","gaming"]},{"location":"140/index.html","title":"How to create your own theme in WordPress","text":"<p>On a fresh WordPress install there will be a few example themes to get you started. They are <code>twentytwentyone</code>, <code>twentytwentythree</code>, and <code>twentytwentytwo</code>. There are 2 different types of themes. One is block and the other is classic. <code>twentytwentyone</code> is an example of a classic theme while the other 2 are block themes.</p> <p>Key concepts</p> <ul> <li>template</li> <li>template-part</li> <li>block patterns</li> </ul> <p>Minimum required files</p> <ul> <li><code>templates/index.html</code></li> <li><code>style.css</code></li> <li><code>theme.json</code></li> </ul> <p>Basic directory structure of <code>twentytwentyone</code></p> <pre><code>.\n\u251c\u2500\u2500 assets (dir)/\n\u2502   \u251c\u2500\u2500 css (dir)\n\u2502   \u251c\u2500\u2500 images (dir)\n\u2502   \u2514\u2500\u2500 js (dir)\n\u251c\u2500\u2500 inc (dir)\n\u251c\u2500\u2500 template-parts (dir)/\n\u2502   \u251c\u2500\u2500 footer (dir)\n\u2502   \u251c\u2500\u2500 header (dir)\n\u2502   \u251c\u2500\u2500 navigation (dir)\n\u2502   \u251c\u2500\u2500 page (dir)\n\u2502   \u2514\u2500\u2500 post (dir)\n\u251c\u2500\u2500 404.php\n\u251c\u2500\u2500 archive.php\n\u251c\u2500\u2500 comments.php\n\u251c\u2500\u2500 footer.php\n\u251c\u2500\u2500 front-page.php\n\u251c\u2500\u2500 functions.php\n\u251c\u2500\u2500 header.php\n\u251c\u2500\u2500 index.php\n\u251c\u2500\u2500 page.php\n\u251c\u2500\u2500 README.txt\n\u251c\u2500\u2500 rtl.css\n\u251c\u2500\u2500 screenshot.png\n\u251c\u2500\u2500 search.php\n\u251c\u2500\u2500 searchform.php\n\u251c\u2500\u2500 sidebar.php\n\u251c\u2500\u2500 single.php\n\u2514\u2500\u2500 style.css\n</code></pre> <p><code>theme.json</code> includes CSS variables.</p>","tags":["php","wordpress","development","programming"]},{"location":"141/index.html","title":"Issue: Task to fix keybinding issues between MacOS and ranger","text":"<p>I discovered that ranger uses alt-n for tab usage. This conflicts with my current hotkeys for window management with Yabai.</p> <ul> <li> TODO: fix ranger hotkeys</li> </ul>","tags":["macosx","issue","workstation","cli"]},{"location":"142/index.html","title":"How to effectively use cp","text":"<p>For copying files things are very straight forward. The basic syntax is one of these:</p> Command Outcome <code>cp -R [...options] dir dir</code> Copy source directory into destination directory <code>cp -R [...options] dir/ dir</code> Copy source directory contents into destination directory <code>cp [...options] file file</code> Copy file to another location <code>cp [...options] file [...file] dir</code> Copy over files to a destination directory <p>A trailing / on the source directory will copy the contents to the destination. If not are present then the directory itself will be copied over. Another interesting thing is that <code>-R</code> is used over <code>-r</code>. Historically, <code>-r</code> is what I used. However, <code>-R</code> is the correct one to use.</p> <p>For example <code>cp -R plugins/css/ themes/example/css</code></p> <pre><code>Before\n.\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 css\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 plug-rtl.css\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 plug.css\n\u2514\u2500\u2500\u2500 themes\n \u00a0\u00a0 \u2514\u2500\u2500 example\n \u00a0\u00a0     \u2514\u2500\u2500 css\n \u00a0\u00a0         \u251c\u2500\u2500 css\n \u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 plug-rtl.css\n \u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 plug.css\n \u00a0\u00a0         \u251c\u2500\u2500 example.css\n \u00a0\u00a0         \u251c\u2500\u2500 main.css\n \u00a0\u00a0         \u251c\u2500\u2500 plug-rtl.css\n \u00a0\u00a0         \u2514\u2500\u2500 plug.css\n\nAfter\n.\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 css\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 plug-rtl.css\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 plug.css\n\u2514\u2500\u2500\u2500 themes\n \u00a0\u00a0 \u2514\u2500\u2500 example\n \u00a0\u00a0     \u2514\u2500\u2500 css\n \u00a0\u00a0         \u251c\u2500\u2500 css\n \u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 plug-rtl.css\n \u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 plug.css\n \u00a0\u00a0         \u251c\u2500\u2500 example.css\n \u00a0\u00a0         \u251c\u2500\u2500 main.css\n \u00a0\u00a0         \u251c\u2500\u2500 plug-rtl.css\n \u00a0\u00a0         \u2514\u2500\u2500 plug.css\n</code></pre> <p>For example <code>cp -R plugins/css themes/example/css</code></p> <pre><code>Before\n.\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 css\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 plug-rtl.css\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 plug.css\n\u2514\u2500\u2500\u2500 themes\n \u00a0\u00a0 \u2514\u2500\u2500 example\n \u00a0\u00a0     \u2514\u2500\u2500 css\n \u00a0\u00a0         \u251c\u2500\u2500 example.css\n \u00a0\u00a0         \u2514\u2500\u2500 main.css\n\nAfter\n.\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 css\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 plug-rtl.css\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 plug.css\n\u2514\u2500\u2500\u2500 themes\n \u00a0\u00a0 \u2514\u2500\u2500 example\n \u00a0\u00a0     \u2514\u2500\u2500 css\n \u00a0\u00a0         \u251c\u2500\u2500 css\n \u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 plug-rtl.css\n \u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 plug.css\n \u00a0\u00a0         \u251c\u2500\u2500 example.css\n \u00a0\u00a0         \u2514\u2500\u2500 main.css\n</code></pre>","tags":["cli","devops","linux"]},{"location":"143/index.html","title":"Event: M23SS brewery event at Blackstack Brewing","text":"<p>The weekly Friday brewery event by Minneapolis 20s 30s something social at Blackstack Brewing. Takes roughly 35 minutes to get there from my place.</p> <p>Need to pick up Paddy at redacted.</p>","tags":["event","brewery","M23SS","meetup"]},{"location":"144/index.html","title":"Minneapolis 20s 30s something social meetup group (M23SS)","text":"<p>Minneapolis 20s 30s something social is a meetup group found on meetup.com.</p>","tags":["M23SS","meetup"]},{"location":"147/index.html","title":"Where to get started when design a system","text":"<p>The first thing that should be done when creating a system is domain modeling. Domain modeling is comping up with the terminology of the system.</p>"},{"location":"148/index.html","title":"Domain model for yabai","text":"<ul> <li>query</li> <li>space</li> <li>window</li> <li>layout</li> </ul>","tags":["macosx","design"]},{"location":"148/index.html#query","title":"Query","text":"Command Description","tags":["macosx","design"]},{"location":"148/index.html#space","title":"Space","text":"<p>Space is virtual workspaces on mac</p>","tags":["macosx","design"]},{"location":"148/index.html#window","title":"Window","text":"<p>Window is the individual box. Some attributes that It may have include: is grabbed, is topmost, is sticky, is floating, is hidden, is minimized, is visible, native full screen, has parent zoom, has a border, has shadow, has focus, can resize, stack index.</p>","tags":["macosx","design"]},{"location":"149/index.html","title":"Useful WordPress plugins","text":""},{"location":"149/index.html#block-plugins","title":"Block plugins","text":""},{"location":"149/index.html#backup-plugins","title":"Backup plugins","text":"<ul> <li>Jetpack</li> <li>WP Vivid Backups</li> <li>All in one wordpress</li> </ul>"},{"location":"149/index.html#development-plugins","title":"Development plugins","text":"<p>There are a few plugins that help during development. Here are a few that I found from the official developer wordpress website. Here is the plugins that it suggests: Debug Bar, Query Monitor, Log Deprecated Notices, Monster Widget, and Theme-Check.</p> <ul> <li>Debug Bar</li> <li>Query Monitor</li> <li>Log Deprecated Notices</li> <li>Monster Widget</li> <li>Theme-Check</li> <li>FakerPress</li> </ul> <p>Some of the plugins require modification of the <code>wp-config.php</code> file.</p> <pre><code>tags: #wordpress #php #programming\n</code></pre>"},{"location":"15/index.html","title":"How to quickly test out space vim","text":"<p>Spacevim is a vim version of spacemacs. One of the key features that is promises is the consistent experience between terminal and GUI. One thing that I am hoping is that it is fast to load up</p> <pre><code>docker pull spacevim/spacevim\ndocker run -it --rm spacevim/spacevim nvim\n</code></pre>","tags":["vim","spacemacs"]},{"location":"150/index.html","title":"Basics of skip links in web development","text":"<ul> <li> <p>[ ] TODO: Figure out how to implement a skip list</p> <p>tags: #webdev #programming</p> </li> </ul>"},{"location":"151/index.html","title":"Official WordPress theme review process","text":"<p>In order to be able to submit a theme to WordPress there are guidelines that are required to be met. They are documented in the official WordPress website.</p> <ol> <li>License must be a GPL compatible license. The Apache licence may be compatible. [ ] TODO: figure out if it truly is compatible with GPL.</li> <li>Everything related to privacy needs to be opt in only</li> <li>Skip links need to be implemented</li> <li>There must be no PHP or javascript, errors, warnings, or notices. Must follow basic security principles</li> <li>Don\u2019t be a dick. All functions should be in the open</li> <li>Should only recommend plugins that are hosted on WordPress.org. Manual intervention only.</li> <li>Don\u2019t violate trademarks. Spell WordPress correct. Themes cannot use WordPress, Theme, and Twenty*</li> <li>Strings should be translatable using <code>gettext</code></li> <li>Classic themes</li> </ol>","tags":["wordpress","isosec"]},{"location":"152/index.html","title":"How to setup tailwind for WordPress","text":"<p>Tailwind is a way to do utilize utility CSS to allowing for co-locating CSS within html files. This is also called utility based CSS. This setup is taken from css tricks.</p> <p>In your theme run the following. You may need to initialize a <code>package.json</code> with <code>pnpm init</code>.</p> <pre><code>pnpm i -D tailwindcss\npnpx tailwindcss\n</code></pre> <p>Create <code>tailwind.css</code> with the following content</p> <pre><code>@tailwind base;\n@tailwind components;\n@tailwind utilities;\n</code></pre> <p>Create a <code>tailwind.css</code> with the following content</p> <pre><code>/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  // important: true,  // TODO: this is recomended because of naming conflicts\n  content: [\"./**/*.php\", \"./**/*.html\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n</code></pre> <p>Add <code>wp_enqueue_style('style', get_stylesheet_uri());</code> to your <code>functions.php</code> file.</p> <p>Add a script in <code>package.json</code> to have the value <code>tailwindcss -i ./tailwind.css -o ./style.css --watch</code>.</p> <p>Run with <code>pnpm run watch</code> or the equivalent.</p> <ul> <li> <p>[ ] TODO: Programmatically add script <code>package.json</code> with <code>jq</code></p> <p>tags: #wordpress #php #css #programming</p> </li> </ul>"},{"location":"153/index.html","title":"Overview of a classic theme in WordPress","text":"<p>A classic theme is a more code centric way to create a theme. Although block themes might be the recommended approach, a classic approach may be preferred when you need more customization.</p> <p>The only 2 required files are <code>index.php</code> and <code>style.css</code>.</p> <p>When the client or user sends a request to the site for an html page it uses the query string to determine what template to use.</p> <pre><code>http://example.com/$THING1/$CATEGORY/$SLUG\n</code></pre> <p>Template hierarchy</p> <p>| File           | Description                                    | | -------------- | ---------------------------------------------- | \u2014 | | <code>index.php</code>    | Required file. Default if no template is found | | <code>404.php</code>      |                                                |     | | <code>category.php</code> |</p> <p>Please note that this is still a work in progress.</p>","tags":["wordpress","programming","webdev"]},{"location":"154/index.html","title":"Query strings are thought to impede indexing of dynamic pages","text":"<p>I ran into an interesting quote about the use of query strings in regards to the use of query strings and indexing of dynamic pages.</p> <p>The use of query strings is generally believed to impede the indexing of dynamic pages by search engines</p> <pre><code>#webdev\n</code></pre>"},{"location":"155/index.html","title":"Overview of a block theme in WordPress","text":"<p>A block theme is the newer and recommended way to get started when building out a theme for WordPress. Classic theme should be used when the site gets really complicated (this is an assumption that needs to be verified). A fresh WordPress install will have 2 example block themes to use for reference: <code>twentytwentytwo</code>, and <code>twentytwentythree</code>. An interesting thing to note is that the names are based on the year they where created.</p> <p>To get started the only 2 files that need to exist are <code>index.html</code> and <code>style.css</code>.</p> File Purpose <code>patterns/*</code> <code>parts/footer.html</code> <p>Common Page templates</p> File Description <code>templates/front-page.html</code> Front page to display at <code>/</code>. <code>templates/home.html</code> Front page for the blog at <code>/blog/</code>. This shows latest posts. <code>templates/page.html</code> Individual Page to display. <code>templates/404.html</code> Page to display when content is not found. <code>templates/archive.html</code> List of posts to display <code>templates/singular.html</code> Used when <code>page.html</code> or <code>single.html</code> is not found <code>templates/single.html</code> Post template to use when a single post is requested <code>templates/single-{post-type}.html</code> Post template to use when a single post is requested. <p>Common post types</p> <ul> <li>Post (Post Type: <code>post</code>)</li> <li>Page (Post Type: <code>page</code>)</li> <li>Attachment (Post Type: <code>attachment</code>)</li> <li>Revision (Post Type: <code>revision</code>)</li> <li>Navigation menu (Post Type: <code>nav_menu_item</code>)</li> <li>Block templates (Post Type: <code>wp_template</code>)</li> <li>Template parts (Post Type: <code>wp_template_part</code>)</li> </ul> <p>Parts (also known as partials) are smaller pieces that may be part of a template.</p> File Description <code>parts/header</code> Sites header. This is a special case <code>parts/footer</code> Sites footer. This is a special case <code>parts/sidebar</code> Sites sidebar. This is a special case <p>Styling is done with <code>style.css</code>. It is required and contains information about the theme. By default this is not included the website.</p> <p>Another optional CSS file is <code>rtl.css</code>. WordPress automatically includes if the languages direction is right to left.</p> <pre><code>tags: #wordpress #programming #webdev\n</code></pre>"},{"location":"156/index.html","title":"Overview of the block editor in WordPress","text":"<p>This is the built in feature that is part of the CMS in WordPress.  It an integration with the Gutenberg project.</p> <pre><code>#wordpress #programming #webdev\n</code></pre>"},{"location":"157/index.html","title":"Overview of themes in WordPress","text":"<p>A theme in WordPress is how the content is presented on the page. There are 2 types of ways to develop. Either classic or block theme.</p> <p>Important files</p> File name Description functions.php Hooks related to the theme","tags":["wordpress","programming","webdev"]},{"location":"158/index.html","title":"Thinking about a Zettelkasten organization as a form a taxonomy","text":"<p>Usually as you build up your Zettelkasten you will see patterns. There are often nodes that have lots of links to nodes that don\u2019t tend to have very few links. A possible way to make sense of this type of node is a form of category.</p> <p>I got this idea from the wordpress documentation about how posts are organized.</p> <p>In summary a category is a hierarchical taxonomy, and a tag is a non hierarchical taxonomy.</p>","tags":["zettelkasten","wordpress"]},{"location":"159/index.html","title":"Full list of operating systems that ansible is able to detect","text":"<p>Ansible has a list of distributions that is detectable by default documented on the ansible website. Unfortunately this is not an exhaustive list.</p> <ul> <li>Alpine</li> <li>Altlinux</li> <li>Amazon</li> <li>Archlinux</li> <li>CentOS</li> <li>ClearLinux</li> <li>Coreos</li> <li>Debian</li> <li>Fedora</li> <li>Gentoo</li> <li>MacOSX</li> <li>Mandriva</li> <li>NA</li> <li>OpenWrt</li> <li>OracleLinux</li> <li>RedHat</li> <li>SLES</li> <li>SMGL</li> <li>SUSE</li> <li>Slackware</li> <li>Ubuntu</li> <li>VMwareESX</li> </ul> <p>In order to get access to one of these variables see the below table.</p> Node Description Host Remote <code>ansible_distribution</code> Delegate <p>Here is an example snippet of</p> <pre><code>- name: Install homebrew\n  import_tasks: homebrew\n  when: ansible_distribution == \"MacOSX\"\n</code></pre>","tags":["ansible"]},{"location":"16/index.html","title":"How to quickly spin up a dev environment for testing with docker","text":"<pre><code>docker run -it --rm -v \"${PWD}:/app\" ubuntu\n</code></pre>","tags":["docker","ubuntu"]},{"location":"160/index.html","title":"How to install homebrew on a MacOS","text":"<p>Xcode needs to be setup. Run the following if you have not already.</p> <pre><code>xcode-select --install\n</code></pre> <p>This is installed by running the following:</p> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>","tags":["macosx","xcode","bash","homebrew"]},{"location":"161/index.html","title":"How to benchmark zsh","text":"<pre><code>time zsh -i -c exit\n</code></pre>","tags":["cli","zsh"]},{"location":"162/index.html","title":"Look into the fidget rewrite issue","text":"<p>In the <code>nvim</code> logs a notification pop-up up about <code>fidget.nvim</code> being rewritten.</p> <p><code>fidget.nvim</code> will soon be rewritten. Please checkout the \u2018legacy\u2019 tag to avoid breaking changes.</p> <p>[ ] TODO: update <code>nvim</code> config to handle the <code>fidget.nvim</code> rewrite</p> <pre><code>tags: #todo #nvim\n</code></pre>"},{"location":"163/index.html","title":"How to manage ssh keys","text":"<p>SSH keys are the preferred way to handle ssh connects rather the use of passwords.</p> <p>Here is a quick way to create and set the files directories with the correct permissions.</p> <pre><code>mkdir ~/.ssh\nchmod  0700 ~/.ssh\nchmod  0600 ~/.ssh/id_ed25519\nchmod  0644 ~/.ssh/id_ed25519.pub\n</code></pre> <p>The <code>id_ed25519</code> gets used by default if required (may be incorrect)</p> <p>Key types:</p> <ul> <li>ed25519 (recommended)</li> <li>rsa</li> </ul> <pre><code># create a ed25519 ssh key with a password and comment.  An empty\n# password for no password\nssh-keygen -t ed25519 -f \"$HOME/id_ed25519_name\" -C \"your comment\"\n</code></pre> <p>Constant password prompts are annoying. Here is how to get rid of them on MacOSX.</p> <pre><code>eval $(ssh-agent)\nssh-add --apple-use-keychain\nssh-add --apple-use-keychain ~/.ssh/id_ed25519_your_key\n# shortcut if sshkey is setup\nfor i in $(sshkey list); do ssh-add --apple-use-keychain \"$HOME/.ssh/$i\"; done\n</code></pre> <p>On windows run <code>ssh-agent</code></p> <p>To enable enable logging into a system using your ssh key use <code>ssh-copy-id</code>. This is if you already haves access. Here is an example</p>","tags":["cli","devops"]},{"location":"163/index.html#gaining-access","title":"Gaining access","text":"<pre><code>ssh-copy-id -i ~/.ssh/id_ed25519_your_key user@remote.com\n</code></pre> <p>How to add an arbitrary key to a remote server:</p> <pre><code>cat ~/.ssh/id_ed25519.pub | ssh username@remote_host \"mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys\"\n</code></pre>","tags":["cli","devops"]},{"location":"164/index.html","title":"How to get started with the redfin api","text":"<p>Redfin is a thing that does stuff with real estate</p> <p>[ ] TODO: explore redfin for real estate things</p>","tags":["programming","webdev"]},{"location":"166/index.html","title":"The service userzoom for doing UX research","text":"<p>UserZoom is a UX research company that conducts research on how users interact with a website.</p>","tags":["webdev","ux","research"]},{"location":"167/index.html","title":"Overview of the sales CMS Zendesk","text":"<p>ChatGPT summary about Zendesk.</p> <p>Zendesk is a customer service and support platform that offers a range of services to help businesses effectively manage customer interactions and support requests. Here is a summary of the services provided by Zendesk:</p> <ol> <li> <p>Ticketing System: Zendesk offers a ticketing system that allows    businesses to receive, track, and manage customer support requests in    a centralized platform. It enables agents to efficiently handle    customer inquiries, issues, and requests through a structured    workflow.</p> </li> <li> <p>Self-Service Support: Zendesk provides tools for creating and    managing knowledge bases, FAQs, and customer portals. These resources    empower customers to find answers to their questions independently,    reducing the need for agent intervention and improving overall    customer satisfaction.</p> </li> <li> <p>Multi-Channel Support: Zendesk supports customer interactions across    multiple channels, including email, chat, social media, phone, and    more. It consolidates these channels into a unified interface,    enabling agents to respond to customers seamlessly and provide    consistent support across different platforms.</p> </li> <li> <p>Automation and Workflow: Zendesk allows businesses to automate    repetitive tasks and streamline workflows. This includes automated    ticket routing, predefined responses, and triggers that initiate    specific actions based on predefined rules, helping to improve    efficiency and response times.</p> </li> <li> <p>Reporting and Analytics: Zendesk offers reporting and analytics    features that provide insights into customer support performance.    Businesses can track key metrics, analyze trends, and monitor agent    performance to gain actionable intelligence and make data-driven    decisions.</p> </li> <li> <p>Integration and Customization: Zendesk supports integration with    various third-party applications, allowing businesses to connect    their support system with other tools and systems they use. It also    provides customization options to tailor the platform to specific    business needs and branding requirements.</p> </li> <li> <p>Customer Feedback and Satisfaction: Zendesk enables businesses to    collect and measure customer feedback and satisfaction through    surveys and ratings. This helps businesses gauge customer sentiment,    identify areas for improvement, and ensure a high level of customer    service.</p> </li> </ol> <p>In summary, Zendesk offers a comprehensive customer service and support platform that includes ticketing, self-service support, multi-channel communication, automation, reporting, integration, and customer feedback capabilities. These services help businesses enhance their customer support operations, improve customer satisfaction, and build strong customer relationships.</p> <pre><code>tags: #company #service\n</code></pre>"},{"location":"168/index.html","title":"How to work with gradients with tailwind","text":"<p>I found a cool effect that I wanted to replicate on a blog post that used gradients to get a retro terminal like effect.</p> <p>Here is an example of a glowing effect at the center.</p> <pre><code>from-green-800 to-black bg-[radial-gradient(circle_at_center,var(--tw-gradient-stops))]\n</code></pre> <p>The is based on a blog post found at log rocket.</p> <ul> <li> TODO: document how to use gradient effects in tailwind</li> </ul>","tags":["css","webdev"]},{"location":"169/index.html","title":"Headless CMS options for managing content","text":""},{"location":"169/index.html#strapi","title":"strapi","text":"<p>Strapi a popular but older open source CMS.</p>"},{"location":"169/index.html#sanity","title":"Sanity","text":"<p>Sanity is a proprietary CMS that looks good.</p>"},{"location":"169/index.html#payload-cms","title":"Payload CMS","text":"<p>New CMS on the block that is open source.</p> <pre><code>tags: #webdev\n</code></pre>"},{"location":"17/index.html","title":"How to manage files in vanilla vim with netrw","text":"<p>File management can be done in netrw. To bring it up simply run <code>:Ex</code>. This will bring up an explorer.</p>","tags":["vim","cli","linux","unix"]},{"location":"171/index.html","title":"E-commerce headless CMS domain model","text":""},{"location":"171/index.html#mind-map","title":"Mind map","text":"<ul> <li>cms</li> <li>category. Types of data that is being tracked. For example,     orders, products, and customers,</li> <li>data type</li> </ul> <p>Meta:</p> <pre><code>tags: #architecture\n</code></pre>"},{"location":"172/index.html","title":"MLSGrid","text":"<p>MLSGrid is a network of MLS\u2019s and product vendors that allows cooperation. I suppose one could think of this is the kubernetes of MLS.</p> <pre><code>tags: #nsmls\n</code></pre>"},{"location":"173/index.html","title":"Example scan line effect with tailwind","text":"<p>I was working on a making a scan line like effect with tailwind. This is still a work in progress.  This is an attempt to get an [example] from CSS tricks ported over.  A few problems that need to be fixed in this example is the lack of scroll.</p> <p>In <code>index.html</code></p> <pre><code>&lt;div\n        class=\"relative font-mono m-o p-4 text-white shadow-gray-400 from-green-800 to-black bg-[radial-gradient(circle_at_center,var(--tw-gradient-stops))] scan-line\"\n&gt;\n        &lt;!-- Content goes here --&gt;\n&lt;/div&gt;\n</code></pre> <p>In <code>tailwind.css</code></p> <pre><code>@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n    .scan-line::after {\n        @apply content-[''] absolute block pointer-events-none top1 left-0  w-full h-full overflow-hidden;\n        background-image: repeating-linear-gradient(\n            0deg,\n            black,\n            black 1px,\n            transparent 1px,\n            transparent 2px\n        );\n        pointer-events: none;\n    }\n}\n</code></pre> <pre><code>tags: #css #tailwind\n</code></pre>"},{"location":"174/index.html","title":"My personal website design","text":"<p>This is my personal website that will be at https://jlrickert.me or https://jlrickert.github.io.</p> <p>The design of it is to be a retro terminal inspired by bash bunni and 4s3ti. However, that seems like it will take some work and doesn\u2019t have much value. It would be a stretch goal. For now I just need something simple.</p>"},{"location":"174/index.html#sitemap","title":"Sitemap","text":"<ul> <li>Home</li> </ul> <p>This should have basic things about me.</p> <ul> <li>Zettelkasten</li> </ul> <p>Simply a link to my public notes for now. Maybe at some point I will do   something different.</p> <ul> <li>Blog</li> <li>About</li> <li>Resume</li> <li>Portfolio</li> <li>Contact me</li> </ul>"},{"location":"174/index.html#seo","title":"SEO","text":""},{"location":"174/index.html#monitization","title":"Monitization","text":"<ul> <li> TODO: Research adsterra.com</li> </ul>"},{"location":"174/index.html#references","title":"References","text":"<ul> <li>https://github.com/ashleydavis/pnpm-workspace-examples/tree/main/fullstack/packages/validation</li> <li>https://css-tricks.com/old-timey-terminal-styling/</li> <li>https://blog.webguy.pw/blog/simulating-a-crt-monitor-in-css/</li> <li>https://rhjdfv.csb.app/</li> <li>https://dakotaleemartinez.com/tutorials/hugo-and-tailwind-css/#initial-setup</li> <li>https://github.com/DakotaLMartinez/hugotails/tree/main</li> <li>https://codesandbox.io/s/crt-terminal-in-css-js-forked-rhjdfv?file=/style/style.css</li> <li>https://github.com/4s3ti/terminalcv</li> <li>https://github.com/4s3ti/hugo-theme-hello-4s3ti</li> </ul>"},{"location":"174/index.html#meta","title":"Meta","text":"<pre><code>tags: #webdev\n</code></pre>"},{"location":"175/index.html","title":"jq cheat sheet","text":"<pre><code>jq '.data[] | {id,name,etc}'\njq '.data[] | select(.value &gt; 0.5)'\njq '.data[].status | unique'\n</code></pre>"},{"location":"177/index.html","title":"WordPress development overview","text":"<p>WordPress is a blogging platform whose content is managed by a CMS by default. One advantage of WordPress is that it is widely used and well documented. A few cons include long term maintenance and performance.</p> <p>Things that I need to learn</p> <ul> <li>Deployment strategies</li> <li>Development loop</li> <li>How to do responsive design</li> </ul>","tags":["wordpress","webdev","php"]},{"location":"177/index.html#key-concepts","title":"Key concepts","text":"<ul> <li>WordPress core</li> <li>editor customization</li> <li>theme development</li> <li>Block customization</li> <li>CSS and JavaScript enqueuing</li> <li>pattern development</li> <li>theme templates</li> <li>plugin development</li> <li>custom blocks</li> </ul> <p>See also</p> <ul> <li>useful development plugins</li> <li>plugin development overview</li> <li>theme development</li> </ul>","tags":["wordpress","webdev","php"]},{"location":"178/index.html","title":"What is an electrical component distributor","text":"<p>An electrical component distributor work with manufacturers and suppliers to procure a list of electrical components.  They may include having equipment, contractors, wholesale, maintenance, and repair professions.</p> <p>Often times a manufacturer is also a distributor, but it is not always the case.</p>"},{"location":"179/index.html","title":"What is a custom wire cutting service","text":"<p>While doing some research on electrical component distributors</p>"},{"location":"18/index.html","title":"Quick start on settup lsp for neovim lua hacking","text":"<p>Having a working language server while working with neovim lua is a massive productivity boost. To setup the <code>lua-language-server</code> needs to be installed. I am currently using mason to install and manage this installation.</p> <p>This is the minimum I have found that works.</p> <p>Include <code>use(\"neovim/nvim-lspconfig\")</code> some where in your packer file. The follow configure sumneko_lua:</p> <pre><code>require(\"lspconfig\")[\"sumneko_lua\"].setup({\n    on_attach = on_attach,\n    flags = lsp_flags,\n    settings = {\n        Lua = {\n            runtime = {\n                -- Tell the language server which version of Lua you're using (most likely LuaJUT in the case of Neovim)\n                version = \"LuaJIT\",\n            },\n            diagnostic = {\n                globals = { \"vim\" },\n            },\n            workspace = {\n                -- Make the server aware of Neovim runtime files\n                library = vim.api.nvim_get_runtime_file(\"\", true),\n            },\n            telemetry = {\n                enable = false,\n            },\n        },\n    },\n})\n</code></pre> <p>I have also found lsp-zero. This aims to be a zero config for people who don\u2019t want to fuck around configuring shit.</p>","tags":["neovim"]},{"location":"180/index.html","title":"WordPress block theme development prompt for chatGPT","text":"<p>Here is some background on what I am trying to accomplish. I am a full stack web develop building a custom block theme for a WordPress website.</p> <pre><code>tags: #prompt\n</code></pre>"},{"location":"181/index.html","title":"WordPress email integrations","text":"<p>WordPress has a system found in Settings &gt; Writing where you may post to WordPress by email. Not sure what this could be used for yet.</p>","tags":["wordpress","email"]},{"location":"182/index.html","title":"What is platform requirements","text":"<p>Platform requirements are the details around the infrastructure on what things are to be ran on. This can include things like what versions of software things are going to be ran on, where are things going to be hosted.</p>","tags":["swe"]},{"location":"183/index.html","title":"WordPress hosting on GoDaddy","text":"<p>GoDaddy offers a managed WordPress hosting. Here are the key features that it advertises.</p> <ul> <li>Cloudflare CDN out of the box</li> <li>Up to date PHP and WordPress versions</li> <li>WP-CLI, SSH, and SFTP access</li> <li>one click migration tools</li> <li>Automated updates for WordPress</li> <li>Microsoft 365 mailboxes. Free for first year</li> <li>Staging site and developer access</li> <li>Uses NVMe with Ceph storage clusters</li> <li>Daily backups</li> <li>Support for custom themes</li> </ul> <p>GoDaddy specific plugins</p> <ul> <li>Contact Forms</li> <li>Page Builder</li> <li>WooCommerce</li> <li>Social media</li> <li>online store</li> <li> <p>analytic</p> <p>tags: #wordpress #webdev</p> </li> </ul>"},{"location":"184/index.html","title":"WordPress hosting on WP Engine","text":"<pre><code>tags: #wordpress #webdev\n</code></pre>"},{"location":"185/index.html","title":"Managing styles for block theme in WordPress","text":"<p>Themes are mainly managed in the <code>theme.json</code> file. There are 2 main parts that we care about, [styles], and settings.</p> <p>[styles] are what is actually applied by default to the website blocks.</p> <p>settings is what the end user is allows to do in the editor.</p> <p>The complete list of blocks may be found in the block editor reference guide. To use the block replace <code>core/</code> with <code>wp:</code>.</p>","tags":["wordpress","webdev","php"]},{"location":"185/index.html#themejson","title":"theme.json","text":"","tags":["wordpress","webdev","php"]},{"location":"186/index.html","title":"How to include CSS in a block theme for WordPress","text":"<p>Lets say you want to include the style sheet <code>custom.css</code>. It could be at the root of your theme or in <code>assets/css/custom.css</code> This may be added included with the use of <code>functions.php</code>. Add the following:</p> <pre><code>// functions.php\nif (!function_exists('your_theme_setup')) {\n    function your_theme_setup()\n    {\n        // Allows adding custom styles in the block editor\n        add_theme_support('wp-block-styles');\n\n        // Allows using the custom.css for previewing in the block\n        // editor\n        add_editor_style('assets/css/custom.css');\n    }\n}\n\nadd_action('after_setup_theme', 'your_theme_setup');\n\nif (!function_exists('your_theme_styles')) {\n    function your_theme_styles()\n    {\n        // Register theme stylesheet.  This associates your_theme_style with the\n        //style sheet ./style.css.\n        $theme_version = wp_get_theme()-&gt;get('Version');\n        $version_string = is_string($theme_version) ? $theme_version : false;\n        wp_register_style(\n            'your_theme_style',\n            get_template_directory_uri() . '/style.css',\n            array(),\n            $version_string // adds postfix ?ver=x.x to the css file\n        );\n\n        // This adds the stylesheet associated with your_theme_style to the website\n        wp_enqueue_style('your_theme_style');\n    }\n}\n\nadd_action('wp_enqueue_scripts', 'your_theme_styles');\n</code></pre> <p>A more fine grained approach is to include block styles.</p> <pre><code>function myfirsttheme_setup() {\n    /*\n     * Load additional block styles.\n     */\n    $styled_blocks = ['latest-comments'];\n    foreach ( $styled_blocks as $block_name ) {\n        $args = array(\n            'handle' =&gt; \"myfirsttheme-$block_name\",\n            'src'    =&gt; get_theme_file_uri( \"assets/css/blocks/$block_name.css\" ),\n            $args['path'] = get_theme_file_path( \"assets/css/blocks/$block_name.css\" ),\n        );\n        wp_enqueue_block_style( \"core/$block_name\", $args );\n    }\n}\nadd_action( 'after_setup_theme', 'myfirsttheme_setup' );\n</code></pre> <p>This is take right from the documentation.</p> <pre><code>tags: #wordpress #webdev\n</code></pre>"},{"location":"187/index.html","title":"How to use <code>PostCSS</code> and <code>autoprefixer</code> in WordPress","text":"<p>One strategy is when building out a theme is to setup a separate process when developing to have a pipeline recompute a CSS file on file changes. It is the simplest way. However, it must be built for production manually introducing human error into the equation.</p> <pre><code>tags: #webdev #wordpress\n</code></pre>"},{"location":"188/index.html","title":"Mental health disability anomia","text":"<p>The condition where word finding may be problematic.  Often substitute with a different but often similar word.</p>"},{"location":"189/index.html","title":"How to implement a contact form with MailChimp","text":"<p>MailChimp has the ability to create and embed a form in a website.</p>","tags":["marketing","mailchimp","email","forms","dataentry"]},{"location":"19/index.html","title":"Package management in neovim with mason","text":"<p>Mason is a package manager for neovim. The contents of the packages that may be installed are DAP, LSP, Linters and formatters. To quickly setup do the following:</p> <pre><code>-- put this somewhere in your packer file\nuse { \"williamboman/mason.nvim\" }\n\n-- setup the thing\nrequire(\"mason\").setup()\nrequire(\"mason-lspconfig\").setup({\n})\n</code></pre> <p>See mason and mason-lspconfig for more details.</p>","tags":["neovim"]},{"location":"190/index.html","title":"Overview: of the service Mailchimp (mailchimp)","text":"<p>Mailchimp is an email marketing and automation platform as a service. There headline is Turn Emails into Revenue.</p> <p>One of the things that I am interested in for this services is contact us forms.</p>","tags":["marketing","mailchimp"]},{"location":"191/index.html","title":"Common patterns that I use for headers for my Zettelkasten","text":"Template Example Additional tags Description Daily log for DAY OF WEEK MONTH DAY YEAR Daily log for Saturday June 24 2023 An entry for the day for me to dump things. This is in my private zet. Should have date in meta data Meeting XYZ on DAY OF WEEK MONTH DAY YEAR Meeting about crazy things on Saturday June 24 2023 meeting An entry for a meeting. Should have date in meta data FIRST NAME LAST NAME Jack Rabbit person An entry for a person Our client Our client Paypal client, CLIENT A client that we work with Overview of XYZ Overview of paypal A high level overview intended to be an index Task to DESCRIPTION Task to do the thing task May have dueDate and status as additional metadata"},{"location":"192/index.html","title":"What is <code>mim</code>","text":"<p>Mim is rwxrob name for a tool for managing distributed information.  It is named after mimir the god of knowledge and wisdom. His plan is to build a tool that that scrapes other peoples things and puts it into some other format.  This is what I got out of watching rwxrob stream on 2023-06-25.</p>"},{"location":"193/index.html","title":"MX Vertical mouse","text":"<p>This is an premium ergonomic mouse. I find it very comfortable.</p> <p>Some of the features of the mouse is that It has 3 ways to connect to devices. A unifying receiver, Bluetooth, and with a cord.</p> <p>One advantage of using the receiver, and/or Bluetooth is that there is a button on the bottom that allows switching between devices. For the most part switching devices works seamlessly between MacOS and Windows. With Gnome Bluetooth turns off and you have to reconnected if you switch devices. Reconnecting requires a mouse.</p> <p>One issue that I occasionally have is that I need to repair it with the receiver. This can be done with the unifying software.</p> <pre><code>tags: #hardware\n</code></pre>"},{"location":"194/index.html","title":"Opinionated go repo naming conventions","text":"<p>Postfix with -go</p>"},{"location":"195/index.html","title":"WordPress hosting","text":"<p>There are a lot of hosting services for WordPress. Two of the most notable ones include WPEngine and GoDaddy.</p> Service name Environments CDN Access Comment GoDaddy staging,dev,prod Cloudflare wp-cli, SSH, SFTP WPEngine prod wp-cli, SSH, SFTP <pre><code>tags: #wordpress\n</code></pre>"},{"location":"196/index.html","title":"WordPress hosting with WPEngine","text":""},{"location":"196/index.html#domain-model","title":"Domain model","text":"<ul> <li>Account</li> </ul> <p>An account is a plan and user pair that is used to group together</p> <ul> <li> <p>User</p> </li> <li> <p>Plan</p> </li> </ul> <p>A plan is what we have available to use for resources. This is the   tier that we pay for.</p> <ul> <li>Group</li> </ul> <p>A group is a set of sites with an associated name and description.   Purely for organization.</p> <p><code>haskell   data site = { sites: Array String, name: String, name: Option String }</code></p> <ul> <li>Site</li> </ul> <p>A site is a collection of environments. Typically, an agency will have   multiple sites where each site will have its own set of environments.   For example, prod, staging, or dev environment are common for each   site to have.</p> <ul> <li>Website</li> </ul> <p>What is this?</p> <ul> <li>Multi-site</li> </ul> <p>Something to do with users and permissions across various websites</p> <ul> <li>Environment</li> </ul> <p>An environment is a specific stateful configuration that make up a   WordPress website. An environment will be part of a site.  Typically,   an environment have a WordPress site available in the cloud. Typically   it will also have some statistics with it such as storage used and how   many visits per month.</p> <p>Meta:</p> <pre><code>tags: #wordpress\n</code></pre>"},{"location":"197/index.html","title":"A nifty way to compare versions","text":"<p>I ran into this snippet of code while create a bash script the check if I had a  new enough version of <code>fzf</code>.</p> <pre><code>_version_ge()\n{\n    printf '%s\\n%s\\n' \"$2\" \"$1\" | sort --check=quiet --version-sort\n}\n\n_version_ge \"${VERSION}\" \"0.42.0\" &amp;&amp; echo \"yes\n</code></pre> <pre><code>tags: #bash #cli\n</code></pre>"},{"location":"198/index.html","title":"How to manage dependencies with git submodules","text":""},{"location":"198/index.html#how-to-add","title":"How to add","text":"<pre><code>git submodule add $GIT_URL $DEP_PATH\n</code></pre> <p>This will add an entry in <code>.gitmodules</code>, <code>.git/config</code>, and <code>.git/modules</code>. This then needs to be committed in git.</p>"},{"location":"198/index.html#how-to-install","title":"How to install","text":"<p>To install the submodules run the following:</p> <pre><code>git submodule init\ngit submodule update\n</code></pre> <p>Alternatively this can be done when first cloning.</p> <pre><code>git clone $PROJECT_URL --recursive\n</code></pre>"},{"location":"198/index.html#how-to-move","title":"How to move","text":"<p>TODO: clean up and verify this process</p> <ul> <li>Update submodules in <code>.gitsubmodule</code></li> <li>Update submodules in <code>.git/config</code></li> <li>Remove submodule in <code>.git/modules/</code></li> <li>Commit stuff in git</li> </ul>"},{"location":"198/index.html#how-to-update","title":"How to update","text":"<p>Update submodules in <code>.git/config</code></p>"},{"location":"198/index.html#key-commands","title":"Key commands","text":"Git sub command Comment add add a dependency update init <pre><code>tags: #webdev\n</code></pre>"},{"location":"199/index.html","title":"Top stats for warlock in dragon flight season 2","text":"Spec Stats Affliction Int &gt; Haste &gt;= Mastery &gt; Crit &gt; Versatility Destruction Int &gt; Haste = Mastery &gt;= Crit &gt; Versatility Demonology Int &gt; Haste &gt; Master = Crit &gt; Versatility <p>Top gems would be Fierce Illimited Diamond and Keen Ysemerald. The ingredients for it are Awakened Air, Awakened Order, Illimited Diamond, and Ysemerald.</p> <pre><code>tags: #wow\n</code></pre>"},{"location":"2/index.html","title":"Devastation Evoker priorities","text":"","tags":["wow","gaming","evoker","gear"]},{"location":"2/index.html#state-priority","title":"State priority","text":"<p>State priority is Mastery &gt; Haste &gt;= Critical Strike &gt; Versatility</p>","tags":["wow","gaming","evoker","gear"]},{"location":"2/index.html#enchants","title":"Enchants","text":"Slot Best Enchant Cheaper Version Weapon Sophic Devotion Sophic Writ Cloak Homebound Speed Writ of Speed Chest Reserve of Intellect Waking Stats Bracers Devotion of Speed Writ of Speed Legs Frozen Spellthread Frozen Spellthread Boots Plainsrunner\u2019s Breeze Plainsrunner\u2019s Breeze Ring Devotion of Mastery Writ of Mastery","tags":["wow","gaming","evoker","gear"]},{"location":"20/index.html","title":"Pattern for managing keybindings in neovim","text":"<p>A pattern for key bindings that I like come from spacemacs. It heavily relies on key sequences which-key. There is also legendary</p>"},{"location":"200/index.html","title":"How to utilize these notes","text":"<p>If you are not familiar this is a keg. It is a way to organize information that inspired by the zettelkasten note taking system. To get started I would use a search engine. The one that I currently use is either <code>ripgrep</code> and <code>fzf</code> on my local system or <code>github</code> if I am on the go. I also have a compiled version up in google drive as a temporary solution to making my notes available. It is currently unsearchable via search engines. However, old school zettalkasten style still applies.</p>","tags":["fleeting","notetaking"]},{"location":"202/index.html","title":"Optimal rice to water ratio","text":"<p>For jasmine rice what I have found is for every gram of rice I need 2 grams of water. Typically I cook it for about 14 minutes.</p>"},{"location":"203/index.html","title":"A possible thing to look out for if you see a spike in traffic","text":"<p>I ran into an article on reddit about excessive billable visits from a website. As it turns out there was a single image that was being view a lot.  How they found about it was there was a discrepancy between google analytics and what WPEngine was reporting.  An image doesn\u2019t get logged in google analytics.</p> <pre><code>tags: #seo #wpe #wordpress\n</code></pre>"},{"location":"204/index.html","title":"Web development security risk types","text":"<p>I found a nice article that goes through a list of different security flaws that you may encounter when developing a website.</p> Security type Description LFI A File Inclusion vulnerability allows an attacker to include a file, usually exploiting a dynamic file inclusion mechanisms implemented in the target application. Local file inclusion is the process of including files already present on the server. RFI A File Inclusion vulnerability allows an attacker to include a file, usually exploiting a dynamic file inclusion mechanisms implemented in the target application. Remote File Inclusion is the process of including files from a remote source. XXE An XML External Entity attack is a type of attack against an application that parses XML input. UNKNOWN An unknown vulnerability exists. IDOR This vulnerability allows any unauthenticated user to perform actions that only an administrator should be allowed to do. INSUFFICIENT CRYPTOGRAPHY Attempting to create non-standard and non-tested algorithms, using weak algorithms, or applying algorithms incorrectly will pose a risk to data in terms of Confidentiality, Integrity or Availability. CONTENT INJECTION Also known as Content Spoofing, an attacker can supply content to a web application, typically via a parameter value, that is reflected back to the user. DOS Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. BACKDOOR The plugin contains backdoor code which could be used to compromise a site by resetting an administrator password or deleting content from the site\u2019s database. UPLOAD A vulnerability exists wherein an unauthenticated user could upload a malicious file to the site. This could result in the disclosure of sensitive information or lead to complete site compromise. CSRF This vulnerability allows an attacker to target privileged authenticated users with malicious links that make authenticated requests to WordPress on behalf of the user. An attacker could use this vulnerability to modify site configuration, including adding backdoors such as other WordPress administrators. RCE An attacker could use this vulnerability to modify site configuration, including adding backdoors such as other WordPress administrators. REDIRECT The vulnerability allows an attacker to redirect victims to arbitrary URL. Successful exploitation of this vulnerability may allow a remote attacker to perform a phishing attack and steal potentially sensitive information. SSRF This plugin allows an attacker to target internal server resources. An attacker could use this vulnerability to read or modify site configuration. XSS Data from an attacker could be interpreted as code by site visitors\u2019 web browsers. The ability to run code in another site visitors\u2019 browser can be abused to steal information, or modify site configuration. PRIVESC It could be possible to elevate a user\u2019s privileges to a higher permission level. TRAVERSAL This vulnerability could let attackers access restricted directories, execute commands, and view data outside the normal Web server directory where the application content is stored. CSV INJECTION An attacker could inject malicious content into a form field which could then be exported to a CSV file. If this exported CSV file is opened in a spreadsheet application, the malicious content could execute on the victim\u2019s system. OBJECT INJECTION This is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context. This could result in sensitive data disclosure or site compromise. SQLI The plugin contains a vulnerability wherein unauthenticated visitors could inject SQL statements into WordPress. SQL injection could allow an attacker to gain control of your site. SENSITIVE DATA DISCLOSURE Information useful to an attacker could be made available. Site configuration, user names, or email addresses are examples of information that could be revealed as a result of an information disclosure. AUTHBYPASS This vulnerability could allow attackers to perform various malicious operations by bypassing the device authentication mechanism. BYPASS An attacker can exploit this issue to bypass certain security restrictions and perform unauthorized actions. ACCESS CONTROLS This vulnerability allows any unauthenticated user to perform actions that only an administrator should be allowed to do. FILE DELETION A vulnerability exists wherein a user could read, upload, delete, or access an arbitrary file from your site. This could result in the disclosure of sensitive information or lead to complete site compromise. MULTI Multiple vulnerabilities exist. FILE DOWNLOAD A vulnerability exists wherein a user could read, upload, delete, or access an arbitrary file from your site. This could result in the disclosure of sensitive information or lead to complete site compromise. INJECTION This is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context. This could result in sensitive data disclosure or site compromise. CROSS FRAME SCRIPTING (XFS) is an attack that combines malicious JavaScript with an iframe that loads a legitimate page in an effort to steal data from an unsuspecting user. FPD Full Path Disclosure vulnerabilities may expose the full paths to the potentially sensitive files, which may then be attacked. <pre><code>tags: #security #secops #webdev\n</code></pre>"},{"location":"205/index.html","title":"What is the benefit of paid for SSL","text":"<p>If I am doing my own hosting I usually just use lets encrypt as it is a free service. Paid for SSL has a few advantages.  I don\u2019t remember what they where.</p> <ul> <li>TODO []: Figure out benefits of paid for SSL.</li> </ul> <p>Meta:</p> <pre><code>tags: #webdev #paas\n</code></pre>"},{"location":"206/index.html","title":"SEO concepts","text":"<ul> <li>website structure optimization</li> <li>image optimization</li> <li>XML sitemap optimization</li> <li>URL structure optimization</li> <li>Robots.txt</li> <li>301 redirects</li> <li>404 page</li> <li>meta tag migration</li> <li>heading tag optimization</li> <li>broken link</li> <li>website speed</li> </ul>"},{"location":"206/index.html#domain-model","title":"Domain model","text":"<pre><code>tags: #seo\n</code></pre>"},{"location":"207/index.html","title":"Common breakpoints between browsers on different devices","text":"<p>Devices have their screen sizes measured in pixels.</p> Resolution Market share 1920x1080 8.93 360x800 6.53 1366x768 6.35 1536x864 4.12 390x844 3.79 414x896 3.61 412x915 3.28 360x640 2.71 393x873 2.7 360x780 2.59 1280x720 2.52 1440x900 2.33 375x812 2.27 375x667 2.04 360x760 2.01 385x854 1.92 393x851 1.85 428x926 1.75 412x892 1.46 768x1024 1.33 <p>Data taken from statcounter</p> <pre><code>tags: #webdev\n</code></pre>"},{"location":"208/index.html","title":"My typical pattern of devices to target","text":"<p>I made these decisions based on device resolution popularity between May 2022 through May 2023.</p> <pre><code>@media (min-width: 640px) { ... }\n@media (min-width: 768px) { ... }\n@media (min-width: 1024px) { ... }\n@media (min-width: 1280px) { ... }\n@media (min-width: 1536px) { ... }\n</code></pre>"},{"location":"209/index.html","title":"What is the idea width for readable text","text":"<p>According to an article that I found online the optimal line length for body test is 50-60 characters.  If the screen is smaller aim for at least 30-50.</p> <p>Key take a ways from the article</p> <ul> <li>use 70ch or 34em for max-width</li> <li>line height should be 1.5em</li> <li>paragraph spacing should be 2em</li> <li>word spacing should be 0.16em</li> <li> <p>letter spacing should be 0.12em</p> <p>tags: #ux</p> </li> </ul>"},{"location":"21/index.html","title":"Quick fix list in neovim","text":"<p>Quick fix list is a</p> <p>Some plugins that are nice to have is nvim-bfq to add previews.</p>"},{"location":"210/index.html","title":"WordPress community","text":"<p>Popular plugins:</p> <ul> <li>Elementor pro</li> <li>divi</li> <li>sitekit</li> <li>Cloudflare super page cache</li> <li>autoptimize</li> <li>shortpixel</li> <li>ACF</li> <li>pods</li> </ul> <p>Meta:</p> <pre><code>tags: #wordpress\n</code></pre>"},{"location":"211/index.html","title":"WordPress domain experts","text":"<pre><code>tags: #wordpress\n</code></pre>"},{"location":"212/index.html","title":"Place: Blackstack Brewing","text":"<p>Blackstack Brewing is a brewery right next can-can wonderland. No issue with parking at all.</p> <p>The first time I have been here was with the Minneapolis 20s 30s something social.</p> <p>Takes roughly 35 minutes to get there from my Forest Lake address.</p>","tags":["place","brewery"]},{"location":"213/index.html","title":"The brewery Clutch Brewing","text":"<p>Here are a few things that I like about Clutch Brewing</p> <ul> <li>Parking is not an issue as it has a parking lot.  Haven\u2019t had any   issue where it has been full</li> <li>They offer growlers</li> </ul> <p>Decent brewery overall.  Other places I find have better beer though.</p> <pre><code>tags: #brewery\n</code></pre>"},{"location":"214/index.html","title":"Brewery Bahaus Brew Labs","text":"<p>Bahaus Brew Labs is a German inspired brewery. It is located NE Minneapolis at <code>1315 Tyler Street NE, Minneapolis MN, 55413</code>. Parking isn\u2019t a problem as there are a bunch of public parking around. Worse case scenario there is a lot of room in the residential area south east of there.</p> <p>They offer do offer growlers at a refill price if you bring in a growler. However, they do not offer refills. Just show them that you do have a growler.</p> <p>TAPROOM HOURS:</p> <ul> <li>Monday\u2013Thursday: 4pm\u201310pm</li> <li>Friday: 3pm-11pm</li> <li>Saturday: 12pm-11pm</li> </ul> <p>For more information see there website.</p> <pre><code>tags: #brewery\n</code></pre>"},{"location":"215/index.html","title":"Flexbox CSS attributes","text":"<p>There are a few CSS keywords that interacts with an element that has its display set to either <code>flex</code> or <code>inline-flex</code>.</p> <ul> <li>The main axis is horizontal (left to right) when <code>flex-direction</code> is <code>row</code></li> <li>The main axis is vertical (up and down) when <code>flex-direction</code> is <code>column</code></li> </ul> <p>The following interacts across the main axis:</p> <ul> <li><code>flex-basis</code></li> <li><code>flex-wrap</code></li> <li><code>flex-shrink</code></li> <li><code>max-width</code></li> <li><code>max-height</code></li> <li><code>min-width</code></li> <li><code>min-height</code></li> <li><code>justify-content</code></li> </ul> <p>The following work along the cross axis:</p> <ul> <li>if <code>flex-direction</code> is row (left and right) then height</li> <li>if <code>flex-direction</code> is column (up and down) then width</li> <li><code>{min,max}-{width,height}</code></li> </ul> <p>The order of flex items may be specified using CSS rather than html by using the <code>order</code> property.</p>","tags":["css","webdev","design"]},{"location":"216/index.html","title":"How to load custom CSS for a WordPress block","text":"<p>This will load the <code>style.css</code> file globally.</p> <pre><code>if (!function_exists('mytheme_styles')) {\n    function mytheme_styles()\n    {\n        // Register theme stylesheet.  This associates mytheme_style with the\n        //style sheet ./style.css.\n        $theme_version = wp_get_theme()-&gt;get('Version');\n        $version_string = is_string($theme_version) ? $theme_version : false;\n        wp_register_style(\n            'mytheme-style',\n            get_template_directory_uri() . '/style.css',\n            array(),\n            $version_string // adds postfix ?ver=x.x to the css file\n        );\n\n        // This adds the stylesheet associated with mytheme_style to the website\n        wp_enqueue_style('mytheme-style');\n    }\n}\n</code></pre> <p>This will load custom CSS for the generated content.</p> <pre><code>function mytheme_setup() {\n    /*\n     * Load additional block styles.\n     */\n    $styled_blocks = ['latest-comments'];\n    foreach ( $styled_blocks as $block_name ) {\n        $args = array(\n            'handle' =&gt; \"mytheme-$block_name\",\n            'src'    =&gt; get_theme_file_uri(\"assets/css/blocks/$block_name.css\"),\n            $args['path'] = get_theme_file_path(\"assets/css/blocks/$block_name.css\"),\n        );\n        wp_enqueue_block_style(\"core/$block_name\", $args);\n    }\n}\nadd_action('after_setup_theme', 'mytheme_setup');\n</code></pre> <p>This will load the styles inline:</p> <pre><code>/**\n * Attach extra styles to multiple blocks.\n * Taken from https://make.wordpress.org/core/2021/07/01/block-styles-loading-enhancements-in-wordpress-5-8/\n */\nfunction mytheme_enqueue_block_styles()\n{\n    // An array of blocks.\n    $styled_blocks = [\"paragraph\", \"navigation\"];\n\n    foreach ($styled_blocks as $block_name) {\n        // Get the stylesheet handle. This is backwards-compatible and checks the\n        // availability of the `wp_should_load_separate_core_block_assets` function,\n        // and whether we want to load separate styles per-block or not.\n        $handle = (function_exists('wp_should_load_separate_core_block_assets') &amp;&amp;\n            wp_should_load_separate_core_block_assets()\n        ) ? \"wp-block-$block_name\" : 'wp-block-library';\n\n        // Get the styles.\n        $path = \"assets/css/blocks/$block_name.css\"\n        $styles = file_get_contents(get_theme_file_path($path));\n\n        // Add frontend styles.\n        wp_add_inline_style($handle, $styles);\n\n        // Add editor styles.\n        add_editor_style($path);\n        $editor_path = \"assets/css/blocks/$block_name-editor.css\"\n        if (file_exists(get_theme_file_path($editor_path))) {\n            add_editor_style($editor_path);\n        }\n    }\n}\n// Add frontend styles.\nadd_action('wp_enqueue_scripts', 'mytheme_enqueue_block_styles');\n// Add editor styles.\nadd_action('admin_init', 'mytheme_enqueue_block_styles');\n</code></pre>"},{"location":"217/index.html","title":"How to build a generic accordion in WordPress","text":"<p>Details on how to build an accessible accordion may be found on aditus. GitHub example of a list. This might be the closes thing that</p> <p>Here is what a WordPress</p> <p>Accordion item block</p> <pre><code>&lt;--! wp:header {\"level\":3} --&gt;\n&lt;h3&gt;\n  &lt;button&gt;{{ title }}&lt;/button&gt;\n&lt;/h3&gt;\n&lt;section&gt;&lt;/section&gt;\n&lt;--! /wp:header --&gt;\n</code></pre> <pre><code>\n</code></pre>","tags":["webdev","wordpress"]},{"location":"219/index.html","title":"How to configure the editor in WordPress","text":"<p>The FSE may be configured to provide is simpler experience for the webmaster.  This restricts what is available.  This makes it harder for inexperienced users to go outside of the predefined scope of the website.</p> <pre><code>tags: #wordpress #webdev\n</code></pre>"},{"location":"22/index.html","title":"Rust installation process annoyances","text":"<p>The default installer from rust has a nasty habit of trashing my dotfiles on me. It adds things to my ~/.profile and ~/.bash_profile. By adding ~/.bash_profile my ~/.bashrc is not ran.</p>"},{"location":"220/index.html","title":"How to grab a specific item in a tar file","text":"<p>I ran into a issue where I needed to grab a compiled item with a tar archive using chezmoi.</p> <p>It has the following structure</p> <pre><code>\u251c\u2500\u2500 CHANGELOG.md\n\u251c\u2500\u2500 LICENSE-APACHE\n\u251c\u2500\u2500 LICENSE-MIT\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 autocomplete\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 _bat.ps1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bat.bash\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bat.fish\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 bat.zsh\n\u251c\u2500\u2500 bat\n\u2514\u2500\u2500 bat.1\n</code></pre> <p>The command that I found to work to manually install</p> <pre><code>cd $(mktmp -d)\ncurl -fsSL -O https://github.com/sharkdp/bat/releases/download/v0.23.0/bat-v0.23.0-x86_64-apple-darwin.tar.gz\nmkdir tmp\ntar -xz -C tmp --strip-components 1 -f bat-v0.23.0-x86_64-apple-darwin.tar.gz\n</code></pre> <p>This will create a <code>tmp</code> directory filled with the previous dump of contents.</p> <pre><code>tags: #bash\n</code></pre>"},{"location":"221/index.html","title":"How I use chezmoi to manage my dot files","text":"<p>I Use chezmoi as the only dependencies that I need to boot strap a system are already install on most systems. This includes <code>sh</code> and <code>curl</code>.</p> <p>To get up and running on a new machine it is as simple as copy and pasting the below.</p> <pre><code>sh -c \"$(curl -fsLS get.chezmoi.io)\" -- init --apply git@github.com:jlrickert/dotfiles.git\n</code></pre> <p>The systems that I support are as follows</p> <ul> <li>Ubuntu WSL</li> <li>Ubuntu server</li> <li>MacOSX on apple silicon</li> </ul>","tags":["dotfiles","bash"]},{"location":"222/index.html","title":"How to setup a contact us page in WordPress","text":"<p>I ran into a situation where I needed to find a way to get a production ready.</p>"},{"location":"222/index.html#key-concepts","title":"Key Concepts","text":"<ul> <li>Contact Form 7</li> </ul> <p>This is the plugin used to create the form for the website. This is what the   guest fills in information. This gets set off to the WordPress server to be   then be forwarded to the clients admin email.</p> <ul> <li>DKIM (DomainKeys Identified Mail)</li> </ul> <p>This is a signature added to emails. For development this is not needed</p> <p>Meta:</p> <pre><code>tags: #WordPress\n</code></pre>"},{"location":"224/index.html","title":"WordPress docker container","text":"<p>Alternate tags:</p> <ul> <li> <p>apache</p> </li> <li> <p>-fpm <p>REquires a reverse proxy with FastCGI support</p> <ul> <li>fpm-alpine</li> </ul>"},{"location":"225/index.html","title":"Tips when researching laptops","text":"<p>Here are a few things to think about when buying a laptop</p> <ul> <li>Ability to stay cool</li> <li>Linux compatibility</li> <li>Gaming capability</li> </ul> <p>Here are my typical use cases:</p> <ul> <li>Gaming</li> <li>Web development</li> <li>Devops and platform engineering</li> <li>AI</li> </ul>"},{"location":"225/index.html#gaming","title":"Gaming","text":"<p>Typically, when I am gaming the things that I really care about is having a good discrete GPU, adequate ram, and a big enough SSD to all of the</p> <p>Minimum requirements:</p> <ul> <li>Modern GPU</li> <li>16G of ram (32 is plenty)</li> <li>1T of hard drive space</li> </ul>"},{"location":"225/index.html#web-development","title":"Web development","text":"<p>One advantage of having more ram is to have a buffer against browsers ram usage when you have a memory leak.</p> <p>Minimum requirements:</p> <ul> <li>256GB SSD</li> <li>16g of ram</li> </ul>"},{"location":"225/index.html#devops-and-platform-engineering","title":"Devops and platform engineering","text":"<p>Some times needs lots of ram when running a distributed system locally on my machine.  Not uncommon that I have seen usage up to 40G.</p>"},{"location":"225/index.html#ai","title":"AI","text":"<p>Haven\u2019t done much here</p> <p>Minimum requirements:</p> <ul> <li>Nvidia GPU</li> </ul>"},{"location":"226/index.html","title":"WordPress plugin development overview","text":"<p>There are several types of plugins that you think about building.</p> <p>Types of plugins:</p> <ul> <li>block plugin</li> </ul> <p>This adds an additional block for users to use in the FSE when using a block   theme.</p> <p>Quick start by running <code>pnpx @wordpress/create-block plugin-&lt;plugin name&gt;</code></p> <p>See official plugin development documentation for more details</p>"},{"location":"228/index.html","title":"pnpm mono repo strategy","text":"<p>By default all dependencies from packages are hoisted up and available at the root.</p> <pre><code># in pnpm-workspace\npackages:\n  - \"packages/*\"\n  - \"plugins/accordion\"\n</code></pre> <p>Run all the things</p> <pre><code>pnpm run -r start\n</code></pre> <p><code>-r</code> does all the magic.</p> <p>If you also want to include the root <code>package.json</code> start script then add the following to <code>.npmrc</code> file</p> <pre><code>ignore-workspace-root = true\n</code></pre> <pre><code>tags: #webdev\n</code></pre>"},{"location":"229/index.html","title":"What is critical thinking","text":"<p>Phases from hbr the process to generate better critical thinking skills</p> <p>execute, synthesize, recommend, and generate</p> <p>There are 3 research backed models for critical thinking</p> <ol> <li>Halpern Critical Thinking Assessment (HCTA)</li> <li>Pearson\u2019s RED Critical Thinking model</li> <li>Bloom\u2019s taxonomy</li> </ol> <p>The first model seems to be a good indicator. There was a study that shows that it does expand across cultures. It also replicable according to a dutch article.</p>"},{"location":"23/index.html","title":"Node version management with nvm","text":"<p>nvm is a version manager for node. I personally don\u2019t use the installer as it trashes my dotfiles. Make sure <code>NVM_DIR</code> is set. I do this in my <code>bashrc</code>.</p> <p>Have this somewhere in your <code>bashrc</code>:</p> <pre><code>export NVM_DIR=\"$HOME/.local/share/nvm\"\n_have()      { type \"$1\" &amp;&gt;/dev/null; }\n_source_if() { [[ -r \"$1\" ]] &amp;&amp; source \"$1\"; }\n_source_if $NVM_DIR/nvm.sh\n_have nvm &amp;&amp; _source_if \"$NVM_DIR/bash_completion\"\n</code></pre> <p>Here is the script that I use to install it</p> <pre><code>#!/usr/bin/bash\nset -e\n\nif [[ -z \"$NVM_DIR\" ]]; then\n    echo \"NVM_DIR is not set\"\n    exit 1\nfi\n\ntest ! -d $NVM_DIR &amp;&amp; git clone https://github.com/nvm-sh/nvm $NVM_DIR\n\n(\n    cd $NVM_DIR\n    git fetch --tags origin\n    git checkout `git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1)`\n) &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"\n</code></pre> <p>Basic cheatsheet</p> command comment nvm install 16 installs that latest 16.x.x branch nvm alias default 16 sets the default node version to use"},{"location":"230/index.html","title":"Article about HCTA real world outcomes","text":"<p>The article about </p> <p>Here are the Key take way</p> <ul> <li>HCTA and GPA not correlated</li> <li>HCTA and SAT were correlated</li> <li>GPA reflects diligence and persistence</li> <li>SAT reflects aptitude</li> </ul>"},{"location":"231/index.html","title":"Problem solution sets","text":"<p>This is an idea that I have where I create a mapping between a set problem set and there corresponding set of solutions.  Problem sets may be mapped onto more general sets and a problem may have multiple solutions.  As learn more about a problem a hierarchy may form of other sub problems. Complete mastery would mean discovery all sub problems and finding all the possible solutions.  This may be fundamentally impossible to get to complete mastery.</p> <ul> <li> TODO: Explore this idea</li> </ul>"},{"location":"232/index.html","title":"PCI-DSS compliance","text":"<p>This is some regulations regarding fin tech and financial organizations.</p>"},{"location":"233/index.html","title":"What is Multi-Factor authentication","text":"<p>Multi-Factor authentication is when 2 more pieces of evidence is use to authenticate. Each pieces of evidence should be done by different mechanisms. Some possible mechanisms include knowledge, possession, and inherence.</p> <p>An examples of knowledge would be a password. Examples of possession would be things like a phone, key, or physical device. Examples of inherence would be FaceID or finger print.</p> <p>Common MFA providers include Okta, Duo, LastPass, OneLogin, and Auth0.</p>"},{"location":"235/index.html","title":"Categorization of numbers","text":"<p>Numbers can be categorized in various ways, depending on the specific context and purpose. Here are some common categorizations of numbers:</p> <ul> <li> <p>Natural Numbers: Natural numbers, also known as counting numbers, are positive   whole numbers starting from 1 and continuing indefinitely (1, 2, 3, 4, \u2026).</p> </li> <li> <p>Whole Numbers: Whole numbers include zero along with the natural numbers (0,   1, 2, 3, \u2026). They do not include negative numbers or fractions.</p> </li> <li> <p>Integers: Integers are the set of whole numbers along with their negative   counterparts and zero (\u2026, -3, -2, -1, 0, 1, 2, 3, \u2026).</p> </li> <li> <p>Rational Numbers: Rational numbers are numbers that can be expressed as a   fraction, where the numerator and denominator are both integers. This includes   integers, fractions, and terminating or repeating decimals (e.g., 1/2, -3,   0.75).</p> </li> <li> <p>Irrational Numbers: Irrational numbers are numbers that cannot be expressed as   fractions and have an infinite number of non-repeating decimal places.   Examples include \u03c0 (pi) and \u221a2 (square root of 2).</p> </li> <li> <p>Real Numbers: Real numbers encompass both rational and irrational numbers.   They include all numbers that can be represented on the number line, including   integers, fractions, and decimals.</p> </li> <li> <p>Complex Numbers: Complex numbers are numbers in the form a + bi, where \u201ca\u201d and   \u201cb\u201d are real numbers, and \u201ci\u201d represents the imaginary unit (\u221a-1). Complex   numbers have both a real part and an imaginary part.</p> </li> </ul> <p>These categorizations provide a general overview, but there are more specific classifications within each category based on properties such as prime numbers, even/odd numbers, prime factorization, etc. The categorization of numbers can vary depending on the context and field of study.</p>"},{"location":"236/index.html","title":"Accordion plugins for WordPress","text":"Plugin Price FSE Accessible Dependencies Comments [Lightweight Accordion] yes This is a disclosure element [Accordions Combo] no Doesn\u2019t seem to work [Easy Accordion] Doesn\u2019t support the editor well [Accordion FAQ] Bootstrap [Responsive Accordion and Collapse] [Bellow light] Free yes This may be menus only [Bellows pro] Premium This might be for menus only"},{"location":"236/index.html#lightweight-accordion","title":"Lightweight Accordion","text":"<p>Uses the details and summary tag. This is know as the details disclosure element.</p>"},{"location":"237/index.html","title":"COC Categorization","text":"<p>COC also known as Conquer of completion is vim and (Neo)vim plugin that provides vscode like plugin architecture. This architecture is based the Language Server Protocol (LSP version 3.17).</p>"},{"location":"237/index.html#providers","title":"Providers","text":""},{"location":"237/index.html#inlay-hint","title":"Inlay Hint","text":""},{"location":"238/index.html","title":"Wooden ship brewing","text":"<p>Key featues</p> <ul> <li>Located at 3300 W 44th St, Minneapolis, MN 55410</li> </ul> <p>Meta</p> <pre><code>tags: #brewery\n</code></pre>"},{"location":"239/index.html","title":"The Word of Warcraft addons that I use","text":"<ul> <li>AdiBags</li> <li>Astral Keys</li> <li>Khes\u2019yc iLvl</li> <li>can I Mog it</li> <li>clique</li> <li>deadly boss mods</li> <li>details</li> <li>handy notes</li> <li>ip mythic timer</li> <li>maze helpers</li> <li>mythic dungeon tools</li> <li>pawn</li> <li>platter</li> <li>raider.io</li> <li>simulcationcraft</li> <li>tomcats tours</li> <li>tomtom</li> <li>weakauras</li> </ul> <p>For the weakauras I use Luxthos and Ultimate mouse cursor.</p> <pre><code>tags: #wow\n</code></pre>"},{"location":"24/index.html","title":"Example of a vm with out a garbage collect","text":"<p>Some on one acorn1010\u2019s stream posted code for a vm without a garbage collector. I have a copy of the code here.</p> <pre><code>#include \"uxn.h\"\n\n/*\nCopyright (u) 2022 Devine Lu Linvega, Andrew Alderwick, Andrew Richards\n\nPermission to use, copy, modify, and distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE.\n*/\n\n/* clang-format off */\n\n/*  a,b,c: general use.  bs: byte/short bool. src, dst: stack ptrs, swapped in return mode.\n    pc: program counter. sp: ptr to src stack ptr. kptr: \"keep\" mode copy of src stack ptr.\n    x,y: macro in params. d: macro in device. j,k,dev: macro temp variables. o: macro out param. */\n\n#define PUSH8(s, x) { if(s-&gt;ptr == 0xff) { errcode = 2; goto err; } s-&gt;dat[s-&gt;ptr++] = (x); }\n#define PUSH16(s, x) { if((j = s-&gt;ptr) &gt;= 0xfe) { errcode = 2; goto err; } k = (x); s-&gt;dat[j] = k &gt;&gt; 8; s-&gt;dat[j + 1] = k; s-&gt;ptr = j + 2; }\n#define PUSH(s, x) { if(bs) { PUSH16(s, (x)) } else { PUSH8(s, (x)) } }\n#define POP8(o) { if(!(j = *sp)) { errcode = 0; goto err; } o = (Uint16)src-&gt;dat[--j]; *sp = j; }\n#define POP16(o) { if((j = *sp) &lt;= 1) { errcode = 0; goto err; } o = src-&gt;dat[j - 1]; o += src-&gt;dat[j - 2] &lt;&lt; 8; *sp = j - 2; }\n#define POP(o) { if(bs) { POP16(o) } else { POP8(o) } }\n#define POKE(x, y) { if(bs) { u-&gt;ram[(x)] = (y) &gt;&gt; 8; u-&gt;ram[(x) + 1] = (y); } else { u-&gt;ram[(x)] = y; } }\n#define PEEK16(o, x) { o = (u-&gt;ram[(x)] &lt;&lt; 8) + u-&gt;ram[(x) + 1]; }\n#define PEEK(o, x) { if(bs) { PEEK16(o, x) } else { o = u-&gt;ram[(x)]; } }\n#define DEVR(o, d, x) { dev = (d); o = dev-&gt;dei(dev, (x) &amp; 0x0f); if(bs) { o = (o &lt;&lt; 8) + dev-&gt;dei(dev, ((x) + 1) &amp; 0x0f); } }\n#define DEVW8(x, y) { dev-&gt;dat[(x) &amp; 0xf] = y; dev-&gt;deo(dev, (x) &amp; 0x0f); }\n#define DEVW(d, x, y) { dev = (d); if(bs) { DEVW8((x), (y) &gt;&gt; 8); DEVW8((x) + 1, (y)); } else { DEVW8((x), (y)) } }\n#define WARP(x) { if(bs) pc = (x); else pc += (Sint8)(x); }\n#define LIMIT 0x40000 /* around 3 ms */\n\nint\nuxn_eval(Uxn *u, Uint16 pc)\n{\n    unsigned int a, b, c, j, k, bs, instr, errcode;\n    unsigned int limit = LIMIT;\n    Uint8 kptr, *sp;\n    Stack *src, *dst;\n    Device *dev;\n    if(!pc || u-&gt;dev[0].dat[0xf]) return 0;\n    while((instr = u-&gt;ram[pc++])) {\n        if(!limit--) {\n            if(!uxn_interrupt()) {\n                errcode = 6;\n                goto timeout;\n            }\n            limit = LIMIT;\n        }\n        /* Return Mode */\n        if(instr &amp; 0x40) {\n            src = &amp;u-&gt;rst; dst = &amp;u-&gt;wst;\n        } else {\n            src = &amp;u-&gt;wst; dst = &amp;u-&gt;rst;\n        }\n        /* Keep Mode */\n        if(instr &amp; 0x80) {\n            kptr = src-&gt;ptr;\n            sp = &amp;kptr;\n        } else {\n            sp = &amp;src-&gt;ptr;\n        }\n        /* Short Mode */\n        bs = instr &amp; 0x20 ? 1 : 0;\n        switch(instr &amp; 0x1f) {\n        /* Stack */\n        case 0x00: /* LIT */ PEEK(a, pc) PUSH(src, a) pc += 1 + bs; break;\n        case 0x01: /* INC */ POP(a) PUSH(src, a + 1) break;\n        case 0x02: /* POP */ POP(a) break;\n        case 0x03: /* NIP */ POP(a) POP(b) PUSH(src, a) break;\n        case 0x04: /* SWP */ POP(a) POP(b) PUSH(src, a) PUSH(src, b) break;\n        case 0x05: /* ROT */ POP(a) POP(b) POP(c) PUSH(src, b) PUSH(src, a) PUSH(src, c) break;\n        case 0x06: /* DUP */ POP(a) PUSH(src, a) PUSH(src, a) break;\n        case 0x07: /* OVR */ POP(a) POP(b) PUSH(src, b) PUSH(src, a) PUSH(src, b) break;\n        /* Logic */\n        case 0x08: /* EQU */ POP(a) POP(b) PUSH8(src, b == a) break;\n        case 0x09: /* NEQ */ POP(a) POP(b) PUSH8(src, b != a) break;\n        case 0x0a: /* GTH */ POP(a) POP(b) PUSH8(src, b &gt; a) break;\n        case 0x0b: /* LTH */ POP(a) POP(b) PUSH8(src, b &lt; a) break;\n        case 0x0c: /* JMP */ POP(a) WARP(a) break;\n        case 0x0d: /* JCN */ POP(a) POP8(b) if(b) WARP(a) break;\n        case 0x0e: /* JSR */ POP(a) PUSH16(dst, pc) WARP(a) break;\n        case 0x0f: /* STH */ POP(a) PUSH(dst, a) break;\n        /* Memory */\n        case 0x10: /* LDZ */ POP8(a) PEEK(b, a) PUSH(src, b) break;\n        case 0x11: /* STZ */ POP8(a) POP(b) POKE(a, b) break;\n        case 0x12: /* LDR */ POP8(a) PEEK(b, pc + (Sint8)a) PUSH(src, b) break;\n        case 0x13: /* STR */ POP8(a) POP(b) c = pc + (Sint8)a; POKE(c, b) break;\n        case 0x14: /* LDA */ POP16(a) PEEK(b, a) PUSH(src, b) break;\n        case 0x15: /* STA */ POP16(a) POP(b) POKE(a, b) break;\n        case 0x16: /* DEI */ POP8(a) DEVR(b, &amp;u-&gt;dev[a &gt;&gt; 4], a) PUSH(src, b) break;\n        case 0x17: /* DEO */ POP8(a) POP(b) DEVW(&amp;u-&gt;dev[a &gt;&gt; 4], a, b) break;\n        /* Arithmetic */\n        case 0x18: /* ADD */ POP(a) POP(b) PUSH(src, b + a) break;\n        case 0x19: /* SUB */ POP(a) POP(b) PUSH(src, b - a) break;\n        case 0x1a: /* MUL */ POP(a) POP(b) PUSH(src, (Uint32)b * a) break;\n        case 0x1b: /* DIV */ POP(a) POP(b) if(a == 0) { errcode = 4; goto err; } PUSH(src, b / a) break;\n        case 0x1c: /* AND */ POP(a) POP(b) PUSH(src, b &amp; a) break;\n        case 0x1d: /* ORA */ POP(a) POP(b) PUSH(src, b | a) break;\n        case 0x1e: /* EOR */ POP(a) POP(b) PUSH(src, b ^ a) break;\n        case 0x1f: /* SFT */ POP8(a) POP(b) c = b &gt;&gt; (a &amp; 0x0f) &lt;&lt; ((a &amp; 0xf0) &gt;&gt; 4); PUSH(src, c) break;\n        }\n    }\n    return 1;\n\nerr:\n    /* set 1 in errcode if it involved the return stack instead of the working stack */\n    /*        (stack overflow &amp; ( opcode was STH / JSR )) ^ Return Mode */\n    errcode |= ((errcode &gt;&gt; 1 &amp; ((instr &amp; 0x1e) == 0x0e)) ^ instr &gt;&gt; 6) &amp; 1;\ntimeout:\n    return uxn_halt(u, errcode, pc - 1);\n}\n\n/* clang-format on */\n\nint\nuxn_boot(Uxn *u, Uint8 *ram)\n{\n    Uint32 i;\n    char *cptr = (char *)u;\n    for(i = 0; i &lt; sizeof(*u); i++)\n        cptr[i] = 0x00;\n    u-&gt;ram = ram;\n    return 1;\n}\n\nDevice *\nuxn_port(Uxn *u, Uint8 id, Uint8 (*deifn)(Device *d, Uint8 port), void (*deofn)(Device *d, Uint8 port))\n{\n    Device *d = &amp;u-&gt;dev[id];\n    d-&gt;u = u;\n    d-&gt;dei = deifn;\n    d-&gt;deo = deofn;\n    return d;\n}\n</code></pre>"},{"location":"240/index.html","title":"980 pro NVME upgrade on the XPS 9710","text":"<p>Here is a chek list of the things that I need to remember</p> <ul> <li>Wow addons wow addons</li> <li>Autohotkeys</li> <li>Battle.net</li> <li>Logitech hub (optional?)</li> <li>affinity designer</li> <li>curseforge</li> <li>dell updates</li> <li>discord</li> <li>google drive</li> <li>podman</li> <li>razer synapse (for tartus mouse, and dock)</li> <li>spotify</li> <li>steel series (headset)</li> <li>killer intelligence center</li> </ul>"},{"location":"241/index.html","title":"Portable pizza oven buying checklist","text":"<p>Here are my requirements</p> <ul> <li>Good for 12 inch pizza\u2019s</li> <li>Easy to use for large events as I will more than likely dealing with the dough</li> </ul> <p>Things to think about</p> <ul> <li>Do you need to rotate the pizza</li> <li>Heat distribution</li> <li>Does it have a see through lid</li> <li>How long to wait between pizza\u2019s</li> </ul> <p>Other things that I need</p> <p>Types of pizza ovens</p> <ul> <li>gas</li> <li>propane</li> <li>charcoal</li> <li>pellet</li> <li>wood</li> </ul> Oven Type Temp Price Comment Ooni Karu wood,charcoal,gas 950 see through door Ooni Karu 12G wood,charcoal,gas 950 see through door Ooni Frya pellet 950 Ooni Koda gas 950 Gozney propane 950 Bertello propane,wood,charcoal 920 500 Wood and propane at the same time. Need to rotate Halo Versa 530 It rotates Vevor multi <p>[AVPN]: Associazione Verace Pizza Napoletana</p>"},{"location":"242/index.html","title":"Bertello portable 12\u201d pizza oven","text":"<p>This is a portable pizza that uses has a dual wood and gas burner. Gas will do most of the work. The wood will give a nice finish.</p>"},{"location":"243/index.html","title":"How to create a new category for blocks","text":"<p>When creating a new block it belongs to a category. It may only be registed to an available category. If the category doesn\u2019t exist it will be set to the uncategorized category.</p> <p>Some reasons that you may want to create a new category is to have blocks be found under an organizations own category.</p> <p>Here are the default categories</p> <ul> <li>design</li> <li>uncategorized</li> </ul>"},{"location":"243/index.html#facts","title":"Facts","text":"<ul> <li>In <code>block.json</code> category needs to be set to a valid category</li> </ul> <pre><code>function my_block_plugin_block_init()\n{\n    register_block_type(__DIR__ . '/build/blocks', array());\n    add_filter('block_categories_all', function ($categories) {\n        return array_merge(\n            array(\n                array(\n                    'slug' =&gt; 'org',\n                    'title' =&gt; __('My organization', 'my-plug')\n                )\n            ),\n            $categories\n        );\n    });\n}\nadd_action('init', 'my_plugin_block_init');\n</code></pre> <pre><code>tags: #php #wordpress\n</code></pre>"},{"location":"244/index.html","title":"WordPress block editor domain model","text":"<p>The block editor is the piece of software that allows WordPress content managers to be able to build content for their website. By default Page and Post post types are able to be edited.</p> <ul> <li>Menu</li> </ul> <p>Menu is a post type that is a list of links</p> <ul> <li>Category</li> </ul> <p>A category is a type of block. By default WordPress has be text, media, design, widgets, theme, and embed. Custom categories may be added with <code>add_filter('block_categories', 'plugin_block_categories', 10, 2)</code></p> <ul> <li>Post Type</li> </ul> <p>Post Type is the type of entry that a content editor may add. By default WordPress comes with Pages, Posts, Attachments, Revisions, Navigation Menus, Custom CSS, and Changesets. Page and Post are shown in the menu on the left side of the admin page. Plugins may add new post types. See how to add a new post type in WordPress for more details.</p> <ul> <li>Query Loop</li> <li>Block inserter</li> </ul> <p>This is the the side bar on the left that you use to add an additional block. An alternative is to click the add inserter button in the block.</p> <ul> <li>Settings sidebar</li> </ul> <p>This is the settings that may be edited in the sidebar on the right. The component to look into is the <code>InspectorControls</code> component.</p> <ul> <li>Block toolbar</li> </ul> <p>This is the toolbar that shows when you select a block. Components relavent to this include <code>BlockControls</code>.</p> <ul> <li> <p>Attributes</p> <p>tags: #wordpress</p> </li> </ul>"},{"location":"245/index.html","title":"How to add a new post type in WordPress","text":"<p>See the documentation on <code>register_post_type</code> for more information. Here is an example for registering an event post type.</p> <pre><code>if (!function_exists('my_plugin_create_events_posttype')) {\n    function my_plugin_create_events_posttype()\n    {\n        register_post_type(\n            'events',\n            array(\n                'labels' =&gt; array('name' =&gt; __('Events', 'my_plugin'), 'singular_name' =&gt; __('Event', 'my_plugin')),\n                'public' =&gt; true,\n                'has_archive' =&gt; true,\n                'rewrite' =&gt; array('slug' =&gt; 'movies'),\n                'show_in_rest' =&gt; true,\n                /* 'supports' =&gt; array(), */\n                'capabilities' =&gt; array(),\n            ),\n        );\n    }\n}\n\nadd_action('init', 'my_plugin_create_events_posttype');\n</code></pre> <p>This will create an editable</p> <pre><code>tags: #wordpress\n</code></pre>"},{"location":"246/index.html","title":"Chezmoi cheatsheet","text":""},{"location":"246/index.html#externals","title":"Externals","text":""},{"location":"246/index.html#golang-templates","title":"Golang templates","text":"<p>Order and equality</p> <ul> <li>eq</li> </ul> <p>Returns the boolean truth of arg1 == arg2</p> <ul> <li>ne</li> </ul> <p>Returns the boolean truth of arg1 != arg2</p> <ul> <li>lt</li> </ul> <p>Returns the boolean truth of arg1 &lt; arg2</p> <ul> <li>le</li> </ul> <p>Returns the boolean truth of arg1 &lt;= arg2</p> <ul> <li>gt</li> </ul> <p>Returns the boolean truth of arg1 &gt; arg2</p> <ul> <li>ge</li> </ul> <p>Returns the boolean truth of arg1 &gt;= arg2</p>"},{"location":"247/index.html","title":"How to increase cursor speed on MacOSX","text":"<pre><code>defaults read -g InitialKeyRepeat\ndefaults write -g InitialKeyRepeat -int 10 # normal minimum is 15 (225 ms)\n</code></pre> <pre><code>defaults read -g KeyRepeat\ndefaults write -g KeyRepeat -int 1\n</code></pre>","tags":["macosx"]},{"location":"248/index.html","title":"Keg and Case Market","text":""},{"location":"249/index.html","title":"How to convert JSON typescript schema","text":"<pre><code># script.mjs\nimport { writeFileSync} from 'fs';\nimport { compile, compileFromFile } from 'json-schema-to-typescript';\n\n// compile from file\ncompileFromFile('block.json')\n  .then(ts =&gt; writeFileSync('blockSchema.d.ts', ts))\n</code></pre> <pre><code>npm install --save-dev json-schema-to-typescript\ncurl -fsSL -O https://raw.githubusercontent.com/WordPress/gutenberg/trunk/schemas/json/block.json\nnode script.mjs\n</code></pre>","tags":["bash","typescript"]},{"location":"25/index.html","title":"Schema google thing","text":"<p>DUMP</p> <ul> <li>Schema thing that helps with google search</li> <li>Google rich results</li> <li>Google search central</li> <li>important for seo and backlinks</li> <li>from acorn1010\u2019s stream</li> </ul>"},{"location":"250/index.html","title":"Types of sourdough preferments","text":"<p>A sourdough preferment is the type of mixture that combines a starter with other ingredients to be used in a sourdough recipe. Usually, it takes roughly 6 hours for the preferment to be mature for use in a recipe. Time varies widely though.</p>"},{"location":"250/index.html#types","title":"Types","text":"<p>Here are my classifications of the different types of preferments used. These may differ compared to where you might find else where.</p> <ul> <li>Traditional liquid starter</li> </ul> <p>This is typically a 1:1:1 ratio of starter, flour, and water The flour is   typically anything glutenous</p> <ul> <li>Traditional stiff starter</li> </ul> <p>This is typically a 1:2:1 ratio of starter, flour, and water. The flour is   typically anything glutenous</p> <ul> <li> <p>Poolish</p> </li> <li> <p>Bigga</p> </li> </ul> <p>Is an indirect dough. Typically drier such as a 2 to 1 ratio. Typically a long   ferment.</p> <ul> <li>Cold fermented Bigga</li> </ul> <p>Is an indirect dough. Typically drier such as a 2 to 1 ratio. Typically a long   ferment. The initial ferment is done in the fridge.</p>"},{"location":"250/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking\n</code></pre>"},{"location":"251/index.html","title":"How to setup automated change logs with github actions","text":"<p>This is still a proof of concept. On issue with this method is that the bot likes to commit to the main branch. For small projects this adds extra complexity as you have to deal with the merging with a remote repo.</p> <p>There are 2 ways that I have found. One is with <code>semantic release</code> and the other is with <code>commitlint</code>. <code>commitlint</code> seems to have the</p> <p>Install the required packages</p> <pre><code>pnpm add --save-dev @semantic-release/changelog @semantic-release/git semantic-release\n</code></pre> <p>Add the following semantic release configuration to <code>.releaserc.json</code></p> <pre><code>{\n  \"branches\": [\n    \"+([0-9])?(.{+([0-9]),x}).x\",\n    \"main\",\n    {\n      \"name\": \"beta\",\n      \"prerelease\": true\n    },\n    {\n      \"name\": \"alpha\",\n      \"prerelease\": true\n    }\n  ],\n  \"plugins\": [\n    \"@semantic-release/commit-analyzer\",\n    \"@semantic-release/release-notes-generator\",\n    [\n      \"@semantic-release/changelog\",\n      {\n        \"changelogFile\": \"CHANGELOG.md\"\n      }\n    ],\n    [\n      \"@semantic-release/git\",\n      {\n        \"assets\": [\"CHANGELOG.md\"],\n        \"message\": \"chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}\"\n      }\n    ]\n  ]\n}\n</code></pre> <p>Github action. Add the following contents to the file <code>.github/workflows/release.yml</code></p> <pre><code>name: Release\non:\n  push:\n    branches:\n      - \"main\"\n\npermissions:\n  contents: read # for checkout\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write # to be able to publish a GitHub release\n      issues: write # to be able to comment on released issues\n      pull-requests: write # to be able to comment on released pull requests\n      id-token: write # to enable use of OIDC for npm provenance\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n        with:\n          fetch-depth: 0\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: \"lts/*\"\n\n      - name: Install pnpm\n        run: npm install --global pnpm\n      - name: Install dependencies\n        run: pnpm install\n      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies\n        run: pnpm audit signatures\n      - name: Release\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n        run: pnpx semantic-release\n</code></pre>"},{"location":"251/index.html#see-also","title":"See also","text":"<ul> <li>Changelog automation in python</li> </ul>"},{"location":"252/index.html","title":"List of core blocks for the block editor","text":"<p>WordPress block themes have a field \u201cBlock Type\u201d in there comments.</p> <p>The full list of core blocks is referenced in the documentation.</p>"},{"location":"253/index.html","title":"Docker compose service cli interactions","text":"<p>Chat GPT prompt</p> <pre><code>I need to be able to run one off commands with  wp-cli against the WordPress website that I have running. I would be using this as a test environment to test out `wp` before I do things agains a live environment. It would be ideal to be able to run `wp` inside of a container. There is a docker image called `wordpress:cli` that has `wp-cli` already installed.\n\nHere is the docker compose file that I have so far:\n\n# Contents of docker-compose.yaml file\nversion: '3.1'\n\nservices:\n    wordpress:\n        build:\n            context: .\n            dockerfile: wordpress.Dockerfile\n        restart: always\n        ports:\n            - 8080:80\n        depends_on:\n            - db\n        environment:\n            WORDPRESS_DB_HOST: db\n            WORDPRESS_DB_USER: exampleuser\n            WORDPRESS_DB_PASSWORD: examplepass\n            WORDPRESS_DB_NAME: exampledb\n            WORDPRESS_DEBUG: true\n        volumes:\n            - ./internal:/var/www/html\n            - ./packages/themes:/app/themes:ro\n            - ./packages/plugins:/app/plugins:ro\n            - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro\n\n    db:\n        image: mysql:5.7\n        platform: linux/x86_64\n        restart: always\n        environment:\n            MYSQL_DATABASE: exampledb\n            MYSQL_USER: exampleuser\n            MYSQL_PASSWORD: examplepass\n            MYSQL_RANDOM_ROOT_PASSWORD: '1'\n        volumes:\n            - db:/var/lib/mysql\n\nvolumes:\n    db:\n\n# End of contents for docker compose-file\n\nLets say I have a bash script called `wp-script`.  I would like this to encapsulate the details of running wp. For example, I would like to run `./wp-script plugin install advanced-custom-fields --active`.  It may also be nice to have it automate a couple of things when first starting things up.\n</code></pre> <p>This is what I came up with</p> <pre><code>#!/bin/bash\n# in hack\n\nexport PATH=\"${PWD}/scripts:${PATH}\"\nsource \"${PWD}/contrib/wp-completion.bash\"\n</code></pre> <pre><code>#!/bin/bash\n# in scripts/wp\n\n# Helper function to run wp-cli commands inside the WordPress container\nfunction run_wp_command() {\n    docker-compose exec -T wp-cli wp \"$@\"\n}\n\n# Check if the WordPress container is running, and if not, start it\nfunction start_wordpress_container() {\n    docker-compose up -d p-cliwordpress\n}\n\n# Check if any arguments are passed to the script\nif [ $# -eq 0 ]; then\n    echo \"No wp-cli command provided. Usage: ./wp-script &lt;wp-cli-command&gt;\"\n    exit 1\nfi\n\nstart_wordpress_container\nrun_wp_command \"$@\"\n</code></pre> <pre><code># in contrib/wp-completion.bash\n# bash completion for the `wp` command\n\n_wp_complete() {\n    local OLD_IFS=\"$IFS\"\n    local cur=${COMP_WORDS[COMP_CWORD]}\n\n    IFS=$'\\n' # want to preserve spaces at the end\n    local opts=\"$(wp cli completions --line=\"$COMP_LINE\" --point=\"$COMP_POINT\")\"\n\n    if [[ \"$opts\" =~ \\&lt;file\\&gt;\\s* ]]; then\n        COMPREPLY=($(compgen -f -- $cur))\n    elif [[ $opts = \"\" ]]; then\n        COMPREPLY=($(compgen -f -- $cur))\n    else\n        COMPREPLY=(${opts[*]})\n    fi\n\n    IFS=\"$OLD_IFS\"\n    return 0\n}\ncomplete -o nospace -F _wp_complete br8kthru-scripts wp\n</code></pre> <pre><code>version: \"3.1\"\n\nservices:\n  wordpress:\n    build:\n      context: .\n      dockerfile: wordpress.Dockerfile\n    restart: always\n    ports:\n      - 8080:80\n    depends_on:\n      - db\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: exampleuser\n      WORDPRESS_DB_PASSWORD: examplepass\n      WORDPRESS_DB_NAME: exampledb\n      WORDPRESS_DEBUG: true\n    volumes:\n      - ./internal:/var/www/html\n      - ./packages/themes:/app/themes:ro\n      - ./packages/plugins:/app/plugins:ro\n      - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro\n    networks:\n      - wp-net\n\n  wordpress-cli:\n    image: wordpress:cli\n    stop_signal: SIGINT\n    depends_on:\n      - db\n      - wordpress\n    links:\n      - db\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: exampleuser\n      WORDPRESS_DB_PASSWORD: examplepass\n      WORDPRESS_DB_NAME: exampledb\n      WORDPRESS_DEBUG: true\n    volumes:\n      - ./internal:/var/www/html\n      - ./packages/media:/app/media:ro\n      - ./packages/themes:/app/themes:ro\n      - ./packages/plugins:/app/plugins:ro\n    networks:\n      - wp-net\n\n  db:\n    image: mysql:5.7\n    platform: linux/x86_64\n    restart: always\n    environment:\n      MYSQL_DATABASE: exampledb\n      MYSQL_USER: exampleuser\n      MYSQL_PASSWORD: examplepass\n      MYSQL_RANDOM_ROOT_PASSWORD: \"1\"\n    volumes:\n      - db:/var/lib/mysql\n    networks:\n      - wp-net\n\nvolumes:\n  db:\n\nnetworks:\n  wp-net: {}\n</code></pre>","tags":["wordpress"]},{"location":"254/index.html","title":"CSS grid attributes and cheatsheet","text":"<p>There are a few CSS keywards that interacts with an element container that has its display set to either <code>grid</code> or <code>inline-grid</code>.</p>","tags":["css","webdev","design"]},{"location":"254/index.html#grid-container","title":"Grid container","text":"<p>A grid container is the root of the grid. It may container 0 or more items.</p> <ul> <li><code>grid-template-{rows,columns,areas}</code></li> <li><code>grid-template</code></li> <li><code>{row,column}-gap</code></li> <li><code>gap</code></li> <li><code>grid-gap</code></li> <li><code>grid-{row,column}-gap</code></li> <li><code>grid</code></li> <li><code>align-{items,content}</code></li> <li><code>justify-{items,content}</code></li> <li><code>place-{items,content}</code></li> <li><code>grid-auto-{rows,columns,flow}</code></li> </ul>","tags":["css","webdev","design"]},{"location":"254/index.html#grid-item","title":"Grid item","text":"<p>A grid item is a child of a grid container.</p> <ul> <li><code>grid-{row,column}-{start,end}</code></li> <li><code>grid-{row,column}</code></li> <li><code>grid-area</code></li> <li><code>justify-self</code></li> <li><code>align-self</code></li> <li><code>place-self</code></li> </ul> <p></p>","tags":["css","webdev","design"]},{"location":"254/index.html#cheatsheet","title":"Cheatsheet","text":"<p>This note serves as a quick reference or cheatsheet for common CSS Grid properties for laying out elements on a webpage. It covers properties applied to both the grid container and the grid items.</p> <p>CSS Grid Layout is a two-dimensional layout system for the web. It lets you lay out content in rows and columns, making it easier to design complex layouts.</p>","tags":["css","webdev","design"]},{"location":"254/index.html#grid-container-properties","title":"Grid Container Properties","text":"<p>Properties applied to the element that is the parent of the grid items (display: grid; or display: inline-grid;).</p> <ul> <li> <p><code>display</code>: Defines the element as a grid container and establishes a new grid formatting context for its contents.</p> </li> <li> <p><code>grid</code>: Generates a block-level grid.</p> </li> <li> <p><code>inline-grid</code>: Generates an inline-level grid.</p> </li> <li> <p><code>grid-template-columns</code>, <code>grid-template-rows</code>: Defines the columns and rows of the grid with a space-separated list of track sizes.</p> </li> <li> <p>Example: <code>grid-template-columns: 100px 1fr auto;</code> (defines three columns: 100px wide, one fraction of the remaining space, and automatic width).</p> </li> <li> <p>Also supports <code>repeat()</code>, <code>minmax()</code>, <code>auto-fill</code>, <code>auto-fit</code>.</p> </li> <li> <p><code>grid-template-areas</code>: Defines a grid template by referencing the names of grid areas which are specified with the <code>grid-area</code> property on the children.</p> </li> <li> <p>Example:     <code>css     grid-template-areas:       \"header header\"       \"sidebar content\"       \"footer footer\";</code></p> </li> <li> <p><code>grid-template</code>: A shorthand for setting <code>grid-template-rows</code>, <code>grid-template-columns</code>, and <code>grid-template-areas</code> in a single declaration.</p> </li> <li> <p><code>grid-gap</code>, <code>column-gap</code>, <code>row-gap</code>: Sets the gaps (gutters) between rows and columns. (Note: <code>gap</code> is a shorthand for <code>row-gap</code> and <code>column-gap</code> and is now the standard).</p> </li> <li> <p>Example: <code>gap: 10px 20px;</code> (10px row gap, 20px column gap) or <code>gap: 15px;</code> (15px for both).</p> </li> <li> <p><code>justify-items</code>: Aligns grid items along the inline (row) axis within their allocated grid areas.</p> </li> <li> <p><code>start</code>, <code>end</code>, <code>center</code>, <code>stretch</code> (default).</p> </li> <li> <p><code>align-items</code>: Aligns grid items along the block (column) axis within their allocated grid areas.</p> </li> <li> <p><code>start</code>, <code>end</code>, <code>center</code>, <code>stretch</code> (default).</p> </li> <li> <p><code>place-items</code>: Shorthand for setting both <code>align-items</code> and <code>justify-items</code>.</p> </li> <li> <p>Example: <code>place-items: center start;</code> (align-items: center, justify-items: start).</p> </li> <li> <p><code>justify-content</code>: Aligns the grid tracks along the inline (row) axis when the total size of the grid is less than the size of the grid container.</p> </li> <li> <p><code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code>, <code>space-evenly</code>.</p> </li> <li> <p><code>align-content</code>: Aligns the grid tracks along the block (column) axis when the total size of the grid is less than the size of the grid container.</p> </li> <li> <p><code>start</code>, <code>end</code>, <code>center</code>, <code>space-around</code>, <code>space-between</code>, <code>space-evenly</code>.</p> </li> <li> <p><code>place-content</code>: Shorthand for setting both <code>align-content</code> and <code>justify-content</code>.</p> </li> <li> <p>Example: <code>place-content: space-between center;</code> (align-content: space-between, justify-content: center).</p> </li> <li> <p><code>grid-auto-columns</code>, <code>grid-auto-rows</code>: Specifies the size of implicitly created grid tracks (tracks generated by grid items that are not explicitly placed by <code>grid-template-areas</code> or <code>grid-template-columns</code>/<code>rows</code>).</p> </li> <li> <p><code>grid-auto-flow</code>: Controls how auto-placed items are flowed in the grid.</p> </li> <li> <p><code>row</code> (default), <code>column</code>, <code>dense</code> (attempts to fill holes).</p> </li> <li> <p><code>grid</code>: Shorthand for all the grid container properties (caution: can be verbose).</p> </li> </ul>","tags":["css","webdev","design"]},{"location":"254/index.html#grid-item-properties","title":"Grid Item Properties","text":"<p>Properties applied to the child elements of a grid container.</p> <ul> <li> <p><code>grid-column-start</code>, <code>grid-column-end</code>: Specify the starting and ending grid lines for a grid item\u2019s placement along the inline (row) axis. Can use line numbers, names, or <code>span</code>.</p> </li> <li> <p>Example: <code>grid-column-start: 2;</code>, <code>grid-column-end: span 2;</code> (Starts at line 2 and spans 2 columns).</p> </li> <li> <p><code>grid-row-start</code>, <code>grid-row-end</code>: Specify the starting and ending grid lines for a grid item\u2019s placement along the block (column) axis. Can use line numbers, names, or <code>span</code>.</p> </li> <li> <p>Example: <code>grid-row: 1 / 3;</code> (Shorthand for starting at row line 1 and ending at row line 3).</p> </li> <li> <p><code>grid-column</code>, <code>grid-row</code>: Shorthands for <code>*-start</code> and <code>*-end</code>.</p> </li> <li> <p>Example: <code>grid-column: 1 / span 3;</code>.</p> </li> <li> <p><code>grid-area</code>: A shorthand for <code>grid-row-start</code>, <code>grid-column-start</code>, <code>grid-row-end</code>, and <code>grid-column-end</code>. Can also be used to name a grid item\u2019s area to be used in <code>grid-template-areas</code>.</p> </li> <li> <p>Example (placement): <code>grid-area: 1 / 2 / 3 / 4;</code> (row-start / column-start / row-end / column-end).</p> </li> <li> <p>Example (naming): <code>grid-area: header;</code>.</p> </li> <li> <p><code>justify-self</code>: Aligns a grid item inside its allocated grid area along the inline (row) axis. Overrides <code>justify-items</code> set on the container for this specific item.</p> </li> <li> <p><code>start</code>, <code>end</code>, <code>center</code>, <code>stretch</code> (default).</p> </li> <li> <p><code>align-self</code>: Aligns a grid item inside its allocated grid area along the block (column) axis. Overrides <code>align-items</code> set on the container for this specific item.</p> </li> <li> <p><code>start</code>, <code>end</code>, <code>center</code>, <code>stretch</code> (default).</p> </li> <li> <p><code>place-self</code>: Shorthand for setting both <code>align-self</code> and <code>justify-self</code>.</p> </li> <li>Example: <code>place-self: center end;</code> (align-self: center, justify-self: end).</li> </ul>","tags":["css","webdev","design"]},{"location":"254/index.html#further-reading","title":"Further Reading","text":"<ul> <li>MDN Web Docs - CSS Grid Layout</li> <li>A Complete Guide to CSS Grid | CSS-Tricks</li> </ul>","tags":["css","webdev","design"]},{"location":"255/index.html","title":"Introductory material for statistics","text":"<p>See https://www.openintro.org/book/os/</p>"},{"location":"256/index.html","title":"Recommended image types to use on the web","text":"<p>TLDR</p> <ul> <li>WebP if available</li> <li>JPEG for nice images</li> <li>PNG for graphics</li> <li>GIF for animations</li> <li>SVG for simple graphics</li> </ul> <p>Dump from chat GPT-3.5</p> <ol> <li> <p>JPEG (Joint Photographic Experts Group): JPEG is the most common image format for photographs and complex images with many colors and gradients. It uses lossy compression, which means some image quality is sacrificed to reduce file size. It\u2019s ideal for photographs and images where some loss of detail is acceptable.</p> </li> <li> <p>PNG (Portable Network Graphics): PNG is a lossless image format that supports transparency, making it suitable for images with sharp edges, text, logos, and graphics. It\u2019s commonly used for icons, logos, and images where preserving image quality and transparency is crucial.</p> </li> <li> <p>GIF (Graphics Interchange Format): GIF is a widely used format for animated images, as it supports animation and transparency. However, it has limitations in color and is not suitable for high-quality photographs or images with many colors.</p> </li> <li> <p>WebP: WebP is a modern image format developed by Google that provides both lossy and lossless compression. It generally offers better compression and smaller file sizes compared to JPEG and PNG without significantly compromising image quality. However, browser support for WebP may vary, so you may need to provide fallback formats for compatibility.</p> </li> <li> <p>SVG (Scalable Vector Graphics): SVG is an XML-based vector image format that is resolution-independent and ideal for simple graphics and icons. It can be scaled to any size without losing quality and is often used for responsive design and high-resolution displays.</p> </li> </ol>","tags":["webdev"]},{"location":"257/index.html","title":"Article about how PostCSS is an alternatie to SCSS","text":"<p>PostCSS solves a few problems of vanilla css.</p> <p>Here are the key features</p> <ul> <li>Have functions. Called mixins.</li> <li>Future proof css</li> <li>Imports able to be inlined rather than in distict files. A performance improvment.</li> <li>CSS modules with a plugin. CSS can be isolated. No more conflicts.</li> <li>CSS Nesting. More maintainable code.</li> </ul> <p>See article</p> <pre><code>tags: #webdev\n</code></pre>"},{"location":"258/index.html","title":"Managing encrypted data with ssh keys","text":"<p>See the program age.</p>"},{"location":"259/index.html","title":"Automatically rerunning commands with <code>entr</code>","text":"<p><code>entr</code> is a unix filter for rerunning commands.</p>"},{"location":"259/index.html#one-liners","title":"One liners","text":"<p>This is a couple of one liners that I have found to be helpful.</p> <p>Rerun bash script when anything in the current working directory changes</p> <pre><code>find . | entr -s bash ''\n</code></pre> <p>For updating the server on file change use <code>-r</code></p> <pre><code>find . | entr -r python server.py\n</code></pre> <p>Compile a chezmoi template to see what it looks like.</p> <pre><code>find . | entr -s 'chezmoi execute-template \"$(cat home/run_onchange_before_10_packages.tmpl)\" -o /tmp/compiled_template.sh'\n</code></pre>"},{"location":"26/index.html","title":"How to export postman files","text":"<p>To export a collection right click on the collection of interest and click export.</p> <p>To export an environment select the environment. On the right side of the row where you can change the environment name there is a <code>...</code>. Click that.</p>"},{"location":"260/index.html","title":"Types of pizza","text":"<ul> <li>New york style</li> </ul> <p>Typically gas cooked neopolitan pizza. Typically mozzarella cheese is used. Typically this is made in a high heat pizza oven. Often around 900f. This is similary to a neopolitan pizza.</p> <ul> <li>Sicilian</li> </ul> <p>Uncommon deep dish pizza</p> <ul> <li>Roman</li> </ul> <p>Square pizza. Typically has lots of sauce and little cheese.</p> <ul> <li>Brooklyn</li> </ul> <p>Similar to New york style, but with a blend of mozzarella and provolone.</p> <ul> <li>Chicago deep dish</li> </ul> <p>Lots of toppings. Baked in a deep pan</p> <ul> <li>Chicago thin crust (tavern style)</li> </ul> <p>Thin crispy crust. Typically rolled and cut into squares</p> <ul> <li>Neapolitan</li> </ul> <p>Neopolitan is the holy grain of pizza. It is a thinner pizza crust that is still still has a rather fluffy texture. It is typically baked for around 90 seconds in temperatures around 900f.</p> <ul> <li>St Louis</li> </ul> <p>Think frozen pizza but better</p> <ul> <li>Buffallo</li> </ul> <p>Thick crust</p> <ul> <li>Detroit</li> </ul> <p>Square pizza cooked in a steel pan.</p> <ul> <li>Californian</li> </ul> <p>Lots untraditional toppings</p>"},{"location":"260/index.html#see-also","title":"See also","text":"<ul> <li>https://www.thespruceeats.com/a-definitive-guide-to-pizza-styles-4796699</li> </ul>"},{"location":"260/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking\n</code></pre>"},{"location":"261/index.html","title":"Hugo theme development loop","text":"<p>New hugo version have support for go modules, I am using v0.118.2+extended. This allows your personal website and the them to be in different repositories. Lets say for example you have your site and a bunch of themes. Your site is <code>github.com/username/personal-website</code> and your theme is in <code>github.com/username/hugo-awesome-theme</code>. Typically, I will have the 2 repositories in <code>~/repos/github.com/username</code>.</p> <ul> <li>In personal website</li> </ul> <p><code>personal-website/go.mod</code> Will have something like this.</p> <p>```go   module github.com/username/personal-website</p> <p>go 1.21.1</p> <p>require github.com/username/hugo-awesome-theme v0.0.0-20230921164428-3ebbd579323d // indirect   ```</p> <p><code>personal-website/go.work</code> Will have</p> <p>```g   go 1.21.1</p> <p>use .   use ../hugo-awesome-theme   ```</p> <ul> <li>In awesome theme</li> </ul> <p><code>hugo-awesome-theme/go.mod</code> Will have</p> <p>Run the server in the <code>personal-website</code> directory with the following:</p> <pre><code>HUGO_MODULE_WORKSPACE=\"${PWD}/go.work\" hugo server --watch\n</code></pre> <p>Go is ran from the <code>workspace</code> directory.</p>"},{"location":"261/index.html#see-also","title":"See also","text":"<ul> <li>Golang development loop</li> <li>Golang workspace example</li> </ul>"},{"location":"261/index.html#meta","title":"Meta","text":"<pre><code>tags: #golang\n</code></pre>"},{"location":"262/index.html","title":"Seamless navigation between tmux and vim","text":"<p>This is something I have been looking into. I did find that there is a repository up on github and a couple of blogs about. One from the author and one from another from a random blog. It allows navigating out of vim to tmux with a custom keybinds. Haven\u2019t figured out how to use the tmux prefix between both vim and tmux or use the <code>&lt;leader&gt;w functions</code>.</p>"},{"location":"263/index.html","title":"An interesting article about LINQ in JavaScript","text":"<p>This is an article about how LINQ can be used within JavaScript. It features a couple of different ways to implement it. Array prototype functions, defered execution with generators, and with the library underscore.</p> <p>See blog for more details.</p>"},{"location":"264/index.html","title":"Research on type of mic for my streaming","text":""},{"location":"264/index.html#types-of-microphones","title":"Types of microphones","text":"<ul> <li>Dynamic</li> </ul> <p>Typical usage is 3 to 4 inches away.</p> <ul> <li>Condenser</li> </ul> <p>Typically used for music and recording studios.</p> <p>Typically used 6 inches away.</p> <ul> <li>Shotgun</li> </ul> <p>Hybrid between a dynamic and condenser. Good if you don\u2019t want it close up to you.</p> <p>Typically 1 foot to foot and half away.</p> <p>Meta:</p> <pre><code>tags: #hardware\n</code></pre>"},{"location":"265/index.html","title":"Steps to host a keg with GitHub pages","text":"<p>A keg repo on GitHub may be hosted on github pages with a little bit of work. This involves configuring git pages, creating a few files files, setting up DNS, adding a Jekyll theme, and setting up google for having the site index.</p>"},{"location":"265/index.html#github-pages-setup","title":"GitHub pages setup","text":"<p>Out of the box a keg site has no entry points. This is <code>docs/README.md</code> and <code>docs/dex/README.md</code>. <code>docs/README.md</code> acts as the home page while <code>docs/dex/README.md</code> allows for linking to the index. <code>docs/README.md</code> links to <code>docs/dex/README.md</code> that then links to <code>docs/dex/changes.md</code>. See https://jlrickert.github.io/zet/README.md and https://jlrickert.github.io/zet/dex/README.md for examples.</p> <p>Once the files have been created the next step is configuring GitHub pages. In your zettelkasten repo the settings for pages will be under the settings tab and under pages. It should have the following things set:</p> <ul> <li>The source sould be Deploy from a branch.</li> <li>The branch should be the desired branch and the file should be <code>/docs</code>.</li> <li>(optional) Custom domain set to zet.example.com</li> </ul>"},{"location":"265/index.html#theme","title":"Theme","text":"<p>To add a theme a <code>_config.yml</code> needs to be created with the content needed to set the theme. Here is an example:</p> <pre><code>tittle: KEG Zettelkasten for Jared Rickert (jlrickert)\ndescription: My personal zettelkasten KEG site. It contains stuff on pretty much any topic I feel like writing about.\nurl: https://zet.jlrickert.me\ngoogle_analytics: G-WXQ3PHET4N\nremote_theme: pages-themes/hacker@v0.2.0\nplugins:\n  - jekyll-remote-theme # add this line to the plugins list if you already have one\n  - jekyll-sitemap\n</code></pre> <p>I am currently using the theme hacker. A list of compatable themes may be found at https://pages.github.com/themes/.</p>"},{"location":"265/index.html#custom-domain-optional","title":"Custom domain (Optional)","text":"<p>If setting up a custom domain make sure to have the following entries set in the DNS. I use namecheap.</p> <pre><code>CNAME zet username.github.io\nA @ 185.199.108.153\nA @ 185.199.109.153\nA @ 185.199.110.153\nA @ 185.199.111.153\nAAAA @ 2606:50c0:8000::153\nAAAA @ 2606:50c0:8001::153\nAAAA @ 2606:50c0:8002::153\nAAAA @ 2606:50c0:8003::153\n</code></pre>"},{"location":"265/index.html#indexing","title":"Indexing","text":"<p>Having google index the site is nice to have. To make it so that google can index your website go to search.google.com/search-console/welcome and type in your domain name. Then follow the instructions for setting up DNS validation.</p>"},{"location":"265/index.html#google-analytics","title":"Google analytics","text":"<p>Google analytics is as simple as coping over your GA4 tag over to your <code>_config.yml</code> file. For example:</p> <pre><code>google_analytics: G-WXQ3PHET4N\n</code></pre> <p>A problem that I ran into for some themes (including hacker) is that it may still be using now deprecated google analytics. See hacker theme google analytics issue for an example of a potential fix.</p> <pre><code>tags: #blog #webdev\n</code></pre>"},{"location":"266/index.html","title":"The idea of cognitive distance","text":"<p>While reading and article about why to use tailwind the idea of cognitive distance came up. This is something I kind of knew about but I didn\u2019t have a name for it. It is when information relevant to the context is not available. For example, when changing global variables you need to consider what else is being affected. Mutable global state has high cognitive distance.</p> <p>Things to think about:</p> <ul> <li>Test things that have a high cognitive distance</li> <li>Document things that have a high cognitive distance</li> <li>Forcing code to be dry may cause high cognitive distance</li> <li>Forcing separation of concerns may cause high cognitive distance</li> </ul> <p>Overall cognitive distance should be eliminated if possible.</p>"},{"location":"267/index.html","title":"Jekyll theme hacker google analytics issue","text":"<p>The theme hacker is a theme that hasn\u2019t been touch in over a year. This is when the deprecated google analytics was still the go to. To migrate the theme to use newer GA4 the file <code>_includes/head-custom-google-analytics.html</code> may be overridden.</p> <p>Create the file with the following content:</p> <pre><code>{% if site.google_analytics %}\n&lt;!-- Google tag (gtag.js) --&gt;\n&lt;script async src=\"https://www.googletagmanager.com/gtag/js?id={{ site.google_analytics }}\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', '{{ site.google_analytics }}');\n&lt;/script&gt;\n{% endif %}\n</code></pre> <p>This is an open issue on the hacker theme.</p>"},{"location":"268/index.html","title":"Keg introduction","text":"<p>Hello KEG friend! For full reference try KEG Quick Start Guide<sup>1</sup> or official KEG Specification<sup>2</sup>. If you already know some form of Markdown this sample summary should be enough to help you understand KEGML constraints to regular Markdown for the sake of simplicity, clarity, and efficiency.</p> Block Token Contains Title <code>#</code> Inflect, Math, Code Bulleted List <code>*</code> <code>-</code> <code>+</code> All but Lede Numbered List <code>1.</code> All but Lede Include List <code>* [</code> Inflect, Math, Code Footnotes <code>[^</code> All buf Lede Fenced <code>```</code> <code>~~~</code> Runes Quote <code>&gt;</code> All but URL, Link, Lede Math <code>$$</code> Runes Figure <code>![</code> Inflect, Math, Code Separator <code>----</code> None Table <code>|</code> All but Lede Paragraph None All but URL <ul> <li>Only a single Title or Footnotes block is allowed</li> <li>Title must be first line and not exceed 72 total runes<sup>4</sup></li> <li>Footnotes must be the last block</li> <li>Lists must never follow other Lists of any type</li> <li>Separator must never follow another Separator block</li> </ul> Span Tokens Description Inflect<sup>5</sup> <code>*</code> Alter voice, tone, or mood Beacon<sup>6</sup> <code>**</code> Draw attention, terminology, phrases Lede <code>***</code> Introductory, summarize, provoke, entice Math <code>$</code> Inline MathJax/LaTeX markup notation Code <code>`</code> Code, monospace, preformatted URL <code>&lt;</code> <code>&gt;</code> Universal resource locator Plain (none) Anything not in another span type <ul> <li>Lede must be first (and possibly only) span in paragraph block</li> </ul> <p>There are three types of links: node, file, and footnote. Node links target another nodes including index nodes<sup>3</sup>. Both node and file nodes can have a query code that begins with question mark (<code>?</code>) and specifies how to include and expand the linked node or file.</p> Query Code Behavior (none) Link text becomes relative heading (beginning with hashtags <code>#</code>) T Target title becomes relative heading L Link text becomes lede 0 Just include target body <pre><code>This is [node link to zero node](../0) that always has `../` in front. If linking to [a file](somefile) must be local[^1].\n\n- [Include node 1 as a heading (this text)](../1)\n- [Include node 2 as a heading (target title)](../2?T)\n- [Include node 3 as a lede paragraph](../3?L)\n- [Include node 4 with no heading](../4?0)\n\n[^1]: This footnote explains that local is same directory as README.md (no slash).\n</code></pre> <ol> <li> <p>https://rwxrob.github.com/keg \u21a9</p> </li> <li> <p>https://github.com/rwxrob/keg-spec \u21a9</p> </li> <li> <p>An index directory is a node but without the integer name making them unindexed nodes.\u00a0\u21a9</p> </li> <li> <p>A Unicode code point can be from one to four bytes long and allows the use of emojis and character sets for all of the world\u2019s languages. The Go programming language (which was created by the main creators of Unicode itself, Rob Pike) was the first to call them \u201crunes\u201d for short. In contrast, the term \u201cchar\u201d retains its one-byte meaning.\u00a0\u21a9</p> </li> <li> <p>Reuse of the \u201ci\u201d from \u201citalic\u201d but defined semantically same as HTML5.\u00a0\u21a9</p> </li> <li> <p>Reuse of the \u201cb\u201d from \u201cbold\u201d but defined semantically same as HTML5.\u00a0\u21a9</p> </li> <li> <p>All node IDs must be integers. However, an index qualifies as being a node even though it has a non-integer ID. This is to prevent indexes from being indexed themselves. But for the purposes of linking, an index is a node and therefore a node link target may include a non-integer after its identifying prefix (ex: <code>../2</code> or <code>../dex</code>).\u00a0\u21a9</p> </li> </ol>","tags":["keg"]},{"location":"269/index.html","title":"When to use CGO_ENABLED","text":"<p><code>CGO_ENABLED</code> enables compiling code from c. For some features this is necessary. However, cross compilation is not possible. As a best practice it be best to not enable it globally and only set it to true locally when necessary. One example where I ran into this is when installing hugo with the enhanced feature set.</p>"},{"location":"27/index.html","title":"Thanksgiving bread bowl 2022","text":"<p>Basic bread bowl that I made for thanksgiving. Here is the recipe:</p> <ul> <li>150g starter (35%)</li> <li>550 AP flour</li> <li>375g water (65%)</li> <li>11g salt (02%)</li> </ul> <p>Total weight is 1086</p> <p>I baked it at 450 for 18 minutes in the dutch oven with steam and 20 minutes without.</p> <p>It was a total hit and almost gone. The smokey bacon dip that I bought at cub was a hit as well.</p> <p>Tags:</p> <pre><code>#baking\n</code></pre>"},{"location":"270/index.html","title":"Streaming setup research","text":"<p>In order to make things work I need to have a mic, video capture, and webcam available on a windows device with an RTX graphics card running OBS and NVIDIA Broadcast. Typically, I either game on the machine with the RTX graphics card and code in either Linux or MacOSX. It would be ideal to be able to quickly and seamlessly switch between my gaming setup and coding setup with minimal fuss.</p> <p>To summarize my requirements</p> <ul> <li>Seamless switching between gaming and coding</li> <li>Capture video from 32 inch monitor on system with RTX graphics card</li> <li></li> </ul> <p>There are possible ways that I could go about doing this. Either upgrading my old pc and switching my laptop over to linux, or buying a mac and using my laptop from streaming and gaming.</p> <p>Other things that I need are lighting.</p>"},{"location":"270/index.html#windows-pc-route","title":"Windows PC route","text":""},{"location":"270/index.html#mac-route","title":"Mac Route","text":""},{"location":"270/index.html#general-setup","title":"General setup","text":""},{"location":"270/index.html#lights","title":"Lights","text":"Device Brightness Attachments Comments Litra beam 400 lumens base,tripod mount Litra grow 250 lumens tripod mount,monitor mount Harsh on eyes and reflection in glasses <p>I decided to go with the libra beam.</p>"},{"location":"270/index.html#monitors","title":"Monitors","text":"<p>2 Viotek monitor. HDMI 2.0 support or DP 1.2</p>"},{"location":"271/index.html","title":"Digital ocean regions","text":"","tags":["digitalocean","region"]},{"location":"271/index.html#database","title":"Database","text":"<ul> <li>NYC1</li> <li>NYC3</li> <li>SFO2</li> <li>SFO3</li> <li>TOR1</li> </ul>","tags":["digitalocean","region"]},{"location":"271/index.html#spaces","title":"Spaces","text":"<p>Available spaces</p> <ul> <li>NYC3</li> <li>SFO2</li> <li>SFO3</li> </ul>","tags":["digitalocean","region"]},{"location":"272/index.html","title":"Arch linux setup on Terra","text":"<p>Terra is my old desktop that I use for development. The main reason that I develop on my desktop instead of on my newer faster labtop is that the labtop has a newer NVIDIA gpu that can run NVIDIA broadcast that I use for streaming.</p>"},{"location":"272/index.html#bootrap-the-system","title":"Bootrap the system","text":"<p>Follow the arch linux installation guide</p> <ul> <li>Partition type is GPT</li> <li>swap is 8G. I follow the ubuntu recomendations when not using hibernate. I rounded up to 64G as I only have 48G.</li> <li>Install <code>linux-zen</code> and <code>linux-zen-headers</code></li> </ul> <pre><code>pacstrap -K /mnt base linux-zen linux-zen-headers linux-firmware vim intel-ucode\n</code></pre> <ul> <li>For bootloader use systemd-boot.</li> <li>Edit <code>/boot/loader/entries/arch-zen.conf</code> to use the zen kernel. It should look like the following:</li> </ul> <p><code>bash   title Arch Linux Zen   linux /vmlinuz-linux-zen   initrd /intel-ucode.img   initrd /initramfs-linux-zen.img   options root=PARTUUID=XXXX add_efi_memmap rw</code></p> <p>PARTUUID can be looked up using <code>lsblk</code></p> <p>Make the following edit to <code>/boot/loader/loader.conf</code></p> <p><code>bash   default arch-zen.conf   timeoute 3   console-mode max   editor no</code></p> <p><code>bash   extra_kernel_version_strings linux-zen,linux-lts,linux</code></p>"},{"location":"272/index.html#network-setup","title":"Network setup","text":"<p>Install the dependencies:</p> <pre><code>pacman -Syu networkmanager nss-mdns\n</code></pre> <p>Edit the following in <code>/etc/nsswitch.conf</code></p> <pre><code>hosts: mymachines mdns_minimal [NOTFOUND=return] resolve [!UNAVAIL=return] files myhostname dns\n</code></pre> <pre><code>systemctl enable --now NetworkManager.service\nsystemctl enable --now systemd-resolved.service\n</code></pre>"},{"location":"272/index.html#setup-man-pages","title":"Setup man pages","text":"<pre><code>pacman -Syu man-db man-pages\nsystemctl enable --now man-db.service\n</code></pre>"},{"location":"272/index.html#create-a-user","title":"Create a user","text":"<pre><code>pacman -Syu sudo git zsh pipewire pipewire-docs wireplumber helvum pipewire-audio pipewire-alsa pipewire-pulse\nuseradd -m -G users,wheel -s /bin/zsh jlrickert\n</code></pre> <p>Enable wheel group to use sudo using <code>EDITOR=vim visudo</code>. wheel is used over sudo as other programs use it. Redhat and systemd prefer wheel and is preinstalled on arch. Ubuntu uses sudo group. <code>polkit</code> is something that uses wheel out of the box. Other than that It is mainly preference.</p> <p>Also add <code>Defaults insults</code> just cause.</p>"},{"location":"272/index.html#setup-sound","title":"Setup sound","text":"<p>For sound I find the newer pipewire seems to be mature enough for daily use.</p> <pre><code>pacman -Syu pipewire pipewire-docs wireplumber helvum pipewire-audio pipewire-alsa pipewire-pulse\nsystemctl --user enable --now pipewire-pulse.service\n</code></pre>"},{"location":"272/index.html#setup-ssh","title":"Setup ssh","text":"<p>Install openssh</p> <pre><code>pacman -Syu openssh xorg-xauth\n</code></pre> <p>Make the following changes in <code>/etc/ssh/sshd_config</code>.</p> <pre><code>PermintRootLogin no\nPubkeyAuthentication yes\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nX11Forwarding yes\nPrintMotd yes\n</code></pre>"},{"location":"272/index.html#packages","title":"Packages","text":"<pre><code>pacman -Syu pkgfile\npkgfile -u\nsystemctl enable pkgfile-update.timer\nsystemctl start pkgfile-update.timer\n\npacman -Syu man-db man-pages\n</code></pre> <ul> <li> TODO: <code>source /usr/share/doc/pkgfile/command-not-found.zsh</code> automation on arch linux</li> </ul>"},{"location":"272/index.html#install-graphics-drivers","title":"Install graphics drivers","text":"<p>I have a Pascall (NV130) series GTX 1060 card [NV136 (GP106)]. Follow the nvidia guide on the arch wiki. I need to figure out if I should be using the noveou drivers as there are some things that are not compatible.</p> <pre><code>pacman -Syu --needed nvidia-dkms mesa\n</code></pre>"},{"location":"272/index.html#performance","title":"Performance","text":"<pre><code>pacman -Syu thermald btop i7z power-profiles-daemon\nsystemctl enable --now thermald\nsystemctl enable --now power-profiles-daemon.service\n</code></pre>"},{"location":"272/index.html#system-password-manager","title":"System password manager","text":"<pre><code>pacman -Sy gnome-keyring seahorse libsecret\nsystemctl --user enable --now gcr-ssh-agent.service\nsystemctl --user enable --now gnome-keyring-daemon.service\n</code></pre> <p>Update <code>/etc/pam.d/login</code> so it has the following content:</p> <pre><code>#%PAM-1.0\n\nauth       required     pam_securetty.so\nauth       requisite    pam_nologin.so\nauth       include      system-local-login\nauth       optional     pam_gnome_keyring.so\naccount    include      system-local-login\nsession    include      system-local-login\nsession    optional     pam_gnome_keyring.so auto_start\npassword   include      system-local-login\n</code></pre> <p>The lines where <code>pam_gnome_keyring.so</code> has been add is what needs to be added</p> <p>Create the file <code>~/.config/systemd/user/ssh-agent.service</code> with the following contents:</p> <pre><code>[Unit]\nDescription=SSH key agent\n\n[Service]\nType=simple\nEnvironment=SSH_AUTH_SOCK=%t/ssh-agent.socket\n# DISPLAY required for ssh-askpass to work\nEnvironment=DISPLAY=:0\nExecStart=/usr/bin/ssh-agent -D -a $SSH_AUTH_SOCK\n\n[Install]\nWantedBy=default.target\n</code></pre> <p>Then activate the file with <code>systemctl --user enable --now ssh-agent.service</code></p> <p>VScode doesn\u2019t know how to use it. Add <code>\"password-store\": \"gnome\"</code> into <code>.vscode/argv.json</code>.</p>"},{"location":"272/index.html#instaling-aur-packages","title":"Instaling aur packages","text":"<pre><code>mkdir -p ~/repos/aur.archlinux.org\ncd ~/repos/aur.archlinux.org\ngit clone https://aur.archlinux.org/yay.git\ncd yay\nmakepkg -si\nyay --sync --refresh --needed google-chrome visual-studio-code-bin zoom\n</code></pre>"},{"location":"272/index.html#dump","title":"Dump","text":"<ul> <li> TODO: <code>source /usr/share/doc/pkgfile/command-not-found.zsh</code> automation on arch linux</li> <li><code>iwctl</code> for wifi.</li> <li>Sets keyboard speed <code>xset r rate 200 40</code></li> <li> <p><code>setxkbmap -option caps:swapescape</code></p> </li> <li> <p>Weather location for forest lake: 5027117</p> </li> </ul>"},{"location":"272/index.html#see-also","title":"See also","text":"<ul> <li>Labtop blaze</li> </ul>"},{"location":"272/index.html#meta","title":"Meta","text":"<pre><code>tags: #hardware #linux #workstation\n</code></pre>"},{"location":"273/index.html","title":"Pacman cheatsheet and usage patterns","text":"Command Description <code>pacman -R [...package_name]</code> remove a package(s) <code>pacman -S [...package_name]</code> install a package(s) <code>pacman -Rs [...package_name]</code> remove a package(s) and its dependencies not required by other packages <code>pacman -Qdtq \\| pacman -Rs -</code> Auto remove unused dependencies <code>pacman -Syu</code> upgrade packages <code>pacman -Ss [...package_name]</code> search for packages <code>pacman -Qs [...package_name]</code> search for installed packages <code>pacman -F [...package_name]</code> search for packages in remote packages <code>pacman -Qo [package]</code> find what package a file belongs too <code>pacman -Ql [package]</code> find what files are in a package <code>pacman -Qo file</code> find package a file a package belongs too <code>pactree ??</code> list dependencies of a package <code>pacman -U [package]</code> install a local package <code>pacman -Qe</code> List all explicitly installed packages (includes aur) <code>pacman -Qm</code> List all explicitly installed aur packages"},{"location":"273/index.html#see-also","title":"See also","text":"<ul> <li>https://itsfoss.com/pacman-command/</li> </ul>"},{"location":"274/index.html","title":"Setting up refind as a boot loader","text":"<p>Here is an attempt at setting up refind as the bootloader. I gave up half way through and went the <code>systemd-boot</code> route.</p> <pre><code>pacstrap -K /mnt base linux-zen linux-zen-headers linux-firmware vim\n</code></pre> <ul> <li>Edit <code>/boot/loader/entries/arch.conf</code> to use the zen kernel</li> <li>For bootloader use systemd-boot.</li> </ul> <p>Make the following edit to <code>/boot/EFI/refind/refind.conf</code></p>"},{"location":"275/index.html","title":"EDID emulator","text":"<p>EDID virtualises the connects to prevent disconnecting and reconnecting shenanigans when switching devices. Speeds up switching and prevents OS from rearranging windows.</p>"},{"location":"276/index.html","title":"Ranger alternatives","text":"<ul> <li>lf: go alternative</li> <li>vifm</li> <li>midnight commander</li> <li>pcmfn: gui file manager</li> </ul>"},{"location":"277/index.html","title":"AwesomeWM Terminology","text":"Term Description Screen This is a virtual monitor that has an ordered set of applications Client This is an individual application such as xterm Tag A set of clients, a layout Layout Slave Window to be put at the end of other windows Master Window to be put in front of other windows Window Signal awful wibox Widget and layout library Screen A monitor with a set of tags"},{"location":"277/index.html#client","title":"Client","text":""},{"location":"278/index.html","title":"How to replace a missing MN license plate","text":"<p>I some how ended up loosing my license plate on the front of the my car.</p> <p>See also</p> <ul> <li>https://www.dmv.org/mn-minnesota/replacing-lost-registration.php</li> </ul>"},{"location":"279/index.html","title":"Vim, tmux and ssh copy and paste madness","text":"<p>Copy and paste has always been a pita. I have found that using OSC52 works nice and seamlessly.</p> <p>Here is a working example that I have found</p> <ul> <li><code>vim-osc52</code></li> </ul> <p>Add the following to vimrc</p> <p><code>bash   autocmd TextYankPost *     \\ if v:event.operator is 'y' &amp;&amp; v:event.regname is '+' |     \\ execute 'OSCYankRegister +' |     \\ endif</code></p> <ul> <li>Tmux needs <code>set -s set-clipboard on</code></li> <li>Use <code>-Y</code> flag when using ssh. I have found that It doesn\u2019t work when using ssh from windows. Works when using WSL.</li> <li>Alacritty works out of the box</li> <li>Windows terminal also works</li> </ul> <p>ssh config may be added</p>","tags":["wsl","bash","ops"]},{"location":"28/index.html","title":"Configuration of IntelliJ IDEA and friends","text":"<p>Core plugins</p> <ul> <li>IdeaVim</li> </ul>"},{"location":"280/index.html","title":"Git techniques and cheatsheet","text":"<ul> <li>Interactive add hunks to a commit:</li> </ul> <p>Run <code>git add -i</code>. What you want to do is patch. Enter the numbers of the files to patch.</p> <ul> <li>Undo the last commit and place them as unstaged commits</li> </ul> <p>Run <code>git reset HEAD^</code>. If you run git status right after you should should see the items show as unstaged in the status</p> <ul> <li>Pulling in files from upstream</li> </ul> <p>Run pull with the -r flag to signal a rebase. This will apply the patches from upstream and then apply your commits on top of them.</p> <ul> <li>Delete all files not tracked by git</li> </ul> <p>Run <code>git clean -dfx</code></p> <ul> <li>Rebasing branch comments on different branch</li> </ul> <p><code>bash   git checkout main   git pull origin main   git checkout my_branch   git rebase production   git checkout production   git merge --ff my_branch</code></p> <ul> <li>Set current branch to what is on remote</li> </ul> <p><code>bash   git checkout &lt;git commit hash&gt;   git checkout -B your_branch</code></p>","tags":["cli","linux","git","unix"]},{"location":"281/index.html","title":"Personal dotfiles","text":"<p>Old nvim code is found on commit <code>47ee275</code></p>"},{"location":"282/index.html","title":"Github CLI tips and tricks","text":"<p>Set the origin to use the ssh url.</p> <pre><code>git remote set-url origin \"$(gh repo view --json sshUrl | jq -r '.sshUrl')\"\n</code></pre> <p>Clone all of your repositories and switch to sshUrl.</p> <pre><code>for x in $(gh repo list | awk '{print $1}'); do\n  gh repo clone $x\n  cd $x\n  git remote set-url origin \"$(gh repo view --json sshUrl | jq -r '.sshUrl')\"\n  cd -\ndone\n</code></pre>","tags":["bash","github","cli"]},{"location":"283/index.html","title":"PGP cheatsheet","text":"<p>I have a few keys on pgp.mit.edu that I no longer have the private key for.</p> <p>For usage the [arch wiki] is a really good place. This has everything that you need.</p> <p>Here is a list of some active key servers:</p> <ul> <li>mit</li> </ul> <p>[arch wiki]:</p> <p>See also</p> <ul> <li>OpenGPG server implementation hockeypuck</li> </ul> <p>Meta:</p> <pre><code>tags: #security\n</code></pre>"},{"location":"284/index.html","title":"Meetup.com alternative idea","text":"<p>Meetup.com is an old website that hasn\u2019t updated in a long time. A few complaints that it has is that it is hard to hard to find things close to you and that it is hard to communicate with some one in realtime.</p>"},{"location":"285/index.html","title":"How to setup HP Officejet j4680 for printing","text":""},{"location":"285/index.html#windows","title":"Windows","text":"<p>Haven\u2019t figured it out yet. I got it to work once. Windows is able to recognize the printer on the network, but doesn\u2019t seem to setup the drivers with its automagic.</p>"},{"location":"285/index.html#arch-linux","title":"Arch linux","text":"<p>Here are the key things that I did to make it work.</p> <p>Cups is used for a print server. Install and start cups with systemd.</p> <pre><code>sudo pacman -Sy cups\nsystemctl start cups\nsystemctl enable cups\n</code></pre> <p>A few extra things that I did that may be needed is adding your user to the usergroup cups. Run <code>sudo usermod -aG cups jlrickert</code>. Then restart the cups server through systemd (<code>sudo systemctl restart cups.service</code>).</p> <p>Cups was wasn\u2019t able to setup the printer itself. I did find a utility that configured it for me. Use <code>hp-setup -i</code></p> <p>Another things to note is that the interface for cups (found on localhost:631) uses the users name and password. The user would be <code>jlrickert</code> in my case.</p>"},{"location":"285/index.html#mac","title":"Mac","text":"<p>Works out of the box. No fucking around with stuff.</p>"},{"location":"285/index.html#see-also","title":"See also","text":"<ul> <li>https://wiki.archlinux.org/title/CUPS</li> <li>https://wiki.archlinux.org/title/CUPS/Printer-specific_problems#HP</li> </ul> <p>Meta:</p> <pre><code>tags: #hardware\n</code></pre>"},{"location":"286/index.html","title":"Mythic plus progress on Ravalock for season 2","text":"<p>Current progress for season 2 on Ravalock.</p> <p>Current rating is 1943</p> Dungeon Initials Fortified Tyranical Brackenhide Hollow BH 15+ 16- The Vortex Pinacle VP 15++ 13+++ Freehold FH 15+ 16 Uldaman: Lagacy of Tyr ULD 13++ 15- The Underrot UNDR - 14+ Halls of Infusion HOI 15- 11+ Neltharion\u2019s Lair NL 13+++ 10+ Neltharus NELTH 13+ 13+"},{"location":"287/index.html","title":"Arch linux setup on blaze","text":"<p>Blaze is my dell xps 9710. It is setup similar to Terra. This is what I use to develop on when I want to be mobile.</p>"},{"location":"287/index.html#harddrive-setup","title":"Harddrive setup","text":"<ul> <li>hard drive is on <code>/dev/nvme1n1</code></li> </ul> Partition Type Code Size /boot 1 (EFI) 1G swap 19 64G / 23 The rest"},{"location":"287/index.html#hibernate-and-suspend","title":"Hibernate and suspend","text":"<p>Currenlty s2idle is supported. No S3 support</p> <ul> <li>Add <code>resume</code> to HOOK in <code>/etc/mkinitcpio.conf</code></li> <li>Add <code>resume=PARTUUID=XXXX</code> to boot entries</li> </ul>"},{"location":"287/index.html#hidpi-setup","title":"HiDPI setup","text":"<p>Copy the following into <code>~/.Xresource</code>.</p> <pre><code>Xft.antialias: true\nXft.hinting:   true\nXft.rgba:      rgb\nXft.hintstyle: hintfull\nXft.dpi:       220\n</code></pre>"},{"location":"287/index.html#keyboard","title":"Keyboard","text":"<p>Since I general don\u2019t have my nice keyboard connected when using my labtop I need to swap caps lock and escape.</p>"},{"location":"287/index.html#notes","title":"Notes","text":"<ul> <li><code>edk2-shell</code> might insight into how to add windows to the list of boot entries.</li> </ul>"},{"location":"287/index.html#see-also","title":"See also","text":"<ul> <li>https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Configure_the_initramfs</li> </ul>"},{"location":"288/index.html","title":"Solution to being locked out of arch linux","text":"<p>At some point while using EndeavourOS on both my desktop and laptop I was locked out from being able to login. I think I traced it down to an issue with yay.</p> <p>Here is the workaround for now if it happens:</p> <pre><code>faillock --user USER --reset\n</code></pre> <p>This isn\u2019t verified yet.</p>"},{"location":"288/index.html#see-also","title":"See also","text":""},{"location":"288/index.html#meta","title":"Meta","text":"<pre><code>tags: #linux\n</code></pre>"},{"location":"289/index.html","title":"Research for tendonitis issue","text":"<p>I have slight discomfort in my right wrist. This is especially true after using the computer all day. Some aggrivators that I find is using the mouse and constantly switching between my ergonomic keyboard and regular keyboard. It is more of a dull pain low grade pain, even at rest.</p>"},{"location":"289/index.html#see-also","title":"See also:","text":"<ul> <li>de quervain tenosynovitis</li> </ul> <p>One thing that I learned from the test for this is that my right wrist is   slightly worse than my left wrist. Doesn\u2019t seem to fit with the location of   pain that I have.</p> <ul> <li>ulnar wrist pain</li> </ul> <p>This seems closer to what I have. There is a stretch where I feel it all up my   ulnar tendon on my right side but not on my left.</p> <ul> <li>https://journals.lww.com/jaaos/fulltext/2015/12000/tendinopathies_of_the_hand_and_wrist.6.aspx</li> </ul>"},{"location":"289/index.html#meta","title":"Meta:","text":"<pre><code>tags: #health\n</code></pre>"},{"location":"29/index.html","title":"Sat 17 Dec 2022 farrel\u2019s kick boxing party","text":""},{"location":"290/index.html","title":"Hardware: Kineses Advantage 360","text":"<p>This is my favorite keyboard so far. Most comfortable keyboard that I have every used. Could be slightly smaller so I don\u2019t have to shift my hand to reach the windows key. This is an ortho linear keyboard. Bought on Amazon for 429$.</p> <p>I later sold it because I no longer use it. Too impractical as it is bulky to take with me every where and context switching between keyboards is problematic.</p>","tags":["hardware","keyboard","personal"]},{"location":"290/index.html#notes","title":"Notes","text":"<p>To change to my custom layout layout hold the gear symbol (top left of the right split) and click 1.</p>","tags":["hardware","keyboard","personal"]},{"location":"290/index.html#my-issues","title":"My issues","text":"<ul> <li>WTF num pad is being stupid. YO click 7 it will disable num lock</li> <li>Wrist pain due to twisting because hand didn\u2019t know what to do. It fixed itself after a while</li> <li>context switching between keyboards destroys typing speed</li> <li>Gaming requires space bar on left. Just move the keys around</li> <li>Unable to wake up windows with the keyboard. Have to re-plug it in. Works flawless on mac.</li> </ul>","tags":["hardware","keyboard","personal"]},{"location":"290/index.html#common-issues","title":"Common issues","text":"<ul> <li>Sucks for small hands</li> </ul>","tags":["hardware","keyboard","personal"]},{"location":"291/index.html","title":"Linux desktop comparison","text":"Desktop Environment Display server comments i3-wm xorg sway wayland Pop-OS! Seemed like it had a lot of issues"},{"location":"292/index.html","title":"Overview: Baking (baking)","text":"<p>Index of the things that I have baked in the past. See baking index.</p>","tags":["overview","baking"]},{"location":"292/index.html#see-also","title":"See also","text":"<ul> <li>Types of sourdough preferments</li> <li>General index</li> </ul>","tags":["overview","baking"]},{"location":"293/index.html","title":"Labor day weekend bread bowl","text":"<p>Recipe that I used for making 2 bread bowls for labor day weekend (Friday September 1 20223). This is an interesting bake because I left my starter up at the cabin in the fridge. I was suppose to be back by Thursday night but ended up arriving on Friday morning.</p> Ingredient Amount Bakers Percentage Comment Bread flour 1100g 100% King Arthur bread flour (12.7% protein) Water 750g 68% starter 50g 27% 100% rye 1:1 salt 11g 1% <p>Total weight is around 1900g</p>","tags":["bread","baking","sourdough"]},{"location":"293/index.html#key-events","title":"Key events","text":"<ul> <li>09:00am Fri Fed starter</li> </ul> <p>My starter has been in the fridge for like 3 days. Surprisingly, it still seems strong. Sitting on the counter for roughly 7 hours and 30 minutes at around 75f to 80f.</p> <ul> <li>04:30pm Fri Mixed Ingredients for autolyse (no starter)</li> <li>09:00pm Fri Placed into the fridge</li> </ul> <p>Around 10 hours in the fridge</p> <ul> <li>07:00am Sat Shaped into bowls</li> </ul> <p>I didn\u2019t have my banneton so I used ceramic (I think) pots. I sprinkled corn meal over the top to prevent from sticking.</p> <ul> <li>11:15am Baking</li> </ul> <p>Baked for 25m at 450f and another 20m at 410f without the lid. I preheated the oven without the dutch ovens, a large sheet of parchment paper with 2 folds, and spritzed with water before being placed inside the oven.</p> <p></p>","tags":["bread","baking","sourdough"]},{"location":"293/index.html#see-also","title":"See also","text":"<ul> <li>pre labor day week 35</li> <li>July forth bread bowl</li> </ul>","tags":["bread","baking","sourdough"]},{"location":"293/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking #bread #sourdough #holiday\n</code></pre>","tags":["bread","baking","sourdough"]},{"location":"294/index.html","title":"Sourdough somewhat whole wheat pizza for the ooni","text":"<p>This is a large batch of pizza dough that I made on Sunday, August 6th. It is meant to be used in the ooni.</p> <p>The temperature is a bit cooler than normal. It is 73 as of 12:45pm sunday.</p> Ingredient Weight Bakers percentage Comment Preferment 450g 28% Around 50g of starter 00 Flour 1600g 100% Water 930g 58% Salt 16g 1% <p>Total weight is roughly 3000g. This makes roughly 12 pizzas.</p>","tags":["baking","pizza","sourdough"]},{"location":"294/index.html#key-events","title":"Key events","text":"<ul> <li>10:00am Sunday Mixed preferment</li> <li>04:00pm Sunday Mixed pizza dough</li> <li>07:00pm Sunday placed mixed pizza dough into fridge</li> <li>01:15pm Monday Pulled out of the fridge</li> <li>01:45pm Monday Shaped dough balls</li> <li>06:00pm Monday Placed dough balls in freezer</li> <li>07:00pm Monday Baked in the Ooni.</li> </ul> <p>The first was baked at 600f. The other two for 850f. All roughly 3 minutes. Seemed like they were slightly under baked. 4 minutes seems to be the ideal when rolling out by hand. The first 2 where left out on the counter top. I grabbed the last one out of the fridge before it was frozen. Made it harder to shape into a disk. Wanted to pull back together.</p> <p> </p> <p>Overall, the dough was perfect. Pizza came out great.</p>","tags":["baking","pizza","sourdough"]},{"location":"294/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","pizza","sourdough"]},{"location":"294/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking #pizza\n</code></pre>","tags":["baking","pizza","sourdough"]},{"location":"295/index.html","title":"Pizza night at the cabin pizza dough","text":"<p>This is the pizza recipe that I used for the dough to be used at cabin on August 26 2023. It is based of off the sourdough somewhat whole wheat pizza that I used at the Finland group gamping event. It is also targeted towards the higher heat of a pizza oven.</p> <p>| Ingredient | Weight | Bakers percentage | Comment | | \u2014 | \u2014 | \u2014 | \u2014 | \u2014 | \u2014 | \u2014 | \u2014 | \u2014 | | Preferment | 450g | 28% | Around 50g of rye starter. The rest is soft whole white wheat | | 00 Flour | 1600g | 100% |  | | Water | 930g | 58% |  |  | Salt | 16g | 1% |  |</p> <p>Total weight is roughly 3000g. This makes roughly 12 pizzas.</p>","tags":["pizza","sourdough","baking"]},{"location":"295/index.html#key-events","title":"Key events","text":"<ul> <li>09:00am Mixed preferment</li> <li>02:30pm Mixed ingredients (no preferment)</li> <li>03:45pm Mixed preferment in</li> </ul>","tags":["pizza","sourdough","baking"]},{"location":"295/index.html#retrospect","title":"Retrospect","text":"<p>This batch of dough came out perfect for making new york style pizza roughly 10 inches in size. I had a tough time getting it super thin without ripping. It was rather elastic, but if worked to much it would rip. The dough seemed easiest to work with when it was at room temperature</p>","tags":["pizza","sourdough","baking"]},{"location":"295/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> <li>Previous recipe</li> </ul>","tags":["pizza","sourdough","baking"]},{"location":"295/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking #pizza #sourdough\n</code></pre>","tags":["pizza","sourdough","baking"]},{"location":"296/index.html","title":"Whole wheat tortilla recipe","text":"<p>This is a recipe based off of the recipe on a random recipe I found on google. Make around 8 tortillas.</p> Ingredient Weight Bakers percentage Comment Whole Wheat flour 500g Oil 50g hot water 280g salt 7g baking powder 5g","tags":["baking"]},{"location":"296/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking"]},{"location":"297/index.html","title":"First bigga sourdough pizza batch for the Ooni","text":"<p>This is my first pizza dough using 00 flour. It is also my first batch to use on the Ooni with 00 flour. I made it on Thursday July 26 2023.</p> Ingredient Weight Bakers percentage Comment Cold fermented bigga 200g 45% This is with 2g of yeast and a small amount of honey. The flour is whole soft white wheat and the starter is 100% rye 00 blue 525g 100% Water 275g 55% <p>Total weight is roughly 1000g. The numbers are a bit off as I didn\u2019t write them down. I suspect that the total wight and the water hydration is on though.</p>","tags":["baking","pizza"]},{"location":"297/index.html#key-events","title":"Key events","text":"<ul> <li>11:00pm Thursday mixed bigga and place in the fridge overnight</li> <li>10:00pm Friday mixed everything</li> <li>12:00pm Friday Pulled out of the fridge</li> <li>03:00pm Friday Shaped the pizza dough</li> <li>10:00pm placed pizza dough back in the fridge</li> </ul>","tags":["baking","pizza"]},{"location":"297/index.html#outcome","title":"Outcome","text":"<p>The dough collapsed by the time I got to the cabin. Still came out really good. Doesn\u2019t seem that over proofed dough has any negative affects on the pizza.</p> <p>At around noon I made the pizza\u2019s. I made 5 of them. Each ball dough was roughly 200g. It is about right if you want to get the pizza dough very thin. It is a bit tricky though. It might be easier to increase to roughly 225 to 250 grams of dough to get a larger pizza and still be doable in the Ooni. Something to play around with.</p> <p>The picture that I took was the last 2 pizzas. The oven got to roughly 950f for the last one. It was in the oven for maybe 2 minutes. The first one that went in the oven was like 750f. Took maybe 3 minutes or so.</p>","tags":["baking","pizza"]},{"location":"297/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","pizza"]},{"location":"298/index.html","title":"Bigga sourdough pizza dough Saturday July 22 2023","text":"<p>This is an expermintal pizza dough. This is my first attempt using a biga.</p> Ingredient Weight Bakers percentage Comment Bigga 225g 45% This is with 2g of yeast and a small amount of honey AP Bread flour 500g 100% Water 275g 55% <p>Total weight is roughly 1000g.</p> <p>Mixed the bigga at around 4pm. At around 10pm I mixed all the ingredients together and placed into the fridge for an overnight proof. I took it out the next morning aroud 10am. It was sticky until like 12pm. Seemed like it would have been perfect by like 2pm. By 4pm it collapsed when I poked it and was super sticky. Probably overproofed. The piza came out fantastic regardless.</p> <p> </p>","tags":["baking","sourdough","pizza"]},{"location":"298/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"298/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking\n</code></pre>","tags":["baking","sourdough","pizza"]},{"location":"299/index.html","title":"July fourth weekend 2023 sourdough bread bowl","text":"<p>This is a bread bowl based off of the recipe that I baked on memorial day.</p> <p>Here are the list of ingredients</p> Ingredient Amount Bakers Percentage Comment All purpose flour 550g 100% organic ap flour from walmart Water 375g 68% starter 150g 27% 100% rye 1:1 salt 11g <p>Total weight is 1085g</p> <p>Here are the key events:</p> <ul> <li>fed starter at 11am</li> <li>mixed at 6pm</li> <li>shaped and placed in fridge at 12:30pm</li> <li>pulled out of fridge at 8:00pm</li> <li>baked at 450g for 24 minutes with the lid on</li> <li>baked at 400g for 14 minutes with the lid off</li> </ul> <p>The temperature was roughly 80f.</p> <p></p>","tags":["baking","holiday","sourdough"]},{"location":"299/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","holiday","sourdough"]},{"location":"3/index.html","title":"World of warcraft evoker preservation gameplay","text":"","tags":["wow","evoker","gaming"]},{"location":"3/index.html#general-stat-priority","title":"General stat priority","text":"<p>Raid - Big Blossom Build</p> <ul> <li>Item Level</li> <li>Mastery</li> <li>Crit</li> <li>Haste</li> <li>Versatility</li> </ul> <p>Raid - Unlimited HoTs Build</p> <ul> <li>Item Level</li> <li>Crit</li> <li>Mastery</li> <li>Haste</li> <li>Versatility</li> </ul> <p>Mythic+</p> <ul> <li>Item Level</li> <li>Haste &amp; Mastery</li> <li>Crit &amp; Versatility</li> </ul>","tags":["wow","evoker","gaming"]},{"location":"30/index.html","title":"World of warcraft dragonflight season 1","text":"<ul> <li>Halls of Valor</li> <li>Court of Stars</li> <li>[ruby life pools]</li> <li>[the nokhud offensive]</li> <li>[the azure vault]</li> <li>[temple of the jade serpent]</li> <li>shadowmoon burial grounds</li> <li>[algeth\u2019ar academy]</li> </ul> <p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"301/index.html","title":"July fourth weekend 2023 sourdough pizza","text":"<p>Pizza that I made for the fourth of July weekend.</p> Ingredient Weight Bakers percentage Comment AP Flour 400g 80% Walmart organic flour Whole wheat 100g 20% Hard red wheat Water 325g 66% rye starter 50g 10% 100% rye; 1 to 1 ratio Salt 1% I just winged it <p>Total weight is rough 875g</p> <p>Here is the timings</p> <ul> <li>12:30pm I mixed and placed in the fridge</li> <li>8:00am I took it out of the fridge</li> <li>Random stretch and folds throughout the day. Nothing crazy</li> </ul> <p>Turned out rather sticky. Still came out good.</p>","tags":["baking","sourdough","pizza"]},{"location":"301/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"302/index.html","title":"Large sourdough pizza batch for BYOT pizza event","text":"<p>This is a big batch of pizza dough for the bring your own toppings (BYOT) pizza event at a friends place on Saturday June 24 2023. I plan to base the recipe that I had for last time I tried to get a pizza night going.</p> <p>The temperature today is suppose to get to around 85.</p> Ingredient Weight Bakers percentage Comment AP Flour 1570g 80% Walmart organic flour Whole wheat 400g 20% Einkorn Water 1300g 66% rye starter 200g 10% 100% rye; 1 to 1 ratio Salt 20g 1% <p>The total weight is 3470. This should be enough for 20 people. I have to work around my schedule so I have to do a few things earlier than I would otherwise.</p> <p>Here is the planned schedule for the dough:</p> <ul> <li>Mix starter at 10pm</li> <li>Mix at 4:00pm</li> <li>Cold bulk ferment from 6:30pm to 10am</li> <li>Shaped at 11am</li> </ul> <p>The timings are based off of a recipe at the perfectloaf recipe but modified.</p> <p>The dough came out relatively easy to work with. Was a huge hit with every one.</p> <p></p>","tags":["baking","sourdough","pizza"]},{"location":"302/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"303/index.html","title":"Thu Apr 20 2023 sourdough pizza","text":"<p>Big batch of sourdough pizza for Friday\u2019s events.</p> Ingredient Weight Bakers percentage Comment AP Flour 625g 60% Walmart organic flour Whole wheat 300g 30% Hard red wheat berries Whole wheat 116g 10% Soft spring wheat berries Water 730g 70% rye starter 208g 20% 100% rye; 1 to 1 ratio EVOO 20g 2% <p>Mixed everything before going to bed. Overnight proof in the fridge.</p> <p>Total weight is 2000g</p>","tags":["baking","sourdough","pizza"]},{"location":"303/index.html#see-also","title":"See also","text":"<ul> <li>thursday</li> <li>sunday</li> <li>Baking index</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"304/index.html","title":"Memorial day sourdough bread bowl","text":"<p>This is the recipe that I used for making the bread bowl for memorial day 2023. It is based off of the Thanksgiving bread bowl.</p> Ingredient Amount Bakers Percentage Comment AP flour 550g 100% organic ap flour from walmart Water 375g 68% starter 150g 27% 100% rye 1:1 salt 11g <p>Total weight is 1085g</p> <p>Baked for 38 minutes. Preheated oven for like 10. The last 8 minutes or so I pulled the lid off.</p>","tags":["baking"]},{"location":"304/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking"]},{"location":"304/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking\ndate: 2023-05-26\n</code></pre>","tags":["baking"]},{"location":"305/index.html","title":"Thanksgiving bread bowl 2022","text":"<p>Basic bread bowl that I made for thanksgiving. Here is the recipe:</p> <ul> <li>150g starter (35%)</li> <li>550 AP flour</li> <li>375g water (65%)</li> <li>11g salt (02%)</li> </ul> <p>Total weight is 1086</p> <p>I baked it at 450 for 18 minutes in the dutch oven with steam and 20 minutes without.</p> <p>It was a total hit and almost gone. The smokey bacon dip that I bought at cub was a hit as well.</p>","tags":["baking","bread","sourdough"]},{"location":"305/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","bread","sourdough"]},{"location":"305/index.html#meta","title":"Meta:","text":"<pre><code>tags: #baking #bread #sourdough\ndate: 2023-11-24\n</code></pre>","tags":["baking","bread","sourdough"]},{"location":"306/index.html","title":"Father\u2019s day whole wheat sourdough batard","text":"<p>A simple batard for father\u2019s day 2023. This is to go with a fish fry.</p> Ingredient Weight Bakers Percentage Comment Whole Wheat 410g 100% Hard red wheat water 287g 70% Rye starter 102g 25% 50g rye starter with 75g of whole wheat. Every thing a 1 to 1 ration with water <p>Mixed the ingredients at around 2pm on Friday. Shaped and placed in the fridge at around 10pm. I pulled it back out at like 8am the next day.</p> <p>Total weight is 800g</p>","tags":["baking","sourdough","bread"]},{"location":"306/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","bread"]},{"location":"307/index.html","title":"Whole wheat sourdough loaf","text":"<p>Whole wheat sourdough loaf that I made on Mon May 8 PM UTC 2023.</p> Ingredient Weight Bakers Percentage Comment Whole Wheat 311g 100% Hard red wheat water 211g 68% Rye starter 78g 25% 1 to 1 ratio <ul> <li>total weight: 600g</li> <li>Baked at around 10 am</li> <li>Baked at 450f for 15 with lid</li> <li>Baked at 450f for 20 without lid</li> </ul> <p>Overall turned out good.</p>","tags":["baking","sourdough","bread"]},{"location":"307/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","bread"]},{"location":"307/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking #sourdough #bread\ndate: 2023-05-08\n</code></pre>","tags":["baking","sourdough","bread"]},{"location":"308/index.html","title":"Experimental whole wheat pizza sourdough small batch","text":"<p>Experimental batch made on Tue Apr 16 2023</p> Ingredient Weight Bakers percentage Red wheat berries 210g 100% water 147g 70% rye starter 40g 19% EVOO 4g 2% <p>Total weight is 400g</p>","tags":["baking","sourdough","pizza"]},{"location":"308/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"309/index.html","title":"Sourdough Pizza experiment","text":"<p>Sourdough pizza experimental batch made on Tue Apr 18 2023. I made this pizza specifically for use at a poker night that I was planning.</p> Ingredient Weight Bakers percentage AP Flour 60g 60% Red whet berries 40g 40% water 80g 80% rye starter 20g 20% EVOO 2g 2% <p>Total weight is 202g</p>","tags":["baking","pizza"]},{"location":"309/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","pizza"]},{"location":"31/index.html","title":"Halls of Valor dungeon","text":"<p>Halls of valor is one of the season 1 dungeons for world of warcraft dragonflight.  To get there take a portal to Dalaran and head to Stormhein.</p> <p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"310/index.html","title":"Experimental rye and barley pullman loaf","text":"Ingredient Weight Bakers percent Comments Rye 300g 50%ish Barley 366g 50% 100% rye starter 50g 35% 100% rye and kind of weak water 500g 80% <p>Total weight is 1250 plus caraway and fennel</p> <p>Made evening of Fri Mar 31 2023. Baked Mid day the next day at 350f for 1.75h. House temperature was less than 60 for bulk fermenting.</p> <p></p>","tags":["baking","sourdough","pullman"]},{"location":"310/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","pullman"]},{"location":"311/index.html","title":"Einkorn sourdough bread bowl","text":"Ingredient Weight Bakers percent Comments Einkorn 550g 100% 100% rye starter 150g 35% 100% rye water 375g 65% salt 11g 2% <p>Total weight is 1086.</p>","tags":["baking","sourdough"]},{"location":"311/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough"]},{"location":"311/index.html#meta","title":"Meta:","text":"<pre><code>tags: #baking\n</code></pre>","tags":["baking","sourdough"]},{"location":"312/index.html","title":"Sourdough pizza","text":"Ingredient Weight Bakers percent Comments AP flour 475g 100% Einkorn 75g 35% 100% rye starter 140g 25% 100% rye water 375g 66% salt 11g 2% <p>Total weight is 1065.</p> <p>Example bakes</p> <ul> <li>Thanks giving 2022</li> <li>I baked it at 450 for 18 minutes in the dutch oven with steam and 20 minutes without.</li> <li>It was a total hit and almost gone. The smokey bacon dip that I bought at cub was a hit as well.</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"312/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough","pizza"]},{"location":"315/index.html","title":"How to manually install a package from the AUR","text":"<p>To install packages from the AUR this this is the steps that I usually follow:</p> <ol> <li>Install the dependencies if needed</li> </ol> <p><code>bash    sudo pacman --sync --refresh --needed base-devel</code></p> <ol> <li>Clone the AUR repository to be installed. Lets take <code>google-chrome</code> for example</li> </ol> <p><code>bash    mkdir -p ~/repos/aur.archlinux.org    cd ~/repos/aur.archlinux.org    git clone https://aur.archlinux.org/google-chrome.git    cd yay    makepkg -si    yay --sync --refresh --needed google-chrome visual-studio-code-bin zoom</code></p> <ol> <li> <p>(Optional) Manually verify that the file what you expect them to be</p> </li> <li> <p>Last step is to build and install the package</p> </li> </ol> <p><code>bash    makepkg -si</code></p>"},{"location":"315/index.html#meta","title":"Meta","text":"<pre><code>tags: #linux #arch #bash #cli\n</code></pre>"},{"location":"316/index.html","title":"Research: a Rofi like experience on MacOSX","text":"<p>On my arch linux machine I use rofi as my program launcher and finder. The feature that I use the most is looking for desktop applications to launch. This in is in contrast to the builtin spotlight on MacOSX that finds an application that is already launch and switches focus. This is typically the behavior that I don\u2019t want.</p> <p>One solution that I ran into is a gui fzf application that may be used from the command line called <code>choose</code>. It may be possible to use <code>skhd</code>, <code>choose</code>, and a bash script that talks to yabai to pull it off.</p> <ul> <li> TODO: Implement a rofi like experience on MacOSX</li> </ul>","tags":["macosx","research","twm"]},{"location":"316/index.html#see-also","title":"See also","text":"<ul> <li>https://github.com/chipsenkbeil/choose</li> </ul>","tags":["macosx","research","twm"]},{"location":"317/index.html","title":"Sourdough pizza dough batch request","text":"<p>This a batch of pizza dough that a family member wanted for a pizza party. It is based on the recipe that I used from a pizza party earlier this year.</p> <p>This is a batch for 10 small 10-12 inch pizza\u2019s that should either be made by Thursday afternoon or 4:30pm on Friday.</p> <p>The temperature is cooler this week. Around 75f.</p> Ingredient Weight Bakers percentage Comment AP Flour 1141g 80% Walmart organic AP flour Whole wheat 285g 20% Einkorn Water 941g 66% rye starter 143g 10% 100% rye; 1 to 1 ratio Salt 14g 1% <p>Total weight is 2525g in total.</p>","tags":["pizza","sourdough","baking"]},{"location":"317/index.html#key-events-thursday-target","title":"Key events (Thursday target)","text":"<p>Making the batch of dough by Thursday is doable. However, there are a few hurdles. Different timing that I haven\u2019t tried, not having enough rye flour for my starter, and missing einkorn flour that I have used previously. This changes the recipe from the one that I know works well. One advantage is that there is an extra day to ferment in the fridge.</p> <ul> <li>12:00pm Wednesday - Mix starter</li> </ul> <p>Just pulled the starter out of the fridge so it is a bit weak. Didn\u2019t seem to matter too much based on my last bake.</p> <ul> <li>11:00pm Wednesday - (planned) Mix starter again</li> </ul> <p>I am up north currently and don\u2019t have enough rye. I could use whole wheat sourdough instead though.</p> <ul> <li>09:00am Thursday - (planned) Autolyse pizza dough</li> </ul> <p>Mix all bit the starter. By this type the starter will be a bit ripe making for a more sour taste to the dough.</p> <ul> <li> <p>10:00am (Thursday) - Mix all ingredients together.</p> </li> <li> <p>01:00pm (Thursday) - Knead dough</p> </li> </ul> <p>Kneading for 4 minutes seems to be the sweet spot from what I remember. This can also be done with stretch and folds.</p> <ul> <li>3:30pm (Thursday) - (Optional) Shape dough</li> </ul> <p>Shaping the dough this early may be challenging. The dough at the point tends to still be a shaggy mess. I typically like to shape, grease with olive oil, and place into plastic bags. This makes it easier to shape and work with when baking. This step may be skipped and done prior to baking. One thing that I need to explore is how this compares to shaping just prior to using. When pulled out of the bag it tends to loose its ball shape and usually reshape prior. I just know this methods makes nice round looking pizzas.</p> <ul> <li>08:00pm (Thursday) - Bulk ferment</li> </ul> <p>This is the tricky part is knowing when to put the dough in the fridge. Generally, I put in the fridge before I go to bed and pull it out 6 hours prior to using (guesstimate). The goal is to get the dough to the right temperature to work with. Too warm and it is sticky and likes to rip. Too cold and it is hard to get thin.</p>","tags":["pizza","sourdough","baking"]},{"location":"317/index.html#key-events-friday-target","title":"Key events (Friday target)","text":"<p>This is a time frame to consider if I am making the dough on Friday. Friday is an easier target because there is less unknowns and have all the available ingredients. It also gives more time to preshape all the dough balls.</p> <ul> <li>12:00pm Wednesday - Mix starter</li> <li>10:30pm Wednesday - Mix starter again</li> </ul> <p>Mix before going to bed</p> <ul> <li>10:00am Thursday - Mix starter again</li> </ul> <p>Stop by the store on the way way home to buy flour.</p> <ul> <li>03:00pm Thursday - Autolyse</li> <li>04:00pm Thursday - Mix ingredients</li> <li>06:30pm Thursday - Cold bulk ferment</li> <li>09:00am Friday - Shape dough</li> <li>12:30pm Friday Ready to bake</li> </ul> <p>This is the earliest that it may be ready. I generally liked the dough better when it was left in the fridge for another day. Another thing to consider is that warm dough may be stickier and more prone to ripping. This isn\u2019t always the case.</p>","tags":["pizza","sourdough","baking"]},{"location":"317/index.html#key-events","title":"Key events","text":"<ul> <li>12:00pm Wednesday - Mix starter</li> <li>10:30pm Wednesday - Mix starter again</li> </ul> <p>Mix before going to bed</p> <ul> <li> <p>12:00am Thursday - Mix starter again</p> </li> <li> <p>06:00pm Thursday - Autolyse and mix rest of starter</p> </li> </ul> <p>I forgot that I needed to make more starter than my usual. I added an addition 75g of rye and 75g of water to the 50g of starter that I had.</p> <ul> <li> <p>07:30pm Mixed ingredients</p> </li> <li> <p>10:45pm Cold bulk ferment</p> </li> </ul>","tags":["pizza","sourdough","baking"]},{"location":"317/index.html#retrospect","title":"Retrospect","text":"<p>I choose the Friday route.</p>","tags":["pizza","sourdough","baking"]},{"location":"317/index.html#baking","title":"Baking","text":"<p>Generally, what I found works best is get the stone as hot as possible and turn down the flame.</p>","tags":["pizza","sourdough","baking"]},{"location":"317/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> <li>Large sourdough pizza batch for BYOT pizza event</li> </ul>","tags":["pizza","sourdough","baking"]},{"location":"319/index.html","title":"Recommend wheat flour to use for different bakes","text":"<p>Typically when some one things of flour it is often some variation of modern wheat. Each variety has different baking characteristics.</p> <p>Here are some of the common varieties:</p> <ul> <li>Spring or Winter variety</li> <li>White or Red variety</li> <li>Soft or Hard variety</li> <li>A common type that you would find in the store would be hard red wheat.</li> </ul> <p>Here are some key facts about protein content</p> <ul> <li>Low protein holds less water</li> <li>High protein holds more water</li> <li>Low protein content is around 8% to 10%</li> <li>medium protein content is around 11% to 13%</li> <li>High protein content is about 14%</li> <li>Higher protein flour tolerate longer ferments</li> <li>Higher protein flour tolerate added fat</li> <li>Medium protein flour is good for thinner pizza\u2019s</li> <li>High protein flour good for thicker pizza\u2019s</li> </ul> <p>Key facts about flour strength</p> <ul> <li>Positively associated with protein content (is it causal?)</li> <li>Weak up to 170. Up to 50% absorbtion</li> <li>Medium between 170 and 260. between 55% and 65% absorbtion</li> <li>Medium good for neopolitan</li> <li>Strong above 260. Long rising pizza doughs. Up to 75% absorbtion</li> </ul> Flour Brand Comment Link Organic AP flour Walmart Medium strength, Good for pizza\u2019s in home oven https://www.walmart.com/ip/Great-Value-Organic-All-Purpose-Flour-5LB-Bag/771215827 AP flour King Authur Medium strength, food for pizza\u2019s in a home oven https://shop.kingarthurbaking.com/items/unbleached-all-purpose-flour 00 classic (Blue) Polselli Medium strength, Good for use in a pizza oven https://www.amazon.com/CLASSICA-Unbleached-Unbromated-Additives-Formulated/dp/B01ERE2YNK/ref=sr_1_9?keywords=00%2Bflour&amp;qid=1694042996&amp;rdc=1&amp;sr=8-9&amp;th=1 00 Super (Red) Polselli Medium strength, Good for use in a pizza oven https://www.amazon.com/CLASSICA-Unbleached-Unbromated-Additives-Formulated/dp/B01ERE2YNK/ref=sr_1_9?keywords=00%2Bflour&amp;qid=1694042996&amp;rdc=1&amp;sr=8-9&amp;th=1"},{"location":"319/index.html#see-also","title":"See also","text":"<ul> <li>Types of pizza</li> <li>https://www.recipesfromitaly.com/best-flour-for-homemade-pizza/</li> </ul>"},{"location":"32/index.html","title":"World of Warcraft court of stars dungeon","text":"<p>You can get to the court of stars by taking a portal to Dalaran and heading north east.</p>","tags":["wow","legion"]},{"location":"321/index.html","title":"Chrome book comparison","text":"<ul> <li> <p>Samsung chrombook go</p> </li> <li> <p>Intel celeron N4500</p> </li> <li>4G ram</li> <li>32G storage</li> <li>12 hour battery life</li> <li>2 USB c</li> <li>1 USB 3.2</li> <li>expandable microSD card</li> <li>costs 299 (100 renewed)</li> <li> <p>wifi 6</p> </li> <li> <p>IdeaPad Slim 3 Chromebook (14\u2033 MediaTek)</p> </li> <li> <p>arm based processor</p> </li> <li>4G ram</li> <li>64g storage</li> <li>microSD card for storage</li> <li>1 usb c 3.2</li> <li>1 usb a 3.2</li> <li>wifi 6</li> <li>costs 199</li> </ul>"},{"location":"322/index.html","title":"Digital fonts","text":""},{"location":"322/index.html#font-weights","title":"Font weights","text":"<p>A retina display has a pixel density 4 times that of a regular screen.</p>"},{"location":"322/index.html#recommendations","title":"Recommendations","text":"<ul> <li>16px for normal text and paragraphs</li> <li>400 for the font weight</li> <li>contrast ratio should be 5.0+</li> </ul>"},{"location":"323/index.html","title":"Modern software configuration management specification Unix systems","text":"<p>Configuration management for software is a common problem that is encountered. Typically, all configuration values should have some sort of value defined. This means that some defaults would need to be specified. Each configuration can be thought of as a list of pairs of paths and a value that may either be in a config file or a variable file. A config file is typically a config file that save some where in version control. Typically variables are set programmatically.</p> <p>This is the typical precedence from least to greatest:</p> <ul> <li>Program defaults</li> </ul> <p>Program defaults are the hard coded defaults in the program</p> <ul> <li>System configuration (<code>/etc/program/program.yaml</code>)</li> </ul> <p>System configuration is the configuration that should be used for all users.</p> <ul> <li>System variables (<code>/var/program/vars.yaml</code>)</li> </ul> <p>This is the system overrides that should be used for all users</p> <ul> <li>User configuration (<code>${XDG_CONFIG_HOME}/program/program.yaml</code>)</li> </ul> <p>User configuration is the configuration that should be used</p> <ul> <li>User variables (<code>${XDG_STATE_HOME}/program/vars.yaml</code>)</li> <li>Environmental variables</li> <li>cli parameters</li> </ul>"},{"location":"324/index.html","title":"Cool idea for my own website","text":"<p>Sam Robbins, the author if theme I am initially using for my personal website, has a list of recent pull requests pull off of GitHub. This is a cool idea.</p> <p>See his website at https://samrobbins.uk/.</p>"},{"location":"325/index.html","title":"Managing ruby version on MacOSX with chruby","text":"<p>Quickly get ruby 3.2.2 installed.</p> <pre><code>brew install chruby ruby-install xz\nsource /opt/homebrew/opt/chruby/share/chruby/chruby.sh\nsource /opt/homebrew/opt/chruby/share/chruby/auto.sh\nruby-install 3.2.2 # I would run ruby-install first and get the latest version\nchruby ruby-3.2.2  # Use same installed version\n</code></pre> <p>Put this somewhere in your zshrc.</p> <pre><code>_source_if() { [[ -r \"$1\" ]] &amp;&amp; source \"$1\"; }\n_source_if /opt/homebrew/opt/chruby/share/chruby/chruby.sh\n_source_if /opt/homebrew/opt/chruby/share/chruby/auto.sh\n</code></pre> <p>I use a chezmoi template adding this to my zshrc file for me.</p>"},{"location":"325/index.html#meta","title":"Meta","text":"<pre><code>tags: #macosx #ruby\n</code></pre>"},{"location":"326/index.html","title":"Setting up a new KEG app with tina and jekyll","text":"<p>This is a work in progress. Here is what I learned. Here are some of the issues that I ran into:</p> <ul> <li>Tina CMS uses front mater. KEGML doesn\u2019t support front mater</li> <li>Tina CMS doesn\u2019t support mobile very well</li> <li>Tina CMS cli only allows hosting the cms on localhost</li> </ul>"},{"location":"326/index.html#steps-to-reproduce","title":"Steps to reproduce","text":"<ul> <li>Install ruby with chruby</li> <li>Install jekyll</li> </ul> <p><code>bash   gem install jekyll bundler   jekyll new keg-site</code></p> <ul> <li>Modify <code>Gemfile</code></li> </ul> <p>It should look something like the following</p> <p>```ruby   gem \u201cgithub-pages\u201d, group: :jekyll_plugins   # If you have any plugins, put them here!   group :jekyll_plugins do     gem \u201cjekyll-feed\u201d, \u201c~&gt; 0.12\u201d     gem \u201cjekyll-remote-theme\u201d, \u201c~&gt; 0.4.3\u201d   end</p> <p># Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem   # and associated library.   platforms :mingw, :x64_mingw, :mswin, :jruby do     gem \u201ctzinfo\u201d, \u201c&gt;= 1\u201d, \u201c&lt; 3\u201d     gem \u201ctzinfo-data\u201d   end</p> <p># Performance-booster for watching directories on Windows   gem \u201cwdm\u201d, \u201c~&gt; 0.1.1\u201d, :platforms =&gt; [:mingw, :x64_mingw, :mswin]</p> <p># Lock <code>http_parser.rb</code> gem to <code>v0.6.x</code> on JRuby builds since newer versions of the gem   # do not have a Java counterpart.   gem \u201chttp_parser.rb\u201d, \u201c~&gt; 0.6.0\u201d, :platforms =&gt; [:jruby]</p> <p>gem \u201cwebrick\u201d, \u201c~&gt; 1.8\u201d   ```</p> <p>Running <code>gem add webrick</code> does something intereseting</p> <p>[ ] TODO: How to use cli to create this</p> <ul> <li>Move jekyll files into the docs dir</li> <li>Modify jekyll config.</li> </ul> <p>It should look something like the following:</p> <p>```yaml   title: Your awesome title   email: your-email@example.com   description: &gt;- # this means to ignore newlines until \u201cbaseurl:\u201d     This is a proto website to see how well tina cms will work with a keg   baseurl: \u201c/spike-jekyll-keg\u201d # the subpath of your site, e.g. /blog   url: \u201chttps://jlrickert.github.io/spike-jekyll-keg\u201d # the base hostname &amp; protocol for your site, e.g. http://example.com   github_username: your_github_username</p> <p>remote_theme: pages-themes/hacker@v0.2.0</p> <p># Build settings   # theme: minima   plugins:     - jekyll-feed     - jekyll-remote-theme   ```</p> <ul> <li>Install tina</li> </ul> <p><code>bash   pnpx @tinacms/cli@latest init</code></p> <ul> <li>Add dev script to <code>package.json</code>.</li> </ul> <p><code>json   {     \"scripts\": {       \"dev\": \"tinacms dev -c \\\"jekyll serve --source docs\\\"\"     }   }</code></p>"},{"location":"326/index.html#meta","title":"Meta","text":"<pre><code>tags: #ssg #jekyll #cms\n</code></pre>"},{"location":"327/index.html","title":"KEG repo with tina cms and jekyll experiment","text":"<p>This is a work in progress. This is an attempt at using tina CMS to edit and modify my KEG repositories. What I am trying to solve is how to edit and add entries to my keg on my phone.</p> <pre><code>bundle add webrick\n</code></pre>"},{"location":"327/index.html#retrospect","title":"Retrospect","text":"<p>I made enough progress to relize that it doen\u2019t work well on mobile.</p>"},{"location":"327/index.html#see-also","title":"See also","text":"<ul> <li>Tina + Jekyll guide</li> <li>Tina + Jekyll spike</li> </ul>"},{"location":"328/index.html","title":"Sourdough rye and barley pancakes","text":"<p>Sourdough pancakes for 5 adults.</p> Ingredients Weight Bakers percentage Comment Barley flour 250g 100% Rye starter 225g 90% Whole Milk 225g 90% EVOO 40g 16% 2 eggs 2 bananas pecans Handful of chopped baking powder 1/4 tsp maybe 2 scoops baking soda 1/4 tsp maybe 2 scoops <p>Mix the barley and rye starter together along with all the dry ingredients. Add pecans and bananas as well. Then add all the wet ingredients.</p>","tags":["baking","sourdough"]},{"location":"328/index.html#nutrition-facts","title":"Nutrition facts","text":"<p>Per pancake (only including the flour)</p> <ul> <li>265 calories</li> <li>45g carbs</li> <li>6.5g fiber</li> <li>5.75g protein</li> </ul>","tags":["baking","sourdough"]},{"location":"328/index.html#retrospect","title":"Retrospect","text":"<p>This recipe made 8 pancakes of which we ate 7. We also had 7 eggs, and a 12oz package of bacon. Made chia jam as well.</p> <p>The pancakes came out relatively thick. At first I had the eclectic griddle set to 300f for the first side. Ended up turning the temperature down to 250f on the second flip to give the chance for the center to cook. I could</p>","tags":["baking","sourdough"]},{"location":"329/index.html","title":"Chia jam recipe","text":"<p>Basic chia jam recipe.</p> <p>Simmer frozen blueberries for a bit until liquidy. Mash with a fork. Mix with chia seeds and some lemon juice. I sometimes use apple cider vinegar if I don\u2019t have lemon juice but not as good.</p>"},{"location":"33/index.html","title":"Bash scripting tricks","text":"","tags":["bash","cli","scripting"]},{"location":"330/index.html","title":"Testing in Go","text":"<p>Out of the box go has everything you need to get started with testing.</p>"},{"location":"330/index.html#file-naming-and-package-naming","title":"File naming and package naming","text":"<p>In go tests are done by having test files in a package right next to the files they are testing. For example, <code>math.go</code> would be tested by a file named. <code>math_test.go</code>. The test files must of <code>_test</code> in their name. Having part of their name associated with another file is optional. Typically, <code>math.go</code> will be part of a package. We will call this package <code>my_math</code>. The type of test may be selected based on the name of the package that test file is apart of. For white box testing the package name in the test file needs to be the same as file within the package. For example, <code>math.go</code> and <code>math_test.go</code> will have the package name <code>my_math</code>. This is done with <code>package my_math</code> typically near the top of the file. For black box testing append <code>_test</code> to the name of the package in the test files.</p> <ul> <li>White box example</li> </ul> <p><code>go   // math.go   package math   ...</code></p> <p><code>go   // math_test.go   package math   ...</code></p> <ul> <li>Black box example</li> </ul> <p><code>go   // math.go   package math   ...</code></p> <p><code>go   package math_test   // math   package math_test   ...</code></p> <p>It is possible to have a the last example behave like the first by using <code>import . math</code> syntax. This prevents cyclical shenanigans.</p> <ul> <li> TODO: verify cylcical shenanigans with <code>. import</code> synxax with tests.</li> </ul> <p>By conventions typically each file will have an associated test file.</p>"},{"location":"330/index.html#unit-tests-wip","title":"Unit tests (WIP)","text":"<p>Unit tests functions start with Test. Example based tests start with Example.</p>"},{"location":"330/index.html#test-runners","title":"Test runners","text":"<p>Running the tests in go is relatively straight foreword. It is as simple as running <code>go ./...</code> to run all the tests.</p>"},{"location":"330/index.html#meta","title":"Meta","text":"<pre><code>tags: #golang\n</code></pre>"},{"location":"331/index.html","title":"Sourdough rye and barley pita bread","text":"<p>Sourdough pita bread experiment for a quick batch of pita bread in the pizza oven.</p> Ingredients Weight Bakers percentage Comment Barley flour 375g 100% Rye starter 225g 60% Water 250g 66% EVOO 20g 5%","tags":["baking","sourdough"]},{"location":"331/index.html#key-events","title":"Key events","text":"<ul> <li>09:30am Mix Levain</li> <li>11:00pm Mix dough</li> <li>6:00pm Baked at 750f in the ooni</li> </ul> <p>Each piece of bread is roughly 100g of dough rolled to be relatively thin. I found that baking for roughly 45 seconds on each side seems to be good enough. This gives them enough time to puff up while not being tough. You want them to be soft.</p>","tags":["baking","sourdough"]},{"location":"331/index.html#retrospect","title":"Retrospect","text":"<p>This comes out relatively heavy with a good note of sourness from the rye. Relatively little work to make a batch. Was still very good the next day. For storing I just threw them in a plastic bag on the counter top.</p>","tags":["baking","sourdough"]},{"location":"331/index.html#see-also","title":"See also","text":"","tags":["baking","sourdough"]},{"location":"332/index.html","title":"Hardware: My Ooni Karu 12G","text":"<p>The Ooni Karu 12G is an upgrade version of the Karu 12. It is a multi-fuel pizza oven that can use either wood, charcoal, or gas.</p>","tags":["hardware","personal","pizza","baking"]},{"location":"332/index.html#gas","title":"Gas","text":"<p>Gas is by far the most forgiving and easiest to use. I recommended it if you have others working the pizza oven.</p> <p>Hottest spot tends to be be in the center of the stone.</p>","tags":["hardware","personal","pizza","baking"]},{"location":"332/index.html#wood-and-charcoal","title":"Wood and charcoal","text":"<p>Hottest spot tends to be at the back near the fire.</p> <p>The way I start it is that I place a oil soaked paper towel rolled up and place a few piece of charcoal over the top of it and the stick it in the oven and light it. As the charcoal and/or wood light I add a few more pieces. Generally, I would give about 45 minutes to get things started and get things up to temp.</p>","tags":["hardware","personal","pizza","baking"]},{"location":"332/index.html#see-also","title":"See also","text":"<ul> <li>https://ooni.com/products/ooni-karu-12g?variant=40696844222561</li> </ul>","tags":["hardware","personal","pizza","baking"]},{"location":"333/index.html","title":"Flutter experiments","text":"<ul> <li>How to lookup a device id</li> </ul> <p>Running <code>flutter devices</code> gives a device id</p> <ul> <li>Run a flutter app in debug mode for my samsung phone</li> </ul> <p>Plugging in my phone and giving it access lets vscode see the phone. From there I can select to run apps in debug mode.</p> <ul> <li>Run a flutter app in debug mode on a simulated iPhone</li> </ul> <p>Run <code>open -a simulator</code> and run from VSCode.</p> <ul> <li>Run app in debug mode with CLI</li> </ul> <p>WIP</p> <ul> <li>Building a release for android</li> </ul> <p>Run <code>flutter build apk</code>. This will generate a release candidate in <code>build/app/outputs/apk/release/app-release.apk</code>. A trick to get on an android device is to cd into the directory of the apk and then running <code>python3 -m http.server</code>. The IP address can be found using <code>ifconfig</code>. Usually, it is <code>ifconfig en0</code> on my mac.</p> <ul> <li>Building a release candidate for the web</li> </ul> <p>Run <code>flutter build web</code>. Then serve the contents of <code>build/app/web</code>.</p>","tags":["hardware","flutter","mobile"]},{"location":"334/index.html","title":"KEG website with CMS","text":"<p>Key requirements</p> <ul> <li>title is the first h1 near the top of the file</li> <li> <p>meta in in a meta.yaml file</p> </li> <li> <p>Hugo</p> </li> <li> <p>netlify</p> </li> <li> <p>sveltkit</p> </li> <li>compiiile</li> </ul>"},{"location":"334/index.html#ssr","title":"SSR","text":"<ul> <li>Hugo</li> <li>eleventy</li> <li>elderjs</li> </ul>"},{"location":"334/index.html#markdown-parsers","title":"Markdown parsers","text":"<ul> <li>remarkjs</li> </ul>"},{"location":"335/index.html","title":"AWS Access management","text":"<p>AWS IAM</p>"},{"location":"335/index.html#categories","title":"Categories","text":"<ul> <li>IAM Group</li> <li>IAM User</li> <li>IAM Role</li> </ul>"},{"location":"336/index.html","title":"AWS Certifications","text":"<p>Certifications related to AWS.</p> <p>The AWS Cloud Practitioner is a high level of AWS. Very hands off.</p> <p>The AWS Solutions Architect Associate is the most important one</p> <p>The AWS Developer Associate Exam is recommended for developers who would like to learn more how to leverage AWS for deploying software on AWS.</p> <p>List of certs</p> <ul> <li>AWS Cloud Practitioner</li> <li>AWS Solutions Architect Associate</li> <li>AWS Developer Associate</li> <li>AWS SysOps Administrator Associate</li> <li>AWS DevOps Professional</li> <li>Solutions Architect Professional</li> <li>AWS Advanced Networking Specialty</li> <li>AWS Security Specialty</li> <li>AWS Database Specialty</li> <li>AWS Data Analytics Specialty</li> <li>AWS Machine Learning Specialty</li> </ul>"},{"location":"336/index.html#see-also","title":"See also","text":"<ul> <li>https://aws.amazon.com/training/skills-centers/?nc2=sb_ep_asc</li> <li>https://www.youtube.com/watch?v=Oi1r3e8y2jg</li> </ul>"},{"location":"336/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws #cert\n</code></pre>"},{"location":"337/index.html","title":"AWS Developer Associate Exam","text":""},{"location":"337/index.html#key-points","title":"Key points","text":"<ul> <li>Costs 150 USD</li> <li>Course code is DVA-C01</li> <li>Passing grade is 720/1000</li> <li>2 minutes per problem (90 seconds recommended)</li> <li>130m duration</li> <li> <p>Question breakdown</p> </li> <li> <p>22% Deployment</p> </li> <li>26% Security</li> <li>30% Development with AWS Services</li> <li>10% Refactoring</li> <li>12% Monitoring and Troubleshooting</li> </ul>"},{"location":"337/index.html#recommended-white-papers","title":"Recommended white papers","text":"<p>Recommended reading from https://aws.amazon.com/whitepapers.</p> <p>Here are some recommended reading from freecodecamp</p> <ul> <li> TODO: (Recommended) Architecting for the cloud: AWS Best Practices</li> <li>[ ] TODO: (Recommended) Practicing Continuous Integration and Continuous       Delivery on AWS Accelerating Software Delivery with DevOps</li> <li> TODO: Microservices on AWS</li> <li> TODO: Serverless Architectures with AWS Lambda</li> <li> TODO: Optimizing Enterprise Economics with Serverless Architectures</li> <li> TODO: Running Containerized Microservices on AWS</li> <li> TODO: Blue/Green Deployments on AWS</li> </ul>"},{"location":"337/index.html#see-also","title":"See also","text":"<ul> <li>AWS Certified Developer - Associate 2020 (PASS THE EXAM!)</li> <li>AWS Certifications</li> </ul>"},{"location":"337/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws #cert\n</code></pre>"},{"location":"338/index.html","title":"Deploying a sveltkit app on AWS","text":"<p>I need to learn how to use AWS and decided to launch a simple SveltKit app on AWS. This will be a simple app that has a nodejs backend service with a REST api.</p> <p>Possible methods to look into are Elastic BeanStalk, ECS with fargate or EC2, or just using plain EC2.</p>"},{"location":"338/index.html#key-things","title":"Key things","text":"<ul> <li>deploy on <code>us-east-2</code></li> <li>use t4g.small</li> </ul> <p>This a 2 vCPU and 2G arm64 based instance</p>"},{"location":"338/index.html#elastic-beanstalk","title":"Elastic beanstalk","text":"<p>Key featues</p> <ul> <li>node version: 18.12.1</li> </ul>"},{"location":"338/index.html#ecs-with-fargate","title":"ECS with fargate","text":"<p>This is serverless docker containers (I think).</p>"},{"location":"338/index.html#todo","title":"TODO","text":"<ul> <li> TODO: Apply principle of least privilege on AWS</li> <li> TODO: Research deployment strategies</li> </ul>"},{"location":"338/index.html#see-also","title":"See also","text":"<ul> <li>AWS free tier</li> </ul>"},{"location":"338/index.html#meta","title":"Meta","text":"<pre><code>tags: #webdev #aws #svelte\n</code></pre>"},{"location":"339/index.html","title":"AWS service elastic beanstalk","text":"<p>Elastic beanstalk is a service on AWS that simplifies deployment on AWS.</p> <ul> <li>EC2</li> <li>Instance security group</li> <li>S3</li> <li>CloudWatch</li> <li>CloudFormation Stack</li> </ul>","tags":["aws"]},{"location":"339/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"34/index.html","title":"Recommend language sever to use for golang development","text":"<p>The language server that I found to work best is gopls.</p>","tags":["golang"]},{"location":"340/index.html","title":"AWS free tier","text":""},{"location":"340/index.html#ec2","title":"EC2","text":"<ul> <li>t2.micro costs 0.0116 per hour</li> </ul> <p>has 1 CPU and 1G memory</p> <ul> <li>t4g.small costs 0.0168 per hour</li> </ul> <p>has 1 cpu and 2G memory</p> <ul> <li>750 hours per month of t4g.small instance dependent on region</li> <li>750 hours per month of Linux, RHEL, or SLES t2.micro or t3.micro instance   dependent on region</li> <li>750 hours per month of Windows t2.micro or t3.micro instance dependent on   region</li> </ul>"},{"location":"340/index.html#see-also","title":"See also","text":"<ul> <li>Free tier</li> </ul>"},{"location":"340/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>"},{"location":"343/index.html","title":"Learning in public","text":"<p>The city of Octlantis is a hidden city of octopi off the coast of eastern Australian. It features a series of dens with front lawns decorated with elaborate ornamentation of shells. The inhabitants have been found to exhibit social behavior where they interact with one another in an organized way. They have been seen sharing dens together an exhibiting behavior of social hierarchies. Organized societies have the advantage of better resource</p> <p>Octlantis isn\u2019t the only octopus city found. There have been a couple of others found recently. Yet despite its advantages why have they not advanced over the generations. One observation that could be made is that they are more often than not unruly neighbors that don\u2019t really corroborate with one another. They don\u2019t pass down information down through the generations like we do. They don\u2019t make the effort to teach one another.</p>","tags":["learning","public","knowledge-sharing","education","personal-development"]},{"location":"343/index.html#facts-about-octopus","title":"Facts about octopus","text":"<p>Other interesting facts about octopi is that they are know to be rather intelligent. They are know to be rather crafty. For example, they have been able to plan things several steps in advance to make an escape. They are able to create and make tools.</p>","tags":["learning","public","knowledge-sharing","education","personal-development"]},{"location":"343/index.html#learning-in-public_1","title":"Learning in public","text":"<p>Advanced societies require a way to pass on knowledge between generations. Without it things will continuously have to be relearned and little progress will be made. One way to deal with this is to share as much as you can with others as your learn things. I call this learning in public.</p> <p>Learning in public is a way of learning that requires sharing what your learn with others as your learn things. This can come in the form of writing down what your learn in a format that may be consumed by others. For example, blog posts, streaming, zettelkhasten, or a KEG. There are significant benefits to sharing what you learn. For example, you build up a social network, others get to learn as well, you have a record of everything you learned to make it easier to relearn, and I find it more fun in general.</p>","tags":["learning","public","knowledge-sharing","education","personal-development"]},{"location":"343/index.html#benefits","title":"Benefits","text":"<p>Having a solid social network is a requirement if you want to be gainfully employed. Learning in public helps with this. Over time you will gain a track record of the things that you know. Others will learn what you are good at. This may unlock future employment opportunities.</p> <p>As I learn new things typically I write them down in a Zettelkasten in KEG format. I have this hosted up on GitHub and served on my personal website as well. This way I have a reference to look at if I need it. It also makes it available to others.</p> <p>Other benefits is that as you share your findings with others you keep a record of things that you have done. This is why I have a public zettelkhasten available to all.</p> <p>For developing a career a well connected network is critical. Without it, there is no trust between individuals. Without trust most jobs are unable to be completed.</p> <p>This allows knowledge to gained personally as well as helping others out that may have the same problems that need to be solved. It allows for building up a network with others where every one benefits.</p>","tags":["learning","public","knowledge-sharing","education","personal-development"]},{"location":"343/index.html#see-also","title":"See also","text":"<ul> <li>Cool facts about octopus</li> <li>Utopia requires perfect trust</li> </ul>","tags":["learning","public","knowledge-sharing","education","personal-development"]},{"location":"344/index.html","title":"Cool facts about octopus","text":""},{"location":"344/index.html#key-features-of-octopus","title":"Key features of octopus","text":"<ul> <li>builder of cities</li> <li>Antisocial tendencies</li> <li>Are clever</li> </ul> <p>Figure out how to get out of the tank, into the next tank, steal a couple of   fish, and reverse the process all while hiding the evidence.</p> <ul> <li>like to play</li> <li>use tools</li> </ul> <p>The find creative ways to use tools</p> <ul> <li>Typically short life spans</li> <li> <p>Octlantis</p> </li> <li> <p>2 dozen dens</p> </li> <li>10 to 15 octopuses</li> <li> <p>defend there territory against other octopuses</p> <p>This is suggested from a couple of videos from 5 years ago. Another article suggests that this is just them identifying each other. I suspect that a hard smack something with there tentacles allows it to get a solid taste of what they are smacking. This is similar concept as to why dogs have slits in there nose.</p> </li> <li> <p>Learn by observation (observational learning)</p> </li> </ul>"},{"location":"344/index.html#see-also","title":"See also","text":"<ul> <li>Octopuses keep surprising us</li> <li>Social behavior of octopus</li> </ul>"},{"location":"344/index.html#meta","title":"Meta","text":"<pre><code>tags: #biology\n</code></pre>"},{"location":"345/index.html","title":"Different types of learning","text":"<p>Learning can be done through a variety of means. Here is a dump from chatGPT.</p> <ul> <li>Instinctive Learning</li> </ul> <p>This category includes behaviors that are innate, instinctual, or genetically   hardwired into an animal\u2019s biology. These behaviors are present from birth and   do not require prior experience or learning. Examples include basic reflexes   and innate survival behaviors.</p> <ul> <li>Associative Learning</li> </ul> <p>Associative learning involves forming connections or associations between   stimuli, events, or behaviors. There are two main types of associative   learning</p> <ul> <li> <p>Classical Conditioning Animals learn to associate a neutral stimulus with a     meaningful one, leading to a specific response. For example, Pavlov\u2019s dogs     learned to associate the sound of a bell with the delivery of food, leading     to salivation at the sound of the bell.</p> </li> <li> <p>Operant Conditioning In operant conditioning, animals learn to modify their     behaviors based on the consequences that follow those behaviors. This can     involve rewards (positive reinforcement), punishments (negative     reinforcement), or the absence of rewards/punishments.</p> </li> <li> <p>Spatial Learning</p> </li> </ul> <p>Animals often need to acquire knowledge about the spatial layout of their   environment. Spatial learning helps them navigate, find resources like food   and water, and avoid hazards. It involves creating cognitive maps or mental   representations of their surroundings.</p> <ul> <li>Social Learning</li> </ul> <p>Many social animals learn from their interactions with other members of their   species. This can include observing and imitating the behaviors of peers or   adults. Social learning is particularly important in species with complex   social structures.</p> <ul> <li>Cultural Learning</li> </ul> <p>In some species, behaviors and knowledge can be passed down through   generations, creating cultural traditions within the group. This form of   learning is often observed in social animals with well-defined group   structures.</p> <ul> <li>Observational Learning</li> </ul> <p>A subset of social learning, observational learning involves animals acquiring   new behaviors or information by observing and imitating the actions of others,   often without direct interaction or social cues.</p> <ul> <li>Trial-and-Error Learning</li> </ul> <p>Animals learn through experimentation and repeated attempts to solve problems   or achieve specific goals. This process allows them to discover which actions   lead to favorable outcomes.</p> <ul> <li>Habituation</li> </ul> <p>Habituation is a form of non-associative learning in which animals become less   responsive to repeated or constant stimuli. It involves learning to ignore   irrelevant or non-threatening stimuli over time.</p> <ul> <li>Imprinting</li> </ul> <p>Imprinting is a type of learning that occurs during a critical period early in   an animal\u2019s life. During this period, the animal forms strong attachments or   preferences for specific objects or individuals, which can have lasting   effects on behavior.</p> <ul> <li>Play and Exploration</li> </ul> <p>Play behavior is essential for young animals to develop physical and social   skills. Through play and exploration, animals learn about their physical   abilities, interact with peers, and experiment with various behaviors.</p> <ul> <li>Problem-Solving</li> </ul> <p>Problem-solving learning involves using cognitive processes to devise   solutions to novel challenges or puzzles. Animals employ their intelligence   and reasoning abilities to overcome obstacles and achieve goals.</p> <ul> <li>Sensitization</li> </ul> <p>Sensitization is a form of learning where an animal becomes more responsive or   sensitive to a particular stimulus, often after repeated exposure. This   heightened sensitivity can lead to exaggerated responses to the stimulus.</p>"},{"location":"346/index.html","title":"Society requires perfect trust","text":"<p>This is an idea that I have on the requirements of what an actually utopia would look like. Although, in practice this is impossible to reach it still is something that would be desirable to head towards.</p> <pre><code>tags: #blog\n</code></pre>"},{"location":"347/index.html","title":"how to login to AWS via command line","text":"<pre><code>aws configure\n</code></pre> <p>This will ask for ask for Access key ID, and Access Key as well as default region and output format.</p> <pre><code>tags: #aws #cli\n</code></pre>"},{"location":"348/index.html","title":"Deploying a keg on MkDocs","text":"<p>The quickest way to get started is with docker.</p> <p>Create a Dockerfile with the following contents</p> <pre><code>FROM python:alpine3.18\n\nRUN apk upgrade --update-cache -a &amp;&amp; \\\n    apk add --no-cache git git-fast-import openssh\n\nRUN pip install mkdocs\nRUN pip install mkdocs-meta-manager\nRUN pip install markdown-checklist\n\nRUN git config --global --add safe.directory /docs &amp;&amp;\\\n    git config --global --add safe.directory /site\n\nWORKDIR /docs\nEXPOSE 8000\n\nENTRYPOINT [\"mkdocs\"]\n</code></pre> <p>Create a file install with the following content:</p> <pre><code>#!/usr/bin/env bash\n\ndocker build -t zet-mkdocs .\n</code></pre> <p>Create a mkdocs file with the following content:</p> <pre><code>docker run --rm -it -p 8000:8000 -v \"${PWD}:/docs\" zet-mkdocs \"$@\"\n</code></pre> <p>Make sure that they are both executable.</p> <pre><code>chmod +x ./install ./mkdocs\n</code></pre> <p>A a mkdocs.yaml file needs to exist. Here is an example from what I am currently using.</p> <pre><code>site_name: KEG Zettelkasten for Jared Rickert (jlrickert)\nsite_url: https://zet.jlrickert.me\nrepo_name: jlrickert/zet\nrepo_url: https://github.com/jlrickert/zet\nedit_uri: edit/main/docs\nsite_author: Jared Rickert (jaredrickert52@gmail.com)\nsite_description: &gt;-\n  Hi I'm Jared. This is my personal **zettelkasten** KEG site. It contains stuff on pretty much any topic I feel like writing about, mostly about [baking](292) and tech how too. You can think of it as my own personal stack overflow or arch wiki. The latest additions and changes are always [indexed](dex).\n\n  A word of caution is that these are raw notes. They may be inaccurate, messy, and/or plain misleading. Please don't quote me here as I may not still hold the same opinion on the subject. That is what my [blog] is for.\n\n  The reason that I make these notes available is that they may be helpful to some one out there.\n\n\nuse_directory_urls: false\ntheme:\n  name: readthedocs\n  analytics:\n    gtag: G-WXQ3PHET4N\n  titles_only: true\n  highlightjs: true\n  hljs_languages:\n    - TypeScript\n    - Svelte\n    - Shell\n    - SCSS\n    - SAS\n    - Rust\n    - Ruby\n    - R\n    - Python\n    - PostgreSQL\n    - JavaScript\n    - Go\n    - Java\n    - JSON\n    - TOML\n    - hlsl\n    - Haskell\n    - HTTP\n    - GraphQL\n    - Dockerfile\n    - DNS Zone file\n    - Django\n    - Diff\n    - Dart\n    - CSS\n    - CMake\n    - C\n    - C++\n    - Bash\n    - Awk\nextra:\n  consent:\n    title: Cookie consent\n    description: &gt;-\n      We use cookies to recognize your repeated visits and preferences, as well as to measure the effectiveness of our documentation and whether users find what they're searching for. With your consent, you're helping us to make our documentation better.\n\n\nplugins:\n  - search\n  - meta-manager:\n      meta_filename: meta.yaml\n\nmarkdown_extensions:\n  - footnotes\n  - fenced_code\n  - tables\n  - admonition\n  - sane_lists\n  - smarty\n  - markdown_checklist.extension\n</code></pre> <p>Run <code>./mkdocs serve -a 0.0.0.0:8000</code></p>"},{"location":"348/index.html#deploying-to-github-pages","title":"Deploying to GitHub pages","text":"<p>Create the file .github/workflows/ci.yml with the following contents:</p> <pre><code>name: ci\non:\n  push:\n    branches:\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV\n      - uses: actions/cache@v3\n        with:\n          key: mkdocs${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-\n      - run: pip install mkdocs\n      - run: pip install mkdocs-meta-manager\n      - run: pip install markdown-checklist\n      - run: mkdocs gh-deploy --force\n</code></pre> <p>Add and push this up to GitHub. GitHub pages then should be configured to point to the gh-pages branch.</p>"},{"location":"348/index.html#see-also","title":"See also","text":""},{"location":"349/index.html","title":"Example for how to build a KEG for use with google docs","text":"<p>Converting all the KEG nodes to google document files is a hacky way to get a KEG on google drive. Some know problems with this approach is that the docx files cannot really be save in git.</p> <p>One use case that I found to be super slick with this is that I can share my private notes. I can find the node that I want to share, get the link, and then give the link to who ever.</p> <p>Here is an example make file that I have that build the whole tree in the directory output.</p> <pre><code>MAKEFLAGS += --jobs=$(shell getconf _NPROCESSORS_ONLN)\n\nPANDOC_OPTIONS =\nPANDOC_HTML_OPTIONS =\nPANDOC_DOCX_OPTIONS =\n\nBUILD_DIR := ./output\n\nNODES := $(shell find . -name '*.md')\nSRC_OBJS := $(shell find docs -type f ! -name '*.md')\nOBJS := $(SRC_OBJS:%=$(BUILD_DIR)/%)\n\nDOCX := $(NODES:%.md=$(BUILD_DIR)/%.docx)\nHTML := $(NODES:%.md=$(BUILD_DIR)/%.html)\n\nall: $(DOCX) $(OBJS)\n\nHEADER = $(shell head -n 1 $&lt; | cut -c 3- | sed 's/\"/\\\\\"/g')\nNODE = $(shell echo \"$&lt;\" | awk -F'/' '{print $(NF-1)}')\n\n$(BUILD_DIR)/%.docx: %.md\n    mkdir -p $(dir $@)\n    pandoc -s -f gfm -t docx --metadata title=\"$&lt;\" --resource-path \"$(dir $&lt;)\" -o $@ $&lt;\n\n$(BUILD_DIR)/%.html: %.md\n    mkdir -p $(dir $@)\n    pandoc -s -f gfm -t docx --metadata title=\"$&lt;\" --resource-path \"$(dir $&lt;)\" -o $@ $&lt;\n\n$(OBJS): $(BUILD_DIR)/%: %\n    mkdir -p $(dir $@)\n    cp $&lt; $@\n\n$(DOCX) $(OBJS): | $(BUILD_DIR)\n\n$(BUILD_DIR):\n    mkdir -p $@\n\n.PHONY: clean\nclean:\n    rm -rf $(BUILD_DIR)\n</code></pre> <p>Meta:</p> <pre><code>tags: #keg\n</code></pre>"},{"location":"35/index.html","title":"Key things that make neovim as an ide","text":"<ul> <li>workspaces</li> <li>inlay</li> <li>lsp</li> <li>diagnostic</li> <li>projects</li> <li>hunks</li> <li>vcs</li> </ul>"},{"location":"350/index.html","title":"Zip cheatsheet","text":""},{"location":"350/index.html#how-to-zip-a-file-on-the-unix-command-line","title":"How to zip a file on the Unix command line","text":"<p>Lets say you have following structure and you want to create zip all the files into a flat structure into a file called archive.zip.</p> <pre><code>&gt; tree\n.\n\u251c\u2500\u2500 checkData.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 request.json\n\u2514\u2500\u2500 response.json\n</code></pre> <p><code>zip archive.zip checkData.json request.json response.json</code></p> <p>To unzip run</p> <p><code>unzip archive.zip</code></p>"},{"location":"351/index.html","title":"JavaScript article","text":""},{"location":"351/index.html#see-also","title":"See also","text":"<ul> <li>https://moderncss.dev/</li> </ul>"},{"location":"352/index.html","title":"SSH key rotation best practices","text":"<p>Rotation keys is something that I hear rob talk about several times. I need to figure out what this is.</p>","tags":["devSecOps","security","aws"]},{"location":"353/index.html","title":"AWS EC2","text":""},{"location":"353/index.html#load-balancing","title":"Load balancing","text":"<p>Basic EC2 load balancing</p> <ul> <li> <p>ALB (Application load balance)</p> </li> <li> <p>HTTP and HTTPS</p> </li> <li>SSL is offloaded here?</li> <li>Layer 7</li> <li> <p>Support for HTTP/2 and websockets</p> </li> <li> <p>Load balancing method</p> <ul> <li>round robbin</li> <li>sticky session</li> </ul> </li> <li> <p>features</p> <ul> <li>routing based on url</li> <li>redirectes</li> <li>other features such redirecting to lambda</li> </ul> </li> <li> <p>NLB (network load balancer)</p> </li> </ul> <p>Connection level load balancing</p> <ul> <li>higher performance</li> </ul> <p>Layer 4</p> <ul> <li>gateway load balancer</li> </ul> <p>Third party virtual appliances</p>"},{"location":"354/index.html","title":"Strange .pnpm-store appearing in my repo","text":"<p>I was experimenting with running a SvelteKit application for deployment and development when a .pnpm-store file was placed in my app directory. The directory was create while experimenting in a node container with a shell. Running <code>pnpm install</code> would create the folder and place it into my application. After some investigation I determined that due to the environment the path was set to the current working directory. Originally, I thought this was a problem but it went away as the store isn\u2019t created in the runner or dev targets. Nothing seems to be broken either.</p> <pre><code>FROM --platform=arm64 node:18-alpine AS deps\nRUN npm install --global pnpm\nWORKDIR /app\nCOPY package.json pnpm-lock.yaml ./\nRUN pnpm install --frozen-lockfile\n\n\nFROM --platform=arm64 node:18-alpine AS builder\nRUN npm install --global pnpm\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\nRUN pnpm run build\n\n\nFROM --platform=arm64 node:18-alpine AS dev\nRUN npm install --global pnpm\nWORKDIR /app\nENV NODE_ENV development\nENV PORT 5173\nRUN addgroup --system --gid 1001 group1\nRUN adduser --system --uid 1001 user1\nUSER user1\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\nEXPOSE $PORT\nCMD [\"pnpm\", \"run\", \"dev\", \"--host\"]\n\n\nFROM --platform=arm64 node:18-alpine AS runner\nRUN npm install --global pnpm\nWORKDIR /app\nENV NODE_ENV production\nRUN addgroup --system --gid 1001 group1\nRUN adduser --system --uid 1001 user1\nCOPY --from=builder /app/build /app/server\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY --from=deps /app/package.json app/pnpm-lock.yaml ./\nUSER user1\nENV PORT 3000\nEXPOSE $PORT\nCMD [\"node\", \"server\"]\n</code></pre> <p>I am ignoring it for now. Running something like <code>pnpm configure set store-path /.pnpm-store</code> may be a partial solution. Keeping it here for reference in case I run into an issue with it.</p>"},{"location":"355/index.html","title":"How to use docker for NodeJS development","text":"<p>If you plan on deploying with docker then there is an advantage to developing with docker as well.</p> <p>Here is an example Dockerfile for an both production and development. This particular file is for SvelteKit app but the idea should transfer to other frameworks.</p> <pre><code>FROM --platform=arm64 node:18-alpine AS deps\nRUN npm install --global pnpm\nWORKDIR /app\nCOPY package.json pnpm-lock.yaml ./\nRUN pnpm install --frozen-lockfile\n\n\nFROM --platform=arm64 node:18-alpine AS builder\nRUN npm install --global pnpm\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\nRUN pnpm run build\n\n\nFROM --platform=arm64 node:18-alpine AS dev\nRUN npm install --global pnpm\nWORKDIR /app\nENV NODE_ENV development\nENV PORT 5173\nRUN addgroup --system --gid 1001 group1\nRUN adduser --system --uid 1001 user1\nUSER user1\nCOPY --from=deps --chown=user1:group1 /app/node_modules /app/node_modules\nCOPY . .\nEXPOSE $PORT\nCMD [\"pnpm\", \"run\", \"dev\", \"--host\"]\n\n\nFROM --platform=arm64 node:18-alpine AS runner\nRUN npm install --global pnpm\nWORKDIR /app\nENV NODE_ENV production\nRUN addgroup --system --gid 1001 group1\nRUN adduser --system --uid 1001 user1\nCOPY --from=builder --chown=user1:group1 /app/build /app/server\nCOPY --from=deps --chown=user1:group1 /app/node_modules ./node_modules\nCOPY --from=deps --chown=user1:group1 /app/package.json /app/pnpm-lock.yaml ./\nUSER user1\nENV PORT 3000\nEXPOSE $PORT\nCMD [\"node\", \"server\"]\n</code></pre>"},{"location":"355/index.html#production","title":"Production","text":"<p>For production things are much simpler. All the needs to be done is build the image and then run. For example</p> <pre><code>docker build -t app-name .\ndocker run --rm -it -p 3000:3000 app-name\n</code></pre>"},{"location":"355/index.html#development","title":"Development","text":"<p>For development things get much trickier. Your files need to be mounted on the running container. However, this creates an issue where <code>node_modules</code> and other compiled things are also mounted. To get around this docker volumes need to be used.</p> <pre><code>docker volume create app-name-node_modules\n</code></pre> <pre><code>docker run --rm -it \\\n    -p 5173:5173 \\\n    --mount \"source=app-name-node_modules,target=/app/node_modules\" \\\n    --mount \"type=bind,source=${PWD},target=/app\" \\\n    app-name\n</code></pre>"},{"location":"356/index.html","title":"Handling flags in bash","text":"<pre><code>has_argument() {\n    [[ (\"$1\" == *=* &amp;&amp; -n ${1#*=}) || (! -z \"$2\" &amp;&amp; \"$2\" != -*) ]]\n}\n\nextract_argument() {\n    echo \"${2:-${1#*=}}\"\n}\n\nwhile [ $# -gt 0 ]; do\n    case $1 in\n    -f | --force*)\n        if ! has_argument $@; then\n            echo \"File not specified.\" &gt;&amp;2\n            usage\n            exit 1\n        fi\n\n        output_file=$(extract_argument $@)\n\n        shift\n        ;;\n    *)\n        echo \"Invalid option: $1\" &gt;&amp;2\n        usage\n        exit 1\n        ;;\n    esac\n    shift\ndone\n</code></pre>"},{"location":"356/index.html#see-also","title":"See also","text":"<ul> <li>https://medium.com/@wujido20/handling-flags-in-bash-scripts-4b06b4d0ed04#:~:text=Flags%2C%20also%20known%20as%20command,hyphens%20%2D%2D%20for%20long%20options.</li> </ul>"},{"location":"356/index.html#meta","title":"Meta","text":"<pre><code>tags: #bash\n</code></pre>"},{"location":"357/index.html","title":"Battle tanks the game","text":"<p>Battle Tanks is a simple multiplayer game that I am building as a means to learn about distributed systems and AWS. For production deployment it would be ideal for game servers to be added and removed based on demand. There should be a lobby that allows players to find be able to join servers that are available.</p> <p>Here is the tech stack:</p> <ul> <li>Sveltekit</li> <li>docker containers</li> </ul>"},{"location":"357/index.html#architecture","title":"Architecture","text":"<p>For development I prefer being able to develop on my local machine. I plan on using <code>traefik</code> for load balancing and docker compose.</p> <p> </p>"},{"location":"357/index.html#iteration-1","title":"Iteration 1","text":"<p>First idea that I had. Originally, clients would be redirected to the lobby if they where not assigned to the server. This is rather simple as the redirecting based on path is straight forward. Once a client selects the room they will be sent to the correct room with a room number and some signature from the lobby in its path. on they will be sent to the correct server by the load balancer. This turns out to be a bad idea for multiple reasons. This adds complexity to the load balancer and locks you into what every one you use. Also adds complexity for redirecting between servers.</p>"},{"location":"357/index.html#iteration-2","title":"Iteration 2","text":"<p>Iteration 2 is realizing that keeping load balancing simple is the better way to go. This one adds a series of real time servers that will then connect the client to the correct server. The lobby will act as a means to coordinate everything.</p>"},{"location":"357/index.html#iteration-3","title":"Iteration 3","text":""},{"location":"357/index.html#redis-dump","title":"Redis dump","text":"<ul> <li>The Web App sends commands over the Web socket</li> <li>The Web API enqueues the command on a Redis queue wsin (RPUSH)</li> <li>A Worker</li> <li>Pulls the command from the Redis queue wsin (BLPop)</li> <li>Executes the command</li> <li>May push a response to another Redis queue wsout (RPUSH)</li> <li>The Web API</li> <li>Pulls a response from the Redis queue wsout (BLPOP)</li> <li>Sends the response back to the corresponding Web socket</li> </ul>"},{"location":"357/index.html#road-blocks","title":"Road blocks","text":""},{"location":"357/index.html#hmr-and-websockets","title":"HMR and websockets","text":"<p>Discovered a pattern to hold state between restarts when using vite. here is an example of how I handle redis.</p> <pre><code>export const REDIS_SCOPE = \"redis\";\n\ntype Client = ReturnType&lt;typeof createRedisClient&gt;;\n\nconst createRedisClient = () =&gt; {\n  const config = getGlobalConfig();\n  const client = redis.createClient({\n    url: config.redisURI,\n  });\n  return client;\n};\n\nexport class RedisClient {\n  private log: Logger;\n  constructor(private redis: Client) {\n    this.log = getGlobalLogger().child({ scope: REDIS_SCOPE });\n  }\n}\n\nexport const getGlobalRedisClient = (): RedisClient =&gt; {\n  const client = (globalThis as any)[REDIS_SCOPE];\n  if (client) {\n    return client;\n  }\n\n  const redisClient = createRedisClient();\n  const newClient = new RedisClient(redisClient);\n  (globalThis as any)[REDIS_SCOPE] = newClient;\n  return (globalThis as any)[REDIS_SCOPE];\n};\n</code></pre> <p>When ever id need redis I get a redis client by running <code>getGlobalRedisClient</code></p>"},{"location":"357/index.html#coding-patterns-used","title":"Coding patterns used","text":"<ul> <li>dynamic colors</li> </ul>"},{"location":"357/index.html#see-also","title":"See also","text":"<ul> <li>https://github.com/redis-developer/pizza-tribes</li> <li>https://github.com/suhaildawood/SvelteKit-integrated-WebSocket</li> </ul>"},{"location":"358/index.html","title":"Docker compose host name resolution","text":"<p>Docker compose is able to spin up multiple services where each service may replicate a bunch of docker images. In many scenarios there needs to be communication between services and instances.</p> <p>Here is a stripped down Dockerfile that I have used in the past while developing battle tanks.</p> <pre><code>version: '3'\n\nservices:\n  game-server:\n    build:\n      context: .\n      target: dev\n    volumes:\n      - .:/app\n      - node_modules:/app/node_modules\n    deploy:\n      replicas: 3\n  lobby:\n    build:\n      context: .\n      target: dev\n    volumes:\n      - .:/app\n      - node_modules:/app/node_modules\n    deploy:\n      replicas: 1\n\nvolumes:\n  node_modules:\n</code></pre> <p>One things to not here is that you will have no access to the services on your host (your PC) as there are no ports being published. This example spins up 1 instance of a lobby service and 3 game servers. Behind the scenes docker will create a private network allowing communication. Each instance will have its own assigned ip address. Each service will also have its own domain name (not sure if what you would call it). For example, lobby will be lobby and game-server will be game-server. Services may be accessed through these domain names. Here is an example using curl:</p> <pre><code>docker-compose exec --user=root game-server sh\napk add curl\ncurl http://game-server:5173\ncurl http://lobby:5173\n</code></pre> <p>Each call to one of the services will be load balanced between on instance within the storage.</p>"},{"location":"359/index.html","title":"Recommended regex syntax to use","text":"<p>See PCRE or perl compatible regular expressions.</p> <p>Make sure it runs on busy box as this is the most common minimally used container.</p>"},{"location":"359/index.html#see-also","title":"See also","text":"<ul> <li>http://www.pcre.org/</li> </ul>"},{"location":"360/index.html","title":"Effecting centralized logging strategy","text":"<p>WIP</p>"},{"location":"360/index.html#logging-libraries","title":"Logging libraries","text":"<ul> <li>pino</li> </ul> <p>Could get to work with mongo. Didn\u2019t really spend to much time on it.</p> <ul> <li>winston</li> </ul> <p>Most popular</p>"},{"location":"360/index.html#logging-server-software","title":"Logging server software","text":"<ul> <li>Loki</li> <li>flutend</li> </ul> <p>Little memory usage and common usage with kubernetes</p> <ul> <li>ELK stack</li> <li>Grafana Loki</li> </ul>"},{"location":"360/index.html#my-problem","title":"My problem","text":"<p>I am writing an distributed application where there are multiple nodes that may be scaled up and down. I am looking for a simple centralized logging solution. Preferably, something that I may run on my local machine. For local development I am using docker compose. I have found a bunch of SaaS or complicated open source logging (ELK stack, etc) that is more complicated than I like. I could just setup a single mongodb instance for logging to keep it simple. I feel like there should be a simple dedicated tool for logs. Any one know if there is anything available? See https://zet.jlrickert.me/357 for details of the application that I am writing.</p>"},{"location":"360/index.html#logging-levels-from-rfc-5424","title":"Logging levels from RFC 5424","text":"Numerical Code Severity 0 Emergency: system is unusable 1 Alert: action must be taken immediately 2 Critical: critical conditions 3 Error: error conditions 4 Warning: warning conditions 5 Notice: normal but significant condition 6 Informational: informational messages 7 Debug: debug-level messages <ul> <li>EMERG</li> </ul> <p>Business critical emergency. All hands on deck and must be fixed asap. 2 AM   crap.</p> <ul> <li>FATAL</li> </ul> <p>Fatal error where the application can no longer run.</p> <ul> <li>ERROR</li> </ul> <p>Application error where the application may operate on a degraded stated</p> <ul> <li>WARN</li> </ul> <p>Warning indicating that an issue may arise</p> <ul> <li>INFO</li> </ul> <p>Basic business info</p> <ul> <li>DEBUG</li> </ul> <p>Verbose logging for diagnostic purposes. Typically, this is for developers</p> <ul> <li>TRACE</li> </ul> <p>Deep tracing of the application. log all the things. Typically, this is for   developers.</p>"},{"location":"361/index.html","title":"Proper way to read user input when using Go","text":"<p>TLDR: Use Scanner</p> <p>Learned from robs stream.</p> <pre><code>import (\n    \"os\"\n    \"bufio\"\n    \"log\"\n)\n\nfunc main() {\n    scanner := bufio.NewScanner(os.Stdin)\n    log.Println(\"Your name?\")\n    scanner.Scan()\n    name := scanner.Text()\n    log.Println(`Hi %s` + name)\n}\n</code></pre>"},{"location":"361/index.html#other-things-to-note","title":"Other things to note","text":"<p><code>ReadString</code> is not cross platform for example.</p> <pre><code>tags: #go #cli\n</code></pre>"},{"location":"362/index.html","title":"Simple versioning using changesets","text":"<p>What I consider a successful release consists of the following:</p> <ul> <li>A feature set</li> </ul> <p>This includes a feature set of something that impacts end users. This may include new features, performance enhancements, and/or bug fixes.</p> <ul> <li> <p>A change log update that documents what has changed to the end user. Typically, this will be tied to a version.</p> </li> <li> <p>Packages are built and released.</p> </li> </ul> <p>The typical workflow is make a couple of commits to git using conventional commits. Once you are satisfied typically I would make a bunch of changesets.</p>"},{"location":"362/index.html#setup","title":"Setup","text":"<p>Run the following in the root of the project. May need to use the <code>--workspace-root</code>.</p> <pre><code>pnpm add -D @changesets/cli\npnpm exec changeset init\n</code></pre>"},{"location":"362/index.html#updating-versions","title":"Updating versions","text":"<p>WIP</p> <pre><code>pnpm exec changeset version\n</code></pre>"},{"location":"362/index.html#see-also","title":"See also","text":"<ul> <li>https://github.com/changesets/changesets/tree/main</li> </ul>"},{"location":"363/index.html","title":"Power lifting workout routines","text":""},{"location":"363/index.html#upper-body","title":"Upper body","text":"<ul> <li>bench press</li> </ul> <p>The big one</p> <ul> <li>bent over row</li> </ul> <p>Hunched over lifting the barbell up to the chest</p> <ul> <li>over head press</li> </ul> <p>Liftin the bar of the head</p>"},{"location":"364/index.html","title":"Setup OpenSearch AWS for learning","text":"<p>WIP</p> <p>This is a how to guide to setup AWS OpenSearch in the free tier for experimenting.</p>"},{"location":"364/index.html#free-tier-requirements","title":"Free tier requirements","text":"<p>You can get started for free on OpenSearch Service with AWS Free Tier. For customers in the AWS Free Tier, OpenSearch Service provides free usage of up to 750 hours per month of a t2.small.search or t3.small.search instance, which are entry-level instances typically used for test workloads, and 10 GB per month of optional Amazon Elastic Block Store (EBS) storage. If you exceed the Free Tier usage limits, you will be charged the OpenSearch Service rates for the additional resources you use. See offer terms for more details.</p> <p>To summarize</p> <ul> <li>use t2.small.search or t3.small.search instances</li> <li>10 GBS of EBS storage</li> </ul>"},{"location":"364/index.html#see-also","title":"See also","text":"<ul> <li>https://iamgeekydude.com/2023/04/15/how-to-set-up-aws-opensearch-for-search-engine/</li> </ul>"},{"location":"364/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>"},{"location":"365/index.html","title":"How to setup email using AWS SES","text":"<p>Key steps</p> <ul> <li>Add domain identity to SES</li> </ul> <p>This required adding a bunch records to my domain.</p> Type Host Value CNAME <code>[REDACTED_TOKEN]._domainkey.[REDACTED_DOMAIN]</code> [REDACTED_TOKEN].dkim.amazonses.com CNAME <code>[REDACTED_TOKEN]._domainkey.[REDACTED_DOMAIN]</code> [REDACTED_TOKEN].dkim.amazonses.com CNAME <code>[REDACTED_TOKEN]._domainkey.[REDACTED_DOMAIN]</code> [REDACTED_TOKEN].dkim.amazonses.com <p>One thing to note here is that on Namecheap .jlrickert.me is appended to the Host value.</p> <ul> <li>Use the code from aws-lambda-ses-forwarder. I think I ended up using node version 12.</li> </ul>"},{"location":"365/index.html#see-also","title":"See also","text":"<ul> <li>https://blog.agood.cloud/posts/2019/02/03/setting-up-email-via-ses-and-gmail/</li> <li>https://github.com/arithmetric/aws-lambda-ses-forwarder</li> <li>https://codethump.com/tutorials/send-receive-domain-email-aws-setup/</li> </ul>"},{"location":"366/index.html","title":"Multiplayer game with FireBase video","text":"<p>Notes from Build a Multiplayer game with JavaScript &amp; Firebase</p> <pre><code>\ntype Collection&lt;A&gt; {\n  id: string\n}\n\nimpl Collection&lt;A&gt; {\n  type id: string\n  onChange((value: A) =&gt; void): void\n  onNewNode((node) =&gt; void): void\n}\n\ntype CollectionItem&lt;A&gt; {\n  id: string // unique id\n  ref: ObjectRef&lt;A&gt; // Set than can be read and written to by the user\n}\n\nimpl CollectionItem&lt;A&gt; {\n}\n\ntype ItemRef&lt;A&gt; {\n  set(f: (value: A) =&gt; A): void\n  get(): A\n}\n</code></pre>"},{"location":"366/index.html#see-also","title":"See also","text":""},{"location":"367/index.html","title":"Neovim repositories","text":"<p>dmmulroy Repository</p> <ul> <li>twitch stream. Willing to help if you ask</li> <li>repo at https://github.com/dmmulroy/dotfiles/tree/main/.config/nvim</li> </ul>","tags":["neovim","editor"]},{"location":"368/index.html","title":"Resources to get started with Ocaml","text":"<ul> <li>https://cs3110.github.io/textbook/cover.html</li> <li>https://ocaml.org/docs</li> </ul>"},{"location":"369/index.html","title":"Dynamic colors with SvelteKit and tailwind","text":"<p>I found a way to do dynamic colors with tailwind and sveltekit.</p> <p>In your <code>tailwind.config.js</code>:</p> <pre><code>/** @type {import('tailwindcss').Config} */\nexport default {\n  theme: {\n    extend: {},\n    colors: {\n      primary: \"var(--color-primary, red)\",\n      secondary: \"var(--color-secondary, blue)\",\n      tertiary: \"var(--color-tertiary, green)\",\n    },\n  },\n};\n</code></pre> <p>In your root <code>+layout.svelte</code>:</p> <pre><code>&lt;script lang=\"ts\"&gt;\n    let primaryColor = '#ff0000';\n    let secondaryColor = '#00ff00';\n    let tertiaryColor = '#0000ff';\n\n    let rootElement: HTMLDivElement;\n    $: rootElement &amp;&amp; rootElement.style.setProperty('--color-primary', primaryColor);\n    $: rootElement &amp;&amp; rootElement.style.setProperty('--color-secondary', secondaryColor);\n    $: rootElement &amp;&amp; rootElement.style.setProperty('--color-tertiary', tertiaryColor);\n&lt;/script&gt;\n\n\n&lt;div bind:this={rootElement}&gt;\n    &lt;slot /&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n    :global(:root) {\n        --color-primary: red;\n        --color-secondary: blue;\n        --color-tertiary: green;\n    }\n&lt;/script&gt;\n</code></pre>"},{"location":"369/index.html#see-also","title":"See also","text":"<ul> <li>https://svelte.dev/repl/57f03a5268884c8080b286c95e9a7c52?version=3.38.2</li> </ul>"},{"location":"37/index.html","title":"File type specific settings in neovim","text":"<p>Here is an example of the thing</p> <pre><code>augroup markdownSpell\n    autocmd!\n    autocmd FileType markdown setlocal spell\n    autocmd BufRead,BufNewFile *.md setlocal spell\naugroup END\n\nlocal augroup = vim.api.nvim_create_augroup\nlocal autocmd = vim.api.nvim_create_autocmd\nlocal markdownSpell = augroup('markdownSpell', {})\nautocmd({'BufRead', 'BufNewFile'}, {\n    pattern = '*.md',\n    group = markdownSpell,\n    callback = function ()\n        vim.opt_local.spell = true\n    end\n})\n</code></pre> <p>Tags:</p> <pre><code>#neovim\n</code></pre>"},{"location":"370/index.html","title":"Middleware pattern with typescript","text":"<p>Here is an example:</p> <pre><code>export type Middleware = (context: Context, next: () =&gt; void) =&gt; void;\n\nconst middlewares = [] satisfies Middleware[];\n\nlet prevIndex = -1;\nlet index = 0;\nlet middleware = middlewares[index] ?? null;\ndo {\n  if (index === prevIndex) {\n    throw new Error(\"Next called multiple times\");\n  }\n  prevIndex = index;\n\n  middleware = middlewares[index] ?? null;\n  if (middleware !== null) {\n    middleware({ log, wss, req, ws }, () =&gt; {\n      index++;\n    });\n  }\n} while (middleware);\n</code></pre>","tags":["typescript","webdev"]},{"location":"371/index.html","title":"Reactivity concepts in web development","text":"<p>Reactivity comes in a bunch of different flavors. The ones that I know of are sinals and observables.</p>"},{"location":"371/index.html#signals","title":"Signals","text":"<p>Signals have 3 different things:</p> <ul> <li>value</li> <li>computed</li> <li>effect</li> </ul> <p>A value is simple some value. A computed value is a value computed from other values. When a value changes everything inside of an effect is ran. A computed value can be thought of as a compound value. However, a value is not meant to be directly modified. There is an optimization for computed values where it is not unless there is an effect that depend on it.</p> <p>This is similar to observables. However, observable values are not available to the outside world and are stuck inside the monad.</p>"},{"location":"372/index.html","title":"React experts","text":"<ul> <li>dominik</li> <li>tk dodo</li> </ul>"},{"location":"372/index.html#meta","title":"Meta","text":"<pre><code>tags: #react #webdev\n</code></pre>"},{"location":"374/index.html","title":"Sveltekit how to debounce input","text":"<p>WIP copy and pasted a working example. Need to convert to something more general. Usually this is more useful when fetching from a remote source.</p> <pre><code>&lt;script lang='ts'&gt;\n    import { loginSession } from '$lib/store';\n    import { createAnonymousUser, type User } from '$lib/sessions';\n    import { nanoid } from 'nanoid';\n\n    const debounce = &lt;FN extends (...args: any[]) =&gt; void&gt;(cb: FN, wait = 500): FN =&gt; {\n        let timeout: ReturnType&lt;typeof setTimeout&gt;;\n\n        return ((...args: any[]) =&gt; {\n            clearTimeout(timeout);\n            console.log('here');\n            timeout = setTimeout(() =&gt; {\n                cb(...args);\n            }, wait);\n        }) as any;\n    };\n\n    const updateName = debounce((name: string) =&gt; {\n        loginSession.update((user) =&gt; {\n            if (user) {\n                return { ...user, name };\n            }\n            return createAnonymousUser({ name, id: nanoid() });\n        });\n    });\n    let name = '';\n    $: {\n        updateName(name);\n    }\n\n    const validCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-';\n    const handleInput = (event: Event &amp; { currentTarget: (EventTarget &amp; HTMLInputElement) }) =&gt; {\n        name = event.currentTarget.value\n            .split('')\n            .filter((a) =&gt; validCharacters.includes(a))\n            .join('');\n    };\n&lt;/script&gt;\n\n&lt;h1&gt;Home page&lt;/h1&gt;\n\n&lt;div&gt;\n    &lt;label for='name'&gt;Nickname&lt;/label&gt;\n    &lt;input autocomplete='off' bind:value={name} on:input={handleInput}\n           type='text' maxlength='20'\n    /&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"375/index.html","title":"AWS Aura serverless database","text":"<p>There are 2 versions. v1 is half the price. The downside of v1 is that it doesn\u2019t scale as quick and is easily blocked for certain workflows.</p> <p>Good for dev, testing, or when rarely used with random spikes.</p>"},{"location":"375/index.html#good-reads","title":"Good reads","text":"<ul> <li>https://aws.amazon.com/blogs/database/best-practices-for-working-with-amazon-aurora-serverless/</li> </ul>"},{"location":"376/index.html","title":"Wireguard for AWS VPC access gateway for Ubuntu server","text":"<p>Create an EC2 instance on a public VPC.</p>","tags":["aws","vpn","wireguard"]},{"location":"376/index.html#install-wireguard-software","title":"Install wireguard software","text":"<pre><code>sudo apt install wireguard wireguard-tools\n</code></pre>","tags":["aws","vpn","wireguard"]},{"location":"376/index.html#enable-forwarding-on-the-sever","title":"Enable forwarding on the sever","text":"<p>Make sure the following settings are enabled in <code>/etc/syslog.conf</code>:</p> <pre><code>net.ipv6.conf.all.forwarding=1\nnet.ipv4.ip_forward=1\n</code></pre> <p>Run <code>sudo sysctl -p</code> after changing</p>","tags":["aws","vpn","wireguard"]},{"location":"376/index.html#generate-keys","title":"Generate keys","text":"<p>Copy pasta below to create key pairs.</p> <pre><code>wg genkey | (umask 0077 &amp;&amp; tee server.key) | wg pubkey &gt; server.pub\nwg genkey | (umask 0077 &amp;&amp; tee macos.key) | wg pubkey &gt; macos.pub\nwg genkey | (umask 0077 &amp;&amp; tee phone.key) | wg pubkey &gt; phone.pub\n</code></pre>","tags":["aws","vpn","wireguard"]},{"location":"376/index.html#server-config-for-think-server","title":"Server config for think-server","text":"<p>Add the following contents to <code>/etc/wireguard/wg0.conf</code></p> <p>This use to work</p> <pre><code>[Interface]\nPostUp = ufw route allow in on wg0 out on eth0\nPostUp = iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE\nPostUp = ip6tables -t nat -I POSTROUTING -o eth0 -j MASQUERADE\nPreDown = ufw route delete allow in on wg0 out on eth0\nPreDown = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\nPreDown = ip6tables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n\nPrivateKey = SERVER_PRIVATE_KEY\nListenPort = 51800\nAddress = 10.0.0.1/24\nSaveConfig = true\n\n# remote device\n[Peer]\nPublicKey = DEVICE_PUBLIC_KEY\nAllowedIPs = 10.0.0.2/24\n</code></pre> <p>This also works</p> <pre><code>[Interface]\nPrivateKey = CONTENTS_OF_SERVER_KEY\nListenPort = 51800\nAddress = 10.0.0.1/24\nSaveConfig = true\n\n# if the server is behind a router and receives traffic via NAT, these iptables rules are not needed\nPostUp = iptables -A FORWARD -i %i -j ACCEPT                                                                                          PostUp = iptables -A FORWARD -o %i -j ACCEPT\nPostUp = iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\nPostDown = iptables -D FORWARD -i %i -j ACCEPT                                                                                        PostDown = iptables -D FORWARD -o %i -j ACCEPT\nPostDown = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n\n\n# remote device for macos\n[Peer]\nPublicKey = CONTENTS_OF_MACOS_PUB\nAllowedIPs = 10.0.0.2/24\n\n# remote device for phone\n[Peer]\nPublicKey = CONTENTS_OF_PHONE_PUB\nAllowedIPs = 10.0.0.3/24\n</code></pre> <p>This may then be started by running the following:</p> <pre><code>systemctl enable wg-quick@wg0.service\nsystemctl start wg-quick@wg0.service\n</code></pre>","tags":["aws","vpn","wireguard"]},{"location":"376/index.html#remote-device-config","title":"Remote device config","text":"<pre><code>[Interface]\nDNS = 8.8.8.8\nAddress = 10.0.0.3\nListenPort = 51800\nPrivateKey = DEVICE_PRIVATE_KEY\n\n[Peer]\nPublicKey = SERVER_PUBLIC_KEY\nAllowedIPs = 0.0.0.0/0, ::/0\nEndpoint = 24.220.78.24:51800\n</code></pre> <p>This may then be started by running the following:</p> <pre><code>systemctl enable wg-quick@wg0.service\nsystemctl start wg-quick@wg0.service\n</code></pre>","tags":["aws","vpn","wireguard"]},{"location":"376/index.html#setting-up-on-macos","title":"Setting up on macos","text":"<pre><code>brew install wireguard-go wireguard-tools\nsudo mkdir /usr/local/etc/wireguard\n</code></pre> <p>Create the following things in <code>/usr/local/etc/wireguard</code></p> <ul> <li>macos.pub</li> <li>macos.key</li> <li>server.pub</li> <li>wg0.conf</li> </ul> <p>The contents of <code>wg0.conf</code> should look like the remote device config.</p> <p>start the service by running the following:</p> <pre><code>sudo wg-quick up wg0\n</code></pre> <p>To bring down run</p> <pre><code>sudo wg-quick down wg0\n</code></pre>","tags":["aws","vpn","wireguard"]},{"location":"377/index.html","title":"Volunteering at Habitat for Humanity","text":"<p>Signing up can be found at https://tchabitat.volunteerhub.com/vv2/. Things I recommend bring include gloves, water, and a dust mask.</p>"},{"location":"378/index.html","title":"Web authentication strategies","text":""},{"location":"378/index.html#cross-site-request-forgery-csrf","title":"Cross Site Request Forgery CSRF","text":"<p>This is when a bad actor sends a request to your backend. If bad.com makes a post to your website then your cookie will be used to authenticate. To prevent this require a X-Request-By header to exist. Bad actors are unable to set the header.</p>"},{"location":"378/index.html#see-also","title":"See also","text":"<ul> <li>https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html</li> </ul>"},{"location":"379/index.html","title":"Dynamic themes in sveltekit","text":"<p>Here is an example configuration in <code>tailwind.config.js</code> file.</p> <pre><code>/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\"./src/**/*.{html,js,svelte,ts}\"],\n  theme: {\n    extend: {},\n    colors: {\n      primary: \"var(--color-primary, red)\",\n      secondary: \"var(--color-secondary, green)\",\n      tertiary: \"var(--color-tertiary, blue)\",\n    },\n  },\n  plugins: [],\n};\n</code></pre> <p>Somewhere in your <code>+layout.svelte</code> file:</p> <pre><code>&lt;script lang=\"ts\"&gt;\n  let primary-color = \"green\";\n  let secondary-color = \"blue\";\n  let tertiary-color = \"red\";\n&lt;/script&gt;\n&lt;div style={`\n    --color-primary: ${primary-color};\n    --color-secondary: ${secondary-color};\n    --color-tertiary: ${tertiary-color};\n  `}&gt;\n  &lt;slot /&gt;\n&lt;/div&gt;\n</code></pre> <p>If any of the color variables change the colors will also change.</p> <p>Warning: I haven\u2019t ran the code example above. I have the color variables in a writeable.</p> <pre><code>tags: #svelte #webDev\n</code></pre>","tags":["svelte"]},{"location":"38/index.html","title":"Shadow moon burial grounds dungeon","text":"<p>This is the dungeon that is part of the legion expansion.</p> <p>It is part of season 1 of dragonflight.</p>"},{"location":"380/index.html","title":"Project management for python","text":"<ul> <li>poetry for package management</li> </ul>"},{"location":"381/index.html","title":"Releasing software with python","text":"<p>This why I define as a release</p> <ul> <li>An updated changed log with changes based on conventional commits</li> <li>The version bumped to the semvar version where appropriate</li> <li>A git repo with a tag set to the semvar version</li> <li>typically the main repo will be set the the latest semvar repository</li> <li>the new tag branch should have its packages deployed where ever</li> </ul> <p>CHANGELOG is the file that tells you what has changed for each version number based conventional commits.</p> <p>The tools that I am using is pre-commit and poetry</p> <pre><code>brew install poetry\npoetry init\nvim .pre-commit-config.yaml\npnpm i -g release-please\npre-commit install\n</code></pre> <p>The contents of the <code>.pre-commit-config.yaml</code></p>"},{"location":"382/index.html","title":"Green curry recipe","text":"<ul> <li> A protein</li> <li>chicken</li> <li>brown lentils</li> <li>tofu</li> <li> Green curry paste (I like maeseri)</li> <li> Coconut cream</li> <li> Rice</li> <li> Assortment of veggies</li> <li> Onions</li> <li> Garlic</li> </ul> <p>Here are some recommendations</p> <ul> <li>mustard greens</li> <li>frozen peas</li> <li>carrot sticks</li> <li>okra</li> </ul>"},{"location":"383/index.html","title":"How I created my first nvim plugin","text":""},{"location":"384/index.html","title":"Frontend masters OpenAI and NodeJS","text":"<p>Using OpenAI for a bunch of services</p>"},{"location":"384/index.html#vector-store","title":"vector store","text":""},{"location":"384/index.html#semantic-search","title":"semantic search","text":""},{"location":"384/index.html#things-to-look-into","title":"Things to look into","text":"<ul> <li> TODO: transformers</li> </ul>"},{"location":"384/index.html#dump","title":"Dump","text":"<ul> <li>Cursor</li> <li>fork of VSCode with more AI involved</li> </ul> <p>Alternatives to chatGPT</p> <ul> <li>Claude</li> <li>hugging face</li> <li>llama<ul> <li>from Facebook</li> </ul> </li> <li> <p>amazon3bedrock</p> </li> <li> <p>titan LLM</p> </li> <li> <p>langchain</p> </li> <li> <p>SDK for AI</p> <ul> <li>able to teach it your own stuff</li> </ul> </li> <li> <p>semantic search</p> <ul> <li>use vector stores</li> </ul> </li> <li> <p>cosign similarity search</p> </li> <li> <p>planet scale forked PostgreSQL</p> </li> <li> <p>vector storage for AI</p> </li> <li> <p>vector database</p> </li> <li> <p>pinecode</p> </li> <li> <p>suggestion for no internet qa</p> </li> <li> <p>llama LLM</p> </li> <li> <p>use functions to force specific output by not resubmitting output to chatGPT</p> </li> <li> <p>recommendations</p> </li> <li>train diffusion models</li> <li>look into openai api</li> <li>baby agi</li> <li>auto gpt<ul> <li>no longer pay bills for him. WTF</li> </ul> </li> </ul>"},{"location":"384/index.html#references","title":"References","text":"<ul> <li>https://scottmoss.notion.site/scottmoss/AI-App-Node-js-f9a372a138ef4241943b4fbb44bdc970</li> </ul>"},{"location":"387/index.html","title":"mono repo setup with pnpm","text":""},{"location":"387/index.html#project-wide-settings","title":"Project wide settings","text":"<ul> <li>prettier</li> <li>eslint base config</li> </ul>"},{"location":"387/index.html#releasing-strategy","title":"Releasing strategy","text":""},{"location":"389/index.html","title":"Tyler Industries entry level .Net role","text":""},{"location":"39/index.html","title":"Halls of valor dungeon","text":"<p>Halls of valor is a originally from the legion expansion.  To get there take a portal to Dalaran and head north east to Stormheim.</p> <p>It is part of season 1 of dragonflight</p> <p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"390/index.html","title":"Solid Principles","text":"<ul> <li>(S)ingle responsibility principle</li> <li>(O)pen closed principle</li> <li>(L)iskov substitution principle</li> <li>(I)nterface segregation principle</li> <li>(D)ependency inversion principle</li> </ul>"},{"location":"391/index.html","title":"AWS (aws)","text":"<p>AWS provides a bunch of services for managing infrastructure.</p> <ul> <li>CloudFront</li> <li>API Gateway</li> <li>SQS</li> <li>SNS</li> <li>Lambda</li> <li>CloudWatch</li> <li>EventBridge</li> <li>CodeStar</li> <li>Cognito</li> <li>EBS</li> <li>AppSync</li> <li>SES</li> </ul> <p>CI/CD</p> <ul> <li>CodeCommit</li> <li>CodeBuild</li> <li>CodeDeploy</li> <li>CodePipeline</li> </ul> <p>Monitoring and debugging</p> <ul> <li>X-Ray</li> <li>CloudFormation</li> <li>CloudTrail</li> <li>CloudWatch</li> </ul> <p>Infrastructure</p> <ul> <li>EKS</li> <li>ECR</li> </ul>","tags":["aws","cloud"]},{"location":"391/index.html#see-also","title":"See also","text":"<ul> <li>Free tier</li> <li>AWS Certifications</li> </ul>","tags":["aws","cloud"]},{"location":"391/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws","cloud"]},{"location":"392/index.html","title":"AWS Simple Queue Service (SQS)","text":"<p>SQS is a managed service on AWS. It allows decoupling different systems. Think batching.</p> <ul> <li>Standard Queue</li> </ul> <p>Best effort to maintain order of messages</p> <ul> <li>FIFO Queue</li> </ul> <p>Guaranties order of messages</p> <ul> <li> <p>Features</p> </li> <li> <p>Dead letter queue</p> <p>Messages that have failed to be processed are sent here.</p> </li> <li> <p>Long polling</p> <p>Allows for a high volume of messages. Things can be scaled up by adding more consumers for data in the queue.</p> </li> <li> <p>Message groups</p> </li> </ul>","tags":["aws"]},{"location":"392/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"392/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"393/index.html","title":"Simple Notification Service (SNS)","text":"<p>SNS is a fully managed messaging service on AWS. Think pub sub.</p>","tags":["aws"]},{"location":"393/index.html#features","title":"Features","text":"","tags":["aws"]},{"location":"393/index.html#message-filtering","title":"Message filtering","text":"","tags":["aws"]},{"location":"393/index.html#message-de-duplication","title":"Message de-duplication","text":"<p>See message de-duplication</p>","tags":["aws"]},{"location":"393/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"393/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"394/index.html","title":"AWS Lambda","text":"<p>AWS Lambda is a server less compute service that abstracts away servers. Think runnable functions in the cloud</p>"},{"location":"395/index.html","title":"CI/CD on AWS","text":"<p>A CI/CD pipeline can be achieved by using multiple services on AWS.</p>","tags":["aws"]},{"location":"395/index.html#dump","title":"Dump","text":"<ul> <li>AppSpec file</li> </ul>","tags":["aws"]},{"location":"395/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> <li>CodeCommit</li> <li>CodeBuild</li> <li>CodeDeploy</li> <li>CodePipeline</li> </ul>","tags":["aws"]},{"location":"395/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"396/index.html","title":"API Gateway","text":"<p>API gateway is a service that creates, manages, and publishes APIs for web application on AWS.</p> <p>Its payment model is pay per use. Making a request and the amount of data transferred is what is billable.</p> <p>Features provided</p> <ul> <li>Authentication</li> <li>Rate Limiting</li> <li> <p>Caching</p> </li> <li> <p>REST</p> </li> <li>WebSocket</li> </ul>","tags":["aws"]},{"location":"396/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"396/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"397/index.html","title":"Event monitoring with Amazon CloudWatch","text":"<p>CloudWatch is a service on AWS that monitors resources and applications.</p>","tags":["aws"]},{"location":"397/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"397/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"398/index.html","title":"Amazon EventBridge","text":"<p>EventBridge is a service on AWS that ???</p>","tags":["aws"]},{"location":"398/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"398/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"399/index.html","title":"X-Ray debugging tool","text":"","tags":["aws"]},{"location":"399/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"399/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"4/index.html","title":"World of warcraft dragonflight season 1 dungeons","text":"<p>List of Dungeons for the dragon flight expansion.</p> <ul> <li>Algeth\u2019ar Academy</li> </ul> <p>Can be found going north east of Valdrakken. Also is north of Halls of Infusion.</p> <ul> <li>Brackenhide Hollow</li> </ul> <p>Can be found going south west of Valdrakken. There is a flight path that goes there.</p> <ul> <li>Halls of Infusion</li> </ul> <p>Can be found by going east of Valdrakken.</p> <ul> <li>Neltharus</li> </ul> <p>North west of Valdrakken. There is a flight path. It is below where the siblings of the obsidian dragonflight are at.</p> <ul> <li>Ruby Life Pools</li> </ul> <p>Short trip north west of Valdrakken</p> <ul> <li>The Azure Vault</li> </ul> <p>Sout of Valdrakken</p> <ul> <li>The Nokhud Offensive</li> </ul> <p>West of Valdrakken</p> <ul> <li>Uldaman: Legacy of Tyr</li> </ul> <p>All dungeons are unlocked at the start of the expansion.</p> <p>Tags:</p> <pre><code>#wow #gaming\n</code></pre>"},{"location":"40/index.html","title":"How to get a portal mailbox in world of warcraft","text":"<p>The portable mail box is from the toy Katy\u2019s Stampwhistle. To obtain the achievement Priority Mail must be completed to unlock a mini game. It must then be completed.</p> <p>The steps needed to obtain:</p> <ul> <li> <p>Lost Mail   Quest started from an item received from a guildy. Not sure how to obtain.   The hand in is in the underbelly. Tunnel is towards the flight thing.</p> </li> <li> <p>A Huge Package   Do the thing</p> </li> <li> <p>Priority delivery (take you to the frozen throne and feralas)   Take the portal. Kill the things. Loot the thing. Go to Feralas</p> </li> <li> <p>Service with a smile   Do the thing</p> </li> <li> <p>Do it for Twinkles   Head over to Hillsbrad Foothills</p> </li> </ul> <p>Start the quest from the lost mail. This was sent to me from a guildy. Don\u2019t remember who</p> <p>This took me like 2 hours.</p> <p>Tags:</p> <pre><code>#wow\n</code></pre> <ol> <li> <p>https://www.wowhead.com/guide/postmasters-questline-rewards-tips-tricks-walkthrough-5797 \u21a9</p> </li> </ol>"},{"location":"400/index.html","title":"Amazon CodeStar","text":"","tags":["aws"]},{"location":"400/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"400/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"401/index.html","title":"Amazon CodeCommit","text":"","tags":["aws"]},{"location":"401/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> <li>CI/CD on AWS</li> </ul>","tags":["aws"]},{"location":"401/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"402/index.html","title":"Amazon CodeBuild","text":"","tags":["aws"]},{"location":"402/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> <li>CI/CD on AWS</li> </ul>","tags":["aws"]},{"location":"402/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"403/index.html","title":"Amazon CodeDeploy","text":"","tags":["aws"]},{"location":"403/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> <li>CI/CD on AWS</li> </ul>","tags":["aws"]},{"location":"403/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"404/index.html","title":"Amazon CodePipeline","text":"","tags":["aws"]},{"location":"404/index.html#features","title":"Features","text":"<ul> <li>Workflow modeling</li> <li>AWS integrations</li> <li>pre build and custom receive notifications</li> <li>declarative templates</li> <li>access control</li> </ul>","tags":["aws"]},{"location":"404/index.html#domain-model","title":"Domain model","text":"<ul> <li>Action Provider</li> </ul> <p>This is something like GitHub</p> <ul> <li> <p>Pipeline</p> </li> <li> <p>Stage</p> </li> </ul>","tags":["aws"]},{"location":"404/index.html#services-used","title":"Services used","text":"<ul> <li>Source: CodeCommit</li> <li>Build: CodeBuild</li> <li>Test: CodeBuild</li> <li>Deploy: CodeDeploy</li> </ul> <p>Monitoring of each step is done by Cloud watch or some other service such as fluentd or Prometheus.</p>","tags":["aws"]},{"location":"404/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> <li>CI/CD on AWS</li> </ul>","tags":["aws"]},{"location":"404/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"405/index.html","title":"Message de-duplication on AWS FIFO topics","text":"<p>Amazon SNS FIFO topics and Amazon SQS FIFO queues support message deduplication, which provides exactly-once message delivery and processing as long as the following conditions are met:</p> <ul> <li> <p>The subscribed Amazon SQS FIFO queue exists and has permissions that allow the   Amazon SNS service principal to deliver messages to the queue.</p> </li> <li> <p>The Amazon SQS FIFO queue consumer processes the message and deletes it from   the queue before the visibility timeout expires.</p> </li> <li> <p>The Amazon SNS subscription topic has no message filtering. When you configure   message filtering, Amazon SNS FIFO topics support at-most-once delivery, as   messages can be filtered out based on your subscription filter policies.</p> </li> <li> <p>There are no network disruptions that prevent acknowledgment of the message   delivery.</p> </li> </ul>"},{"location":"405/index.html#see-also","title":"See Also","text":"<ul> <li>SNS</li> <li>SQS</li> <li>https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html</li> </ul>"},{"location":"406/index.html","title":"How to upload a SSH key pair from the CLI to AWS","text":"<p>I ran into a scenario where I wanted to upload a previously created key on AWS. The issue was that it was a private public keypair in pem format. It appears that AWS only allows uploading public keys from the CLI. This is the steps that I took to upload it.</p> <pre><code>ssh-keygen -f test-keypair.pem -y &gt; test-key.pub\naws ec2 import-key-pair --key-name test-key --public-key-material fileb://test-key.pub\n</code></pre>","tags":["aws"]},{"location":"407/index.html","title":"Neovim intellisense for JSON files","text":"<p>I haven\u2019t yet figured out how to get intellisense to work in neovim for some specific files. What I have found is that you can manually add a <code>$schema</code> property to add intellisense. These may be looked up on https://www.schemastore.org/. It may also be possible to use them for yaml as well.</p> <p>Here are some of the more useful ones</p> Package Schema url package.json https://json.schemastore.org/package.json .prettierrc https://json.schemastore.org/prettierrc.json changeset https://raw.githubusercontent.com/changesets/changesets/main/packages/config/schema.json","tags":["neovim"]},{"location":"407/index.html#overview","title":"Overview","text":"<p>This document explains how JSON and YAML \u201cIntelliSense\u201d (schema-driven validation, completions, hover, diagnostics) is configured in your Neovim setup. It highlights the plugins and LSP settings used and shows how to extend or troubleshoot the configuration.</p>","tags":["neovim"]},{"location":"407/index.html#components-involved","title":"Components involved","text":"<ul> <li>nvim-lspconfig \u2014 configures language servers (jsonls, yamlls).</li> <li>mason / mason-lspconfig / mason-tool-installer \u2014 manage installation and   registration of LSP servers.</li> <li>b0o/schemastore.nvim \u2014 provides a catalog of JSON and YAML schemas   (SchemaStore).</li> <li>blink.cmp \u2014 supplies enhanced LSP capabilities for completion (capabilities   merged into servers).</li> <li>jsonls (JSON Language Server) and yamlls (YAML Language Server) \u2014 actual   servers providing schema-based features.</li> </ul>","tags":["neovim"]},{"location":"407/index.html#how-the-pieces-connect-high-level","title":"How the pieces connect (high level)","text":"<ol> <li>schemastore.nvim exposes helper functions that return schema lists/tables for    JSON and YAML.</li> <li>jsonls and yamlls are configured via nvim-lspconfig to use the    schemastore-provided schemas.</li> <li>Mason ensures LSP binaries are installed; mason-lspconfig registers handlers    which set up the servers with capabilities and the provided settings.</li> <li>The servers then use the schemas to provide validation, completion, hover and    diagnostics based on file name/content.</li> </ol>","tags":["neovim"]},{"location":"407/index.html#jsonls-setup-what-the-config-does","title":"jsonls setup (what the config does)","text":"<p>The config merges schemastore\u2019s JSON schema list with any custom schema entries and enables validation. This allows jsonls to pick the correct schema for known filenames (package.json, tsconfig.json, etc.) or for files that specify a $schema.</p> <p>Example from your config:</p> <pre><code>jsonls = {\n  settings = {\n    json = {\n      schemas = vim.list_extend(\n        require('schemastore').json.schemas(),\n        {\n          {\n            fileMatch = { 'deno.json', 'deno.jsonc' },\n            url = 'https://raw.githubusercontent.com/denoland/deno/main/cli/schemas/config-file.v1.json',\n          },\n        }\n      ),\n      validate = { enable = true },\n    },\n  },\n},\n</code></pre>","tags":["neovim"]},{"location":"407/index.html#yamlls-setup-what-the-config-does","title":"yamlls setup (what the config does)","text":"<p>yamlls has built-in SchemaStore support but the config disables the built-in store and injects schemastore.nvim\u2019s YAML schemas instead. That avoids conflicts and lets you control which schema catalog is used.</p> <p>Example from your config:</p> <pre><code>yamlls = {\n  settings = {\n    yaml = {\n      schemaStore = {\n        enable = false,\n        url = '',\n      },\n      schemas = require('schemastore').yaml.schemas(),\n    },\n  },\n},\n</code></pre>","tags":["neovim"]},{"location":"407/index.html#how-schemastorenvim-works","title":"How schemastore.nvim works","text":"<ul> <li>require(\u2018schemastore\u2019).json.schemas() returns a list (array) of schema entries   for jsonls. Each entry typically contains url and fileMatch (patterns).</li> <li>require(\u2018schemastore\u2019).yaml.schemas() returns a mapping suitable for yamlls   (usually url \u2192 fileMatch array).</li> <li>These helpers are simply Lua tables you pass to LSP configuration. The servers   consume them to match a schema to a file.</li> </ul>","tags":["neovim"]},{"location":"407/index.html#adding-custom-json-schemas","title":"Adding custom JSON schemas","text":"<p>Example: append a custom schema for \u201cmyapp.config.json\u201d:</p> <pre><code>local schemas = require('schemastore').json.schemas()\ntable.insert(schemas, {\n  fileMatch = { 'myapp.config.json', 'myapp.*.json' },\n  url = 'https://example.com/schemas/myapp.config.schema.json',\n})\n-- then set jsonls.settings.json.schemas = schemas in your jsonls config\n</code></pre> <p>Notes:</p> <ul> <li>jsonls accepts an array of schema objects with fileMatch/url.</li> <li>Files that include a \u201c$schema\u201d property will be matched to that URL (jsonls   honors $schema).</li> </ul>","tags":["neovim"]},{"location":"407/index.html#adding-custom-yaml-schemas","title":"Adding custom YAML schemas","text":"<p>yamlls expects a mapping of schemaURL \u2192 fileMatch array. Example:</p> <pre><code>local yaml_schemas = require('schemastore').yaml.schemas()\nyaml_schemas['https://example.com/schemas/myapp.yaml'] = { 'myapp*.yml', 'myapp.yaml' }\n-- then set yamlls.settings.yaml.schemas = yaml_schemas in your yamlls config\n</code></pre> <p>Notes:</p> <ul> <li>Order/priority: yamlls chooses a schema by pattern match; explicit   $schema-like hints (document-specific anchors) help too.</li> <li>Make sure schemaStore.enable = false is present if you\u2019re replacing the   built-in store.</li> </ul>","tags":["neovim"]},{"location":"407/index.html#using-local-schema-files","title":"Using local schema files","text":"<ul> <li>jsonls: use a file:/// URL to point to an absolute local schema path, e.g.   \u201cfile:///home/me/schemas/myschema.json\u201d.</li> <li>yamlls: use the file:/// URL as the key in the yamlls schemas mapping, e.g.:</li> </ul> <pre><code>yaml_schemas['file:///home/me/schemas/myyaml.schema.yaml'] = { 'myproject/*.yml' }\n</code></pre> <p>Be careful with escaping and absolute paths \u2014 LSP servers expect proper URIs.</p>","tags":["neovim"]},{"location":"407/index.html#troubleshooting-steps","title":"Troubleshooting steps","text":"<ol> <li>Is the LSP running for the buffer?    - In Neovim: :LspInfo \u2014 check if jsonls or yamlls is attached to the buffer.</li> <li>Are the servers installed?    - Run :Mason and check jsonls / yamlls. The config uses mason-tool-installer      to ensure installed servers.</li> <li>Are the schemas present?    - In Lua: :lua print(vim.inspect(require(\u2018schemastore\u2019).json.schemas())) (or      yaml.schemas()) to ensure the catalog returns data.</li> <li>Is your file matched by fileMatch?    - Many schemas only match specific filenames (package.json, tsconfig.json,      .eslintrc.json, docker-compose.yml). Rename or add mapping if needed.</li> <li>LSP logs:    - Check lsp logs (path varies by Neovim version). Print      vim.lsp.get_log_path() if available or check ~/.local/state/nvim/* logs.</li> </ol>","tags":["neovim"]},{"location":"407/index.html#useful-commands-and-checks","title":"Useful commands and checks","text":"<ul> <li>:LspInfo \u2014 see active LSP clients and attached servers for current buffer.</li> <li>:Mason \u2014 check/install servers used by mason.</li> <li>:lua print(vim.inspect(require(\u2018schemastore\u2019).json.schemas())) \u2014 dump JSON   schema list.</li> <li>:lua print(vim.inspect(require(\u2018schemastore\u2019).yaml.schemas())) \u2014 dump YAML   schema mapping.</li> <li>:checkhealth \u2014 general diagnostics.</li> </ul>","tags":["neovim"]},{"location":"407/index.html#notes-tips","title":"Notes &amp; tips","text":"<ul> <li>$schema in JSON files overrides filename matching; you can set $schema to a   schema URL to force a schema.</li> <li>For YAML, mapping schema URL \u2192 file patterns is the usual approach.</li> <li>Keep schemastore merged with custom entries rather than replacing it entirely   \u2014 you get both the community catalog and your overrides.</li> <li>If completion / hover seems limited, ensure blink.cmp capabilities are merged   into the server (your config uses   require(\u2018blink.cmp\u2019).get_lsp_capabilities()).</li> </ul> <p>If you want, I can produce:</p> <ul> <li>A small patch snippet to add a local schema mapping to your   lua/kickstart/plugins/lspconfig.lua.</li> <li>A short list of common schema fileMatch patterns (package.json, tsconfig.json,   docker-compose.yml, .github/workflows/*.yml) to add if you need them.</li> </ul>","tags":["neovim"]},{"location":"408/index.html","title":"ECS cluster tutorial","text":"<p>This runs a simple http server using EC2 on ECS</p> <pre><code>aws ecs create-cluster --cluster-name ec2-cluster\n</code></pre>"},{"location":"409/index.html","title":"Interesting bug in AWS ECS","text":"<p>I ran into an issue where create an cluster failed and was not able to re make it as according to AWS it already exists. However, it wouldn\u2019t show up at all if I searched the list either through CLI or GUI. To fix the issue I had to go to got to AWS CloudFormation and delete the stack that was associated with he cluster creation.</p> <pre><code>tags: #aws\n</code></pre>"},{"location":"41/index.html","title":"References to other peoples dotfiles that I find interesting","text":"<ul> <li>https://github.com/Sanix-Darker/dotfiles</li> <li>https://github.com/strager/dotfiles</li> <li>https://github.com/bashbunni/dotfiles</li> </ul>"},{"location":"410/index.html","title":"AWS Service CloudFormation","text":"<p>CloudFormation is a service that allows for deployment automation using infrastructure as code. Please note that It is recommended to use AWS CDK instead for any serious project.</p>","tags":["aws"]},{"location":"410/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"410/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"411/index.html","title":"AWS Cloud Development Kit (CDK)","text":"<p>The AWS CDK is an api that allows for programmable cloud infrastructure on AWS.</p>","tags":["aws"]},{"location":"411/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"411/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"412/index.html","title":"AWS service CloudTrail","text":"","tags":["aws","service","cloud"]},{"location":"412/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws","service","cloud"]},{"location":"413/index.html","title":"AWS CloudWatch","text":"<p>A service for monitoring services running on AWS. Key features include: real-time logs, metrics, and event monitoring; custom dashboards; alerts;</p>","tags":["aws"]},{"location":"413/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"413/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"414/index.html","title":"AWS Elastic Kubernetes Service EKS","text":"<p>Kubernetes service on AWS</p> <p>Some utilities to use is <code>eksctl</code> and <code>kubectl</code></p>","tags":["aws","k8s"]},{"location":"414/index.html#concepts-that-i-need-to-learn","title":"Concepts that I need to learn","text":"<ul> <li> TODO: Managed node groups</li> </ul>","tags":["aws","k8s"]},{"location":"414/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws","k8s"]},{"location":"414/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws","k8s"]},{"location":"415/index.html","title":"AWS Elastic Container Registry (ECR)","text":"<p>Store and manager docker container images</p>","tags":["aws"]},{"location":"415/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"415/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"416/index.html","title":"AWS Cognito","text":"","tags":["aws"]},{"location":"416/index.html#domain-model","title":"Domain model","text":"<pre><code>type UserPool = {\n  // A unique identifier\n  id: string;\n  // Name of the user pool\n  name: string;\n\n  // List of client applications\n  clients: ClientApplication[];\n\n  // List of users registered to the pool\n  user: User[];\n\n  // Security policy settings for the user pool\n  policies: Policy[];\n};\n\ntype ClientApplication = {\n  // A unique identifier\n  id: string;\n\n  // Name of the client application\n  name: string;\n\n  // A secret key used to authenticat the client application\n  secret: string;\n\n  // Scopes defining the acdcess levels of the client application\n  allowedOAuthScopes: string[];\n};\n\ntype User = {\n  id: string;\n  name: string;\n  // A unique identifier for a user within a user pool.\n  id: string;\n  // The username assigned to the user.\n  username: string;\n\n  // The email address associated with the user.\n  email: string;\n  // The password set by the user.\n  password: string;\n\n  // Access and refresh tokens issued to the user for authentication and authorization.\n  tokens: any;\n\n  // Additional attributes associated with the user (e.g., phone number, address).\n  attributes: { [key: string]: string };\n};\n</code></pre>","tags":["aws"]},{"location":"416/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"416/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"417/index.html","title":"AWS Developer Associate study guide","text":"","tags":["aws"]},{"location":"417/index.html#topic-mastery","title":"Topic mastery","text":"<ul> <li> <p>[ ] TODO: DynamoDB</p> </li> <li> <p>[ ] TODO: Streams</p> </li> <li> <p>[ ] TODO: Caching</p> <ul> <li>write through</li> <li>write around</li> </ul> </li> <li> <p>[ ] TODO: IAM</p> </li> <li> TODO: KMS</li> <li> <p>[ ] TODO: S3 encryption</p> </li> <li> <p>[ ] TODO: Upload to S3 headers</p> </li> <li> <p>[ ] TODO: Lambda</p> </li> <li> TODO: Managing secrets</li> <li> TODO: ElastiCache</li> <li> TODO: AWS Kinesis</li> </ul>","tags":["aws"]},{"location":"417/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"417/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"418/index.html","title":"AWS Elastic Block Storage","text":"","tags":["aws"]},{"location":"418/index.html#domain-model","title":"Domain model","text":"","tags":["aws"]},{"location":"418/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> </ul>","tags":["aws"]},{"location":"418/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"419/index.html","title":"AWS Chat app tutorial","text":""},{"location":"419/index.html#see-also","title":"See also","text":"<ul> <li>With appsync</li> <li>Full stack with NextJs</li> <li>Lambda WebSocket chat application</li> </ul>"},{"location":"42/index.html","title":"How to update fields using mongosh","text":"<p>To update a value in mongo <code>$set</code> is used.</p> <p>Here is an example from the docs:</p> <pre><code>db.inventory.updateOne(\n   { item: \"paper\" },\n   {\n     $set: { \"size.uom\": \"cm\", status: \"P\" },\n     $currentDate: { lastModified: true }\n   }\n)\n</code></pre>"},{"location":"420/index.html","title":"AWS AppSync","text":"<p>AppSync is a fully managed GraphQL service</p>","tags":["aws"]},{"location":"420/index.html#tutorials","title":"Tutorials","text":"<ul> <li>Chat app</li> </ul>","tags":["aws"]},{"location":"420/index.html#see-also","title":"See also","text":"<ul> <li>AWS Services</li> <li>CI/CD on AWS</li> </ul>","tags":["aws"]},{"location":"420/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws\n</code></pre>","tags":["aws"]},{"location":"421/index.html","title":"AWS Typescript CDK Quick start","text":"<pre><code>pnpm install --global aws-cdk\nmkdir my-project\ncd my-project\ncdk init app --language typescript\n</code></pre> <p>Add the following to package.json:</p> <ul> <li><code>\"$schema\": \"https://json.schemastore.org/package.json\"</code></li> </ul> <pre><code>\n</code></pre>"},{"location":"421/index.html#see-also","title":"See also","text":"<ul> <li>https://docs.aws.amazon.com/cdk/api/v2/</li> </ul>"},{"location":"422/index.html","title":"Proof of concept for a monorepo with changesets","text":"<p>The goal is to create a mono repo with a CI/CD pipeline that automates publishing packages to npmjs. The tools that I am using to accomplish this include:</p> <ul> <li>turborepo</li> <li>pnpm</li> <li>changesets</li> </ul> <p>Here are some packages that I would like to publish to npmjs:</p> <ul> <li>@jlrickert/eslint-config-custom</li> </ul> <p>This is my custom eslint config</p> <ul> <li>@jlrickert/react-UI</li> </ul> <p>My own personal UI framework</p> <ul> <li>@jlrickert/tsconfig</li> </ul> <p>Base config for things. Probably not useful. Useful for experimenting.</p>"},{"location":"422/index.html#general-workflow","title":"General workflow","text":"<ul> <li>make branch off of the dev branch. Typically this is either a feature, fix, or release branch but not always.</li> <li>make changes to branch</li> <li>add changeset once</li> </ul>"},{"location":"422/index.html#building","title":"Building","text":""},{"location":"422/index.html#testing","title":"Testing","text":""},{"location":"422/index.html#deployment","title":"Deployment","text":""},{"location":"422/index.html#see-also","title":"See also","text":"<ul> <li>https://github.com/vercel/turbo/tree/main/examples/with-changesets</li> <li>https://github.com/vercel/turbo/tree/main/examples/kitchen-sink</li> <li>https://github.com/VulcanJS/vulcan-npm</li> </ul>"},{"location":"423/index.html","title":"Netmagic cloud","text":"<p>Netmagic is a colocation service in India. This is what Soumyadeep recommended.</p>"},{"location":"424/index.html","title":"Test exams","text":"<p>List of places where test exams may be purchased. These might be something to look into if I ever decide to go for the professional certificate.</p> <ul> <li>https://www.examtopics.com/</li> <li>https://www.whizlabs.com/</li> </ul>"},{"location":"425/index.html","title":"Raw module 4 instructions","text":""},{"location":"425/index.html#see-also","title":"See also","text":"<ul> <li>Group project</li> <li>Module 3</li> </ul>"},{"location":"425/index.html#meta","title":"Meta","text":"<pre><code>tags: #aws #upgrad\n</code></pre>"},{"location":"426/index.html","title":"Neuroscience on how learning occurs","text":""},{"location":"426/index.html#domain-model","title":"Domain model","text":"<ul> <li> <p>Neroplasticity</p> </li> <li> <p>Nerogenesis</p> </li> </ul> <p>Process of generating new neurons</p> <ul> <li>Stress</li> </ul>"},{"location":"426/index.html#anatomy-of-the-brain","title":"Anatomy of the brain","text":"<ul> <li>Neocortex</li> </ul> <p>Volitional control</p> <ul> <li>Hippocampus</li> </ul> <p>Memory</p> <ul> <li>Amygdala</li> </ul> <p>Emotions</p>"},{"location":"426/index.html#aids-to-learning-performance","title":"Aids to learning performance","text":"<ul> <li>adequate sleep</li> <li>good nutrition</li> <li>regular exercise</li> </ul>"},{"location":"427/index.html","title":"Strategy for learning","text":"<p>The trick to learning something fast is creating a model to represent the idea and then validate it.</p> <p>Steps to learn</p> <ul> <li>Create a domain modeling</li> <li>Validate the domain model</li> </ul>"},{"location":"427/index.html#example","title":"Example","text":"<p>A company has many AWS accounts that individual business groups own. One of the accounts was recently compromised. The attacker launched a large number of instances, resulting in a high bill for that account. The company addressed the security breach, but a solutions architect needs to develop a solution to prevent excessive spending in all accounts. Each business group wants to retain full control of its AWS account. Which solution should the solutions architect recommend to meet these requirements?</p> <ol> <li> <p>Use AWS Organizations. Add each AWS account to the management account. Create    an SCP that uses the ec2:instanceType condition key to prevent the launch of    high-cost instance types in each account.</p> </li> <li> <p>Attach a new customer-managed IAM policy to an IAM group in each account.    Configure the policy to use the ec2:instanceType condition key to prevent the    launch of high-cost instance types. Place all the existing IAM users in each    group.</p> </li> <li> <p>Turn on billing alerts for each AWS account. Create Amazon CloudWatch alarms    that send an Amazon Simple Notification Service (Amazon SNS) notification to    the account administrator whenever the account exceeds a designated spending    threshold.</p> </li> <li> <p>Turn on AWS Cost Explorer in each account. Review the Cost Explorer reports    for each account on a regular basis to ensure that spending does not exceed    the desired amount.</p> </li> </ol> <p>The answer is 3</p>"},{"location":"427/index.html#domain-model","title":"Domain model","text":"<ul> <li>aws organization</li> <li>policy</li> <li>billing alerts</li> <li>cost explorer</li> </ul> <p>Something that I added</p> <ul> <li>best practices</li> </ul> <p>Question 1</p>"},{"location":"427/index.html#see-also","title":"See also","text":"<ul> <li>Neuroscience on how learning occurs</li> <li>Different types of learning</li> </ul>"},{"location":"428/index.html","title":"Guesswork Sourdough bread","text":"<p>Here is the list of ingredients:</p> Ingredient Amount Comment All purpose flour 400g organic ap flour from walmart Water 250g starter 100g 100% whole wheat 1:1 <p>All ingredients here a guess. The water amount may be the only some what close measurement. Everything is based off of that amount. I had to wing it.</p> <p>Here are the key events</p> <ul> <li>fed starter at 11 am</li> <li>Mixed everything at 5:30pm</li> <li>Placed in fridge at like 11pm</li> <li>Shaped at 9am</li> <li>baked at 10:30 am</li> </ul> <p></p>","tags":["baking","sourdough"]},{"location":"428/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","sourdough"]},{"location":"429/index.html","title":"Tools needed to setup a npm library for typescript","text":"","tags":["javascript","typescript","node"]},{"location":"429/index.html#domain-model","title":"Domain model","text":"<ul> <li>package.json</li> </ul> <p>Specifies how files should be exported. Key properties include: <code>exports</code>, <code>type</code>, <code>sideEffects</code>, <code>main</code>, <code>module</code>, and <code>types</code>.</p> <ul> <li>Module Formats</li> </ul> <p>A JavaScript module may be in several different formats. The current formats are UMD, ESM, and CommonJS.</p> <ul> <li> <p>UMD</p> </li> <li> <p>ESM</p> </li> </ul> <p>Newer format that is what the industry is headed towards.</p> <ul> <li>CommonJS</li> </ul> <p>Old school node imports. This is importing using the require function.</p>","tags":["javascript","typescript","node"]},{"location":"43/index.html","title":"How to do complex filtering with mongosh","text":"<p>Example of how to find documents with a missing key</p> <pre><code>db.yourCollection.find({\n    \"xyz\": {\n        \"$exist\": false\n    }\n})\n</code></pre> <p>For more information see docs about read operations.</p>"},{"location":"430/index.html","title":"Creating KEG commands plugin in NeoVim","text":"<p>Workflow</p> <ul> <li> <p>Creating a new node</p> </li> <li> <p>Run KegCreate</p> <p>This will create and open up a README.md file for editing.</p> </li> <li> <p>Save the file</p> <p>Saving will trigger an index update.</p> </li> </ul>"},{"location":"430/index.html#meta","title":"Meta","text":"<pre><code>tags: #neovim #lua\n</code></pre>"},{"location":"431/index.html","title":"Uzbek Lepyoshki experiment","text":"<p>This is an idea that I got from a friend from Uzbekistan. This is based on a traditional Uzbek yeast bun. My first attempt is based on a recipe that they pointed out to me that looked like it online. I did tweak it in a few places though due to an old jar of yeast. The tweaks include:</p> <ul> <li>Swapping out some whole milk and flour with starter</li> <li>Poppy seed instead of sesame seeds</li> <li>Greek yogurt instead of sour cream</li> <li>Bread flour instead of all purpose flour</li> </ul> <p>Some things that I noticed is how high the hydration is. Typically, I make simple loafs of bread with no fat in it.</p>","tags":["baking","sourdough"]},{"location":"431/index.html#key-ingredients","title":"Key ingredients","text":"Ingredient Amount Comment whole milk 260g water 50g unsalted butter 2 TBSP greek yogurt 70g Sugar 8g salt 9g active dry yeast 5g Red star that is 5 months old. This is 1 month older than recommended Oppened to make a pizza levain 100g 100% whole wheat with roughly 2.5 hours at 66f. Probably not enough but good enough Bread Flour 450g King Author 12.7% protein <p>Ingredients for the glaze</p> Ingredient Amount Comment Egg 1 for egg wash Poppy seeds","tags":["baking","sourdough"]},{"location":"431/index.html#instructions","title":"Instructions","text":"<ul> <li>Other ingredients</li> </ul> <p>Yogurt, sugar, salt, and yeast are mixed together.</p> <ul> <li>Warmed ingredients</li> </ul> <p>Milk, water, and butter should be warmed up in a sauce pan to 130f. 120f starts killing off yeast.</p> <ul> <li>Dough ball</li> </ul> <p>Mix warmed ingredients, and other ingredients, and levain. Typically rise time should be around 1.5 hours to 2 hours. Once mixed the temperature was around 90f. 82f after like an hour or so.</p> <ul> <li>Glaze</li> </ul> <p>The glaze is simply the milk and egg mixed and beaten together. Make this at the last minute.</p> <ul> <li>Shaping</li> </ul> <p>Typically the dough is shaped into 7 to 8 inch disks. My guess is that the amount of ingredients will make 2. Once shaped glaze should be applied and let rest for 30 through 45 minutes.</p> <p></p> <ul> <li>Baking</li> </ul> <p>Bake for 35-40 minutes at 365f. Stone temperature was 385f (WHAT?). Let cool before serving.</p> <p></p> <p></p>","tags":["baking","sourdough"]},{"location":"431/index.html#key-events","title":"Key events","text":"<ul> <li>Mixed starter at 8:00am</li> <li>Mixed ingredients at 12:15pm</li> <li>Shaped at 2:15pm</li> <li>Baked at 2:50pm</li> <li>Pulled out of oven at 3:30pm</li> </ul>","tags":["baking","sourdough"]},{"location":"431/index.html#retrospect","title":"Retrospect","text":"<p>Here are a couple things that I need to pay attention to the next time I make this</p> <ul> <li>One thing to pay attention to next time is the final temperature of the once the dough is mixed.</li> <li>Need to find a better way to transfer the loaves to the oven. The dough stuck to the parchment paper.</li> </ul>","tags":["baking","sourdough"]},{"location":"431/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> <li>Temperature recommendations</li> </ul>","tags":["baking","sourdough"]},{"location":"432/index.html","title":"Recommended temperature for bread rising with active dry yeast","text":""},{"location":"432/index.html#protocols","title":"Protocols","text":"<ul> <li>Light on in the oven to maintain temperature</li> <li>Use the microwave as a proofer. Boil water in the microwave and swap with the bread. Tricky but works.</li> </ul>"},{"location":"432/index.html#sources","title":"Sources","text":"<p>Key facts from bobsredmill:</p> <ul> <li>120f will start to kill yeast</li> <li>105f to 115f is ideal for proofing dry yeast</li> <li>95f for activating dry yeast</li> <li>140f for killing yeast</li> </ul> <p>Handy protocols from tastofhome:</p> <ul> <li>keep over around 75f by using the light in the oven</li> </ul> <p>Key utility from a proofing box:</p> <ul> <li>Maintain humidity from 60% to 70%</li> <li>Maintain temperature from 70f to 120f</li> </ul> <p>Key facts from ruuvi:</p> <ul> <li>72 - 77 for most doughs</li> <li>balance between to hot and too cold depending on the bread. Too hot the yeast develops before the gluten. Too cold and the gluten over develops.</li> </ul> <p>Ideal dough temperature is 75-78 from kingarthurbaking.</p>"},{"location":"433/index.html","title":"Recommended wine list","text":"","tags":["wine"]},{"location":"433/index.html#cabernet","title":"Cabernet","text":"<p>Some that I have tried and did not like:</p> <ul> <li>Dark horse</li> </ul> <p>Very dry but cheap. Maybe OK for cooking.</p> <ul> <li>14 hands - hot to trot</li> </ul> <p>A smooth red blend. Very good tasting</p> <ul> <li>Menage a Trois - Cabernet Sauvignon</li> </ul> <p>My go to steak wine</p>","tags":["wine"]},{"location":"433/index.html#shiraz","title":"Shiraz","text":"<ul> <li>Some Australian wine from 2016. Forgot to take a note of the name.</li> </ul> <p>Reminded Scott of the Meat loaf red wine</p>","tags":["wine"]},{"location":"433/index.html#others","title":"Others","text":"<ul> <li>Wine Haven | Honey wine</li> </ul> <p>Also know as mead. Honey like taste.</p> <ul> <li>Meat loaf red wine</li> </ul>","tags":["wine"]},{"location":"434/index.html","title":"Micro green index","text":"<p>Index of the micro greens that I planted.</p>"},{"location":"434/index.html#index","title":"Index","text":"<ul> <li>2023-11-30 Purple radish micro green batch 1</li> </ul>"},{"location":"435/index.html","title":"Purple radish micro green batch 1","text":"<p>This is a batch of triton purple that I planted on a Thursday.</p> <p>The planting process included breaking up some coco coir into a tray and heavily spritzing it with a water bottle. I then took small cup a filled it with roughly 20 grams of seeds and sprinkled it evenly.</p>"},{"location":"435/index.html#planting-steps","title":"Planting steps","text":"<ul> <li>Apply bedding</li> </ul> <p>I used coco coir that I bought in blocks from amazon. I have used in   the past and seems to work well. At some point I hydrated the blocks with a   good amount of water and broken it up in a bucket. The blocks where purchased   on March 8 2021. Now it is rather dry again. I simply eye balled the amount of   soil in the tray. Maybe like a quarter of an inch deep.</p> <ul> <li>Soil Hydration</li> </ul> <p>Spritz the living hell out of the soil. Should feel wet but not soggy. Use you   best judgement.</p> <ul> <li>Planting</li> </ul> <p>I simply sprinkled 20 grams of seeds using a cocktail glass as evenly as   possible.</p>"},{"location":"435/index.html#key-events","title":"Key events","text":"<ul> <li>Planted on Thursday before bed</li> <li>Took the lid off on Tuesday</li> <li>Harvested on Friday, and Saturday</li> </ul>"},{"location":"435/index.html#retrospect","title":"Retrospect","text":"<p>One of the things that I need to look into is soil hydration. For next time what I might do is weigh out the coco coir and the water that I mix together.</p> <p>This batch was very mild compared to what I remember.</p>"},{"location":"435/index.html#see-also","title":"See also","text":"<ul> <li>Micro green index</li> </ul>"},{"location":"435/index.html#meta","title":"Meta","text":"<pre><code>tags: #microgreen\ndate: 2023-11-30\n</code></pre>"},{"location":"436/index.html","title":"Triton Purple radish sprouts","text":"<p>This is one of the first micro greens that I have grown that came from a micro green starter kit that I bought in 2021.</p>"},{"location":"436/index.html#see-also","title":"See also","text":"<ul> <li>Micro green index</li> </ul>"},{"location":"436/index.html#meta","title":"Meta","text":"<pre><code>tags: #microgreen\n</code></pre>"},{"location":"437/index.html","title":"Coco coir for micro green growing","text":"<p>Coco coir is growing medium that may be used for growing micro greens. Some of the benefits include:</p> <ul> <li>PH balanced</li> <li>Holds water well</li> </ul> <p>Despite looking like soil it is considered hydroponic. The key difference is that this doesn\u2019t actually supply any nutrients.</p>"},{"location":"437/index.html#see-also","title":"See also","text":"<p>https://www.amazon.com/gp/product/B01N1YP8O6/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&amp;psc=1</p>"},{"location":"438/index.html","title":"Project ideas","text":""},{"location":"438/index.html#jlrickertme-domain","title":"jlrickert.me domain","text":"<p>This is a mono repo that houses many of my reusable code and applications for the jlrickert.me domain that I have.</p> <ul> <li>See personal website design</li> <li>Public Zettelkasten</li> </ul> <p>An attempt to virtualise my knowledge. I am finding that there a huge benefit to writing things down. Make it easy to share it with others where it makes sense to.</p>"},{"location":"438/index.html#neovim-emacs-envy","title":"Neovim emacs envy","text":"<p>I am starting to find myself doing more and more things in neovim. This is more or less like how the emacs echo system more or less works. Somethings that I need to research is better debug and live editing. Maybe at some point I will look into fennel. Probably not worth the time investment but would be cool.</p>"},{"location":"438/index.html#knutjs","title":"knutjs","text":"<p>knutjs is a keg app that will replace the way that I take notes and share them. It will integrate with neovim in some way. It would also be nice to be able to edit and add new notes on a web page as I don\u2019t always have my laptop handy.</p> <p>Here are a few key ideas:</p> <ul> <li>Share a private note via a link</li> </ul> <p>Often times if I am making plans with friends I create personal node. It would be convenient to be able to share these notes with them. I don\u2019t want to make them public as I would like to prevent doxing my friends. Other things to think about is automatic sharing of linked notes. This maybe a bit tricky.</p> <ul> <li>Some sort of integration with my jlrickert.me domain</li> <li>Able to edit notes and view them on my phone in a reasonable amount of time.</li> </ul> <p>I often times create recipes on my laptop and view them on my phone while cooking. It is sometimes problematic when it takes several minutes for a quick edit to be viewable on my phone.</p> <ul> <li>Automation</li> </ul> <p>Overtime I have been noticing patterns that I do quite often. For baking and micro greens I typically maintain and index. The index is simple, a list of a date, a title and a link to a node. This gives me a way to quickly glance</p> <ul> <li>Spacial representation of time (Calendar)</li> </ul> <p>Need some way to integrate with google calendar.</p>"},{"location":"438/index.html#database-mounting-program","title":"Database mounting program","text":"<p>Mounting a database to the file system to allow dev tools to be used instead of the dumb CMS tools.</p>"},{"location":"438/index.html#tapper","title":"Tapper","text":"<p>KEG manager thingy</p>"},{"location":"438/index.html#ai-context-manager","title":"AI Context manager","text":"<p>Stateful command tree for managing stateful objects. Each object can be passed to and LLM to get a output. An object would consist of a role, context, vector database thing and prompt. This should integrate with Tapper and Keg somehow. Ideally, I would like to keep them separate independant tools if at all possible.</p>"},{"location":"439/index.html","title":"Knutjs project idea","text":"<p>Knutjs is the next iteration for my note taking system.</p>"},{"location":"439/index.html#see-also","title":"See also","text":"<ul> <li>Knutjs repo</li> </ul>"},{"location":"44/index.html","title":"Example neovim setups that other people use","text":"<ul> <li>Primeagon: https://github.com/ThePrimeagen/init.lua</li> <li>Kickstart: https://github.com/nvim-lua/kickstart.nvim</li> <li>s9tpepper: https://github.com/s9tpepper/dotfiles/tree/master/neovim/.config/nvim</li> </ul>","tags":["neovim"]},{"location":"440/index.html","title":"Lazy sourdough Uzbek Lepyoshki experiment","text":"<p>This is a last minute experiment that I tried for a 100% sourdough Uzbek Lepyoshki based on a previous bake that I did. Some modifications that I made include more sourdough to quicken up fermentation.</p> Ingredient Amount Comment whole milk 130g unsalted butter 1 TBSP greek yogurt 35g Sugar 5g salt 4g levain 125g 100% whole wheat with roughly 2.5 hours at 66f. Probably not enough but good enough Bread Flour 275g King Author 12.7% protein"},{"location":"440/index.html#key-events","title":"Key events","text":"<ul> <li>Mixed levain at 10:30am</li> <li>Mixed ingredients at 03:15pm</li> </ul> <p>Milk, sugar, salt, and butter mixed together and heated. It is then mixed in with the rest of the ingredients.</p> <ul> <li>Baked at 7:45pm</li> </ul>"},{"location":"440/index.html#retrospect","title":"Retrospect","text":"<p>I find it tasted better than the last one. A bit dense but to be expected because of the rather short rise time.</p>"},{"location":"440/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> <li>Uzbek Lepyoshki experiment</li> </ul>"},{"location":"440/index.html#meta","title":"Meta","text":"<pre><code>tags: #baking #sourdough\ndate: 2023-12-01\n</code></pre>"},{"location":"441/index.html","title":"Uzbek Lepyoshki take 2","text":"<p>This is my third Uzbek Lepyoshki that I made. It is largely based on the recipe for my first one. The only adjustment that I am making is the timing and the flour used.</p>","tags":["baking","sourdough","uzbek"]},{"location":"441/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Comment whole milk 260g water 50g unsalted butter 2 TBSP greek yogurt 70g Sugar 8g salt 9g active dry yeast 5g Red star that is 5 months old. This is 1 month older than recommended Oppened to make a pizza levain 100g 100% whole wheat with roughly 2.5 hours at 66f. Probably not enough but good enough AP Flour 450g King Author 11.7% protein","tags":["baking","sourdough","uzbek"]},{"location":"441/index.html#key-events","title":"Key events","text":"<ul> <li> Mixed starter at 10:30am</li> <li> Mixed ingredients at 2:30pm</li> <li> Shaped at 4:30pm</li> <li> Baked for 40 minutes at 375f at 5:00pm</li> <li> Pulled out of oven at 5:40pm</li> </ul>","tags":["baking","sourdough","uzbek"]},{"location":"441/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> <li>Uzbek Lepyoshki experiment</li> <li>Lazy sourdough Uzbek Lepyoshki experiment</li> </ul>","tags":["baking","sourdough","uzbek"]},{"location":"442/index.html","title":"General Index","text":"<p>This is an index for all manually created indexes</p>"},{"location":"442/index.html#index","title":"index","text":"<ul> <li>Baking index</li> <li>Micro green index</li> </ul>"},{"location":"442/index.html#see-also","title":"See also","text":""},{"location":"443/index.html","title":"Ice Skating in Twin Cities","text":""},{"location":"443/index.html#see-also","title":"See also","text":"<ul> <li>Minneapolis</li> <li>https://www.stpaul.gov/departments/parks-and-recreation/activities-events/winter-activities/ice-rinks</li> </ul>"},{"location":"444/index.html","title":"The science of motivation","text":""},{"location":"444/index.html#brain-dump-from-you-tube-video","title":"Brain dump from you tube video","text":"<ul> <li>Should seek pleasure through the pursuit rather than the reward.</li> <li>Time segmentation may be measured by how often they blink</li> </ul> <p>Blinking resets the clock. High dopamine means less blinking.</p> <ul> <li> <p>Why some some successful people crash</p> </li> <li> <p>If you wake up too early and can\u2019t fall back to sleep you may need to go to   bed earlier. Something to do with melatonin.</p> </li> </ul>"},{"location":"444/index.html#see-also","title":"See also","text":"<ul> <li>https://www.youtube.com/watch?v=xLORsLlcT48</li> </ul>"},{"location":"445/index.html","title":"How to belay top rope at climbing gym","text":"<p>Tools needed:</p> <ul> <li>ATC-XP Belay device</li> <li>Carabiner</li> <li>Harness</li> </ul> <p>Commands:</p> <ul> <li>Climber: On belay</li> <li>Belayer: Climb on</li> <li>Climber: Slack</li> <li>Climber: Up rope</li> <li>Climber: Tension</li> <li>Climber: Ready to lower</li> <li>Climber: Off belay</li> <li>Belayer: Belay off</li> </ul>"},{"location":"446/index.html","title":"Mongo style filter example with typescript","text":"<p>Here is an example pulled straight from Mongo git repo itself found in the filesrc/mongo_types.ts. The only modification is the removal of the bson types and WithId.</p> <pre><code>export type Filter&lt;TSchema&gt; = {\n  [P in keyof TSchema]?: Condition&lt;TSchema[P]&gt;;\n} &amp; RootFilterOperators&lt;TSchema&gt;;\n\nexport type Condition&lt;T&gt; =\n  | AlternativeType&lt;T&gt;\n  | FilterOperators&lt;AlternativeType&lt;T&gt;&gt;;\n\nexport type RegExpOrString&lt;T&gt; = T extends string ? RegExp | T : T;\n\nexport type AlternativeType&lt;T&gt; =\n  T extends ReadonlyArray&lt;infer U&gt; ? T | RegExpOrString&lt;U&gt; : RegExpOrString&lt;T&gt;;\n\nexport type FilterOperators&lt;TValue&gt; = {\n  // Comparison\n  $eq?: TValue;\n  $gt?: TValue;\n  $gte?: TValue;\n  $in?: ReadonlyArray&lt;TValue&gt;;\n  $lt?: TValue;\n  $lte?: TValue;\n  $ne?: TValue;\n  $nin?: ReadonlyArray&lt;TValue&gt;;\n  // Logical\n  $not?: TValue extends string\n    ? FilterOperators&lt;TValue&gt; | RegExp\n    : FilterOperators&lt;TValue&gt;;\n  // Element\n  /**\n   * When `true`, `$exists` matches the documents that contain the field,\n   * including documents where the field value is null.\n   */\n  $exists?: boolean;\n  // Evaluation\n  $expr?: Record&lt;string, any&gt;;\n  $jsonSchema?: Record&lt;string, any&gt;;\n  $mod?: TValue extends number ? [number, number] : never;\n  $regex?: TValue extends string ? RegExp | string : never;\n  $options?: TValue extends string ? string : never;\n  // Geospatial\n  $geoIntersects?: { $geometry: Document };\n  $geoWithin?: Document;\n  $near?: Document;\n  $nearSphere?: Document;\n  $maxDistance?: number;\n  // Array\n  $all?: ReadonlyArray&lt;any&gt;;\n  $elemMatch?: Document;\n  $size?: TValue extends ReadonlyArray&lt;any&gt; ? number : never;\n  // Bitwise\n  $bitsAllClear?: BitwiseFilter;\n  $bitsAllSet?: BitwiseFilter;\n  $bitsAnyClear?: BitwiseFilter;\n  $bitsAnySet?: BitwiseFilter;\n  $rand?: Record&lt;string, never&gt;;\n};\n\nexport type RootFilterOperators&lt;TSchema&gt; = {\n  $and?: Filter&lt;TSchema&gt;[];\n  $nor?: Filter&lt;TSchema&gt;[];\n  $or?: Filter&lt;TSchema&gt;[];\n  $text?: {\n    $search: string;\n    $language?: string;\n    $caseSensitive?: boolean;\n    $diacriticSensitive?: boolean;\n  };\n  $where?: string | ((this: TSchema) =&gt; boolean);\n  $comment?: string | Document;\n};\n</code></pre>","tags":["typescript"]},{"location":"447/index.html","title":"Zeros shoe comparison chart","text":"Shoe Cost Style Thickness weight comment DayLite Hiker Fusion 120 boot 5.5mm with 3.5mm lugs (2mm insole) HFS 120 trainers 5.5mm. 3.5mm with insole removable light Prio 5.5mm HFS with more protetion <p>I own a pair of HFS</p>"},{"location":"448/index.html","title":"Stateful command tree using commander js","text":"<p>So far here is what I found works</p> <pre><code>import { Command } from \"commander\";\n\n/**\n * Create a keg command. This add\n */\nconst KegCommand = (name: string): Command =&gt; {\n  return new Command(name)\n    .passThroughOptions()\n    .option(\"-g, --globalflag &lt;kegpath&gt;\", \"Example option\");\n};\n\nexport const rootCli = new Command(\"knut\")\n  .version(version)\n  .enablePositionalOptions();\n\nexport const searchCli = KegCommand(\"search\")\n  .argument(\"&lt;query&gt;\")\n  .action((x) =&gt; {\n    console.log(`Running search ${x}`);\n  });\n// Add a search subcommand to the root\nknutCli.addCommand(searchCli);\n\n// Run the program\nknutCli.parse(process.argv);\n</code></pre>","tags":["node","typescript"]},{"location":"448/index.html#see-also","title":"See also","text":"<ul> <li>https://github.com/rwxrob/bonzai</li> </ul>","tags":["node","typescript"]},{"location":"449/index.html","title":"Professional Full Stack developer prompt for ChatGPT","text":"<p>am a professional full stack engineer that specializes in open source technologies. The tools that I am an expert in include react, typescript, node, go, mongo, postgreqsl, and AWS.</p>"},{"location":"45/index.html","title":"Cool streaming setup that I should look into","text":"<p>See coding.garden for more information.</p>"},{"location":"450/index.html","title":"Christmas bread bowl 2023","text":"<p>Bread bowl for Christmas 2023 based off of the recipe that I made for labor day and the fourth of July 2023. It is a basic bread bowl with one modification. I am using garlic salt rather than sea salt. I served this with a spinach dip that I made.</p> Ingredient Amount Bakers Percentage Comment Bread flour 600g 100% King Author 12.7% protein Water 425g 71% starter 50g 8% 100% rye 1:1 garlic salt 8g <p>Total weight is around 1080g</p>","tags":["baking","bread","sourdough","holiday"]},{"location":"450/index.html#key-events","title":"Key events","text":"<ul> <li>2023-12-22 11:00 Feed starter</li> <li>2023-12-22 16:00 Autolyse</li> </ul> <p>Flour and water should be mixed together.</p> <p></p> <p>1 hour and a half autolyse. Normally, 1 hour is how much time you want to give it. I ended up going an extra 30 minutes because I was busy with other things.</p> <p></p> <ul> <li>2023-12-22 17:45 Mix</li> </ul> <p>Mixed the dough well and did a little bit of kneading in the bowl.</p> <p></p> <p>Normally I would do some stretch and folds but I wont be home to do it.</p> <ul> <li>2023-12-23 00:30 Shape</li> <li>2023-12-23 00:30 Placed in the fridge</li> <li>2023-12-23 11:00 Took out of the fridge</li> <li>2023-12-23 14:00 Bake</li> </ul> <p>Bake at 450f for 20 minutes with the lid on. 450f with the lid off for another 25 minutes.</p> <p></p>","tags":["baking","bread","sourdough","holiday"]},{"location":"450/index.html#retrospect","title":"Retrospect","text":"<p>Overall the load came out tasting really good but was a bit dense. There where a couple of problems that I ran into. Not around to work the gluten with stretch and folds. Mom\u2019s oven seemed like it didn\u2019t heat up as much compared to my oven. I baked for a longer duration that other bakes yet it came out slightly dough. It was a bit on the salty side. This could be from using garlic salt rather than sea salt and an inaccurate digital scale. At some point I should look into how much salt affects the fermentation rate.</p> <p>Here is what I made with it. The dip is a spinach dip</p> <p></p>","tags":["baking","bread","sourdough","holiday"]},{"location":"450/index.html#see-also","title":"See also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","bread","sourdough","holiday"]},{"location":"451/index.html","title":"Tool and strategies for making sourdough bread","text":"<ul> <li>autolyse</li> </ul> <p>Autolyse is the process of letting the dough sit for a period of time to allow for the dough to hydrate. This makes the dough easier to work with for the next step. Typically, only flour and water is mixed.</p>","tags":["baking","sourdough"]},{"location":"452/index.html","title":"Spinach dip recipe","text":"<p>This is the spinach dip recipe that I used with the bread bowl that I made for Christmas 2023. Most recipes online use a vegetable soup mix. However, we didn\u2019t have any so I had to make my own.</p> <p>Base ingredients</p> Ingredient Weight Comment Sour cream 450g 1 container chestnuts 141g 1 drained container of canned chestnuts mayonnaise 250g frozen spinach 320g 1 package soup mix 50g Either a package of soup mix or the one I made below soy sause 6g low sodium <p>Vegetable soup mix</p> Ingredient Weight onion flakes 30g garlic salt 20g dried dill 2g dried basil 2g dried parsely 2g italian seasoning 4g <p>Just mix all the ingredients together</p>","tags":["recipe"]},{"location":"453/index.html","title":"How to implement \u201ccook mode\u201d on a website","text":"<p>Cook mode is essential a toggle on a website that prevents the screen from going into sleep mode. This is a feature that comes in handy. For example, cookie recipes on the web, and game apps such as trivia.</p> <p>According to ChatGPT an implementation is to add and remove some invisible element on a given time interval. I have yet to try this.</p>","tags":["webdev"]},{"location":"454/index.html","title":"Karble cheat sheet","text":"Card Description Joker Move out or pass turn Ace Move out or one space Four Reverse Seven Split 7 moves Jack Swap or move 11 Queen Moves 12 king Move out or moves 13","tags":["cards"]},{"location":"455/index.html","title":"Dill Pickle Tortilla Roll Up recipe","text":"Ingredient Amount Comment Cream cheeze 16 oz 1 package Mayonnaise 1/2 cup Deli ham 1 1/2 cup diced fresh dill 2 tbls white distilled vinegar 1 tbls garlic poweder 1/2 tsp Large tortilas 4 6 inch tortillas cracked pepper to taste","tags":["recipe"]},{"location":"456/index.html","title":"Bundling and compiling typescript files","text":"<p>There are 4 different types of scenarios that I can thing of. Either running some application in node (a server or script), web application, a library, or a application library hybrid.</p> <p>List of tools:</p> <ul> <li>swc and swc-node</li> <li>esbuild</li> </ul> <p>Bundler that compiles typescript down to JavaScript. Allows importing other   formats into via import statements.</p> <ul> <li>vite</li> </ul> <p>Batteries included front end tool</p> <ul> <li>tsup</li> <li>ts-node</li> </ul> <p>swc-node might be better in every way but is less stable</p>","tags":["typescript","node"]},{"location":"456/index.html#node-based","title":"Node based","text":"","tags":["typescript","node"]},{"location":"456/index.html#web-based","title":"Web based","text":"<p>Current recommendation is vite if not using a big framework like NextJS.</p>","tags":["typescript","node"]},{"location":"456/index.html#library-based","title":"Library based","text":"<p>Current recommendation is tsup</p>","tags":["typescript","node"]},{"location":"456/index.html#application-library-hybrid","title":"Application library hybrid","text":"<p>An example of this is @jlrickert/knut-cli. Here I am bundling with tsup and then running with just straight up node.</p>","tags":["typescript","node"]},{"location":"457/index.html","title":"Sourdough batard","text":"<p>A loaf that I made on the weekend at home. The temperature inside is roughly 67f.</p> Ingredient Amount Bakers Percentage Comment Bread flour 232g 50% King Author 12.7% protein Whole wheat flour 168g 50% Hard red wheat berries Water 275g 68% starter 40g 8% 100% rye 1:1 sea salt 8g 2% <p>Total weight is roughly 750g.</p>","tags":["baking","sourdough"]},{"location":"457/index.html#key-events","title":"Key events","text":"<ul> <li>2023-12-30 11:00 Autolyse</li> <li>2023-12-30 12:00 Mix</li> </ul> <p>10 stretch and folds once mixed and an additional 4 stretch and folds over another 5 hours.</p> <ul> <li> <p>2023-12-30 17:00 Shaped</p> </li> <li> <p>2023-12-30 17:00 Bulk ferment</p> </li> </ul> <p>Until large bubbles are on the surface</p> <ul> <li> <p>??? Placed into the fridge</p> </li> <li> <p>??? Baked</p> </li> </ul> <p></p>","tags":["baking","sourdough"]},{"location":"457/index.html#see-also","title":"See also","text":"<ul> <li>July forth bread bowl</li> <li>Labour day bread bowl</li> <li>autolyse</li> <li>Daily index</li> </ul>","tags":["baking","sourdough"]},{"location":"458/index.html","title":"How to shape a batard","text":"<p>Found a good instruction on how to shape a batard on the web.</p> <p></p>","tags":["baking"]},{"location":"458/index.html#see-also","title":"See also","text":"","tags":["baking"]},{"location":"459/index.html","title":"How to make good sourdough bread","text":"","tags":["baking","sourdough"]},{"location":"459/index.html#tools-to-use","title":"Tools to use","text":"<ul> <li>Container</li> </ul> <p>A container to mix the dough in. A tight fitting lid is handy. See through is also nice.</p> <ul> <li>Dutch oven</li> </ul> <p>Provides the perfect environment to bake the bread in a residential oven.</p> <ul> <li>Stone</li> </ul> <p>Provides the heat needed for a good bread rise. Good alternative to a dutch oven if you bread doesn\u2019t fit inside such as is the case of a batard.</p> <ul> <li>Oven</li> <li>Scoring knife</li> </ul> <p>Used to ensure a structured</p> <ul> <li>banneton</li> </ul>","tags":["baking","sourdough"]},{"location":"459/index.html#domain-model","title":"Domain model","text":"<ul> <li>de-gasing</li> <li>cold proofing</li> <li>proofing</li> <li>autolyse</li> <li>bulk fermentation</li> <li>cold fermentation</li> <li>crust</li> <li>rye flour</li> <li>wheat flour</li> <li>barley flour</li> </ul>","tags":["baking","sourdough"]},{"location":"459/index.html#see-also","title":"See also","text":"<ul> <li>How to shape a batard</li> <li>examples</li> </ul>","tags":["baking","sourdough"]},{"location":"46/index.html","title":"Mon 26 Dec 2022 world of warcraft weekly checklist","text":"<ul> <li> M+</li> <li> World quests</li> <li> Storm gear</li> <li> Air</li> <li> Water</li> <li> Earth</li> <li> Fire</li> </ul> <p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"460/index.html","title":".Net core setup for MacOSX and neovim","text":"<p>.Net may be installed with brew by installing <code>dotnet</code>. <code>brew install dotnet</code>.</p> <p>Neovim is easy to setup. Use omnisharp with the neovim LSP.</p>"},{"location":"460/index.html#see-also","title":"See also","text":"<ul> <li>.Net hello world with vscode</li> </ul>"},{"location":"461/index.html","title":"Snippets in neovim","text":"<p>Currently, I am using [Luasnip] for the snippet engine.</p> <p>Here is the relevant code to loading snippets. You can find it in the autopairs_and_cmp.lua file in my nvim config found in my [dotfiles].</p> <p>dotfiles</p> <pre><code>-- Load snippets\nlocal cmp = require(\"cmp\")\nrequire(\"luasnip.loaders.from_vscode\").lazy_load()\nrequire(\"luasnip.loaders.from_snipmate\").lazy_load()\n</code></pre> <p>This loads the snippets in the directory ~/.config/nvim/snippets. See the snippets example in honza\u2019s vim-snippets project on github for an example for what goes in there.</p> <p>Luasnip</p>"},{"location":"461/index.html#date-and-time-formats","title":"Date and time formats","text":"<p>If using snipmate use <code>strftime</code> which is a vimscript function. See https://renenyffenegger.ch/notes/development/vim/script/vimscript/functions/strftime for formatting.</p>"},{"location":"461/index.html#see-also","title":"See also","text":"<ul> <li>LuaSnip</li> <li>examples</li> </ul>"},{"location":"462/index.html","title":"Sourdough batard","text":"<p>A loaf that I made for myself. The temperature inside is roughly 69f. Same recipe as the last one that I made except I increased the temperature of the oven.</p> Ingredient Amount Bakers Percentage Comment Bread flour 232g 50% King Author 12.7% protein Whole wheat flour 168g 50% Hard red wheat berries Water 275g 68% starter 40g 8% 100% rye 1:1 sea salt 8g <p>Total weight is roughly 750g.</p>","tags":["baking","sourdough"]},{"location":"462/index.html#key-events","title":"Key events","text":"<ul> <li>2024-01-09 22:00 Mixed starter</li> <li>2024-01-10 13:30 Autolyse</li> <li>2024-01-10 14:45 Mix</li> <li>2024-01-10 22:00 Shaped and placed in fridge</li> <li>2024-01-11 11:15 Baked</li> </ul> <p>Baked at 475 for 20m in a dutch oven with the lid on and another 18m with the lid off.</p> <p></p>","tags":["baking","sourdough"]},{"location":"462/index.html#see-also","title":"See also","text":"<ul> <li>last bake</li> </ul>","tags":["baking","sourdough"]},{"location":"463/index.html","title":"Bartender tips","text":"<ul> <li>Learn where everything is</li> <li>Ensure access to tools and knowledge</li> <li>Know how to free pour</li> <li>Acknowledge every guest</li> <li>Look good</li> <li>Able to take multiple orders</li> <li>Know POS</li> <li>Keep drinks full</li> <li>Know how to read people</li> </ul> <p>Some people want to socialize, some want to be left alone.</p> <ul> <li>No free drinks</li> <li>Multitasking skills</li> </ul> <p>Keep track of every one</p> <ul> <li>Clean as you go</li> <li>Know garnishes</li> <li>Help barback</li> <li>Know products</li> <li>Build relationships</li> </ul>","tags":["mixology"]},{"location":"464/index.html","title":"Drink mixing tools and strategies","text":"<p>Recommended tools</p> <ul> <li>Strainer</li> <li>Jigger</li> <li>Double jigger</li> <li>2 Shot glass</li> <li>strainer cover</li> <li>steel knob bar spoon</li> <li>2 sided bottle opener</li> <li>Hawthorne strainer</li> <li>cobbler shaker</li> </ul>","tags":["mixology"]},{"location":"465/index.html","title":"Bartender terminology","text":"","tags":["mixology"]},{"location":"465/index.html#see-also","title":"See also","text":"<ul> <li>tools</li> </ul>","tags":["mixology"]},{"location":"466/index.html","title":"A list of tech communities on slack","text":"<p>Google spreadsheet of a list of slack communities. See https://docs.google.com/spreadsheets/d/14WooUa7p-5T1T-kXlTMRWSFeJl2c8-6MOIJUEH-wnaQ/edit#gid=0</p>"},{"location":"467/index.html","title":"SQL and DBMS concepts","text":""},{"location":"467/index.html#indexing","title":"Indexing","text":"<ul> <li>PostgreSQL index types</li> </ul> <p>B-Tree, Hash, GiST, SP-GiST, GIN, BRIN,</p>"},{"location":"467/index.html#terminology","title":"Terminology","text":"<ul> <li>Indexes</li> <li>Triggers</li> <li>Inner join</li> <li>Outer join</li> <li>left join</li> <li>right join</li> <li>Cartesian product</li> <li>cross join</li> <li>union</li> <li>intersect</li> <li>minus</li> <li>cascades</li> <li>SQL Statments</li> <li>SELECT</li> <li>DISTINCT</li> <li>WHERE</li> <li>INNER JOIN</li> <li>LEFT JOIN</li> <li>SELF-JOIN</li> <li>GROUP BY</li> <li>HAVING</li> <li>ORDER BY</li> <li>UNION</li> <li>INTERSECT</li> <li>MINUS</li> <li>INSERT</li> <li>UPDATE</li> <li>DELETE</li> <li>CREATE TABLE</li> <li>ALTER TABLE</li> <li>DROP TABLE</li> <li>PRIMARY KEY</li> <li>FOREIGN KEY</li> <li>NOT NULL</li> <li>CHECK</li> <li>UNIQUE</li> <li>DEFAULT</li> <li>SQL Operators</li> <li>AND</li> <li>OR</li> <li>NOT</li> <li>LIKE</li> <li>BETWEEN</li> <li>IS NULL</li> </ul>"},{"location":"468/index.html","title":"How to grow basil indoors","text":"<p>Requirements:</p> <ul> <li>at least 6 hours of light</li> <li>average temperature of 70f. Do not let it get below 50f</li> <li>tend to like higher humidity</li> <li>1 inch of water per week</li> <li>Use a complete liquid fertilizer, diluted to half strength, once a month. If the plant is not growing much, temporarily increase the fertilization to twice a month.</li> <li>4 inch pot that is well draining to get started</li> <li>Recommended variety</li> </ul> <p>Something slow to seed such as Spicy globe, Everleaf.</p> <ul> <li>To encourage the largest harvest of homegrown basil, harvest often by pinching stems with your fingers or cutting them cleanly with herb snips.</li> </ul>","tags":["gardening"]},{"location":"468/index.html#see-also","title":"See also","text":"<ul> <li>https://www.thespruce.com/grow-basil-indoors-1902741</li> </ul>","tags":["gardening"]},{"location":"47/index.html","title":"Transmogs for windborne velocidrake","text":"<ul> <li> Saddle body armor.  This may be acquired from Valdrakken accord renown</li> </ul>"},{"location":"470/index.html","title":"Basil for culinary use","text":"<p>Types of basil</p> <ul> <li>Sweet basil</li> </ul> <p>Good for making pesto</p> <ul> <li>Lettuce basil</li> </ul> <p>Goof for making pesto</p> <ul> <li>Lemon basil</li> </ul> <p>Use as a garnish or to muddle in drinks (I am guessing here)</p> <ul> <li>Greek basil</li> </ul> <p>Can be used in a similar way as sweep basil. A few varieties to try include Spicy Globe Basil, Aristotle, Pluto, and Fino Verde</p> <ul> <li>Purple basil</li> <li>Cinnamon basil</li> <li>Thai basil</li> </ul>","tags":["cooking","gardening"]},{"location":"470/index.html#see-also","title":"See also","text":"<ul> <li>https://savvygardening.com/types-of-basil/</li> </ul>","tags":["cooking","gardening"]},{"location":"471/index.html","title":"STAR method","text":"<p>Strategy for interviews</p> <ul> <li>Situation</li> </ul> <p>Explain the situation so that your interviewer understands the context of your example they do no need to know every detail!</p> <ul> <li>Task</li> </ul> <p>Talk about the task that you took responsibility for completing the goal of your efforts.</p> <ul> <li>Action</li> </ul> <p>Describe the actions that you personally took to complete the task to reach the goal. Highlight skills or charter traits address in the question.</p> <ul> <li>Result</li> </ul> <p>Explain the positive outcomes or results generated by your actions or efforts. Here, it is important to highlight quantifiable results You may also want to emphasize what you learned form the experience on your key takeaways</p>"},{"location":"472/index.html","title":"Concerts of interest in 2024","text":"<ul> <li>Sebastion bach</li> </ul> <p>Feb 24 at Palace Theatre in St Paul. Prices are 59$ per ticket</p> <ul> <li>Ignescent</li> </ul> <p>January 20 at Skyway Theatre. They are like a christian rock band. They remind me of Skillet.</p>","tags":["music","concert"]},{"location":"473/index.html","title":"IEEE 754 floating point format","text":""},{"location":"474/index.html","title":"White sourdough batard","text":"<p>This is a loaf of bread that I made on Tuesday January 16 for myself. It is based on the previous loaf of bread that I baked. The one thing that I changed is that I used all purpose flour instead of whole wheat</p> Ingredient Amount Bakers Percentage Comment AP flour 400g 100% King Author 11.7% protein Water 275g 68% starter 40g 8% 100% rye 1:1 sea salt 8g <p>Total weight is roughly 750g.</p>","tags":["sourdough","baking","bread"]},{"location":"474/index.html#key-events","title":"Key events","text":"<ul> <li>2024-01-16 11:00 Autolyse</li> <li>2024-01-16 12:20 Mix</li> <li>2024-01-16 23:30 Shaped and placed into fridge</li> <li>2024-01-17 13:35 Baked</li> </ul> <p>Baked at 475f for 20m with steam and dutch over with lid on and then another 18m with the lid off. The time for the 18 minute didn\u2019t get set so I am not sure how long it was actually baked.</p> <p></p>","tags":["sourdough","baking","bread"]},{"location":"474/index.html#see-also","title":"See also","text":"<ul> <li>Sourdough batard</li> </ul>","tags":["sourdough","baking","bread"]},{"location":"475/index.html","title":"Companies in the Twin Cities that hire Software Engineers","text":"<p>Here are some of the companies that do software development where there main offices is located in the twin cities.</p>"},{"location":"475/index.html#companies","title":"Companies","text":"<ul> <li>TotalExpert</li> </ul> <p>Financial services startup in St Louis park.</p> <ul> <li>Code42</li> </ul> <p>Tech company whose head quarters are in downtown Minneapolis. They do security and data integrity.</p> <ul> <li>Schwan\u2019s company</li> </ul> <p>Company located in Bloomington. They do have software engineers employed.</p> <ul> <li>Calabrio</li> </ul> <p>Branding company startup. They do have an office in Minneapolis but employees work remote.</p> <ul> <li> <p>APi group</p> </li> <li> <p>OATI</p> </li> </ul>"},{"location":"475/index.html#consulting-companies","title":"Consulting companies","text":""},{"location":"476/index.html","title":"Junior Automation Application Developer","text":"<p>Job application that applied for on 2024-01-18. They are in mounds view north of St Paul.</p>","tags":["job","career"]},{"location":"476/index.html#job-description","title":"Job description","text":"<pre><code>APi Group is a global, market-leading business services provider of safety and specialty services in over 500 locations worldwide. APi provides statutorily mandated and other contracted services to a strong base of long-standing customers across industries. We are driven by entrepreneurial business leaders to deliver innovative solutions for our customers. As our presence across the globe increases, we are striving to become the #1 people-first company in the world.\n\nAt\u202fAPi Group, our purpose is clear: We Build Great Leaders.\u202f\u202fWe believe that\u202feveryone at APi is a Leader, and\u202fwe provide leadership development programs\u202facross our businesses to facilitate growth. Our distinct leadership development culture creates an empowered, entrepreneurial atmosphere where our leaders can grow, thrive, and belong.\n\nWe are currently seeking an Automation Application Developer who will be joining a, growing team of engineers who are responsible for developing and supporting applications end to end using the low-code Microsoft Power Platform &amp; UiPath RPA Platform for use across multiple companies in the Safety Services segment. This will include Canvas Apps, Model-Driven (CRM) Apps, Power Apps Portals, as well as creating Power Automate Flows and UiPath desktop Robotic Process Automations. This team will also partner with other developers across the family of companies to build scalable and quality solutions. This can be a fully remote, or in person position.\n\nEssential Duties &amp; Responsibilities:\n\nTo include, but not limited to the following:\n\nDesign and develop solutions in Power Apps\nDesign and develop Power Automate workflows\nDesign data architecture in a way that supports Power BI usage\nMaintain technical documentation on solutions developed\nDesign and develop UiPath RPA solutions\nSupport and update solutions as they are created\nCollaborate with the team to ensure ALM and SDLC practices (Azure DevOps)\nPartner with business leaders to produce technical solutions to business problems\nEnsure the company has the technology necessary to drive precise, timely, and efficient outcomes\nContinually stay up to date about new Microsoft technologies to ensure best practices are used\nBuild integrations between UiPath and Microsoft technologies to enable large scale automation efforts\nCollaborate across the APi family of companies to share ideas and solutions\nQualifications:\n\nBachelor\u2019s degree in technical field, or equivalent experience\nExperience developing software solutions \u2013 any language. Power Fx / Object Orientated preferred.\nUnderstanding of both back-end and front-end design principles\nUnderstanding of .NET framework\nA spirit of innovation and drive to solve problems\nTeam player who has a passion for learning, collaboration, and continuous development\nPrior knowledge of, or certifications in, the Microsoft Power Platform preferred\nExperience working in an Agile (Kanban or Scrum) environment preferred\nWilling to pass a post-offer drug test, background, and reference check\nCompetencies and Skills:\n\nShows Accountability\nAdapts to Change\nShows Agility\nThinks Analytically\nBuilds Trust\nChampions Change\nBenefits and Compensation:\n\nThis role will be eligible for hybrid work flexibility based out of our New Brighton office. The pay range is $70,000 - $105,000, depending on job-related knowledge, skills, and experience. This position is eligible for annual bonus and profit sharing based on company performance in addition to other benefits that support the total well-being of you and your family.\u202f\u202fSome benefits include:\n\nComprehensive Insurance coverage, Medical, Dental, Vision, and more\nAccess to corporate fitness center\nWellness Program\n401K with employer match\nDiscounted company stock (Employee Stock Purchase Plan)\nProfit Sharing\nGenerous paid time off\nLeadership Flex - hybrid work environment\nGrowth opportunities through company sponsored leadership development courses and trainings\nThis position is not eligible for sponsorship.\n\nAll offers of employment are expressly contingent upon the satisfactory completion, in accordance with Company policy, of a pre-employment drug screening and background check.\n</code></pre>","tags":["job","career"]},{"location":"476/index.html#see-also","title":"See also","text":"<ul> <li>https://jobs.ourcareerpages.com/job/862880~Primary?source=Indeed</li> </ul>","tags":["job","career"]},{"location":"477/index.html","title":"Companies that are hiring remote works in 2024","text":"<p>Copy and paste of a LinkedIn post</p> <ul> <li>\u2705 Enertek Group</li> <li>\u2705 Clio - Cloud-Based Legal Technology</li> <li>\u2705 Fivetran</li> <li>\u2705 Lumen Technologies</li> <li>\u2705 BetterUp</li> <li>\u2705 Quest Software</li> <li>\u2705 Upstart</li> <li>\u2705 Celigo</li> <li>\u2705 Cengage Group</li> <li>\u2705 Docker, Inc</li> <li>\u2705 hims &amp; hers</li> <li>\u2705 User Interviews</li> <li>\u2705 Abnormal Security</li> <li>\u2705 Cash App</li> <li>\u2705 LogicGate</li> <li>\u2705 Faire</li> <li>\u2705 Renaissance Learning</li> <li>\u2705 Rec Room</li> <li>\u2705 VAST Data</li> <li>\u2705 Sorcero</li> <li>\u2705 McGraw Hill</li> <li>\u2705 Patreon</li> <li>\u2705 Beekeeper</li> <li>\u2705 Upwork</li> <li>\u2705 DocuSign</li> <li>\u2705 DealHub.io</li> <li>\u2705 CENSUS</li> <li>\u2705 Intrado</li> <li>\u2705 Cloudflare</li> <li>\u2705 Funded.club</li> <li>\u2705 Workiva</li> <li>\u2705 People Operations at Clipboard Health</li> <li>\u2705 Director, Head of Talent Brand at Dropbox</li> <li>\u2705 Employee Experience Specialist at Loop</li> <li>\u2705 VGS (Very Good Security)</li> </ul> <p>Remote job boards</p> <ul> <li>\u27a1 Remote.co</li> <li>\u27a1 FlexJobs</li> <li>\u27a1 We Work Remotely</li> <li>\u27a1 Working Nomads</li> <li>\u27a1 RemoteOK</li> <li>\u27a1 Jobspresso</li> <li>\u27a1 RemoteWoman</li> <li>\u27a1 Wellfound</li> <li>\u27a1 Uplers</li> <li>\u27a1 Email Uplers</li> </ul>"},{"location":"478/index.html","title":"Sourdough bread batard January 19 2024","text":"<p>Single day bread bake</p> Ingredient Amount Bakers Percentage Comment AP flour 232g 50% King Author 11.7% protein Whole wheat flour 168g 50% Hard red wheat berries Water 275g 68% starter 40g 8% 100% rye 1:1 sea salt 8g <p>Total weight is roughly 750g.</p>","tags":["bread","sourdough","baking"]},{"location":"478/index.html#key-events","title":"Key events","text":"<ul> <li>2024-01-19 10:30 Autolyse</li> <li>2024-01-19 11:30 Mixed</li> </ul> <p>Did 4 stretch and folds and did the oven trick</p> <ul> <li>2024-01-19 20:00 Baked</li> </ul> <p>Baked for 40 minutes at 475f. Turned out tasting great. Was a bit over proofed.</p>","tags":["bread","sourdough","baking"]},{"location":"478/index.html#see-also","title":"See also","text":"<ul> <li>Sourdough batard</li> <li>baking index</li> </ul>","tags":["bread","sourdough","baking"]},{"location":"479/index.html","title":"Material to learn functional programming","text":"<ul> <li>Program design by calculation</li> </ul> <p>Recently written draft that has really good content. Great resource for learning something like Haskell.</p>"},{"location":"48/index.html","title":"World of warcraft weekly checklist","text":""},{"location":"48/index.html#25-31-dec-2022","title":"25 - 31 Dec 2022","text":"<ul> <li> M+: 2</li> <li> World quests</li> <li> Storm gear</li> <li> Air</li> <li> Water</li> <li> Earth</li> <li> Fire</li> </ul>"},{"location":"48/index.html#27-dec-jan-2-2022","title":"27 Dec  - Jan 2 2022","text":"<ul> <li> M+ </li> <li> World boss</li> <li> Sabellian &amp; WTF is his name?</li> <li> Storm gear</li> <li> Air</li> <li> Water</li> <li> Earth</li> <li> Fire</li> </ul>"},{"location":"480/index.html","title":"How to sort an array with -1, 0, and 1 sort function","text":"<p>I never seem to remember how to sort in ascending or descending order when sorting items</p> <p>Here are some example implementations:</p> <pre><code>const assending = (a: number, b: number) =&gt; a - b;\nconst descending = (a: number, b: number) =&gt; b - a;\nconst nodes = [4, 1, 3, 5, 2, 6]\nconst nodes.sort(assending) // [1, 2,3, 4, 5, 6]\nconst nodes.sort(descending) // [6, 5, 4, 3, 2, 1]\n</code></pre>"},{"location":"481/index.html","title":"Moving over to a different way to handle my public KEG","text":"<p>I find it hard to maintain multiple kegs as I often times want to put personal information. My new strategy is to simply just put everything into my private keg and to use the eventual filter and merge feature of Knut to selectively expose what I want to make public. I think what I will do is to use the #public tag and certain other tags as well.</p>","tags":["public"]},{"location":"482/index.html","title":"Bake: Sourdough bread batard February 02 2024","text":"<p>Single day bread bake</p> Ingredient Amount Bakers Percentage Comment AP flour 232g 50% King Author 11.7% protein Whole wheat flour 168g 50% Hard red wheat berries Water 275g 68% starter 40g 8% 100% rye 1:1 sea salt 8g <p>Total weight is roughly 750g.</p>","tags":["bread","bake","sourdough","baking"]},{"location":"482/index.html#key-events","title":"Key events","text":"<ul> <li>2024-02-02 14:19 autolyse</li> <li>2024-02-02 14:48 Mixed</li> <li>2024-02-03 00:30 Placed into fridge</li> <li>2024-02-03 16:00 Baked</li> </ul> <p>Baked at 500f for 18 minutes with the lid on and another 20m with the lid off. I put the dutch oven on top of the square cast iron skillet.</p> <p></p>","tags":["bread","bake","sourdough","baking"]},{"location":"482/index.html#see-also","title":"See also","text":"<ul> <li>Sourdough batard</li> <li>baking index</li> </ul>","tags":["bread","bake","sourdough","baking"]},{"location":"483/index.html","title":"Vexilla is using tailblocks","text":"<p>Learned on 2024-02-03 that cmgrifing is using tailblocks for his homepage.</p>"},{"location":"484/index.html","title":"Rock paper scissors game","text":"<pre><code>const Choice = \"rock\" | \"paper\" | \"scissors\";\nconst Winner = \"1\" | \"2\" | 'draw';\n\nconst Scenarios: Record&lt;Choice, Record&lt;Choice, Winner&gt;&gt; = {\n  \"rock\": {\n    \"rock\": \"tie\"\n    \"paper\": \"2\"\n    \"scissors\": \"1\"\n  },\n  \"paper\": {\n    \"rock\": \"1\"\n    \"paper\": \"tie\"\n    \"scissors\": \"2\"\n  },\n  \"scissors\": {\n    \"rock\": \"2\"\n    \"paper\": \"1\"\n    \"scissors\": \"tie\"\n  }\n} satisfies {}\n\nconst rps = (p1: Choice, p2: Choice): Winner =&gt; {\n  if (p1 === p2) {\n    return \"draw\"\n  }\n  if (p1) {}\n};\n</code></pre>"},{"location":"485/index.html","title":"Plugin architecture of vscode","text":"<p>A plugin for vscode typically consists of a npm package. The package exports a module that has an activate and an option deactivate top level function.</p>","tags":["vscode","architecture","javascript","typescript"]},{"location":"485/index.html#publishing","title":"Publishing","text":"<p>Authentication is handled by some azure processes</p> <pre><code>npm install -g @vscode/vsce\nvsce package\nvsce publish\n</code></pre>","tags":["vscode","architecture","javascript","typescript"]},{"location":"485/index.html#packagejson-configuration","title":"Package.json configuration","text":"<p>documentation for the Extension Manifest</p> <ul> <li>activationEvents</li> <li>capabilities</li> <li> <p>contributes</p> </li> <li> <p>configuration</p> <ul> <li>commands</li> <li>properties</li> </ul> <p>Looks like this provides schema for something as it provides type information</p> </li> <li> <p>icon</p> </li> </ul> <p>Can\u2019t be an svg for some security reason</p>","tags":["vscode","architecture","javascript","typescript"]},{"location":"485/index.html#vscode-api","title":"VSCode Api","text":"<ul> <li>Exposes a few things via globals</li> </ul> <p>The exposed interface is as follows</p> <ul> <li>Contents of package.json</li> <li>top level activate function with signature <code>Extension Context =&gt; Promise Unit</code></li> <li>top level deactivate function with signature <code>Unit =&gt; Promise Unit</code></li> </ul>","tags":["vscode","architecture","javascript","typescript"]},{"location":"486/index.html","title":"SVG security in public extensions for VSCode","text":"<p>SVG files are not allowed in VS Code for public extensions. I learned this when looking at VSCode for inspiration on how to build a plugin system for the Knut application that I am building</p> <ul> <li> TODO: Figure out why SVG are a security issue in VSCode plugins</li> </ul>"},{"location":"486/index.html#see-also","title":"See also","text":"<ul> <li>Plugin architecture</li> </ul>"},{"location":"487/index.html","title":"Research on Webpack\u2019s plugin architecture","text":"<p>Webpack allows creating plugins through defining an apply method that has a context that the plugin may manipulate.</p> <p>Here is an example plugin:</p> <pre><code>class MyExampleWebpackPlugin {\n  // Define `apply` as its prototype method which is supplied with compiler as its argument\n  apply(compiler) {\n    // Specify the event hook to attach to\n    compiler.hooks.emit.tapAsync(\n      \"MyExampleWebpackPlugin\",\n      (compilation, callback) =&gt; {\n        console.log(\"This is an example plugin!\");\n        console.log(\n          \"Here\u2019s the `compilation` object which represents a single build of assets:\",\n          compilation,\n        );\n\n        // Manipulate the build using the plugin API provided by webpack\n        compilation.addModule(/* ... */);\n\n        callback();\n      },\n    );\n  }\n}\n</code></pre> <p>Here the apply is a function that takes a compiler. The compiler is the context. This may be simplified to a basic function.</p> <pre><code>const plugin = (args: MyPlugin): Plugin =&gt; {\n  // load state here\n  return (ctx: Context) =&gt; {\n    ctx.hooks.emit.tapAsync((compilation, callback) =&gt; {\n    })\n  }\n};\n</code></pre>","tags":["webpack","architecture","javascript","typescript"]},{"location":"487/index.html#see-also","title":"See also","text":"<ul> <li>https://webpack.js.org/contribute/writing-a-plugin/</li> </ul>","tags":["webpack","architecture","javascript","typescript"]},{"location":"488/index.html","title":"Convert physically pointing to the stream to a virtual one","text":"<p>I have a tendency to point at the screen with my finger rather than with my mouse when I am pair programming. However, they all remote. Would I would like to do is come up with a way to highlight the thing that I am pointing at. Some thoughts would be to use a physical laser that some camera could pick up and display on a remote screens.</p>","tags":["project"]},{"location":"489/index.html","title":"Recommended formatting for OCaml","text":"<p>Use Jane street formatting.</p> <p>Use <code>;;</code> to designate end blocks. Here is an example:</p> <pre><code>let function =\n  (* function contents *)\n;;\n</code></pre>","tags":["ocaml","programming"]},{"location":"49/index.html","title":"Formatting in neovim","text":"<p>For formatting I am currently using a formatter plugin. <code>mhartington/formatter.nvim</code>.</p> <p>Some of the formatters need to be installed on the machine in order to use them.</p> Name Filetype Installation <code>stylua</code> lua <code>cargo install stylua</code> <code>prettier</code> lots <code>npm i -g prettier</code> <code>shfmt</code> bash <code>apt install shfmt</code> <pre><code>#neovim #linux #cli\n</code></pre>"},{"location":"490/index.html","title":"Biomarkers associated to centenarians","text":"<p>Lower levels of glucose, creatinine, and uric acid after age 60.</p> <p>Interpretation of the AMORIS cohort.</p>","tags":["biology","health"]},{"location":"491/index.html","title":"leostera the streamer","text":"<p>Tools used</p> <ul> <li>neovim</li> </ul> <p>Switched recently apparently</p> <ul> <li>HackMD</li> </ul> <p>Markdown editor</p>","tags":["streamer"]},{"location":"492/index.html","title":"[ ] mintea Task | help with minttea","text":"<p>A task to help leostera with minttea. minttea is a tui library based around the elm architecture.</p> <p>[ ] TODO: contribute to minttea</p>","tags":["project","task"]},{"location":"493/index.html","title":"System interactions in Tauri","text":"<p>I was looking for a way to make a web app that could also be deployed on desktop via Tauri.</p> <p>Here is what I learned:</p> <ul> <li>Frontend is able to make calls rust. Rust then will have access to the system.</li> </ul> <p>On the rust side a FFI is created. The frontend can then invoke it. See invocation example.</p> <ul> <li>Event system</li> </ul> <p>Basic pub sub</p>","tags":["tauri"]},{"location":"493/index.html#see-also","title":"See also","text":"<ul> <li>https://tauri.app/v1/guides/features/command#complete-example</li> </ul>","tags":["tauri"]},{"location":"494/index.html","title":"Example usage of Ethereum block chain being used","text":"<p>Proof of a domain name transfer using smart contracts.</p>"},{"location":"495/index.html","title":"ESM module system in Node","text":"<p>By default node runs in CommonJs. To enable either use the <code>mjs</code> file extension or set <code>type</code> to <code>\"module\"</code> in the package.json file.</p> <p>This allows using the import from syntax.</p> <p>A few things to note here:</p> <ul> <li>importing JavaScript files require the file extension.</li> </ul>","tags":["javascript","typescript","node"]},{"location":"495/index.html#see-also","title":"See also","text":"<ul> <li>CommonJs</li> <li>https://nodejs.org/api/modules.html#the-mjs-extension</li> <li>https://nodejs.org/api/esm.html#modules-ecmascript-modules</li> </ul> <p>Specifies the ESM system</p>","tags":["javascript","typescript","node"]},{"location":"496/index.html","title":"CommonJs module system in Node","text":"<p>CommonJs is the module system that node uses by default. To explicitly use it you can either use the <code>cjs</code> file extension or set <code>type</code> to <code>\"commonjs\"</code> in package.json.</p> <p>This is the <code>require</code> keyword that you often see in node.</p>","tags":["javascript","typescript","node"]},{"location":"496/index.html#see-also","title":"See also","text":"<ul> <li>module</li> </ul>","tags":["javascript","typescript","node"]},{"location":"497/index.html","title":"TypeScript auto imports in neovim","text":"<p>To allow auto imports make sure that the file you are working on is included in the includes list in the tsconfig.json file.</p> <p>Work around for not building include test files within the build includes using a dedicated tsconfig for building the project for production:</p> <pre><code>{\n  \"extends\": \"./tsconfig.json\",\n  \"exclude\": [\"src/**/*.spec.ts\", \"src/**/*.test.ts\"]\n}\n</code></pre> <p>Create the file and then point tsc or what every build tool to the that file. Typically, the file would be something like tsconfig.build.json.</p>","tags":["typescript","node","neovim"]},{"location":"498/index.html","title":"How to programmatically upload to S3","text":"<ul> <li>https://github.com/digitalocean/sample-functions-golang-presigned-url/blob/main/packages/presign/url/url.go</li> </ul>"},{"location":"499/index.html","title":"How to sort an array with -1, 0, and 1 sort function","text":"<p>I never seem to remember how to sort in ascending or descending order when sorting items.</p> <p>Here are some example implementations:</p> <p>Typescript example:</p> <pre><code>const ascending = (a: number, b: number) =&gt; a - b;\nconst descending = (a: number, b: number) =&gt; b - a;\nconst nodes = [4, 1, 3, 5, 2, 6]\nconst nodes.sort(assending) // [1, 2, 3, 4, 5, 6]\nconst nodes.sort(descending) // [6, 5, 4, 3, 2, 1]\n</code></pre>","tags":["programming","javascript","typescript"]},{"location":"5/index.html","title":"December 2022 week 2 2022 world of warcraft checklist","text":"<ul> <li> Algeth\u2019ar Academy</li> <li> Brackenhide Hollow</li> <li> Halls of Infusion</li> <li> Neltharus</li> <li> Ruby Life Pools</li> <li> The Azure Vault</li> <li> The Nokhud Offensive</li> <li> <p>[x] Uldaman: Legacy of Tyr</p> </li> <li> <p>[ ] Weekly rep</p> </li> <li> World quests</li> <li> 20 High-Fiber Leaf handin at Ohn\u2019iri Springs</li> </ul> <p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"50/index.html","title":"Neovim workspaces","text":"<p>Workspaces in neovim are for controlling what code to use for importing lua code to run.</p>"},{"location":"500/index.html","title":"Mirage OS virtual library OS","text":"<p>Something to read about operating systems. This is something that leostera mentioned</p> <ul> <li> TODO: read and digest Mirage OS Unikernal pdf</li> </ul>","tags":["todo","book","ocaml"]},{"location":"500/index.html#see-also","title":"See also","text":"<ul> <li>https://queue.acm.org/detail.cfm?id=2566628</li> <li>book content</li> </ul>","tags":["todo","book","ocaml"]},{"location":"501/index.html","title":"OCaml awesome","text":"<ul> <li>Caramel</li> </ul> <p>Multi core based on beam</p> <ul> <li>Riot</li> </ul> <p>Actor based concurrency</p>"},{"location":"502/index.html","title":"Where to do research on the job market for tech jobs","text":"<p>data.bls.gov is good place to look.</p>"},{"location":"503/index.html","title":"User agent switcher","text":"<p>Learned that acorn1010 uses the Firefox extension User-Agent Switcher and Manager by Ray for testing out different user agents. She uses Firefox.</p> <ul> <li> TODO: Figure out what a good equivalent would be in Chrome</li> </ul>","tags":["todo","firefox","debugging"]},{"location":"503/index.html#see-also","title":"See also","text":"<ul> <li>https://addons.mozilla.org/en-US/firefox/addon/user-agent-string-switcher/?utm_source=addons.mozilla.org&amp;utm_medium=referral&amp;utm_content=search</li> </ul>","tags":["todo","firefox","debugging"]},{"location":"504/index.html","title":"Reverse engineering Wagmi Github CI/CD pipeline","text":"<p>I was looking to see how other projects structured there CI/CD pipeline on GitHub that has a similar flow to how I would like Knut.</p> <p>Here are the key points that I am interested in:</p> <ul> <li>Verify workflow</li> </ul> <p>The verify workflow ensures that PR\u2019s to the main branch pass all the checks. This includes</p> <ul> <li>Changeset workflow</li> </ul> <p>This either creates a PR to make a release or publishes packages to npmjs. See the changeset workflow for more details. It does re run the verify workflow before proceeding.</p> <p>One technique that they use that is interesting is to have create a reusable actions for installing node and friends. This is a common thing that is in most of the actions. Here is its contents with a few things omitted:</p> <pre><code>name: \"Install dependencies\"\ndescription: \"Prepare repository and all dependencies\"\n\nruns:\n  using: \"composite\"\n  steps:\n    - name: Set up pnpm\n      uses: pnpm/action-setup@v2\n\n    - name: Set up node\n      uses: actions/setup-node@v4\n      with:\n        cache: pnpm\n        node-version: 20\n\n    - name: Install dependencies\n      shell: bash\n      run: pnpm install\n</code></pre> <p>The thing that I am omitting is foundry-rs.</p> <ul> <li> TODO: Research into what foundry-rs does</li> </ul>","tags":["cicd","github"]},{"location":"505/index.html","title":"Java 16.02 bug with AMD processors","text":"<p>Learned about a bug that Thor had about his Minecraft server on 2024-02-27. Turns out that the number of threads was not being detected as expected. Only 1 thread was detected when there are actually 24. This only occurs when using Java 16.02 with an AMD processor in a container. Some one in chat also mentioned that they had a similar issue related to cgroups. Missed most of the details though as I was not able to find it again in the chat history.</p>","tags":["minecraft","operations"]},{"location":"506/index.html","title":"Node setup on MacOSX","text":"","tags":["macosx","node"]},{"location":"506/index.html#key-points","title":"Key points","text":"<ul> <li>brew</li> <li>fnm</li> </ul> <p><code>brew install fnm</code></p> <ul> <li>Install node lts version</li> </ul> <p><code>fnm install --lts</code></p> <p>I have fnm installed from source</p>","tags":["macosx","node"]},{"location":"507/index.html","title":"Knut installation process on MacOSX","text":""},{"location":"507/index.html#dependencies","title":"Dependencies","text":"<ul> <li>node and npm</li> </ul> <p><code>brew install fnm   fnm install --lts</code></p> <p>Some where in your ~/.bashrc or ~/.zshrc</p> <p><code>sh   source &lt;(fnm env --use-on-cd)</code></p> <ul> <li>go</li> </ul> <p><code>brew install go</code></p>"},{"location":"507/index.html#install-knut","title":"Install Knut","text":"<p>Install knut globally. I have node and npm installed with fnm so they are under the users directory. This way I don\u2019t have issues with permissions.</p> <pre><code>npm i -g @jlrickert/knut-cli\n</code></pre>"},{"location":"507/index.html#setup-kegs","title":"Setup kegs","text":"<p>Example kegs downloaded in a kegs directory</p> <pre><code>mkdir ~/kegs\ngit clone https://github.com/jlrickert/zet ~/kegs/jlrickert\ngit clone https://github.com/rwxrob/zet ~/kegs/rwxrob\n</code></pre>"},{"location":"507/index.html#setup-knut","title":"Setup Knut","text":"<p>Add the following in ~/.config/knut/config.yaml</p> <pre><code># yaml-language-server: $schema=https://raw.githubusercontent.com/jlrickert/knutjs/main/packages/knut-core/kegSchema.json\nformat: yaml\nkegs:\n  - url: ~/kegs/jlrickert/docs\n    alias: jlrickert\n  - url: ~/kegs/rwxrob/docs\n    alias: rwxrob\n</code></pre>"},{"location":"508/index.html","title":"Air purifiers for home research","text":"<p>Research into finding a way to clean the air in the living room area. Biggest source of pollution is from cooking.</p> <p>My current living areas is roughly 256 sqft</p> <p>Things filtered from a HEPA filter</p> <ul> <li>PM2.5</li> <li>Allergens</li> <li>Pollen</li> <li>Virus</li> <li>Mold</li> <li>Bacteria</li> </ul>"},{"location":"508/index.html#coway-ap-1512hh","title":"Coway AP-1512HH","text":"<ul> <li>highly recommended by many sources</li> <li>Works quick and well</li> <li>24 to 53 db</li> <li>expensive filter replacements</li> <li>2 Filters. A HEPA and a Deodorizing filter</li> <li>HEPA needs to be replaced roughly every year</li> <li>Deodorizing needs to be replaced every 6 months</li> <li>Time to baseline is roughly 84 minutes according to youtube</li> </ul> <p>Not sure about the size of the room</p>"},{"location":"508/index.html#levoit-core-300","title":"Levoit core 300","text":"<ul> <li>200 sqft</li> <li>inefficient</li> </ul>"},{"location":"508/index.html#diy","title":"DIY","text":"<p>Big fan and a furnace filter</p> <p>It apparently outperforms many others. No HEPA filter.</p>"},{"location":"508/index.html#see-also","title":"See also","text":"<ul> <li>Air quality research dump</li> </ul>"},{"location":"509/index.html","title":"Air quality in my living area research","text":"<p>Types of pollutants from cooking</p> <ul> <li>PM2.5</li> <li>PM10</li> <li>Nitrogen Dioxide</li> <li>Volatile Organic Compounds (VOCS)</li> <li>Formaldehyde</li> <li>Polycyclic Aromatic Hydrocarbons</li> <li>Acrolein</li> <li>Dioxins</li> <li>Heavy metals</li> <li>Phthalates</li> </ul> <p>Other possible things</p> <ul> <li>mold</li> <li>humidifiers</li> </ul> <p>Throws minerals in the water into the air</p>"},{"location":"51/index.html","title":"Alacrity configuration notes","text":"<ul> <li>FiraCode Nerd regular monospace</li> </ul> <p>https://www.nerdfonts.com/#features</p>"},{"location":"510/index.html","title":"Dependency injection using the Reader pattern","text":"<p>In functional programming there is a way to compose together functions that take some dependency as there input to do some calculation. These functions may be implicitly composed using point free style of programming. This is convenient as typically some environment will be needed everywhere.</p> <p>Here is an example</p> <pre><code>type Deps = {\n  a: A\n  b: B\n  c: C\n}\nconst App&lt;T&gt; = Reader&lt;Deps, T&gt;\n</code></pre> <ul> <li> TODO: Finish describing the pattern</li> </ul>","tags":["programming"]},{"location":"511/index.html","title":"Notes about the neurological impact of music from a podcast","text":"<p>I was listening to the podcast Rick Beato on youtube about the future of music. One thing that stood out was the push toward short songs.</p>"},{"location":"511/index.html#tidbits","title":"Tidbits","text":"<ul> <li>16 seconds recommended times for Tic Tok videos</li> <li>Incentives to shorts songs because financial incentives for shorter songs</li> <li>10 minutes fall into trance</li> <li>Shamanistic rituals similar among different cultures<ul> <li>Mostly women who played drums</li> <li>fall into a trance after 10 minutes</li> </ul> </li> </ul>"},{"location":"512/index.html","title":"Basic setup for a React Native app with expo and pnpm monorepo","text":"<p>This is the minimum that I found to work to get both android and the web. It should be noted that I have setup android previously for experimenting with flutter.</p> <p>Here are the requirements:</p> <ul> <li>monorepo with pnpm</li> <li>testing setup</li> <li>build and deployment</li> </ul> <p>Based on the learnings from expo-monorepo-example. Here is what I learned from it:</p> <ul> <li>had to uncomment <code>config.resolver.disableHierarchicalLookup = true;</code> in <code>metro.config.js</code>. Having this enabled caused</li> <li>only supports commonjs</li> </ul>"},{"location":"512/index.html#development-environment","title":"Development environment","text":"<p>Key files required for a dev environment:</p> <ul> <li>App.tsx</li> </ul> <p>```tsx   import { StatusBar } from \u201cexpo-status-bar\u201d;   import { StyleSheet, Text, View } from \u201creact-native\u201d;</p> <p>export default function App() {     return (        Open up App.js to start working on your app!      );   }</p> <p>const styles = StyleSheet.create({     container: {       flex: 1,       backgroundColor: \u201c#fff\u201d,       alignItems: \u201ccenter\u201d,       justifyContent: \u201ccenter\u201d,     },   });   ```</p> <ul> <li>app.json</li> </ul> <p>```</p> <p>```</p> <ul> <li>index.js</li> </ul> <p>This needs to have .js extension</p> <p>```js   import { registerRootComponent } from \u201cexpo\u201d;</p> <p>import App from \u201c./App\u201d;</p> <p>// registerRootComponent calls AppRegistry.registerComponent(\u2018main\u2019, () =&gt;   // App); It also ensures that whether you load the app in Expo Go or in a   // native build, the environment is set up appropriately   registerRootComponent(App);   ```</p> <ul> <li>babel.config.cjs</li> <li>metro.config.cjs</li> </ul> <p>```cjs   // Learn more https://docs.expo.dev/guides/monorepos   const { getDefaultConfig } = require(\u201cexpo/metro-config\u201d);   const { FileStore } = require(\u201cmetro-cache\u201d);   const path = require(\u201cpath\u201d);</p> <p>const projectRoot = __dirname;   const workspaceRoot = path.resolve(projectRoot, \u201c../..\u201d);</p> <p>const config = getDefaultConfig(projectRoot);</p> <p>// #1 - Watch all files in the monorepo   config.watchFolders = [workspaceRoot];</p> <p>// #3 - Force resolving nested modules to the folders below   // config.resolver.disableHierarchicalLookup = true;</p> <p>// #2 - Try resolving with project modules first, then workspace modules   config.resolver.nodeModulesPaths = [     path.resolve(projectRoot, \u201cnode_modules\u201d),     path.resolve(workspaceRoot, \u201cnode_modules\u201d),   ];</p> <p>// Use turborepo to restore the cache when possible   config.cacheStores = [     new FileStore({       root: path.join(projectRoot, \u201cnode_modules\u201d, \u201c.cache\u201d, \u201cmetro\u201d),     }),   ];</p> <p>module.exports = config;   ```</p> <ul> <li>tsconfig.json</li> </ul> <p><code>jsonc   {     \"$schema\": \"https://json.schemastore.org/tsconfig\",     \"extends\": [\"expo/tsconfig.base\", \"@jlrickert/knutjs-tsconfig/base.json\"],     \"compilerOptions\": {       \"jsx\": \"react-jsx\",       \"module\": \"Preserve\",       \"moduleResolution\": \"Bundler\",     },     \"exclude\": [\"./metro.config.cjs\"],   }</code></p> <ul> <li>package.json</li> </ul> <p><code>jsonc   {     \"$schema\": \"https://json.schemastore.org/package.json\",     \"main\": \"index.js\",     \"type\": \"commonjs\",     \"scripts\": {       \"start\": \"expo start\",       \"android\": \"expo start --android\",       \"ios\": \"expo start --ios\",       \"web\": \"expo start --web\",       \"dev\": \"pnpm run web\",       \"typecheck\": \"tsc --noEmit\",       \"test\": \"jest\",     },     \"dependencies\": {       \"@expo/metro-runtime\": \"~3.1.3\",       \"@jlrickert/knutjs-core\": \"workspace:*\",       \"@jlrickert/knutjs-tsconfig\": \"workspace:*\",       \"expo\": \"~50.0.14\",       \"expo-status-bar\": \"~1.11.1\",       \"fp-ts\": \"^2.16.4\",       \"jest\": \"^29.3.1\",       \"jest-expo\": \"~50.0.4\",       \"metro-cache\": \"^0.80.7\",       \"react\": \"18.2.0\",       \"react-dom\": \"18.2.0\",       \"react-native\": \"0.73.6\",       \"react-native-web\": \"~0.19.10\",       \"zustand\": \"^4.5.2\",     },     \"devDependencies\": {       \"@babel/core\": \"^7.24.1\",       \"@babel/runtime\": \"^7.24.1\",       \"@types/babel__core\": \"^7.20.5\",       \"@types/react\": \"~18.2.45\",       \"typescript\": \"^5.4.2\",     },     \"private\": true,     \"jest\": {       \"transformIgnorePatterns\": [         \"node_modules/(?!(?:.pnpm/)?((jest-)?react-native|@react-native(-community)?|expo(nent)?|@expo(nent)?/.*|@expo-google-fonts/.*|react-navigation|@react-navigation/.*|@unimodules/.*|unimodules|sentry-expo|native-base|react-native-svg))\",       ],     },   }</code></p> <ul> <li>root package.json</li> </ul> <p>```jsonc   {     \u201c$schema\u201d: \u201chttps://json.schemastore.org/package.json\u201d,     \u201ctype\u201d: \u201cmodule\u201d,     \u201cscripts\u201d: {       \u201cbuild\u201d: \u201cturbo build\u201d,       \u201cclean\u201d: \u201cturbo clean\u201d,       \u201cdev\u201d: \u201cturbo dev \u2013no-cache \u2013continue\u201d,       \u201cformat\u201d: \u201cprettier \u2013write .\u201d,       \u201clint\u201d: \u201cturbo lint\u201d,       \u201ctest\u201d: \u201cturbo test\u201d,       \u201ctypecheck\u201d: \u201cturbo typecheck\u201d,       \u201cchangeset\u201d: \u201cchangeset\u201d,       \u201cversion-packages\u201d: \u201cchangeset version\u201d,       \u201crelease\u201d: \u201cturbo build \u2013filter=docs^\u2026 &amp;&amp; changeset publish\u201d,     },     \u201ckeywords\u201d: [],     \u201cauthor\u201d: \u201cJared Rickert (jaredrickert52@gmail.com)\u201d,     \u201clicense\u201d: \u201cApache-2.0\u201d,     \u201cpackageManager\u201d: \u201cpnpm@8.8.0\u201d,     \u201cdependencies\u201d: {       \u201c@jlrickert/knutjs-cli\u201d: \u201cworkspace:*\u201d,     },     \u201cdevDependencies\u201d: {       \u201c@changesets/cli\u201d: \u201c^2.27.1\u201d,       \u201ceslint\u201d: \u201c^8.57.0\u201d,       \u201cprettier\u201d: \u201c^3.0.3\u201d,       \u201cturbo\u201d: \u201c^1.12.4\u201d,     },</p> <pre><code>// Need to figure out why this is useful\n\"pnpm\": {\n  \"peerDependencyRules\": {\n    \"ignoreMissing\": [\"@babel/*\", \"expo-modules-*\", \"typescript\"],\n  },\n},\n</code></pre> <p>}   ```</p>"},{"location":"512/index.html#testing-setup","title":"Testing setup","text":"<ul> <li>https://docs.expo.dev/develop/unit-testing/</li> </ul> <pre><code>pnpm add -D jest jest-expo @testing-library/react-native @types/jest\nnpx expo install jest-expo jest\n</code></pre>"},{"location":"512/index.html#see-also","title":"See also","text":"<ul> <li>Install flutter on macOSX</li> <li>Flutter experiments</li> </ul>"},{"location":"513/index.html","title":"Add type checking to babel configuration","text":"<p>This is what I found to work. The types aren\u2019t great but it is better than nothing. Also need to install a types package.</p> <pre><code>npm i -D @types/babel__core\npnpm add -D @types/babel__core\nyarn add -D @types/babel__core\n</code></pre> <p>Simple template:</p> <pre><code>/** @type {import(\"@babel/core\").ConfigFunction} */\nmodule.exports = function (api) {\n  // @ts-ignore\n  api.cache(true);\n};\n</code></pre>","tags":["typescript","javascript","webdev"]},{"location":"514/index.html","title":"A better zustand store","text":"<p>Acorn shared how she manages state on foony.com. She uses a wrapper around zustand.</p> <p>She shared it as a gist on GitHub.</p>"},{"location":"515/index.html","title":"Event: Minnebar 18 details","text":"<p>Minnebar 18 is an (un)conference on April 20 (2024-04-10) located at Best Buy HQ in Minneapolis between 08:00 and 18:30 CDT.</p> <p>Key event details:</p> <ul> <li>7601 Penn Ave S Minneapolis, MN 55423</li> <li>between 8 am and 6:30 pm</li> </ul>","tags":["meetup","tech","event"]},{"location":"515/index.html#see-also","title":"See also","text":"<ul> <li>Agenda</li> </ul>","tags":["meetup","tech","event"]},{"location":"516/index.html","title":"React native design concepts","text":"","tags":["react-native","react","typescript","mobiledev"]},{"location":"516/index.html#navigation","title":"Navigation","text":"<ul> <li>Stack</li> </ul> <p>Pages are navigated via clicks on buttons. The buttons dynamically change based on the page. Previous pages are pushed to a stack. There is a back button somewhere.</p> <ul> <li>Tabs</li> </ul> <p>Navigation is done by tapping on a navigation button. The buttons are typically statically located on all the pages.</p> <ul> <li>Drawer</li> </ul> <p>Hamburger button that opens up a menu</p>","tags":["react-native","react","typescript","mobiledev"]},{"location":"517/index.html","title":"Only fans PR move","text":"<p>OnlyFans dodging the bullet from a christian group trying to take down websites that have adult content. OnlyFans decided announced that they where removing adult content. When the media frenzy died down after like a week or two they reversed the decision. This way they avoided a PR hit.</p> <p>I learned about this watching TheCoppinger on twitch.</p>","tags":["publicrelations"]},{"location":"518/index.html","title":"Common bacteria in the human mouth","text":"<ul> <li>Tannerella forsynthia</li> </ul> <p>Typically implicates gum disease</p> <ul> <li>Streptococcus mutans</li> </ul> <p>Typically causes cavities</p>"},{"location":"519/index.html","title":"Phone research for 2024","text":"<p>Android auto support</p>","tags":["mobile","phone","hotspot"]},{"location":"519/index.html#samsung","title":"Samsung","text":"<p>Snapdragon 8 Gen 3 for Galaxy and C-band, mmWave, sub-6GHz for 2024 models.</p> Name Battery Price Size camera Dimensions S22+ 10h 6.6 6.20 by 2.98 by 0.30 inches S24 13h 550 6.2 50 5.79 by 2.78 by 0.30 inches S24+ 14h 750 6.7 50 6.24 by 3.00 by 0.30 inches S24 Ultra 14h 1050 6.9 200 6.40 by 3.11 by 0.34 inches","tags":["mobile","phone","hotspot"]},{"location":"519/index.html#google","title":"Google","text":"Name Battery Price Size camera Dimensions Pixel 8 450 6.2 Pixel 8 Pro 650 6.7","tags":["mobile","phone","hotspot"]},{"location":"519/index.html#iphone","title":"iPhone","text":"Name Battery Price Size camera Dimensions 15 pro 29 1000 6.1 15 26 800 14 26 700 13 19 600 12 pro 490","tags":["mobile","phone","hotspot"]},{"location":"52/index.html","title":"Obsidian Dracthyr Battlegear","text":"<p>To obtain hand in the following to the quartermaster near Sabellian.  He is on the north side.</p> <p>Items needed:</p> <ul> <li>4 Awakened Earth</li> <li>4 Awakened Fire</li> </ul>"},{"location":"520/index.html","title":"WOW Dragonflight Season 3","text":"<p>Season 3 of Dragonflight my main was a warlock.</p>","tags":["wow"]},{"location":"521/index.html","title":"WOW Dragonflight season 4","text":"<p>Dragonflight season 4 is released on Tuesday April 23rd (2024-04-23).</p> <p>My main was a rogue</p>","tags":["wow","dragonflight"]},{"location":"521/index.html#mythic-dungeon-list","title":"Mythic + dungeon list","text":"<ul> <li>The Azure Vault</li> <li>Halls of infusion</li> <li>Neltharus</li> <li>Algeth\u2019ar Academy</li> <li>Uldaman: Legacy of Tyr</li> <li>Brackenhide Hollow</li> <li>Ruby Life Pools</li> <li>The Nokhud Offensive</li> </ul>","tags":["wow","dragonflight"]},{"location":"521/index.html#new-features","title":"New features","text":"<ul> <li>Awakened raids</li> </ul> <p>Every week an old Dragonflight raid will drop improved rewards.</p>","tags":["wow","dragonflight"]},{"location":"521/index.html#suggested-progression","title":"Suggested progression","text":"","tags":["wow","dragonflight"]},{"location":"521/index.html#item-levels","title":"Item levels","text":"<p>Raid rewards</p> Difficulty Awakened Raids Raid Finder 480 or 489 Normal 493 or 502 Heroic 506 or 515 Mythic 519 or 528 <p>Item exchange rewards</p> LFR (Veteran 3/8) Normal (Champion 3/8) Heroic (Hero 3/6) Mythic (Myth 3/4) 486 ilvl 499 ilvl 512 ilvl 525 ilvl <p>M+ rewards</p> Keystone Level End of Dungeon Initial Upgrade Level Great Vault Initial Upgrade Level 2 496 Champion 2/8 509 Hero 2/6 3 499 Champion 3/8 509 Hero 2/6 4 499 Champion 3/8 512 Hero 3/6 5 502 Champion 4/8 512 Hero 3/6 6 502 Champion 4/8 515 Hero 4/6 7 506 Hero 1/6 515 Hero 4/6 8 506 Hero 1/6 519 Myth 1/4 9 509 Hero 2/6 519 Myth 1/4 10 509 Hero 2/6 522 Myth 2/4","tags":["wow","dragonflight"]},{"location":"521/index.html#season-rewards","title":"Season rewards","text":"<ul> <li>Completing all awakened raids for each difficulty</li> </ul> <p>Complete all awakened raids</p>","tags":["wow","dragonflight"]},{"location":"521/index.html#see-also","title":"See also","text":"<ul> <li>Season 4 M+ overview</li> </ul>","tags":["wow","dragonflight"]},{"location":"522/index.html","title":"Knut mobile app workflow","text":"","tags":["knut","mobile"]},{"location":"522/index.html#initial-opening","title":"Initial opening","text":"<p>User opens app with nothing in it.</p>","tags":["knut","mobile"]},{"location":"523/index.html","title":"Place: Huckleberry ridge conservatory","text":"<p>State forest area in Missouri that allows for dispersed camping. Closes at 10:00pm. My guess is so other campers do not disturb other campers if they are there. There is dispersed camping in designated spots</p>","tags":["place"]},{"location":"524/index.html","title":"Caddo national grasslands","text":"<ul> <li> <p>Hunting 2 Campgrounds, West Lake Davy Crockett Campground and Bois D\u2019 Arc Trailhead Campground.</p> </li> <li> <p>Planned fires</p> </li> </ul>","tags":["camping"]},{"location":"525/index.html","title":"Primitive Camping in Texas","text":""},{"location":"525/index.html#primitive","title":"Primitive","text":"<ul> <li>Davy Crockett National Forest</li> </ul>"},{"location":"525/index.html#see-also","title":"See also","text":"<ul> <li>Hunting season</li> <li>maps</li> <li>Planned fires</li> </ul>"},{"location":"526/index.html","title":"Davy Crockett National Forest camping","text":"<p>Main website is at https://www.fs.usda.gov/detail/texas/about-forest/districts/?cid=fswdev3_008441</p> <p>Dispersed camping is permitted in most parts of the National Forest year round, but is restricted to 20 designated hunter camps during the fall deer season to provide a safer hunting experience. A map of these camps is available at the ranger district office in early September.</p>","tags":["camping"]},{"location":"527/index.html","title":"Mill city running group","text":"<p>Mill City Running is a shoe store that also has a good community of runners around it. They have 2 locations. The Minneapolis one is the main one at Mill City Running, 411 E Hennepin Ave, Minneapolis, MN 55414, USA. The Saint City Running, 767 Cleveland Ave S, St Paul, MN 55116, USA.</p> <p>They host a couple of events weekly. One of them is at Mill City Running every Tuesday at 6pm. From work I only need like 30 minutes to find my car, drive there, and change.</p>"},{"location":"528/index.html","title":"Sourdough batard with purple prairie barley","text":"<p>An experiment where I use barley in place of some of the whole wheat flour. In this case the variety of barley used is purple prairie barley.</p> Ingredient Amount Bakers Percentage Comment AP flour 240g 60% King Author 11.7% protein Whole wheat flour 80g 20% Hard red wheat Barley flour 80g 20% Purple Prairie barley flour Barley berries 100g 20% Purple Prairie barley berries Water 275g 68% starter 40g 10% 100% rye 1:1 sea salt 8g <p>Total weight is 850g</p>","tags":["baking","sourdough","bread"]},{"location":"528/index.html#key-events","title":"Key events","text":"<ul> <li>2024-04-14 10:30 Made starter</li> <li>2024-04-14 16:00 Autolyse</li> <li>2024-04-14 17:45 Mix</li> <li>2024-04-15 01:00 Placed into the fridge</li> </ul> <p>I put a little bit of olive oil on it to prevent it from drying</p> <ul> <li>2024-04-15 11:00 Shaped and pulled out of the fridge</li> <li>2024-04-15 12:50 Baked</li> </ul> <p>475f for 30m and an additional 10m with the lid off. I put the dutch over on top of a cast iron skillet.</p>","tags":["baking","sourdough","bread"]},{"location":"528/index.html#see-also","title":"See also","text":"<ul> <li>baking index</li> </ul>","tags":["baking","sourdough","bread"]},{"location":"529/index.html","title":"Monday April 15 2024 daily entry","text":"<ul> <li>Mostly played Plunderstorm in the morning. Decided it is not the effort of 40 hours to get the transmog.</li> <li>Made a loaf of bread</li> <li>Updated tabs for the Outback</li> </ul>","tags":["daily"]},{"location":"53/index.html","title":"Gold and black armor for dragon riding mounts","text":"<p>The armor is for Wylderdrake, Renewed Proto-Drake, and Highland Drake.  It can be purchased at the Obsidian Citadel.</p> <p>Required items:</p> <ul> <li>Draconium Ore</li> <li>Primal Bear Spine</li> <li>750 DragonIsles Supplies</li> </ul>"},{"location":"530/index.html","title":"My tmux setup","text":"<ul> <li>Copy and paste the content from <code>github.com/jlrickert/dotfiles/blob/main/home/dot_tmux.conf</code></li> <li>Setup TPM</li> </ul> <p>Install by running <code>git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm</code>. Then run <code>Ctrl-A + I</code>.</p> <ul> <li>Install fonts</li> </ul> <p>[ ] TODO: Figure out how I installed fonts</p>"},{"location":"531/index.html","title":"How do document php code","text":"<p>The document strings attached php code blocks such as classes, functions, and variables are called doc blocks. See the [documentation] and [manual] for more information.</p> <p>manual [document]: https://docs.phpdoc.org/guide/guides/docblocks.html</p>","tags":["php"]},{"location":"531/index.html#see-also","title":"See also","text":"<ul> <li>manual</li> </ul>","tags":["php"]},{"location":"532/index.html","title":"Manage virtual machines with QEMU","text":"","tags":["qemu","linux","macosx","virtualisation"]},{"location":"533/index.html","title":"Nodejs ecosystem support on freebsd","text":"<p>Much of the nodejs ecosystem on freebsd doesn\u2019t seem to run right.</p> <p>Here are some of the things that didn\u2019t seem to run:</p> <ul> <li>pnpm</li> <li>vitest</li> </ul>"},{"location":"534/index.html","title":"Database data management for MySQL with Navicat","text":"<ul> <li>For a GUI use Navicat.</li> </ul>"},{"location":"534/index.html#steps-to-copy-over-data-from-another-database","title":"Steps to copy over data from another database","text":"<p>WARNING!!! Make sure you don\u2019t overwrite the wrong target.</p> <ul> <li>Create the connection to the 2 databases</li> <li>Have the tables list from the source database</li> <li>Highlight and copy the tables and copy to past buffer</li> <li>Go to the target database and paste over</li> </ul> <p>This should open up a wizard to configure what you want to copy over</p>"},{"location":"534/index.html#backing-up-data","title":"Backing up data","text":"<p>There are 2 methods that Navicat gives you. One is through an SQL dump, and the other is Backup feature part of Navicat.</p> <ul> <li>SQL Method</li> </ul> <p>The SQL dump is more compatible. To make right click the database you want to back up and select Dump SQL File. Save to some file. This can then be used to restore. Something to note: freakin slow to restore. Like hours.</p> <ul> <li>Navicat Backup</li> </ul> <p>The other method is the Backup features. This makes a backup on you local machine. To backup do the thing.</p>"},{"location":"535/index.html","title":"How to mount a sambda drive on macosx CLI","text":"<p>To mount use something like this. This is incomplete.</p> <pre><code>mount -t smbfs //devel@10.1.0.84/share /Volumes/share\n</code></pre> <p>Open up the share in finder. This will open up the share in Finder.app. This</p> <pre><code>open 'smb://username@hostname/share'\n</code></pre>","tags":["sambda","macosx"]},{"location":"536/index.html","title":"Tips for adding TypeScript to legacy JavaScript code bases","text":"<p>To enable TypeScript to check JavaScript files it is as simple as adding a <code>tsconfig.json</code> with checking JavaScript enabled.</p> <p>Here is an example minimal configuration:</p> <pre><code>{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n  \"compilerOptions\": {\n    \"allowJs\": true,\n    \"checkJs\": true,\n    \"lib\": [\"es2015\", \"dom\"],\n  },\n}\n</code></pre> <p><code>allowJs</code> and <code>checkJs</code> are the heavy hitters here.</p> <p>Sometimes JavaScript scripts are included in the browser where some variables are include (no to be confused with JavaScript modules) variables globally. This could be things like jQuery or some generated script by PHP that you would like to add typing to. My typical approach is to create a <code>global.d.ts</code> (name can be anything as long as it has a <code>.d.ts</code>suffix). Lets say some top level variables are declared. Here is an example:</p> <pre><code>declare const VariableA: boolean;\ndeclare const VariableB: string;\n</code></pre> <p>The <code>global.d.ts</code> needs to be added to the <code>includes</code> list in <code>tsconfig.json</code> file</p>","tags":["typescript"]},{"location":"537/index.html","title":"How to setup fira code fonts on windows","text":"<p>Personally, I like the fira code fonts from nerd fonts. This includes all the fancy powerline symbols. To install make sure that there is no existing fira code packages. Install Fira Code Regular Nerd Font Complete with the build in windows font thing. To configure applications use the string <code>FiraCode Nerd Font</code></p>"},{"location":"538/index.html","title":"CSS selectors and combinators","text":"<p>Selectors are the thing that tells when nodes to grab and apply styles too.</p> <p>Separators:</p> <ul> <li>descendant: <code>&lt;SPACE&gt;</code></li> <li>child: <code>&gt;</code></li> <li>subsequent: <code>~</code></li> <li>grouping: <code>,</code></li> <li>siblings: <code>+</code></li> </ul> <p>Groups multiple selectors to apply styles too.</p>","tags":["css"]},{"location":"538/index.html#see-also","title":"See also","text":"<ul> <li>mdn docs</li> </ul>","tags":["css"]},{"location":"539/index.html","title":"Cross compatibility with Windows Explorer zip files","text":"<p>Windows explorer has a built in features to create zip files. Windows uses 7-zip which is different that the one that macosx uses. To work around this issue brew has the p7zip package.</p> <p>To install run:</p> <pre><code>brew install p7zip\n</code></pre> <p>To extract run something like:</p> <pre><code>7z e some-zip-file.zip\n</code></pre> <p>This extracts all contents of the <code>some-zip-file.zip</code> into the current working directory.</p>"},{"location":"539/index.html#7z-commands","title":"7z commands","text":"<ul> <li>a:: Add</li> <li>d:: Delete</li> <li>e:: Extract</li> <li>l:: List</li> <li>t:: Test</li> <li>u:: Update</li> <li>x:: extract with full paths</li> </ul>"},{"location":"54/index.html","title":"Broodkeeper diurna boss fight","text":"<p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"540/index.html","title":"Traditional Italian Easter bread","text":"<p>Summary from the website:</p> <p>Dough needs to rise 3x. First rise is without butter. Should take like 2 hours. There is another rise with butter for an additional hour or 2.</p> <p>This recipe tastes a lot like a biscuit.</p>","tags":["baking","bread"]},{"location":"540/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Comment AP FLour 240g King Authors 11.7% protein Sugar 32g Dry yeast 5g 2 eggs Large eggs butter 114g FF Milk 60g Salt 4g","tags":["baking","bread"]},{"location":"540/index.html#key-events","title":"Key events","text":"<ul> <li>2024-05-04 16:00 Mixed Ingredients</li> </ul> <p>Mixed all the Ingredients. Roughly every 30 minutes I did some more kneading. This differs from the instructions. I was using the same strategy as the uzbek lepyoshki.</p> <ul> <li>2024-05-04 19:00 Baked</li> </ul> <p>Waited roughly 3 hours before baking at 390 for 20 minutes</p>","tags":["baking","bread"]},{"location":"540/index.html#see-also","title":"See also","text":"<ul> <li>Original recipe</li> </ul>","tags":["baking","bread"]},{"location":"541/index.html","title":"Bootstrap 3 tips and tricks","text":"","tags":["css","frontend","webdev"]},{"location":"542/index.html","title":"How is width calculated within CSS","text":"<p>Valid values:</p> <ul> <li>percentage:: width of the calculated value of parent</li> <li>fixed with:: set width to a fixed width. Valid units and values include: px, svi, svw, rcap,vmax, vmin, cqmax, cqmin</li> <li>auto</li> <li>initial</li> <li>inherit</li> <li>fit-content</li> <li>max-content</li> <li>min-content</li> </ul>"},{"location":"543/index.html","title":"PHP awesome list","text":"<p>All the cool links and resources to all things PHP</p> <ul> <li>https://github.com/PHPCSStandards/PHP_CodeSniffer/</li> </ul> <p>PHP coding standard violation detector</p>"},{"location":"544/index.html","title":"Git gutter issues in Phpstorm based editor when using SMB protocol","text":"<p>I ran into an issue where git wasn\u2019t working in Phpstorm. Running the following fixed it for me</p> <pre><code>git config --global --add safe.directory '%(prefix)///server.int.jlrickert.me/www/webroot/devel/project'\n</code></pre>","tags":["editor","git","programming"]},{"location":"545/index.html","title":"How to swap caps lock on windows","text":"<p>The easiest method is the key mapper with power toyz</p> <p>Swap caps lock with escape</p> <ul> <li> TODO: Find a regex hack for swapping caps lock with escape</li> </ul> <p>Swap caps lock with ctrl (have not tried yet)</p> <pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout]\n\"Scancode Map\"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00\n</code></pre> <p>An unofficial explanation can be found at https://www.howtogeek.com/713/disable-caps-lock-key-in-windows/.</p>","tags":["workstation","windows"]},{"location":"546/index.html","title":"My preferred intellij settings","text":"","tags":["workstation","intellij"]},{"location":"546/index.html#keybindings","title":"Keybindings","text":"<p>On mac I use the macOS keybindings. On windows I customize the VSCode one.</p> <ul> <li>Down:: Ctrl-n</li> <li>Up:: Ctrl-p</li> </ul>","tags":["workstation","intellij"]},{"location":"547/index.html","title":"CSS image sizing strategies","text":"<ul> <li> <p>Force image into a box that keeps aspect ratio where</p> </li> <li> <p><code>object-fit</code></p> </li> </ul>","tags":["css"]},{"location":"547/index.html#full-width-limited-height-ok-with-image-cutoff","title":"Full width, limited height, OK with image cutoff","text":"<p>Facts:</p> <ul> <li>Don\u2019t know the size of the image.</li> <li>Image should be the full width of the viewport</li> <li>Image should remain in a good aspect ratio</li> <li>Don\u2019t care if the image gets cutoff</li> </ul> <pre><code>&lt;div class=\"container\"&gt;\n  &lt;a&gt;&lt;img /&gt;&lt;/&gt;\n  &lt;div class=\"block.bottomleft\"&gt;&lt;p&gt;some content&lt;/p&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>.container {\n  position: relative;\n  width: 100%;\n}\n.container img {\n  width: 100%;\n  height: auto;\n  max-height: 400px;\n  object-fit: cover;\n}\n.container .block {\n  position: absolute;\n  padding: 10px\n  left: 0;\n  top: 0;\n}\n.container .block.bottomleft {\n  top: unset;\n  right: unset;\n  padding: 5px;\n  margin: 5%; /* keeps distance from edges a minimum of 20px */\n}\n</code></pre>","tags":["css"]},{"location":"548/index.html","title":"<code>nmap</code> installation on macOSX","text":"<p><code>nmap</code> can be installed with brew. Run <code>brew install nmap</code></p> <p>The installation mentioned the following caveat:</p> <p>If using <code>ndiff</code> returns an error about not being able to import the ndiff module, try: <code>chmod go-w /opt/homebrew/Cellar</code></p>","tags":["macosx"]},{"location":"549/index.html","title":"MariaDB SQL cheat sheet","text":"<p>INNER join</p> <p>I am writing an SQL script to update a table in MariaDB. I have 2 tables. A products table, and an products file table. There is a one to many relationship between a product and a product file. Currently, most products have a pdf file \u201cxyz.pdf\u201d. I would like to have all products to have that file \u201cxyz.pdf\u201d. No product should have duplicates of that file.</p> <pre><code>INSERT INTO products_files_copy1 ( products_id, file, file_title, sort_order ) ( SELECT products_id, \"87646%20Brixon%20Product%20Info%20Package.pdf\", \"Product Info\", 1 FROM `products` )\nON DUPLICATE KEY UPDATE file = \"87646%20Brixon%20Product%20Info%20Package.pdf\";\n</code></pre>"},{"location":"550/index.html","title":"First exploration into Nix","text":"<p>Loosely following the guide from https://github.com/ALT-F4-LLC/kickstart.nix?tab=readme-ov-file#setup-macos not sure what it actually is.</p> <p>Concepts to learn</p> <ul> <li>flakes</li> </ul> <p>Allows version pinning within a lock file</p> <ul> <li>Nix-command</li> <li>/etc/synthetic.conf</li> </ul> <p>Some mac thing for mounts. Need to explore more</p> <p>Ran <code>sh &lt;(curl -L https://nixos.org/nix/install)</code>. I didn\u2019t put in the <code>--daemon</code> options so I had to figure out how to uninstall</p> <p>This ran an interactive prompt. Here is what it will do:</p> <ul> <li>create system users 302 through 332 and group 30000. Options to tweak using <code>NIX_FIRST_BUILD_UID</code>.</li> <li>Configure my shell</li> </ul>","tags":["cli"]},{"location":"551/index.html","title":"Managing neovim versions with brew","text":"<ul> <li>brew install neovim</li> <li>brew install neovim@0.9.5</li> </ul>","tags":["neovim","macosx"]},{"location":"552/index.html","title":"Managing disks on MacOS","text":"<p>Use <code>diskinfo</code></p> <p>File of interest</p> <ul> <li><code>/etc/fstab</code></li> <li><code>/etc/synthetic.conf</code></li> </ul>","tags":["macosx","workstation"]},{"location":"552/index.html#tracking-down-processes-that-have-a-file-open","title":"Tracking down processes that have a file open","text":"<p>An example where I had a few processes held a network drive open so I could not close it</p> <pre><code>fuser /Volumes/jlrickert/\nps -fp 42056 43368 43375 4337\n</code></pre>","tags":["macosx","workstation"]},{"location":"553/index.html","title":"In search of a configuration and data exchange language","text":"<p>Currently, YAML has been the choice for a configuration language as it is the most popular. However, it has issues with ambiguous data types and indentation is significant. Other alternatives are JSON, TOML, XML, and KDL.</p> <p>Here are the problems for each one</p> <ul> <li>JSON</li> </ul> <p>Overly strict and no comments</p> <ul> <li>TOML</li> </ul> <p>Doesn\u2019t handle nesting very well</p> <ul> <li>XML</li> </ul> <p>Overly enterprisey and verbose</p> <ul> <li>KDL</li> </ul> <p>Overly new and lack of support</p>"},{"location":"554/index.html","title":"Known standards","text":"<p>Numbers and decimals</p> Name Standard Comment f32 IEEE 754 f64 IEEE 754 decimal64 IEEE 754-2008 decimal128 IEEE 754-2008 <p>Other standards</p> Name Standard Comment date-time ISO8601 date/time format time ISO8601 \u201cTime\u201d section of ISO8601 date ISO8601 \u201cDate\u201d section of ISO8601 duration ISO8601 duration format decimal IEEE 754-2008 decimal string format currency ISO 4217 currency code country-2 ISO 3166-1 alpha-2 country code country-3 ISO 3166-1 alpha-3 country code country-subdivision ISO 3166-2 country subdivision code email RFC5322 email address idn-email RFC6531 internationalized email address hostname RFC1132 internet hostname (only ASCII segments) idn-hostname RFC5890 internationalized internet hostname (only xn\u2014prefixed ASCII \u201cpunycode\u201d segments, or non-ASCII segments) ipv4 RFC2673 dotted-quad IPv4 address ipv6 RFC2373 IPv6 address url RFC3986 URI url-reference RFC3986 URI Reference irl RFC3987 Internationlized Resource Identifier irl-reference RFC3987 Internationlized Resource Identifier Reference url-template RFC6570 URI Template uuid RFC4122 UUID regex N/A Regular expression. Specific patterns may be implementation-dependent base64 N/A A Base64-encoded string, denoting arbitrary binary data","tags":["standards"]},{"location":"555/index.html","title":"GitHub action using nix","text":"<p>From the ALTF4Stream. Made some comment about not being fan of non deterministic something something. May have reversed something.</p> <ul> <li><code>cachix/install-nix-action</code> is the thing in question that should be used.</li> <li>setting up binary caching is almost a month</li> </ul>"},{"location":"556/index.html","title":"Git clients","text":"","tags":["cli"]},{"location":"556/index.html#gui-based","title":"Gui based","text":"<ul> <li>GitKraken</li> </ul> <p>The one that cmgrifing is using.</p>","tags":["cli"]},{"location":"556/index.html#tui-based","title":"Tui based","text":"<ul> <li><code>lazygit</code></li> </ul> <p>Most popular</p> <ul> <li>tig</li> </ul>","tags":["cli"]},{"location":"557/index.html","title":"Person: cmgriffing the streamer","text":"<ul> <li>Developer for vexilla, a feature flagging service.</li> <li>sister on twitch is drcagster</li> </ul>","tags":["person","streamer"]},{"location":"557/index.html#links","title":"Links","text":"<ul> <li>https://www.linkedin.com/in/cmgriffing/</li> </ul>","tags":["person","streamer"]},{"location":"558/index.html","title":"Basic sourdough batard","text":"Ingredient Amount Bakers Percentage Comment AP flour 282g 62.6% King Author 11.7% protein Whole wheat flour 168g 37.3% Hard red wheat berries Water 275g 61.1% starter 50g 11.1% 100% rye 1:1 <p>Total weight is roughly 810g.</p>","tags":["bread","sourdough","baking"]},{"location":"558/index.html#key-events","title":"Key events","text":"<ul> <li>2024-05-19 11:00 Fed starter</li> <li>2024-05-19 14:37 Mixed ingredients</li> <li>2024-05-19 11:00 Placed in fridge</li> <li>2024-05-20 10:13 Baked</li> </ul> <p>Preheated to 475f for 30m with the Dutch Oven with the lid off. I spritzed it with water when I put the loaf of bread in the oven. 475f for 20m with the Lid on. Then 475f for 25m with the lid off.</p> <p></p>","tags":["bread","sourdough","baking"]},{"location":"558/index.html#see-also","title":"See also","text":"<ul> <li>Sourdough batard</li> </ul>","tags":["bread","sourdough","baking"]},{"location":"559/index.html","title":"Case of using webp over png","text":"<p>Ran into a situation where a large image was taking forever to load on a web page. I converted it over to webp using a free tool that someone has hosted up on heroku. Big difference. Like 10th of the size with no noticeable loss in quality. The app can be found on https://nsspot.herokuapp.com/imagetowebp/.</p>","tags":["webdev"]},{"location":"56/index.html","title":"Interesting things that I ran into when researching neovim as an ide","text":"<ul> <li>null-ls setup</li> <li></li> <li></li> <li></li> <li></li> </ul>"},{"location":"560/index.html","title":"Local network machine IP address discovery protocols","text":"<p>Zeroconf / Bonjour</p> <p>This will broadcast its dns name using mDNS. For example, if a PC is named jlrickert-xps it will register its dns on the local system as jlrickert-xpx.local</p> <pre><code>nmap -sn 192.168.1.0/24\narp -an\n</code></pre>"},{"location":"561/index.html","title":"Bake: Memorial Day Weekend focaccia 2024","text":"<p>Made this for a lunch snack during Memorial Day weekend 2024.</p>","tags":["baking","sourdough"]},{"location":"561/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 500g bread flour Water 400g starter 100g salt 13g <p>Total weight is 1000g</p>","tags":["baking","sourdough"]},{"location":"561/index.html#time-log","title":"Time log","text":"<ul> <li>2024-05-23 12:56 mixed starter</li> <li>2024-05-23 11:00 mixed</li> <li>2024-05-23 08:10 in the fridge</li> <li>2024-05-25 10:00 Baked</li> </ul> <p>Took around 30 minutes at 450f. The dried tomatoes burned. Fresh are a must.</p>","tags":["baking","sourdough"]},{"location":"562/index.html","title":"FreeBSD for homelab exploration","text":"<p>FreeBSD has been installed using new enough version of Ventoy. It should be noted that <code>disc1.iso</code> should be used as the ISO to use for installation. The usb ones do not work.</p> <p>FreeBSD has been installed using ventoy. It should be noted that <code>disc1.iso</code> should be used as the ISO to use for installation.</p> <p>Install core DNS for an authoritative DNS</p>","tags":["freebsd","homelab"]},{"location":"562/index.html#log","title":"Log","text":"<ul> <li><code>pkg update &amp;&amp; pkg install curl fzf git nvim ripgrep starship sudo rsync wget zellij zsh</code></li> <li>Interactively add user with <code>adduser</code></li> </ul> <p>Set shell to zsh and add wheel user</p> <ul> <li>setup sudo with <code>visudo</code>. Allow <code>wheel</code> group</li> <li>sudo ntpdate -v -b in.pool.ntp.org</li> <li><code>sudo /etc/periodic/weekly/310.locate</code></li> <li>Install oh my zsh</li> </ul> <p><code>sh   scp ~/.zshenv ts140:~/.zshenv   scp ~/.zshrc ts140:~/.zshrc   ssh ts140 \"cd ~/.local/share &amp;&amp; git clone https://github.com/ohmyzsh/ohmyzsh.git oh-my-zsh\"   ssh ts140 \"mkdir -p ~/.config/nvim\"   scp -r ~/.config/nvim/ ts140:.config/nvim</code></p> <ul> <li>install node</li> </ul> <p><code>bash   sudo pkg install node npm   mkdir -p ~/.local/share/npm-global   npm config set prefix '~/.local/share/npm-global'</code></p> <ul> <li>static routing setup</li> </ul> <p><code>sudo sysrc defaultrouter=\"10.10.0.1\"   sudo systrc ifconfig_em0=\"inet 10.10.20.81 netmask 255.255.0.0\"   echo \"nameserver 127.0.0.1\" | sudo tee /etc/resolve.conf   sudo route add default 10.10.0.1</code></p> <ul> <li>node setup</li> </ul> <p>I attempted to use <code>fnm</code>. However, it was complaining about not being able to find x86 binary node</p> <p><code>sudo pkg install npm node   mkdir -p ~/.local/share/npm-global   npm config set prefix '~/.local/share/npm-global'</code></p> <ul> <li><code>pkg install coredns</code></li> </ul> <p>This installs coredns version 1.11.2_3</p>","tags":["freebsd","homelab"]},{"location":"562/index.html#coredns","title":"CoreDNS","text":"<ul> <li><code>/usr/local/etc/coredns/Corefile</code></li> </ul> <p>```txt   int.jlrickert.me {       reload       log       errors       health       file int.jlrickert.me-zone.txt   }</p> <p>int.ecreativeworks.com {       reload       log       errors       health       file int.ecreativeworks.com-zone.txt   }</p> <p>. {       forward . 8.8.8.8       log       errors       health       cache   }   ```</p> <ul> <li><code>/usr/local/etc/coredns/int.jlrickert.me-zone.txt</code></li> </ul> <p><code>txt     $TTL    3600     $ORIGIN int.jlrickert.me.     @                    IN  SOA   ns.int.jlrickert.me. admin.jlrickert.me. (                                                    2019121301 ; serial                                                    1d ; refresh                                                    2h ; retry                                                    4w ; expire                                                    1h ; nxdomain ttl                                                   )                          IN  NS     ns.int.jlrickert.me.     @                    IN  A      192.168.1.12     *                    IN  A      192.168.1.12     @                    IN  A      10.10.100.12     *                    IN  A      10.10.100.12     php81                IN  A      192.168.0.81     php74                IN  A      192.168.0.74     php71                IN  A      192.168.0.71     mbp                  IN  A      192.168.1.8     xps                  IN  A      192.168.1.10     ts140                IN  A      192.168.1.12</code></p> <ul> <li><code>/usr/local/etc/coredns/int.ecreativeworks.com-zone.txt</code></li> </ul> <p><code>txt   $TTL    3600   $ORIGIN int.ecreativeworks.com.   @                    IN  SOA   ns.int.ecreativeworks.com. jaredr.ecreative.com. (                                                  2019121301 ; serial                                                  1d ; refresh                                                  2h ; retry                                                  4w ; expire                                                  1h ; nxdomain ttl                                                 )                        IN  NS     ns.int.ecreativeworks.com.   @                    IN  CNAME  ns.int.jlrickert.me   jared81              IN  CNAME  php81.int.jlrickert.me   jared74              IN  CNAME  php74.int.jlrickert.me   jared71              IN  CNAME  php71.int.jlrickert.me</code></p>","tags":["freebsd","homelab"]},{"location":"562/index.html#see-also","title":"See also","text":"<ul> <li>Homelab setup</li> <li>bindzone file RTFM</li> </ul>","tags":["freebsd","homelab"]},{"location":"563/index.html","title":"Hardware: Think Server 140 (ts140)","text":"<p>Server that I got as a present long ago. A common nickname that I use for it is ts140.</p>","tags":["lenovo","personal","hardware","homelab"]},{"location":"563/index.html#hardware","title":"Hardware","text":"<ul> <li>E3-1246 v3 CPU</li> <li>32Gb ECC memory</li> <li>I217 network driver | This one is built into the mother board</li> <li>I350-GE-2T-X4 network card (2 RJ-45) | external card</li> <li>1TB SDD (540MB/s)</li> </ul>","tags":["lenovo","personal","hardware","homelab"]},{"location":"563/index.html#see-also","title":"See also","text":"<ul> <li> <p>https://download.lenovo.com/ibmdl/pub/pc/pccbbs/thinkservers/ts140hmm_en.pdf</p> </li> <li> <p>1 PCIe 3.0 x16</p> </li> <li>1 PCIe 2.0 x1</li> <li>1 PCIe 2.0 x16</li> <li> <p>1 PCI 2.3</p> </li> <li> <p>https://psref.lenovo.com/syspool/Sys/PDF/ThinkServer/ThinkServer_TS140/ThinkServer_TS140_Spec.PDF</p> </li> </ul>","tags":["lenovo","personal","hardware","homelab"]},{"location":"563/index.html#upgrade-ability","title":"Upgrade ability","text":"<ul> <li>Room for 3 more SSD cards. 1 in a 3.5 SSD slot. Need to figure out how to mount the other 2. There is a 5.25 slot.</li> </ul>","tags":["lenovo","personal","hardware","homelab"]},{"location":"563/index.html#see-also_1","title":"See also","text":"<ul> <li>Hardware dump</li> </ul>","tags":["lenovo","personal","hardware","homelab"]},{"location":"564/index.html","title":"Hardware: Dell XPS 9710","text":"<p>Laptop that I purchased on 2021-10-24.</p> <p>Known issues:</p> <ul> <li>track pad sucks</li> <li>Displays don\u2019t always register well when using razer docking station</li> <li>4k screen is nice but I wouldn\u2019t do it again.</li> <li>Screen takes excessive power.</li> </ul> <p>Unstable when running intensive apps and screen is on. I usually have the display turned off if I am not using it. Multiple hard drive corruptions due to BSOD.</p>","tags":["dell","personal","hardware","thunderbolt"]},{"location":"565/index.html","title":"Improving CLS with blocking font loading","text":"<p>While working on improving page loading performance I ran into an issue where fonts where cause a large amount of cumulative layout shift. What I discovered was that changing <code>font-display</code> to <code>block</code> rather than <code>swap</code> significantly reduced it. The only downside was that it introduced a 60ms blocking to on the webpage.</p> <p>Here where my results:</p> Value Performance score FCP LCP TBT CLS block 87 2.1s 3.6s 50ms 0.023 swap 76 2.4s 3.6s 0ms 0.217 <p>Here is my results when throttling:</p> Value Performance score FCP LCP TBT CLS block 87 2.1s 3.6s 50ms 0.023 swap 76 2.4s 3.6s 0ms 0.217 <p>This data was gathered using lighthouse on chrome.</p> <p>For example, with swap there was a 0.023 This was all done using lighthouse and chrome.</p> <p>This is an entry that I have in my <code>stylesheet.css</code> \u2013 the font is a fake font.</p> <pre><code>@font-face {\n  font-family: \"Cool Font Text\";\n  src: url(\"../fonts/My Cool Font.ttf\") format(\"truetype\");\n  font-display: block;\n}\n</code></pre> <p>Anything that I discovered was that CSS variables don\u2019t seem to work for setting the font-display. I am not sure why that would be the case. Here is an example.</p> <pre><code>:root {\n  --font-display-type: swap;\n}\n@font-face {\n  font-family: \"Cool Font Text\";\n  src: url(\"../fonts/My Cool Font.ttf\") format(\"truetype\");\n  font-display: var(--font-display-type);\n}\n</code></pre> <p>This would be more like if the <code>font-display</code> is set to block.</p>"},{"location":"565/index.html#see-also","title":"See also","text":"<ul> <li>How to add custom fonts</li> </ul>"},{"location":"566/index.html","title":"All things sudo","text":"","tags":["sysadmin","linux"]},{"location":"566/index.html#wheel-vs-sudo-group","title":"<code>wheel</code> vs <code>sudo</code> group","text":"<ul> <li>From https://tech.joellemena.com/linux/linux-wheel-group-vs-sudo/</li> </ul> <p>Wheel only grants access to <code>su</code> while <code>sudo</code> uses policies</p>","tags":["sysadmin","linux"]},{"location":"567/index.html","title":"VLAN overview","text":"<p>(Virtual area network)</p> <p>Separates local area network traffic</p> <ul> <li>trunk port</li> </ul> <p>Network port that routes traffic for multiple vlans</p> <ul> <li>tagged vlan</li> </ul> <p>Network port aware of port assigned too. A device connected needs to know what VLAN it is a part off.</p> <ul> <li>untagged vlan</li> </ul> <p>The default. Device assigned a vlan when plugged in by the port it is plugged into.</p> <ul> <li>tagged vs untagged vs Trunk port</li> <li>vlan tags and id</li> </ul> <p>ID header on frame</p> <ul> <li>Access port</li> <li>Trunk port</li> <li>bridge</li> <li> <p>switch</p> </li> <li> <p>router</p> </li> </ul> <p>Connects LAN\u2019s</p> <ul> <li>client isolation</li> </ul> <p>Prevents devices from connecting to other devices other than the internet</p> <ul> <li>port mirroring</li> </ul> <p>Allows for networks sniffing.</p>","tags":["networking","sysadmin"]},{"location":"568/index.html","title":"Research: buying Ethernet adapters for a PC or server","text":"<p>TLDR - buy newer Intel chipsets</p> <p>For 1G</p> <ul> <li>i350</li> </ul> <p>For 2.5G don\u2019t bother if you plan on going FreeBSD or Linux</p> <ul> <li>I226</li> <li>Maybe I225</li> </ul> <p>For 10G</p> <ul> <li>???</li> </ul>","tags":["research","hardware"]},{"location":"568/index.html#see-also","title":"See also","text":"<ul> <li>Really good guide</li> <li>Official compatibility</li> </ul>","tags":["research","hardware"]},{"location":"569/index.html","title":"Article: The disaster that is Copilot+ Recall","text":"<p>See https://doublepulsar.com/recall-stealing-everything-youve-ever-typed-or-viewed-on-your-own-windows-pc-is-now-possible-da3e12e9465e</p>","tags":["article","ai","microsoft"]},{"location":"57/index.html","title":"Top typing program out there","text":"<p>[Monkey type] is by far the best according to acorn1010. She was doing research on other typing games. She is making a typing game to put on foony.</p> <p>Monkey type acorn1010</p>"},{"location":"570/index.html","title":"KeePass is the only password manager resistant to Copilot+ Recall","text":"<p>Properly handles DRM Windows properly so passwords would not be leaked.</p> <p>Learned while listening to ChrisTitusTech on twitch.tv.</p>","tags":["security"]},{"location":"570/index.html#see-also","title":"See also","text":"<ul> <li>Twitch stream link</li> </ul>","tags":["security"]},{"location":"571/index.html","title":"Package management in Ubuntu","text":"","tags":["sysadmin","ubnutu"]},{"location":"571/index.html#cheat-sheet","title":"Cheat sheet","text":"Command Description apt-mark showmanual list of explicetly installed files","tags":["sysadmin","ubnutu"]},{"location":"572/index.html","title":"Package management in FreeBSD","text":"","tags":["freebsd","sysadmin"]},{"location":"572/index.html#cheat-sheet","title":"Cheat sheet","text":"Command Description","tags":["freebsd","sysadmin"]},{"location":"573/index.html","title":"Wireguard topologies","text":"<ul> <li>point</li> </ul> <p>A client</p> <ul> <li>site</li> </ul> <p>A router</p> <ul> <li> <p>hub</p> </li> <li> <p>???</p> </li> </ul>"},{"location":"573/index.html#see-also","title":"See also","text":"<ul> <li>wireguard topologies</li> <li>hub and spoke</li> <li>site to site</li> <li>point to point</li> </ul>"},{"location":"574/index.html","title":"Running FreeBSD VM on apple silicon with QEMU","text":"<p>I managed to get the virtual box image to run using UTM on MacOSX 14.4.1.</p> <p>UTM is a frontend for QEMU that I find works.</p> <p>Download a QEMU virtual machine image with the qcow format. I use the zfs variant for now. See file system recommendation</p> <p>Once installed it may be uncompressed with <code>unxz</code>. For example <code>unxz FreeBSD-14.1-RELEASE-arm64-aarch64-zfs.qcow2.xz</code>. Should also be able to emulate an x86 architecture as well.</p> <p>Settings</p> <ul> <li>network1: bridge mode</li> <li>drive1: VirtIO and select the qcow2 image and select the size</li> </ul> <p>This will create a copy of it and will not modify the image. This diffs from the behavior of VirtualBox. Set the image size to the size you want.</p> <p>I have not figured out a way to resize images yet if you run out of hard drive space.</p>","tags":["qemu","virtualization","macosx"]},{"location":"574/index.html#basic-setup","title":"Basic setup","text":"<pre><code>pkg update\npkg upgrade\npkg install zsh\nuseradd ## Interactively adds a user\n</code></pre>","tags":["qemu","virtualization","macosx"]},{"location":"574/index.html#see-also","title":"See also","text":"<ul> <li>Converting VDI to QCOW</li> <li>VirtualBox</li> </ul>","tags":["qemu","virtualization","macosx"]},{"location":"575/index.html","title":"File system recommendation for FreeBSD","text":"<ul> <li>ZFS on bare metal if you have ECC memory</li> <li>UFS ???</li> </ul>","tags":["freebsd","sysadmin"]},{"location":"576/index.html","title":"VirtualBox on apple silicon","text":"<p>VirtualBox is still very beta on apple silicon. Not production ready at all. A test build may be installed from there website at https://www.virtualbox.org/wiki/Testbuilds.</p>","tags":["macosx","virtualisation"]},{"location":"577/index.html","title":"Converting a VirtualBox VDI to a QEMU on MacOSX","text":"<p>With just installing UTM I wasn\u2019t able to select the <code>vdi</code> image. However, between installing the test version of [VirtualBox] and running a command to convert it to a RAW format. UTM was surprisingly able to open the <code>vdi</code> image.</p> <p>A test build of VirtualBox may be installed. From there you can use the cli tool to convert. For example:</p> <pre><code>VBoxManage clonemedium disk FreeBSD13.2_UFS.vdi ecwdev.img --format=raw\n</code></pre> <p>I got the idea from a blog post but seems to be outdated as the VBoxManage commands seem to have changed</p> <ul> <li> TODO: this doesn\u2019t seem right. I want <code>qcow</code> not <code>img</code></li> </ul>","tags":["macosx","virtualisation"]},{"location":"578/index.html","title":"Project: Current Homelab (homelab)","text":"<p>This is my own personal cloud that I have running on my own hardware.</p> <p>For an overview of how I have the networks setup see Network topology.</p> <p></p>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"578/index.html#hardware","title":"Hardware","text":"<ul> <li>Think Server 140 | ts140.int.jlrickert.me</li> </ul> <p>This is my TrueNas server. This supplies the storage to the   proxmox server.</p> <ul> <li>TP-Link BE550 | be550.int.jlrickert.me</li> </ul> <p>This is my router</p> <ul> <li> <p>Modem</p> </li> <li> <p>Trooper | trooper.int.jlrickert.me</p> </li> </ul> <p>This runs proxmox servers</p> <ul> <li>Beelink</li> </ul> <p>This is my router, DHCP, and firewall using opnsense.</p> <ul> <li>16 port unmanaged switch</li> </ul>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"578/index.html#personal-devices","title":"Personal devices","text":"<ul> <li>MBP</li> <li>XPS</li> <li>android phone</li> <li>android tablet</li> <li>smart TV</li> <li>google wiretap</li> </ul>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"578/index.html#planed-devices","title":"Planed devices","text":"<ul> <li>Pi 5 for dedicated pi hole</li> <li>3 machine k8s cluster (undecided on hardware)</li> <li>NAS box</li> <li>2.5GB switch</li> <li>WiFi upgrade</li> <li>Beelink EW12 N100 for pfsense (or opnsense) router</li> </ul>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"578/index.html#retired-hardware","title":"Retired hardware","text":"<ul> <li>Netgear R7000 | r7000.int.jlrickert.me</li> </ul> <p>Planning on using as an access point and switch</p>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"578/index.html#example-home-labs","title":"Example home labs","text":"<ul> <li>rwxrobs homelab</li> <li>Mischa van den Burg homelab</li> </ul>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"578/index.html#see-also","title":"See also","text":"<ul> <li>Task to build the homelab</li> <li>Homelab git repo</li> </ul> <p>Ansible scripts that I use to manage my infrastructure</p> <ul> <li>Marionette</li> </ul> <p>My old setup. I no longer use but keep around as a reference</p> <ul> <li>Common private networks</li> </ul>","tags":["homelab","sysadmin","devops","dns","pfsense","k8s","virtualisation"]},{"location":"579/index.html","title":"Hardware: Netgear R7000 router","text":"<p>Current router that I use at home</p> <p>http://www.routerlogin.net</p> <p>Link</p> <p></p>","tags":["hardware","homelab"]},{"location":"579/index.html#specs","title":"Specs","text":"<ul> <li>1.9 Gbps</li> <li>1800 to 2500 Square feet</li> <li>Wi-Fi Standards: 802.11a/b/g/n/ac</li> <li>Dual Band:</li> <li>2.4 GHz Band:<ul> <li>Up to 600 Mbps</li> </ul> </li> <li>5 GHz Band:<ul> <li>Up to 1300 Mbps</li> </ul> </li> </ul>","tags":["hardware","homelab"]},{"location":"58/index.html","title":"Skeuomorphism website design","text":"<p>Skeuomorphism is when the design counterparts resemble real world counter parts. According to acorn1010 One issue with this design approach can may the interface overly cluttered and overwhelming to the user for busy sites.</p>"},{"location":"580/index.html","title":"Think Server T140 hardware dump","text":"<p>26 decibals</p> <ul> <li>specifiation</li> </ul>","tags":["homelab","lenovo"]},{"location":"580/index.html#memory-upgrade","title":"Memory upgrade","text":"","tags":["homelab","lenovo"]},{"location":"580/index.html#hardware-dump","title":"Hardware dump","text":"<pre><code>think-server\n    description: Tower Computer\n    product: ThinkServer TS140 (LENOVO_PN_ThinkServer TS140)\n    vendor: LENOVO\n    version: 70A4000HUX\n    serial: MJ0377NU\n    width: 64 bits\n    capabilities: smbios-2.8 dmi-2.8 smp vsyscall32\n    configuration: administrator_password=disabled boot=normal chassis=tower family=To be filled by O.E.M. keyboard_password=enabled power-on_password=disabled sku=LENOVO_PN_ThinkServer TS140 uuid=9a133295-d384-e511-b046-6c0b846a2c32\n  *-core\n       description: Motherboard\n       product: ThinkServer TS140\n       vendor: LENOVO\n       physical id: 0\n       version: Not Defined\n       slot: To be filled by O.E.M.\n     *-firmware\n          description: BIOS\n          vendor: LENOVO\n          physical id: 0\n          version: FBKTB3AUS\n          date: 06/16/2015\n          size: 64KiB\n          capacity: 6656KiB\n          capabilities: pci upgrade shadowing cdboot bootselect socketedrom edd int13floppy1200 int13floppy720 int13floppy2880 int5printscreen int9keyboard int14serial int17printer acpi usb biosbootspecification uefi\n     *-cpu\n          description: CPU\n          product: Intel(R) Xeon(R) CPU E3-1246 v3 @ 3.50GHz\n          vendor: Intel Corp.\n          physical id: 3d\n          bus info: cpu@0\n          version: 6.60.3\n          slot: SOCKET 0\n          size: 2494MHz\n          capacity: 3900MHz\n          width: 64 bits\n          clock: 100MHz\n          capabilities: lm fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp x86-64 constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts md_clear flush_l1d cpufreq\n          configuration: cores=4 enabledcores=4 microcode=40 threads=8\n        *-cache:0\n             description: L2 cache\n             physical id: 3e\n             slot: CPU Internal L2\n             size: 1MiB\n             capacity: 1MiB\n             capabilities: internal write-back unified\n             configuration: level=2\n        *-cache:1\n             description: L1 cache\n             physical id: 3f\n             slot: CPU Internal L1\n             size: 256KiB\n             capacity: 256KiB\n             capabilities: internal write-back\n             configuration: level=1\n        *-cache:2\n             description: L3 cache\n             physical id: 40\n             slot: CPU Internal L3\n             size: 8MiB\n             capacity: 8MiB\n             capabilities: internal write-back unified\n             configuration: level=3\n     *-memory\n          description: System Memory\n          physical id: 41\n          slot: System board or motherboard\n          size: 8GiB\n          capabilities: ecc\n          configuration: errordetection=ecc\n        *-bank:0\n             description: DIMM [empty]\n             product: [Empty]\n             vendor: [Empty]\n             physical id: 0\n             serial: [Empty]\n             slot: DIMM1\n        *-bank:1\n             description: DIMM DDR3 Synchronous 1600 MHz (0.6 ns)\n             product: HMT451U7BFR8A-PB\n             vendor: Hynix/Hyundai\n             physical id: 1\n             serial: 7115E909\n             slot: DIMM2\n             size: 4GiB\n             width: 64 bits\n             clock: 1600MHz (0.6ns)\n        *-bank:2\n             description: DIMM [empty]\n             product: [Empty]\n             vendor: [Empty]\n             physical id: 2\n             serial: [Empty]\n             slot: DIMM3\n        *-bank:3\n             description: DIMM DDR3 Synchronous 1600 MHz (0.6 ns)\n             product: HMT451U7BFR8A-PB\n             vendor: Hynix/Hyundai\n             physical id: 3\n             serial: 707AD97E\n             slot: DIMM4\n             size: 4GiB\n             width: 64 bits\n             clock: 1600MHz (0.6ns)\n     *-pci\n          description: Host bridge\n          product: Xeon E3-1200 v3 Processor DRAM Controller\n          vendor: Intel Corporation\n          physical id: 100\n          bus info: pci@0000:00:00.0\n          version: 06\n          width: 32 bits\n          clock: 33MHz\n          configuration: driver=ie31200_edac\n          resources: irq:0\n        *-display\n             description: VGA compatible controller\n             product: Xeon E3-1200 v3 Processor Integrated Graphics Controller\n             vendor: Intel Corporation\n             physical id: 2\n             bus info: pci@0000:00:02.0\n             version: 06\n             width: 64 bits\n             clock: 33MHz\n             capabilities: msi pm vga_controller bus_master cap_list rom\n             configuration: driver=i915 latency=0\n             resources: irq:31 memory:f7800000-f7bfffff memory:e0000000-efffffff ioport:f000(size=64) memory:c0000-dffff\n        *-multimedia:0\n             description: Audio device\n             product: Xeon E3-1200 v3/4th Gen Core Processor HD Audio Controller\n             vendor: Intel Corporation\n             physical id: 3\n             bus info: pci@0000:00:03.0\n             logical name: card0\n             logical name: /dev/snd/controlC0\n             logical name: /dev/snd/hwC0D0\n             logical name: /dev/snd/pcmC0D10p\n             logical name: /dev/snd/pcmC0D3p\n             logical name: /dev/snd/pcmC0D7p\n             logical name: /dev/snd/pcmC0D8p\n             logical name: /dev/snd/pcmC0D9p\n             version: 06\n             width: 64 bits\n             clock: 33MHz\n             capabilities: pm msi pciexpress bus_master cap_list\n             configuration: driver=snd_hda_intel latency=0\n             resources: irq:33 memory:f7c34000-f7c37fff\n           *-input:0\n                product: HDA Intel HDMI HDMI/DP,pcm=3\n                physical id: 0\n                logical name: input3\n                logical name: /dev/input/event3\n           *-input:1\n                product: HDA Intel HDMI HDMI/DP,pcm=7\n                physical id: 1\n                logical name: input4\n                logical name: /dev/input/event4\n           *-input:2\n                product: HDA Intel HDMI HDMI/DP,pcm=8\n                physical id: 2\n                logical name: input5\n                logical name: /dev/input/event5\n           *-input:3\n                product: HDA Intel HDMI HDMI/DP,pcm=9\n                physical id: 3\n                logical name: input6\n                logical name: /dev/input/event6\n           *-input:4\n                product: HDA Intel HDMI HDMI/DP,pcm=10\n                physical id: 4\n                logical name: input7\n                logical name: /dev/input/event7\n        *-usb:0\n             description: USB controller\n             product: 8 Series/C220 Series Chipset Family USB xHCI\n             vendor: Intel Corporation\n             physical id: 14\n             bus info: pci@0000:00:14.0\n             version: 04\n             width: 64 bits\n             clock: 33MHz\n             capabilities: pm msi xhci bus_master cap_list\n             configuration: driver=xhci_hcd latency=0\n             resources: irq:29 memory:f7c20000-f7c2ffff\n           *-usbhost:0\n                product: xHCI Host Controller\n                vendor: Linux 5.15.0-60-generic xhci-hcd\n                physical id: 0\n                bus info: usb@3\n                logical name: usb3\n                version: 5.15\n                capabilities: usb-2.00\n                configuration: driver=hub slots=15 speed=480Mbit/s\n           *-usbhost:1\n                product: xHCI Host Controller\n                vendor: Linux 5.15.0-60-generic xhci-hcd\n                physical id: 1\n                bus info: usb@4\n                logical name: usb4\n                version: 5.15\n                capabilities: usb-3.00\n                configuration: driver=hub slots=6 speed=5000Mbit/s\n        *-communication:0\n             description: Communication controller\n             product: 8 Series/C220 Series Chipset Family MEI Controller #1\n             vendor: Intel Corporation\n             physical id: 16\n             bus info: pci@0000:00:16.0\n             version: 04\n             width: 64 bits\n             clock: 33MHz\n             capabilities: pm msi bus_master cap_list\n             configuration: driver=mei_me latency=0\n             resources: irq:32 memory:f7c40000-f7c4000f\n        *-communication:1\n             description: Serial controller\n             product: 8 Series/C220 Series Chipset Family KT Controller\n             vendor: Intel Corporation\n             physical id: 16.3\n             bus info: pci@0000:00:16.3\n             version: 04\n             width: 32 bits\n             clock: 66MHz\n             capabilities: pm msi 16550 cap_list\n             configuration: driver=serial latency=0\n             resources: irq:19 ioport:f0e0(size=8) memory:f7c3e000-f7c3efff\n        *-network\n             description: Ethernet interface\n             product: Ethernet Connection I217-LM\n             vendor: Intel Corporation\n             physical id: 19\n             bus info: pci@0000:00:19.0\n             logical name: eno1\n             version: 04\n             serial: 6c:0b:84:6a:2c:32\n             size: 1Gbit/s\n             capacity: 1Gbit/s\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pm msi bus_master cap_list ethernet physical tp 10bt 10bt-fd 100bt 100bt-fd 1000bt-fd autonegotiation\n             configuration: autonegotiation=on broadcast=yes driver=e1000e driverversion=5.15.0-60-generic duplex=full firmware=0.13-4 ip=192.168.1.11 latency=0 link=yes multicast=yes port=twisted pair speed=1Gbit/s\n             resources: irq:28 memory:f7c00000-f7c1ffff memory:f7c3d000-f7c3dfff ioport:f080(size=32)\n        *-usb:1\n             description: USB controller\n             product: 8 Series/C220 Series Chipset Family USB EHCI #2\n             vendor: Intel Corporation\n             physical id: 1a\n             bus info: pci@0000:00:1a.0\n             version: 04\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pm debug ehci bus_master cap_list\n             configuration: driver=ehci-pci latency=0\n             resources: irq:17 memory:f7c3c000-f7c3c3ff\n           *-usbhost\n                product: EHCI Host Controller\n                vendor: Linux 5.15.0-60-generic ehci_hcd\n                physical id: 1\n                bus info: usb@1\n                logical name: usb1\n                version: 5.15\n                capabilities: usb-2.00\n                configuration: driver=hub slots=3 speed=480Mbit/s\n              *-usb\n                   description: USB hub\n                   product: Integrated Rate Matching Hub\n                   vendor: Intel Corp.\n                   physical id: 1\n                   bus info: usb@1:1\n                   version: 0.04\n                   capabilities: usb-2.00\n                   configuration: driver=hub slots=6 speed=480Mbit/s\n        *-multimedia:1\n             description: Audio device\n             product: 8 Series/C220 Series Chipset High Definition Audio Controller\n             vendor: Intel Corporation\n             physical id: 1b\n             bus info: pci@0000:00:1b.0\n             logical name: card1\n             logical name: /dev/snd/controlC1\n             logical name: /dev/snd/hwC1D2\n             logical name: /dev/snd/pcmC1D0c\n             logical name: /dev/snd/pcmC1D0p\n             logical name: /dev/snd/pcmC1D2c\n             version: 04\n             width: 64 bits\n             clock: 33MHz\n             capabilities: pm msi pciexpress bus_master cap_list\n             configuration: driver=snd_hda_intel latency=0\n             resources: irq:34 memory:f7c30000-f7c33fff\n           *-input:0\n                product: HDA Intel PCH Line Out\n                physical id: 0\n                logical name: input10\n                logical name: /dev/input/event10\n           *-input:1\n                product: HDA Intel PCH Mic\n                physical id: 1\n                logical name: input8\n                logical name: /dev/input/event8\n           *-input:2\n                product: HDA Intel PCH Line\n                physical id: 2\n                logical name: input9\n                logical name: /dev/input/event9\n        *-pci:0\n             description: PCI bridge\n             product: 8 Series/C220 Series Chipset Family PCI Express Root Port #1\n             vendor: Intel Corporation\n             physical id: 1c\n             bus info: pci@0000:00:1c.0\n             version: d4\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci pciexpress msi pm normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:26\n        *-pci:1\n             description: PCI bridge\n             product: 8 Series/C220 Series Chipset Family PCI Express Root Port #4\n             vendor: Intel Corporation\n             physical id: 1c.3\n             bus info: pci@0000:00:1c.3\n             version: d4\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci pciexpress msi pm normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:27\n           *-pci\n                description: PCI bridge\n                product: IT8893E PCIe to PCI Bridge\n                vendor: Integrated Technology Express, Inc.\n                physical id: 0\n                bus info: pci@0000:02:00.0\n                version: 41\n                width: 32 bits\n                clock: 33MHz\n                capabilities: pci pm subtractive_decode bus_master cap_list\n        *-usb:2\n             description: USB controller\n             product: 8 Series/C220 Series Chipset Family USB EHCI #1\n             vendor: Intel Corporation\n             physical id: 1d\n             bus info: pci@0000:00:1d.0\n             version: 04\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pm debug ehci bus_master cap_list\n             configuration: driver=ehci-pci latency=0\n             resources: irq:23 memory:f7c3b000-f7c3b3ff\n           *-usbhost\n                product: EHCI Host Controller\n                vendor: Linux 5.15.0-60-generic ehci_hcd\n                physical id: 1\n                bus info: usb@2\n                logical name: usb2\n                version: 5.15\n                capabilities: usb-2.00\n                configuration: driver=hub slots=3 speed=480Mbit/s\n              *-usb\n                   description: USB hub\n                   product: Integrated Rate Matching Hub\n                   vendor: Intel Corp.\n                   physical id: 1\n                   bus info: usb@2:1\n                   version: 0.04\n                   capabilities: usb-2.00\n                   configuration: driver=hub slots=8 speed=480Mbit/s\n        *-isa\n             description: ISA bridge\n             product: C226 Series Chipset Family Server Advanced SKU LPC Controller\n             vendor: Intel Corporation\n             physical id: 1f\n             bus info: pci@0000:00:1f.0\n             version: 04\n             width: 32 bits\n             clock: 33MHz\n             capabilities: isa bus_master cap_list\n             configuration: driver=lpc_ich latency=0\n             resources: irq:0\n           *-pnp00:00\n                product: PnP device PNP0c02\n                physical id: 0\n                capabilities: pnp\n                configuration: driver=system\n           *-pnp00:01\n                product: PnP device PNP0b00\n                physical id: 1\n                capabilities: pnp\n                configuration: driver=rtc_cmos\n           *-pnp00:02\n                product: PnP device INT3f0d\n                physical id: 2\n                capabilities: pnp\n                configuration: driver=system\n           *-pnp00:03\n                product: PnP device PNP0c02\n                physical id: 3\n                capabilities: pnp\n                configuration: driver=system\n           *-pnp00:04\n                product: PnP device PNP0c02\n                physical id: 4\n                capabilities: pnp\n                configuration: driver=system\n           *-pnp00:05\n                product: PnP device PNP0c31\n                physical id: 5\n                capabilities: pnp\n                configuration: driver=tpm_tis\n           *-pnp00:06\n                product: PnP device PNP0c02\n                physical id: 6\n                capabilities: pnp\n                configuration: driver=system\n        *-sata\n             description: SATA controller\n             product: 8 Series/C220 Series Chipset Family 6-port SATA Controller 1 [AHCI mode]\n             vendor: Intel Corporation\n             physical id: 1f.2\n             bus info: pci@0000:00:1f.2\n             logical name: scsi0\n             logical name: scsi3\n             logical name: scsi4\n             version: 04\n             width: 32 bits\n             clock: 66MHz\n             capabilities: sata msi pm ahci_1.0 bus_master cap_list emulated\n             configuration: driver=ahci latency=0\n             resources: irq:30 ioport:f0d0(size=8) ioport:f0c0(size=4) ioport:f0b0(size=8) ioport:f0a0(size=4) ioport:f060(size=32) memory:f7c3a000-f7c3a7ff\n           *-disk:0\n                description: ATA Disk\n                product: WDC WD30EZRX-19D\n                vendor: Western Digital\n                physical id: 0\n                bus info: scsi@0:0.0.0\n                logical name: /dev/sda\n                version: 0A81\n                serial: WD-WMC4N0K2P23R\n                size: 2794GiB (3TB)\n                capabilities: gpt-1.00 partitioned partitioned:gpt\n                configuration: ansiversion=5 guid=8aa6630a-9dd4-4647-bd50-6b4ee44219fa logicalsectorsize=512 sectorsize=4096\n              *-volume:0 UNCLAIMED\n                   description: Windows FAT volume\n                   vendor: mkfs.fat\n                   physical id: 1\n                   bus info: scsi@0:0.0.0,1\n                   version: FAT32\n                   serial: 5f82-c0bd\n                   size: 1073MiB\n                   capacity: 1074MiB\n                   capabilities: boot fat initialized\n                   configuration: FATs=2 filesystem=fat\n              *-volume:1\n                   description: EXT4 volume\n                   vendor: Linux\n                   physical id: 2\n                   bus info: scsi@0:0.0.0,2\n                   logical name: /dev/sda2\n                   logical name: /boot\n                   version: 1.0\n                   serial: d80bc9f1-7bd5-4ee2-8aee-361a398386f9\n                   size: 2GiB\n                   capabilities: journaled extended_attributes large_files huge_files dir_nlink recover 64bit extents ext4 ext2 initialized\n                   configuration: created=2023-02-18 03:28:58 filesystem=ext4 lastmountpoint=/boot modified=2023-03-08 20:09:56 mount.fstype=ext4 mount.options=rw,relatime mounted=2023-03-08 20:09:56 state=mounted\n              *-volume:2\n                   description: EFI partition\n                   physical id: 3\n                   bus info: scsi@0:0.0.0,3\n                   logical name: /dev/sda3\n                   serial: zv2z1U-n2AB-yYX6-cND8-qsaz-Yduf-HINCjS\n                   size: 2791GiB\n                   capacity: 2791GiB\n                   capabilities: lvm2\n           *-disk:1\n                description: ATA Disk\n                product: Hitachi HTS54757\n                vendor: Hitachi\n                physical id: 1\n                bus info: scsi@3:0.0.0\n                logical name: /dev/sdb\n                version: A50A\n                serial: J1140021GBN27K\n                size: 698GiB (750GB)\n                capabilities: gpt-1.00 partitioned partitioned:gpt\n                configuration: ansiversion=5 guid=96bb7bcb-660e-4099-89a2-a107a5ac57c0 logicalsectorsize=512 sectorsize=4096\n              *-volume:0\n                   description: EFI partition\n                   physical id: 1\n                   bus info: scsi@3:0.0.0,1\n                   logical name: /dev/sdb1\n                   serial: 322385ea-974a-4b6e-84c4-2142699f4aae\n                   capacity: 1006KiB\n              *-volume:1\n                   description: Windows FAT volume\n                   vendor: mkfs.fat\n                   physical id: 2\n                   bus info: scsi@3:0.0.0,2\n                   logical name: /dev/sdb2\n                   version: FAT32\n                   serial: 56c6-1a79\n                   size: 510MiB\n                   capacity: 511MiB\n                   capabilities: boot fat initialized\n                   configuration: FATs=2 filesystem=fat\n              *-volume:2\n                   description: LVM Physical Volume\n                   vendor: Linux\n                   physical id: 3\n                   bus info: scsi@3:0.0.0,3\n                   logical name: /dev/sdb3\n                   serial: cckSOB-mLGB-Ccu1-1SbO-ho3b-odIb-nEVaoa\n                   size: 698GiB\n                   capabilities: multi lvm2\n           *-cdrom\n                description: DVD reader\n                product: DVDROM DH60N\n                vendor: HL-DT-ST\n                physical id: 0.0.0\n                bus info: scsi@4:0.0.0\n                logical name: /dev/cdrom\n                logical name: /dev/sr0\n                version: 1.00\n                capabilities: removable audio dvd\n                configuration: ansiversion=5 status=nodisc\n        *-serial\n             description: SMBus\n             product: 8 Series/C220 Series Chipset Family SMBus Controller\n             vendor: Intel Corporation\n             physical id: 1f.3\n             bus info: pci@0000:00:1f.3\n             version: 04\n             width: 64 bits\n             clock: 33MHz\n             configuration: driver=i801_smbus latency=0\n             resources: irq:18 memory:f7c39000-f7c390ff ioport:580(size=32)\n  *-input:0\n       product: Power Button\n       physical id: 1\n       logical name: input0\n       logical name: /dev/input/event0\n       capabilities: platform\n  *-input:1\n       product: Power Button\n       physical id: 2\n       logical name: input1\n       logical name: /dev/input/event1\n       capabilities: platform\n  *-input:2\n       product: Video Bus\n       physical id: 3\n       logical name: input2\n       logical name: /dev/input/event2\n       capabilities: platform\n</code></pre>","tags":["homelab","lenovo"]},{"location":"581/index.html","title":"Hardware: Custom built PC Trooper (trooper)","text":"<p>A PC that I build for myself when I was in college. I nicknamed it trooper because of that is what is on the case.</p>","tags":["trooper","homelab","personal","gaming","hardware"]},{"location":"581/index.html#specs","title":"Specs","text":"<ul> <li>Z170-A</li> <li>48G of memory</li> </ul>","tags":["trooper","homelab","personal","gaming","hardware"]},{"location":"582/index.html","title":"Private IPv4 ranges","text":"<p>RFC 1918 makes up a set of 3 ip ranges for IPv4. These include:</p> <ul> <li>10.0.0.0 - 10.255.255.255 (10/8 prefix)</li> <li>with CIDR 8 8 is 10.0.0.0 - 10.255.255.255</li> <li>with CIDR 10 is 10.0.0.0 - 10.63.255.255</li> <li>172.16.0.0 - 172.31.255.255 (172.16/12 prefix)</li> <li>with CIDR 12 - 172.16.0.0 to 172.31.255.255</li> <li>192.168.0.0 - 192.168.255.255 (192.168/16 prefix)</li> </ul> <p>See (607) for common uses for IPv4 ranges</p>","tags":["networking"]},{"location":"583/index.html","title":"Hardware: My M2 Macbook Pro","text":"<p>Macbook that I bought in 2023 on the apple refurbished store.</p>","tags":["macosx","hardware"]},{"location":"583/index.html#specs","title":"Specs","text":"<p>Here is my configuration</p> <ul> <li>M2 Max</li> <li>32 GB</li> <li>1TB</li> </ul> <p>Here are the specs</p> <ul> <li>Wi-Fi 6E (802.11ax)5</li> </ul> <p>See official tech Specs on apples website.</p>","tags":["macosx","hardware"]},{"location":"584/index.html","title":"Time log: Homelab","text":"","tags":["homelab","timelog"]},{"location":"584/index.html#time-log","title":"Time log","text":"<ul> <li>2024-06-07 (4h) Setup ansible</li> </ul> <p>Setup basic things such as creating user and packages</p> <ul> <li>2024-06-08 (4h) Fucking around with FreeBSD virtual machines</li> </ul> <p>Ended up learning what not to for managing FreeBSD VM\u2019s. Need to find a way to resize images</p> <ul> <li>2024-06-08 (4h) Setup DNS on ansible</li> </ul> <p>Setup coredns on the homelab</p> <ul> <li>2024-06-09 19:24 (1h 30m) Name resolution</li> </ul> <p>Setup mDNS and NetBIOS name resolution with Avahi and Samba</p> <ul> <li>2024-06-09 20:46 (1h) Playing with logging</li> </ul> <p>Discovered that CoreDNS rc file uses daemon that redirects stdout and stderr to /var/log/daemon.log.</p> <ul> <li>2024-06-12 00:22 (2h 30m) Setting up wireguard site to site</li> </ul> <p>Managed to get charm and ts140 to communicate over VPN in a point to point configuration. Still haven\u2019t figured out how to get either to forward packets yet to hosts on each others networks.</p> <ul> <li>2024-06-29 03:00 (5h) Setting up ts140 with pfSense</li> </ul> <p>Installed pfSense on the ts140. I have the LAN connected to the new network card and the old one connected to the WAN. For some reason I am only getting 800 Mbits out if rather than the 950 MBits that I was getting previously</p> <ul> <li>2024-07-01 01:18 (5.15h) Spent time setting up Wireguard on ts140</li> <li>2024-07-01 14:22 (2.00h) Spent time setting up OPNsense</li> <li>2024-08-03 12:00 (2.00h) Hardware upgrade on ts140</li> <li>2024-08-04 13:21 (4.00h) WireGuard on eq12</li> <li>2024-08-04 22:00 (4.00h) CloudFlare email forwarding</li> </ul>","tags":["homelab","timelog"]},{"location":"584/index.html#see-also","title":"See also","text":"<ul> <li>Current home lab</li> </ul>","tags":["homelab","timelog"]},{"location":"585/index.html","title":"FreeBSD networking overview","text":"<ul> <li><code>/etc/rc.conf</code></li> <li><code>/etc/rc.conf.local</code></li> </ul> <pre><code>sysrc ifconfig_em0=\"inet 10.10.10.1 netmask 255.255.0.0\"\nsysrc defaultrouter=\"10.10.0.1\"\nsudo service netif restart\n</code></pre>","tags":["networking","sysadmin","freebsd"]},{"location":"585/index.html#dhcp","title":"DHCP","text":"<pre><code>sudo dhclient em0\n</code></pre>","tags":["networking","sysadmin","freebsd"]},{"location":"585/index.html#dns","title":"DNS","text":"","tags":["networking","sysadmin","freebsd"]},{"location":"586/index.html","title":"[ ] Neovim Task | setup configuration","text":"","tags":["neovim","task"]},{"location":"586/index.html#time-log","title":"Time log","text":"","tags":["neovim","task"]},{"location":"587/index.html","title":"AWS service CloudFront","text":"","tags":["cloud","aws"]},{"location":"588/index.html","title":"Bake: Mid week Focaccia sourdough","text":"","tags":["baking","bake","sourdough"]},{"location":"588/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 250g King authors bread flour Water 200g starter 50g salt 7g","tags":["baking","bake","sourdough"]},{"location":"588/index.html#time-log","title":"Time log","text":"<ul> <li>2024-06-10 12:54 Mixed</li> <li>2024-06-11 09:00 Baked</li> </ul> <p>Baked at 450f for 30m in the pyrex container. It stuck at the edges.</p>","tags":["baking","bake","sourdough"]},{"location":"589/index.html","title":"Network switch research","text":"<p>Need a switch for homelab.</p> <ul> <li>2 pi</li> <li>1 ts140 (router)</li> <li>1 mac</li> <li>1 xps</li> <li>1 trooper</li> <li>1 Access Point</li> <li>1 nas (eventually)</li> </ul> Model Price Power Ports Speed Managed GS108 no GS116NA 90 16 no"},{"location":"59/index.html","title":"Person: Foony\u2019s developer acorn1010","text":"<p>acorn1010 is a twitch streamer who streams full time building foony along with another co-founder.</p> <p>Tech stack</p> <ul> <li>capacitor</li> <li>react</li> <li>k8s</li> </ul>","tags":["twitch","person"]},{"location":"590/index.html","title":"[x] Homelab 2024 Task | experiment with setup site to site configuration","text":"<p>Completed on 2024-06-30. This is put on hold due to extra complexity that I don\u2019t want to deal with at this time.</p> <p>Site to site configuration between digital ocean droplet (charm) and server at home (ts140). This is my first iteration. The goal is to get some simple communication between the 2.</p>","tags":["task","homelab"]},{"location":"590/index.html#ts140intjlrickertme","title":"ts140.int.jlrickert.me","text":"<p>This is my server that is behind a NAT</p> <ul> <li>em0 ip: 10.10.10.1/16</li> <li>wg0 ip: 10.0.0.1/31</li> <li>config</li> </ul>","tags":["task","homelab"]},{"location":"590/index.html#charmjlrickertme","title":"charm.jlrickert.me:","text":"<ul> <li>eth0 24.199.80.67/20</li> <li>eth1 10.116.0.3/20</li> <li>default via 24.199.80.1 eth0</li> <li>wg0 10.0.0.1/31</li> </ul> <p>```conf   # charm   [Interface]   PrivateKey = CHARM_PRIVATE_KEY   Address = 10.0.0.1/31   ListenPort = 51800</p> <p># ts140   [Peer]   PublicKey = TS140_PUBLIC_KEY   AllowedIPs = 10.0.0.2/32, 10.10.0.1/24   ```</p>","tags":["task","homelab"]},{"location":"590/index.html#facts","title":"Facts","text":"<ul> <li>Set <code>PersistentKeepalive = 25</code> when behind a NAT and would like to receive connections</li> <li><code>AllowedIPs</code> must be host IP addresses</li> </ul>","tags":["task","homelab"]},{"location":"590/index.html#see-also","title":"See also","text":"<ul> <li>Main task</li> </ul>","tags":["task","homelab"]},{"location":"591/index.html","title":"Bake: Fathers Day Weekend focaccia 2024","text":"<p>Made this for a lunch snack during Memorial Day weekend 2024.</p> <p></p>","tags":["baking","sourdough"]},{"location":"591/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 500g King authors bread flour Water 400g starter 100g salt 13g <p>Total weight is 1000g</p>","tags":["baking","sourdough"]},{"location":"591/index.html#time-log","title":"Time log","text":"<ul> <li>2024-06-14 07:45 Mixed everything</li> <li>2024-06-14 15:00 Put into fridge</li> <li>2024-06-14 19:00 Pulled out of fridge</li> </ul> <p>Drove to lake</p> <ul> <li>2024-06-14 21:00 Put back into fridge</li> <li>2024-06-15 11:30 Baked</li> </ul> <p>Baked for 35 minutes. The oven was set to 490f. It is a gas one in a camper.   Rotated about every 8 minutes. Forgot to put oil or parchment down before   putting the dough down. Ended up sticking.</p>","tags":["baking","sourdough"]},{"location":"591/index.html#see-also","title":"See also","text":"<ul> <li>Memorial Day Weekend focaccia 2024</li> </ul>","tags":["baking","sourdough"]},{"location":"592/index.html","title":"Issue: Sticking issues with baking","text":"<p>Issue ran into when backing</p>","tags":["issue","baking"]},{"location":"592/index.html#pyrex","title":"Pyrex","text":"<ul> <li>With parchment paper</li> </ul> <p>Works. This is the strategy used for the Memorial day foccacia</p> <ul> <li>Oiling the bottom before placing bread down</li> </ul> <p>Helped but not as good as the parchment paper method. This is what I did for my mid week bake</p> <ul> <li>No oil</li> </ul> <p>It stuck. This is the method used for the Fathers Day Weekend focaccia 2024. One thing to export is no oil at a lower temperature. I think the way the oven is setup it gets too high of heat at the bottom. This may create a new issue though</p>","tags":["issue","baking"]},{"location":"592/index.html#cast-iron","title":"Cast Iron","text":"<p>Tried it out on my first 100% whole wheat bread. Worked beautifully.</p>","tags":["issue","baking"]},{"location":"593/index.html","title":"Research: Running sandals","text":"<p>Looking for a good running sandal as running with wet feet sucks and I like the feel of my zeros</p> <p>Strap types</p> <ul> <li>Winged</li> </ul> <p>Sounds like a blister festh</p> <ul> <li>Retro</li> </ul> <p>Based on huarache</p> <ul> <li>Rooted</li> </ul> Name Price Comment Leadville trail 125 11mm Leadville pacer 125 9mm H-Trail 80","tags":["research","running"]},{"location":"594/index.html","title":"Huarache","text":"<p>Mexican Indian runner group thingy</p>"},{"location":"595/index.html","title":"Research: search engines","text":"<ul> <li>Pagefind</li> </ul> <p>Powers starlight</p>"},{"location":"596/index.html","title":"Place: 612 Brewing","text":"<p>No longer open. It is now Padraigs Brewing.</p>","tags":["place","brewery"]},{"location":"597/index.html","title":"Place: Padraigs Brewing","text":"<p>Brewery located near Spyhouse Coffee. Used to be 612 brewing.</p> <p>Located at <code>945 Broadway St NE, Minneapolis, MN 55413</code>.</p>","tags":["brewery","place","publicwifi"]},{"location":"598/index.html","title":"Place: Spyhouse Coffee Roasters - NE Minneapolis","text":"<p>Place that I often go to for co-working for a couple of hours.</p> <p>Located at 945 Broadway St NE, Minneapolis, MN 55413</p> <p>https://www.google.com/maps/place/Spyhouse+Coffee+Roasters+%7C+Northeast/@44.998878,-93.2468939,20.25z/data=!3m1!5s0x52b32d99ba6e6271:0x53c4421175b4cfc4!4m14!1m7!3m6!1s0x52b32d99bbb9b5d9:0x29edee65343003cf!2sPadraigs+Brewing!8m2!3d44.9988956!4d-93.2468663!16s%2Fg%2F11_r1y9zq!3m5!1s0x52b32d99b001b901:0x4819dbd9d4cb3e36!8m2!3d44.9988885!4d-93.24633!16s%2Fg%2F1pp2x5rqt?entry=ttu</p>","tags":["coffee","place","publicwifi","coworking"]},{"location":"598/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>ok internet</li> <li>parking generally is good</li> <li>Large table for coworking but isn\u2019t always available</li> </ul>","tags":["coffee","place","publicwifi","coworking"]},{"location":"599/index.html","title":"Issue: running a typescript library in deno","text":"<p>Here is what I am trying to accomplish:</p> <ul> <li>A TypeScript library up on npmjs</li> <li>This should include <code>esmodule</code>, <code>commonjs</code>, and <code>types</code>.</li> <li>It should be importable from Deno</li> <li>Importing is done with <code>import { helloWorld } from \"npm:@jlrickert/knutjs-core@0.5.4\";</code>.</li> <li>The code should then be runnable with <code>deno run file.ts</code>.</li> <li>Configured in Neovim to have all the LSP featurees</li> <li>This includes autocompletion, jump to definition, etc.</li> </ul>","tags":["issue","deno","node","typescript","webdev"]},{"location":"599/index.html#example","title":"Example","text":"","tags":["issue","deno","node","typescript","webdev"]},{"location":"599/index.html#typescript-library","title":"Typescript library","text":"<p>An example TypeScript library that called <code>my-example</code>.</p> <p>Directory structure:</p> <pre><code>\u276f tree\n.\n\u251c\u2500\u2500 index.ts\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 pnpm-lock.yaml\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 tsup.config.ts\n</code></pre> <p><code>index.ts</code>:</p> <pre><code>export const helloWorld = () =&gt; {\n  console.log(\"Hello World\");\n};\n</code></pre> <p><code>package.json</code>:</p> <pre><code>{\n  \"name\": \"my-example\",\n  \"version\": \"0.1.0\",\n  \"types\": \"./dist/index.d.ts\",\n  \"main\": \"./dist/index.cjs\",\n  \"module\": \"./dist/index.js\",\n  \"type\": \"module\",\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/index.js\",\n      \"require\": \"./dist/index.cjs\",\n      \"types\": \"./dist/index.d.ts\"\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup\"\n  },\n  \"files\": [\"dist\", \"package.json\"]\n}\n</code></pre> <p><code>tsup.config.ts</code>:</p> <pre><code>import { defineConfig, type Options } from \"tsup\";\nimport path from \"path\";\n\nconst isProduction = process.env.NODE_ENV === \"production\";\n\nconst commonConfig: Options = {\n  banner: {\n    // js: \"'use client'\"\n  },\n  sourcemap: true,\n  format: [\"cjs\", \"esm\"],\n  minify: isProduction,\n  dts: true,\n  external: [\"react\"],\n  target: \"es2022\",\n  outDir: \"dist\",\n  tsconfig: path.resolve(__dirname, \"./tsconfig.json\"),\n  skipNodeModulesBundle: true,\n  clean: true,\n  platform: \"neutral\",\n};\n\nexport default defineConfig(() =&gt; {\n  return [\n    {\n      entry: [\"./src/index.ts\"],\n      ...commonConfig,\n      esbuildOptions: (options) =&gt; {\n        options.outbase = \".\";\n      },\n    },\n  ];\n});\n</code></pre> <p>This then can be published via <code>npm publish</code> command. See publishing on how to do this</p>","tags":["issue","deno","node","typescript","webdev"]},{"location":"599/index.html#deno-script","title":"Deno script","text":"<p>In <code>example.ts</code>:</p> <pre><code>#!/usr/bin/env deno\n\nimport { helloWorld } from \"npm:my-example@0.1.0\";\n\nhelloWorld();\n</code></pre> <p>To run <code>example.ts</code>, execute <code>deno run example.ts</code>. To get LSP support in Neovim, run <code>deno cache example.ts</code>.</p>","tags":["issue","deno","node","typescript","webdev"]},{"location":"599/index.html#explanation-of-the-approach","title":"Explanation of the Approach","text":"<ol> <li>Library Setup:</li> </ol> <ul> <li>The <code>index.ts</code> file contains your TypeScript code.</li> <li>The <code>package.json</code> file has entries for <code>main</code>, <code>module</code>, and <code>types</code> to ensure compatibility with different module systems (<code>commonjs</code> and <code>esmodule</code>).</li> <li>The <code>tsup.config.ts</code> file uses <code>tsup</code> for compiling TypeScript to JavaScript, generating declarations, and outputting both <code>cjs</code> and <code>esm</code> formats. This ensures your package works both in Node.js and Deno environments, as well as other platforms.</li> </ul> <ol> <li>Publishing:</li> </ol> <ul> <li>After setting up these files, you can use <code>npm publish</code> to publish your library on npmjs.</li> </ul> <ol> <li>Import in Deno:</li> </ol> <ul> <li>Deno supports importing npm modules with a special syntax <code>import { helloWorld } from \"npm:my-example@0.1.0\";</code>.</li> </ul> <ol> <li>Neovim LSP Setup:</li> </ol> <ul> <li>By running <code>deno cache example.ts</code>, Deno\u2019s Language Server Protocol (LSP) caches the dependency, which provides enhanced editor features like autocompletion and type checking in Neovim.</li> </ul> <ol> <li>Useful Resources:    - The additional links provided can help users understand type compatibility issues, set up Neovim with Deno\u2019s built-in LSP, and view related configuration files.</li> </ol>","tags":["issue","deno","node","typescript","webdev"]},{"location":"599/index.html#alternative-approaches","title":"Alternative Approaches","text":"<ol> <li>Using <code>tsc</code> for Compilation:</li> </ol> <ul> <li>Instead of <code>tsup</code>, you can configure <code>tsc</code> (TypeScript compiler) directly using the <code>tsconfig.json</code> file to handle the conversion.</li> </ul> <ol> <li>Using Different Bundlers:</li> </ol> <ul> <li>Alternatives like <code>rollup</code> or <code>webpack</code> can be used to bundle your TypeScript library.</li> </ul> <ol> <li>Direct Deno Modules:    - Instead of using npm and transforming the library for Deno, you can publish your library as a Deno module using <code>deno.land/x</code> and bypass npm altogether. This approach would be simpler if Deno is the primary target environment.</li> </ol> <p>Choosing the best approach depends on the specific requirements (such as targeting multiple environments) and developer preferences.</p> <p>I hope this helps clarify the instructions and improves the overall readability of your document!</p>","tags":["issue","deno","node","typescript","webdev"]},{"location":"599/index.html#see-also","title":"See also","text":"<ul> <li>Are the types wrong?</li> <li>Deno Setup for Neovim</li> <li>Configuration source code for denols</li> </ul>","tags":["issue","deno","node","typescript","webdev"]},{"location":"6/index.html","title":"Pop_OS! window management setup","text":"<p>The window management for Pop_OS! is by far the best experience I have had from a window manager. It brings the productivity features of tiling window managers like i3. However, it still is not as fluid as <code>i3</code> and other tiling window managers. At some point this may be improved as it is something that one of the core developers believes fits as one if its core values<sup>1</sup>.</p> <p>Here is an attempt to get to work like i3:</p> <pre><code>gsettings set org.gnome.mutter dynamic-workspaces false\ngsettings set org.gnome.desktop.wm.preferences num-workspaces 10\n\ngsettings set org.gnome.shell.keybindings switch-to-application-1  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-2  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-3  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-4  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-5  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-6  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-7  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-8  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-9  \"[]\"\n\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-1  \"['&lt;Super&gt;1']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-2  \"['&lt;Super&gt;2']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-3  \"['&lt;Super&gt;3']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-4  \"['&lt;Super&gt;4']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5  \"['&lt;Super&gt;5']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6  \"['&lt;Super&gt;6']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-7  \"['&lt;Super&gt;7']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-8  \"['&lt;Super&gt;8']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-9  \"['&lt;Super&gt;9']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-10 \"['&lt;Super&gt;0']\"\n\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-1  \"['&lt;Super&gt;&lt;Shift&gt;1']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-2  \"['&lt;Super&gt;&lt;Shift&gt;2']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-3  \"['&lt;Super&gt;&lt;Shift&gt;3']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-4  \"['&lt;Super&gt;&lt;Shift&gt;4']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-5  \"['&lt;Super&gt;&lt;Shift&gt;5']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-6  \"['&lt;Super&gt;&lt;Shift&gt;6']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-7  \"['&lt;Super&gt;&lt;Shift&gt;7']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-8  \"['&lt;Super&gt;&lt;Shift&gt;8']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-9  \"['&lt;Super&gt;&lt;Shift&gt;9']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-10 \"['&lt;Super&gt;&lt;Shift&gt;0']\"\n</code></pre> <p>Tags:</p> <pre><code>#pop-os\n</code></pre> <ol> <li> <p>https://github.com/pop-os/shell/issues/823\u00a0\u21a9</p> </li> </ol>"},{"location":"60/index.html","title":"Dragonflight leather working recipes","text":"<p>Masterwork Smock (Blue)</p> <ul> <li>15 Crystalspine Fur</li> <li>10 Mireslush Hide</li> </ul> <p>Reinforced cap (Blue)</p> <ul> <li>15 Pristine Vorquin Horn</li> <li>10 Earthshine Scales</li> </ul> <p>Tags:</p> <pre><code>#wow\n</code></pre>"},{"location":"600/index.html","title":"Building guis with Dioxis in rust","text":"","tags":["rust","gui"]},{"location":"600/index.html#see-also","title":"See also","text":"<ul> <li>https://dioxuslabs.com/</li> </ul>","tags":["rust","gui"]},{"location":"601/index.html","title":"Covariance and contravariance in TypeScript","text":"<p>Ran into something interesting while going over https://github.com/Effect-TS/effect/blob/main/packages/effect/src/Either.ts.</p> <pre><code>export interface Left&lt;out L, out R&gt; extends Pipeable, Inspectable {\n  readonly _tag: \"Left\";\n  readonly _op: \"Left\";\n  readonly left: L;\n  readonly [TypeId]: {\n    readonly _R: Covariant&lt;R&gt;;\n    readonly _L: Covariant&lt;L&gt;;\n  };\n  [Unify.typeSymbol]?: unknown;\n  [Unify.unifySymbol]?: EitherUnify&lt;this&gt;;\n  [Unify.ignoreSymbol]?: EitherUnifyIgnore;\n}\n</code></pre> <p>It has an extra keyword <code>out</code>. Turns out this specifies covariance.</p> <p><code>in</code> specifies contravariance</p>","tags":["typescript","types","theory"]},{"location":"602/index.html","title":"Accessing <code>package.json</code> version for a TypeScript cli applicationg","text":"<p>Code Example:</p> <pre><code>import { createRequire } from \"module\";\n\nconst require = createRequire(import.meta.url);\nconst { version } = require(\"../package.json\");\n</code></pre>","tags":["typescript"]},{"location":"602/index.html#overview","title":"Overview","text":"<p>In Node.js, you can use the <code>createRequire</code> function from the module package to dynamically generate a require function for use within ECMAScript modules (ESM). This method is particularly useful for accessing <code>CommonJS</code> modules like <code>package.json</code> in an ESM context.</p>","tags":["typescript"]},{"location":"602/index.html#use-cases","title":"Use Cases","text":"<ul> <li>Hybrid Projects: Ideal for projects transitioning from CommonJS to ESM.</li> <li>Compatibility: Maintains compatibility with tools and libraries that expect a require function.</li> <li>Simplicity: Provides a straightforward method to access package.json properties without additional dependencies.</li> </ul>","tags":["typescript"]},{"location":"602/index.html#pros-and-cons","title":"Pros and Cons","text":"","tags":["typescript"]},{"location":"602/index.html#pros","title":"Pros","text":"<ul> <li>ESM Compatibility: Works seamlessly in projects using ECMAScript modules.</li> <li>Minimal Overhead: No additional dependencies required.</li> <li>Flexibility: Can be easily adapted to access other CommonJS modules.</li> </ul>","tags":["typescript"]},{"location":"602/index.html#cons","title":"Cons","text":"<ul> <li>Limited Scope: Specific to scenarios where ESM is used but CommonJS compatibility is needed.</li> <li>Asynchronous Operations: Still synchronous; consider alternatives if non- blocking operations are required.</li> </ul>","tags":["typescript"]},{"location":"603/index.html","title":"Place: Loadstone Coffee and Games","text":"<pre><code>Lodestone Coffee and Games\n10982 Cedar Lake Road\nMinnetonka, MN 55305\n</code></pre>","tags":["place"]},{"location":"604/index.html","title":"Overview of navicat","text":"<ul> <li>Has a 14 day trial</li> <li>Can only have 1 registered product at a time. If you want to have it installed on multiple PC\u2019s for hybrid work your screwed.</li> </ul>"},{"location":"604/index.html#macos-details","title":"MacOS details","text":"<p>Backups are located in ???</p>"},{"location":"605/index.html","title":"Research: docker setup for multiple php websites","text":"<pre><code>#devel\n&lt;VirtualHost *:80&gt;\n        ServerName jared81.int.ecreativeworks.com\n        DocumentRoot /data/www/webroot/devel/public_html\n\n        CustomLog /data/www/webroot/devel/logs/devel.log combined\n        ErrorLog /data/www/webroot/devel/logs/devel.errors\n\n        #PHP settings -\n        ProxyTimeout 600\n        &lt;Proxy \"fcgi://devel-www/\" acquire=3000 connectiontimeout=3 disablereuse=on max=20&gt;\n            #leave empty - matches the SetHandler directive\n\n        &lt;/Proxy&gt;\n\n        &lt;FilesMatch \".+\\.php$\"&gt;\n            SetHandler \"proxy:unix:/var/run/php-fpm.sockets.d/devel-www.sock|fcgi://devel-www/\"\n        &lt;/FilesMatch&gt;\n\n&lt;/VirtualHost&gt;\n\n#devel - SSL - SNI enabled\n&lt;VirtualHost *:443&gt;\n        ServerName jared81.int.ecreativeworks.com\n        DocumentRoot /data/www/webroot/devel/public_html\n\n        CustomLog /data/www/webroot/devel/logs/devel.log combined\n        ErrorLog /data/www/webroot/devel/logs/devel.errors\n\n        #SSL engine\n        SSLEngine on\n        SSLCertificateFile /usr/local/etc/bsdmanage/webman/ssl.crts/jared81.int.ecreativeworks.com.crt\n        SSLCertificateKeyFile /usr/local/etc/bsdmanage/webman/ssl.crts/jared81.int.ecreativeworks.com.key\n        #intermediate cert\n        #SSLCACertificateFile /usr/local/etc/bsdmanage/webman/ssl.crts/jared81.int.ecreativeworks.com.ca\n\n        #PHP settings -\n        ProxyTimeout 600\n        &lt;Proxy \"fcgi://devel-www/\" acquire=3000 connectiontimeout=3 disablereuse=on max=20&gt;\n            #leave empty - matches the SetHandler directive\n\n        &lt;/Proxy&gt;\n\n        &lt;FilesMatch \".+\\.php$\"&gt;\n            SetHandler \"proxy:unix:/var/run/php-fpm.sockets.d/devel-www.sock|fcgi://devel-www/\"\n        &lt;/FilesMatch&gt;\n&lt;/VirtualHost&gt;\n</code></pre>"},{"location":"606/index.html","title":"Overview: backing up Unix systems","text":"","tags":["unix","linux","macosx","cli"]},{"location":"606/index.html#simple-approach","title":"Simple approach","text":"<p>On system to be backed up</p> <pre><code>sudo tar czf \"$(hostname -s)-$(date -I).tgz\" /etc /usr/local/etc /home\ncd /tmp\n</code></pre> <p>Then copy over the file that was created</p> <p>[!WARNING] The following command is destructive</p> <p>To restore move back over to the system and run <code>tar -tzvf /tmp/backup.tgz</code>.</p> <p>To unpack for view run something like <code>mkdir -p /tmp/temproot &amp;&amp; tar -tzvf /tmp/backup.tgz -C /tmp/temproot</code>. If you want a specific directories append the path(s) to the command.</p> <p>Examples taken from ubuntu docs</p>","tags":["unix","linux","macosx","cli"]},{"location":"607/index.html","title":"Common network ranges used in private networks","text":"<p>Common private IPv4 ranges and typical default subnets used by platforms and container networking. Use it as a quick reference when planning local networks or avoiding address collisions.</p>","tags":["networking","ipv4","ipv6"]},{"location":"607/index.html#subnets-used-by-platforms-and-applications","title":"Subnets used by platforms and applications","text":"<p>Services that use IPv4 private IP address ranges</p> <p>These are common defaults and examples:</p> <ul> <li>Home router defaults</li> <li><code>192.168.0.0/24</code></li> <li><code>192.168.1.0/24</code></li> <li><code>192.168.2.0/24</code></li> <li> <p><code>10.0.0.0/24</code></p> </li> <li> <p>Hyper-V: <code>192.168.137.0/24</code></p> </li> <li> <p>VirtualBox</p> </li> <li>NAT: <code>10.0.2.0/24</code></li> <li> <p>Host-only: <code>192.168.56.0/24</code></p> </li> <li> <p>VMware: defaults vary by product and install. Many deployments use   <code>192.168.x.0/24</code> host-only or NAT networks. Check your VMware network settings   to confirm.</p> </li> <li> <p>Azure: commonly <code>10.0.0.0/16</code> or other <code>10.x.x.x/24</code> subnets you define</p> </li> <li> <p>AWS</p> </li> <li>VPC examples: <code>10.0.0.0/16</code></li> <li>Default EC2 VPC: <code>172.31.0.0/16</code></li> <li> <p>You may also see <code>192.168.x.x/16</code> in some setups</p> </li> <li> <p>Google Cloud Platform (example)</p> </li> <li>GCP auto mode historically creates <code>10.x.x.0/20</code> subnets per region.</li> <li> <p>Example: <code>10.128.0.0/20</code> (varies by project and region)</p> </li> <li> <p>Docker</p> </li> <li>Default bridge: <code>172.17.0.0/16</code></li> <li> <p>Overlay networks vary and are configurable</p> </li> <li> <p>Podman (default rootless network): <code>10.88.0.0/16</code></p> </li> <li> <p>Kubernetes</p> </li> <li>Service CIDR (common default): <code>10.96.0.0/12</code></li> <li>Pod CIDR examples:<ul> <li>Flannel: <code>10.244.0.0/16</code></li> <li>Calico: often configured as <code>192.168.0.0/16</code> or a <code>10.x.x.x/16</code> range</li> <li>Weave: <code>10.32.0.0/12</code></li> </ul> </li> <li> <p>CNI plugins and cluster installers can change these values. Always check     cluster configuration.</p> </li> <li> <p>OpenShift</p> </li> <li>Service network (example): <code>172.30.0.0/16</code></li> <li> <p>Pod networks vary by install</p> </li> <li> <p>Common private blocks referenced in setups</p> </li> <li><code>10.0.0.0/8</code> (very large; many services use subnets inside this)</li> <li><code>172.16.0.0/12</code></li> <li><code>192.168.0.0/16</code></li> </ul> <p>Note: many products let you change these defaults. Always verify runtime configuration before assuming a specific subnet.</p>","tags":["networking","ipv4","ipv6"]},{"location":"607/index.html#iot-and-guest-network-suggestions","title":"IoT and guest network suggestions","text":"<p>Put IoT and guest devices on isolated VLANs or SSIDs and use subnets that are unlikely to collide with typical defaults. Examples:</p> <ul> <li>Small IoT VLANs</li> <li><code>192.168.200.0/24</code></li> <li><code>192.168.201.0/24</code></li> <li><code>10.250.0.0/16</code> (if you prefer 10-space)</li> <li>Guest network examples</li> <li><code>192.168.150.0/24</code></li> <li><code>10.251.0.0/16</code></li> </ul> <p>Recommended practices for IoT networks</p> <ul> <li>Use VLANs to separate IoT from trusted networks.</li> <li>Apply strict firewall rules so IoT devices cannot initiate traffic to   sensitive subnets.</li> <li>Use DHCP reservations or static mappings for devices you must find easily.</li> <li>Use a local DNS suffix so devices are easier to locate, for example   <code>iot.example.local</code>.</li> <li>Consider placing cameras, sensors, and smart plugs in separate subnets if you   need different policies for each device class.</li> </ul>","tags":["networking","ipv4","ipv6"]},{"location":"607/index.html#recommendations-when-choosing-your-own-ranges","title":"Recommendations when choosing your own ranges","text":"<ul> <li>Use /24 networks per VLAN for simplicity and predictability.</li> <li>Pick ranges that are unlikely to collide with remote networks you will VPN or   connect to. Avoid very common defaults like <code>192.168.1.0/24</code> if you will   establish many site-to-site or client VPNs.</li> <li>Prefer higher or uncommon <code>192.168.x.0/24</code> values such as <code>192.168.250.0/24</code>   or <code>192.168.254.0/24</code> when possible.</li> <li>If you prefer <code>10.</code> space, pick a less used block such as <code>10.250.0.0/16</code>   rather than <code>10.0.0.0/8</code>.</li> <li>Document your address plan. Keep a simple spreadsheet or text file that   records each VLAN, subnet, gateway, DHCP range, and purpose.</li> <li>Reserve small blocks for infrastructure (DNS, DHCP, NTP, printers, VLAN   gateways) and use DHCP reservations for servers and important devices.</li> <li>Check all remote networks and cloud VPCs you connect to. If overlap exists,   plan for NAT or choose a different local range to avoid routing conflicts.</li> <li>Use IPv6 Unique Local Addresses for internal IPv6 if you adopt IPv6:   <code>fd00::/8</code> for ULA space.</li> <li>Test before wide deployment. Bring up a test VLAN and verify routing, firewall   rules, and VPN connectivity.</li> </ul>","tags":["networking","ipv4","ipv6"]},{"location":"607/index.html#handling-overlapping-networks","title":"Handling overlapping networks","text":"<p>If you discover an overlap after deployment:</p> <ul> <li>Change the local subnet if feasible.</li> <li>Use NAT on the VPN edge to translate overlapping private addresses.</li> <li>Use routing rules or split networking so only nonconflicting addresses are   exchanged.</li> <li>Consider network address translation as a last resort due to added complexity.</li> </ul>","tags":["networking","ipv4","ipv6"]},{"location":"607/index.html#quick-checklist-before-assigning-a-new-range","title":"Quick checklist before assigning a new range","text":"<ul> <li>Will this subnet be routed to other sites or cloud VPCs?</li> <li>Is this subnet likely to collide with common defaults?</li> <li>Is a VLAN or firewall rule required to isolate the devices?</li> <li>Are DHCP reservations needed for critical devices?</li> <li>Is the addressing plan documented and backed up?</li> </ul>","tags":["networking","ipv4","ipv6"]},{"location":"608/index.html","title":"Bake: Experimental whole wheat focaccia","text":"","tags":["baking","bake","sourdough"]},{"location":"608/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Whole turkey red 250g Water 200g starter 50g salt 7g","tags":["baking","bake","sourdough"]},{"location":"608/index.html#time-log","title":"Time log","text":"<ul> <li>2024-06-29 13:03 Mixed ingredients together</li> <li>2024-06-30 02:00 Placed into the fridge</li> <li>2024-06-30 11:30 Pulled out of the fridge</li> </ul> <p>Also kneaded it a little bit</p> <ul> <li>2024-06-30 12:57 Pulled out of the oven</li> </ul> <p>Baked for 450f in the small cast iron pan. Worked beautifully. See sticking issue for some other things that I tried.</p>","tags":["baking","bake","sourdough"]},{"location":"609/index.html","title":"Project: Knutjs (knutjs)","text":"","tags":["knut","project"]},{"location":"609/index.html#search-engine","title":"Search engine","text":"<p>Search engines that I want to try</p> <ul> <li>Pagefind</li> </ul>","tags":["knut","project"]},{"location":"609/index.html#feature-ideas","title":"Feature ideas","text":"<ul> <li>A temp buffer like system that mods has for managing queries</li> </ul>","tags":["knut","project"]},{"location":"609/index.html#see-also","title":"See also","text":"<ul> <li>Github</li> </ul>","tags":["knut","project"]},{"location":"61/index.html","title":"How to setup fira code fonts on windows","text":"<p>Personally, I like the fira code fonts from nerd fonts. This includes all the fancy powerline symbols. To install make sure that there is no existing fira code packages. Install Fira Code Regular Nerd Font Complete with the build in windows font thing. To configure applications use the string <code>FiraCode Nerd Font</code></p>"},{"location":"610/index.html","title":"[x] Homelab Task | setup a vpn","text":"<p>Working example on 2024-07-02. Just need to figure out why I cannot access everything on the LAN.</p> <p>Need to setup a reliable VPN so I can access my home network. Currently, I plan on making the VPN work on ts140</p> <p><code>qrencode -t ansiutf8 &lt; tunnel.conf</code></p>","tags":["task","homelab"]},{"location":"610/index.html#specs","title":"Specs","text":"<ul> <li>Port 51820 on ts140</li> </ul> <p>This is the default gateway at home running pfSense</p> <ul> <li>Clients will be able to connect to home network via . This will point to the WAN of my home address. Need to find a mechanism to do this.","tags":["task","homelab"]},{"location":"610/index.html#topology","title":"Topology","text":"Device IP Address ts140 192.168.150.1/24 mbp 192.166.150.2/32 s22 192.168.150.3/32 xps 192.168.150.4/32","tags":["task","homelab"]},{"location":"610/index.html#firewall-rules","title":"Firewall rules","text":"<p>[!NOTE] WG0 is WireGuard</p> Interface Proto Source Port Dest Port Description WG0 ANY * * * * Allow all on WG WAN UDP * * WAN addr 51280 Allow WG OPT1 ANY * * * Allow WG on everything <p>Outbound NAT to allow wireguard out of the WAN</p> <ul> <li>Hybrid outbound NAT</li> <li>interface: WAN</li> <li>Source: OPT1 network</li> <li>Source Port: *</li> <li>Destination: *</li> <li>Destination Port: *</li> <li>NAT Address: WAN address</li> <li>NAT Port: *</li> </ul>","tags":["task","homelab"]},{"location":"610/index.html#see-also","title":"See also","text":"<ul> <li>Homelab project</li> </ul>","tags":["task","homelab"]},{"location":"611/index.html","title":"pfSense for networking","text":"","tags":["pfsense","networking","freebsd"]},{"location":"611/index.html#downloading-media","title":"Downloading media","text":"<p>pfSense CE is hard to find. Need to go through the stupid store process to get the iso.</p>","tags":["pfsense","networking","freebsd"]},{"location":"611/index.html#installation-on-bare-metal","title":"Installation on bare metal","text":"<p>I had issues with ventoy. I ended up using balena etcher on my mac to create a usb stick to install on ts140</p>","tags":["pfsense","networking","freebsd"]},{"location":"611/index.html#installation-on-virtual-machines","title":"Installation on virtual machines","text":"<p>Haven\u2019t tried yet</p>","tags":["pfsense","networking","freebsd"]},{"location":"612/index.html","title":"Hardware: Samsung S22+ android phone (s22)","text":"","tags":["android","hardware","samsung"]},{"location":"613/index.html","title":"Hardware: Razer thunderbolt docking station","text":"","tags":["razer","hardware","thunderbolt"]},{"location":"614/index.html","title":"Bake: Fourth of July Pizza dough","text":"<p>Large batch of pizza dough for the fourth of July to the lake lot.</p>","tags":["baking","bake","sourdough","pizza"]},{"location":"614/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Pizza flour Flour 1141g 80% 00 flour AP Flour 185g 10% 00 flour Whole wheat 185g 10% Hard red wheat Water 941g 66% rye starter 143g 10% 100% rye; 1 to 1 ratio Salt 14g 1% <p>[!NOTE] I need to update the bakers percentages here</p>","tags":["baking","bake","sourdough","pizza"]},{"location":"614/index.html#time-log","title":"Time log","text":"<ul> <li>2024-06-30 12:00 (Sunday) Mixed starter</li> <li>2024-07-01 08:00 (Monday) Mixed everything</li> <li>2024-07-02 20:00 (Monday) Place in the fridge</li> <li>2024-07-02 20:00 (Tuesday) Placed in the freezer</li> </ul>","tags":["baking","bake","sourdough","pizza"]},{"location":"614/index.html#retrospect","title":"Retrospect","text":"<p>Old batch was better</p> <p>180 grams makes like a 10 inch pizza.</p> <p>What seemed to work was getting the stone between 750f and 800f and baking for like 1 minute before rotating 90 degrees. Rotate 90 every minute depending on how thick the crust is.</p>","tags":["baking","bake","sourdough","pizza"]},{"location":"614/index.html#see-also","title":"See also","text":"<ul> <li>Based on my last batch of sourdough that I made</li> </ul>","tags":["baking","bake","sourdough","pizza"]},{"location":"615/index.html","title":"Ingredient: Polselli 00 flour classica","text":"<p>Soft wheat meant to make pizza dough</p> <p>Blend of high-quality soft wheat grains recommended for dough with short-medium leavening time. Ideal for Neapolitan pizza.</p>","tags":["ingredient","flour","pizza","baking"]},{"location":"616/index.html","title":"Neapolitan pizza","text":"","tags":["pizza"]},{"location":"616/index.html#see-also","title":"See also","text":"<ul> <li>Types of pizza</li> </ul>","tags":["pizza"]},{"location":"617/index.html","title":"How I organize my notes","text":"<p>I use a zettelkasten for taking notes. The whole goal of my notes is to have a place to dump information for later recall. This needs to be quick and efficient. Should be normalized within reason.</p>","tags":["google"]},{"location":"617/index.html#node-content","title":"Node content","text":"<p>Github flavored markdown for now. This is what prettier supports currently.</p>","tags":["google"]},{"location":"617/index.html#custom-indexes","title":"Custom indexes","text":"<p>nodes.tsv and changes.md are currently auto generated. Everything else is manually entered in.  At some point I plan on adding a few more such as ones around tags.</p>","tags":["google"]},{"location":"617/index.html#node-titles","title":"Node titles","text":"<p>Most nodes will have a prefix in the title. Each prefix specifies the type of noun. Here are the ones that I typically use:</p> <ul> <li><code>Baking:</code> This is a specific kind of recipe related to baking</li> <li><code>Client:</code>: A particular client that I do business with</li> <li><code>Daily:</code>: A daily entry for a particular day</li> <li><code>Hardware:</code> A physical piece of hardware that I own. There may be a time that I reference hardware that I don\u2019t own. Not sure if it is useful to differentiate between the 2.</li> <li><code>Ingredient:</code> An ingredient to use in a recipe</li> <li><code>Issue:</code>: A problem. Typically, this will have some possible solutions to it detailed.</li> <li><code>Meeting:</code> A meeting that I had. Typically, this will have</li> <li><code>Overview:</code> A entry point for an idea. Typically, this is the top of a hierarchy of nodes. Also known as a hub.</li> <li><code>Person:</code>: A note about a physical unique person</li> <li><code>Project:</code> A particular project that I am working on</li> <li><code>Recipe:</code> A cooking recipe</li> <li><code>Research:</code>Typically, this is a dump of information to figure something out. I often do this when I am shopping for something.</li> <li><code>[ ] XYZ Task |</code>: This one has unique as it has a check box to indicate if it is done. This is something that can objectively be completed. XYZ is optional. Typically, it will be the name of a project. Often times I will link to a bunch of issues.</li> </ul> <p>I got the idea form google structured data. This is a way to add context to a specific thing to remove ambiguity.</p> <p>If it doesn\u2019t have a prefix it is just some random chunk of data that I wanted to capture and I have no idea where it fits.</p> <p>I find this helpful for a bunch of reasons:</p> <ul> <li>Finding a particular node</li> </ul> <p>I will often times want to link to a node. I will put a word in a bracket and hit <code>space s w</code>. This will open a telescope window in neovim that I can further narrow down based on the prefix. I link between these quite often. These produce back links. If I want to find nodes related to the noun I can simply grep the node id.</p> <ul> <li>Provide a sort of index because I am too lazy to maintain an index in the <code>dex</code> folder.</li> </ul> <p>I also find that I can use this a form of indexing in <code>changes.md</code> file for finding the thing that I want.</p>","tags":["google"]},{"location":"617/index.html#baking","title":"Baking","text":"","tags":["google"]},{"location":"617/index.html#recipe","title":"Recipe","text":"","tags":["google"]},{"location":"617/index.html#task","title":"Task","text":"<p>A task is something that can objectively be completed. Typically, It will be a task for a noun.</p> <p>Tags:</p> <ul> <li>task (required)</li> <li>PROJECT_NAME</li> </ul>","tags":["google"]},{"location":"617/index.html#retrospect","title":"Retrospect","text":"<ul> <li>Entity, noun, thing, \u2026 What would the proper word be?</li> <li>Is research a noun?</li> </ul>","tags":["google"]},{"location":"617/index.html#see-also","title":"See also","text":"<ul> <li>Other note taking structures</li> </ul>","tags":["google"]},{"location":"618/index.html","title":"Other note taking structures","text":"","tags":["notetaking"]},{"location":"618/index.html#my-method","title":"My method","text":"<p>See How I organize my notes as this is constantly changing.</p>","tags":["notetaking"]},{"location":"618/index.html#para-method","title":"PARA method","text":"<p>See blog entry for more details.</p>","tags":["notetaking"]},{"location":"618/index.html#mischa-van-den-burg","title":"Mischa van den burg","text":"<p>Another zettelkasten style note taking method</p> <p>Another vim and bash workflow found at https://mischavandenburg.com/zet/neovim-zettelkasten/</p>","tags":["notetaking"]},{"location":"618/index.html#sonke-ahrens","title":"Sonke Ahrens","text":"<p>Zettelkasten with 3 different kind of notes</p> <ul> <li>fleeting</li> </ul> <p>Temporary note that at some point should be moved over to a permanent note with the intent that will be consumed.</p> <ul> <li>permanent</li> </ul> <p>This should be atomic. Understandable without context, links to other nodes.</p> <ul> <li>literature</li> </ul> <p>A summary of some thing. Not really useful for me</p>","tags":["notetaking"]},{"location":"619/index.html","title":"Project: Neovim editor","text":"<p>Neovim is the editor that I use for my dotfiles</p> <p>Must have plugins:</p> <ul> <li>Telescope</li> </ul>","tags":["neovim","project"]},{"location":"62/index.html","title":"Zettelkasten search engine","text":"<ul> <li>crawler</li> <li>indexer</li> <li>Page Rank algorithm</li> </ul> <p>See also:</p> <ul> <li>generic web search engine</li> <li>bleeve</li> </ul> <p>Meta:</p> <pre><code>#project #architecture\n</code></pre>"},{"location":"620/index.html","title":"Google structured data","text":"<p>A <code>td+json</code> data attached to a webpage to specify a particular context to a page.</p>"},{"location":"621/index.html","title":"Issue: saving files in vim updates the modified time stamp","text":"","tags":["issue","neovim"]},{"location":"622/index.html","title":"Issue: Generating documentation for nvim plugins","text":"<p>I found https://github.com/aspeddro/pandoc.nvim/blob/main/Makefile which references <code>lemmy-help</code>.</p>","tags":["homelab","raspberrypi"]},{"location":"623/index.html","title":"Overview: Zettelkasten definition","text":"","tags":["overview","notetaking"]},{"location":"624/index.html","title":"Information normalization in note taking","text":"<p>The idea of normalization is well know in databases. Not so much for everyday life.</p> <p>Pros:</p> <ul> <li>Able to reconnect a not to different areas</li> </ul> <p>For example, a concept in linear algebra can be used in computer graphics, physics, and mathematics. One idea linked in multiple places. Why retake notes when you don\u2019t have to</p> <p>Cons:</p> <ul> <li>Notes scattered everywhere</li> </ul> <p>That\u2019s why I use neovim and zellij to help managed file spaghetti.</p>"},{"location":"625/index.html","title":"Project: dotfiles (dotfiles)","text":"<p>What I consider the configuration that makes up my workflow. My core setup is wezterm, zellij, and neovim.</p> <p>https://github.com/jlrickert/dotfiles</p>","tags":["project","dotfiles","macosx","freebsd","ubuntu","debian"]},{"location":"625/index.html#project-architecture","title":"Project architecture","text":"<p>Ubuntu for testing</p>","tags":["project","dotfiles","macosx","freebsd","ubuntu","debian"]},{"location":"625/index.html#issues-ran-into-while-building","title":"Issues ran into while building","text":"<ul> <li>Stupid MacOSX docker permissions</li> </ul>","tags":["project","dotfiles","macosx","freebsd","ubuntu","debian"]},{"location":"625/index.html#things-that-i-have-tried","title":"Things that I have tried","text":"<ul> <li>managing with chezmoi</li> </ul>","tags":["project","dotfiles","macosx","freebsd","ubuntu","debian"]},{"location":"626/index.html","title":"Current Homelab topology","text":"","tags":["homelab","networking"]},{"location":"626/index.html#dns","title":"DNS","text":"<p>I have my beelink box running opensense handling internal DNS. I have them setup to forward to quad9. Currently they are running on proxmox</p> <p>See DNS task to see how to setup.</p>","tags":["homelab","networking"]},{"location":"626/index.html#network-layout","title":"Network layout","text":"","tags":["homelab","networking"]},{"location":"626/index.html#main-network-19216850024","title":"Main network 192.168.50.0/24","text":"<p>Core devices. These are physical devices. Hopefully I will never have more than 18.</p> <pre><code>192.168.50.1/24 A beelink.int.jlrickert.me\n192.168.50.2/24 A proxmox.int.jlrickert.me\n192.168.50.3/24 A wifi.int.jlrickert.me\n192.168.50.4/24 A truenas.int.jlrickert.me\n192.168.50.5/24 A pve.int.jlrickert.me\n</code></pre> <p>DHCP will be between 192.168.50.50/24 to 192.168.50.200/24</p> <p>Applications</p> <pre><code>rtr1.int.jlrickert.me      CNAME eq12.int.jlrickert.me\nap1.int.jlrickert.me       CNAME be550.int.jlrickert.me\nns1.int.jlrickert.me       CNAME pihole-1.int.jlrickert.me\nns2.int.jlrickert.me       CNAME pihole-2.int.jlrickert.me\nnextcloud.int.jlrickert.me CNAME app-1.int.jlrickert.me\nproxmox.int.jlrickert.me   CNAME trooper.int.jlrickert.me\n</code></pre>","tags":["homelab","networking"]},{"location":"626/index.html#other-virtual-machines-on-1921686024","title":"Other Virtual machines on 192.168.60/24","text":"<p>Is this a good idea that it is on a different network?</p> <pre><code>192.168.50.71 A php71.int.jlrickert.me\n192.168.50.74 A php74.int.jlrickert.me\n192.168.50.81 A php81.int.jlrickert.me\n</code></pre>","tags":["homelab","networking"]},{"location":"626/index.html#wireguard-things","title":"Wireguard things","text":"<p>Network will be 192.168.150.0/24</p>","tags":["homelab","networking"]},{"location":"626/index.html#work-things","title":"Work things","text":"<p>Work mock network will be on a separate network at 10.1.0.0/16</p>","tags":["homelab","networking"]},{"location":"626/index.html#web-interfaces","title":"Web interfaces","text":"<ul> <li>opnsense: &lt;192.168.50.1&gt;</li> <li>Access point: 192.168.50.3</li> </ul>","tags":["homelab","networking"]},{"location":"626/index.html#other-considerations","title":"Other considerations","text":"","tags":["homelab","networking"]},{"location":"626/index.html#vlans","title":"VLANS","text":"<p>Don\u2019t plan on using as I don\u2019t want to spend time working on it.</p>","tags":["homelab","networking"]},{"location":"626/index.html#see-also","title":"See also","text":"<ul> <li>Homelab</li> </ul>","tags":["homelab","networking"]},{"location":"627/index.html","title":"Person: VTuber Mischa van den Burg","text":"<ul> <li>\ud83d\udcfa Zettelkhasten</li> </ul>","tags":["person"]},{"location":"628/index.html","title":"Streamer: rwxrob","text":"<p>The streamer whose name is Rob Muhlestein</p>","tags":["streamer"]},{"location":"629/index.html","title":"[x] Homelab Task | setup pfSense on ts140","text":"<p>Setup pfSense on ts140</p> <p>Had to figure out how to install the thing. See instructions for details.</p>","tags":["task","homelab","pfsense","freebs"]},{"location":"629/index.html#see-also","title":"See also","text":"<ul> <li>Homelab</li> </ul>","tags":["task","homelab","pfsense","freebs"]},{"location":"63/index.html","title":"How does a generic search engine work for the web","text":"<p>A search engine gives a sorted list of page results based on a query. The order is determined by a rank. This rank is determined by a set of parameters.</p> <p>For example, a page\u2019s rank could be determined by TF*IDF for each query term.</p>"},{"location":"63/index.html#terminology","title":"Terminology","text":"Term Description webserver crawler gathers information from the web indexer gathers various metrics in a page Page rank algoritm gives a rank based on how many times a url is referenced by another page url frontier queue of links to crawl robots.txt Forward index <code>document: word[]</code> Inverted index <code>word: document[]</code> Term frequency (TF) unique word count / word count Inverse document frequency (IDF) count of documents with unique word / document count <p>Meta:</p> <pre><code>tags: #architecture #swe #csci\n</code></pre>"},{"location":"630/index.html","title":"Ingredient: King Author all purpose flour","text":"<ul> <li>11.7% protein</li> <li>King Author</li> </ul>","tags":["ingredient","baking","flour"]},{"location":"631/index.html","title":"Company: King Arthur","text":"","tags":["company"]},{"location":"632/index.html","title":"Ingredient: Hard red wheat","text":"","tags":["baking","ingredient"]},{"location":"633/index.html","title":"Issue: Host only adapter not working in UTM","text":"<p>It would be nice for the host only adapter to work.</p>","tags":["macosx","qemu","virtualization"]},{"location":"634/index.html","title":"Beelink mini computers","text":"<p>There is a mini computer that has a 3 port 3.5G link that could be used for pfSense</p>"},{"location":"635/index.html","title":"Overview: Proxmox (proxmox)","text":"","tags":["proxmox","virtualization","debian"]},{"location":"635/index.html#installation-process","title":"Installation process","text":"","tags":["proxmox","virtualization","debian"]},{"location":"636/index.html","title":"Feature: search domain in DNS","text":"<p>Discovered a way to resolve the FQDN with just only host name using a feature called search domains.</p>","tags":["feature","dns"]},{"location":"637/index.html","title":"Place: Taste of India St Louis Park","text":"<p>An Indian restaurant located by work in St Louis Park</p> <pre><code>5617 Wayzata Blvd,\nSt. Louis Park MN55416\n</code></pre>"},{"location":"638/index.html","title":"Place: St Louis Park, MN","text":"","tags":["place"]},{"location":"639/index.html","title":"Research: 2024 WiFi upgrade","text":"<p>My MBP supports WiFi 6E.</p> <p>My old router is r7000. I get roughly 512 Mbits/sec. Like half out on the deck.</p> <p>6 vs 6E might be the same with the MBP</p>","tags":["research","hardware"]},{"location":"639/index.html#setups","title":"Setups","text":"","tags":["research","hardware"]},{"location":"639/index.html#raxe300","title":"RAXE300","text":"<p>Pros:</p> <p>Cons:</p> <ul> <li>overly expensive</li> </ul>","tags":["research","hardware"]},{"location":"639/index.html#wx630ep","title":"wx630ep","text":"<ul> <li>2.5gb port</li> <li> <p>power and optional POE</p> </li> <li> <p>https://www.youtube.com/watch?v=OdpCMqhmdcI</p> </li> </ul> <p>Roughly 1200 Mbits/sec or 570 Mbits/sec at 50ft</p> <p>https://www.netgear.com/business/wifi/access-points/wax630ep/</p>","tags":["research","hardware"]},{"location":"639/index.html#asus-rt-axe7800","title":"ASUS RT-AXE7800","text":"<ul> <li>6E</li> <li>230 USD</li> </ul>","tags":["research","hardware"]},{"location":"639/index.html#asus-rt-ax88u-pro-ax6000","title":"ASUS RT-AX88U PRO AX6000","text":"<ul> <li>Not wifi 6E</li> <li>has 2.5G lan</li> </ul>","tags":["research","hardware"]},{"location":"639/index.html#be9300-be550","title":"BE9300 (BE550)","text":"<ul> <li>WiFi 7</li> <li>280 USD</li> <li>1 2.5G wan port</li> <li>4 2.5G lan port</li> </ul>","tags":["research","hardware"]},{"location":"639/index.html#deco-be63","title":"Deco BE63","text":"<p>Mesh router</p> <ul> <li>300 USD</li> <li>4 2.5G lan port</li> </ul>","tags":["research","hardware"]},{"location":"639/index.html#eap772-and-tl-sg1082-m2","title":"EAP772 and TL-SG1082-M2","text":"<ul> <li>WiFi 7</li> <li>300 USD</li> <li>8 lan USD</li> <li>Need a 2.5G POE injector (30 USD)</li> </ul>","tags":["research","hardware"]},{"location":"639/index.html#retrospect","title":"Retrospect","text":"<p>Decided on the BE550</p>","tags":["research","hardware"]},{"location":"64/index.html","title":"Top gear for warlock","text":"Item Slot Source Description Grimhorns of the Sinister Savant Head Magmorax (aberrus 7) tier set Magmorax\u2019s Fourth Collar Neck Magmorax (aberrus 7) <p>Aberrus</p> Slot Item Source Comment Head Grimhorns of the Sinister Savant Magmorax (7) Tier set Neck Magmorax\u2019s Fourth Collar Magmorax (7) Shoulders Amice of the Sinister Savant Neltharion Tier set Cloak Voice of the Silent Star Scalecommander Sarkareth Chest Cursed Robes of the Sinister Savant Zskarn Tier set Wrist Clasps of the Diligent Steward Zskarn Gloves Grips of the Sinister Savant Neldris Tier set Belt Discarded Creation\u2019s Restraint Neldris Legs Coattails of the Rightful Heir Scalecommander Sarkareth Boots Treads of Fractured Realities Neltharion Ring Onyx Impostor\u2019s Birthright Neltharion Ring Entropic Convergence Loop Essence of Shadow Trinket Vessel of Searing Shadow Essence of Shadow S tier Trinket Ominous Chromatic Essence Neldris S tier Staff Erethos, the Empty Promise Scalecommander Sarkareth Slot Item Source Comment Head Cragshaper\u2019s Fitted Hood Neltharion\u2019s Lair Neck Bromach\u2019s Disentombed Locket Uldaman Shoulders Molten Magma Mantle Neltharus Cloak Putrid Carapace Neltharion\u2019s Lair Chest Tunic of Smoldering Ire Neltharion\u2019s Lair Wrist Sunfrost Wristwraps Neltharion\u2019s Lair Gloves Gloves of the Mountain Conquest Neltharion\u2019s Lair Belt Lost Hero\u2019s Waist Wrap Uldaman Legs Miner\u2019s Sturdy Trousers Uldaman Boots Ancient Crosswrapped Sandals Uldaman Ring Loop of Vitriolic Intent Neltharion\u2019s Lair Ring Loop of Pulsing Veins The Underrot Trinket Irideus Fragment Halls of Infusion S tier Trinket Time-Breaching Talon Uldaman Staff Infinite Dragonspire Uldaman <pre><code>tags: #wow #warlock\n</code></pre>"},{"location":"640/index.html","title":"Bake: Fourth of July focaccia","text":"","tags":["baking","bake","sourdough"]},{"location":"640/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Whole wheat flour 500g turkey red Water 400g starter 100g salt 13g","tags":["baking","bake","sourdough"]},{"location":"640/index.html#time-log","title":"Time log","text":"<ul> <li>2024-07-04 10:24 fed starter</li> <li>2024-07-04 19:45 (mixed ingredients)</li> <li>2024-07-06 11:00 Pulled out of the refrigerator</li> <li>2024-07-06 13:00 Baked</li> </ul>","tags":["baking","bake","sourdough"]},{"location":"641/index.html","title":"Ingredient: Turkey red wheat berries","text":""},{"location":"642/index.html","title":"Ingredient: King Arthur\u2019s bread flour 12.7%","text":"<ul> <li>12.7% protein</li> <li>King Author</li> </ul>","tags":["baking","ingredient"]},{"location":"643/index.html","title":"Overview: Unix style search and replace utilities","text":"<p>Example usage when running an interactive terminal</p>"},{"location":"643/index.html#key-programs","title":"Key programs","text":"<ul> <li><code>fd</code> or <code>find</code></li> </ul> <p>Also known as fdfind on some systems</p> <ul> <li>rg (ripgrep) or <code>grep</code></li> <li>fzf</li> </ul> <p>Interactive filter</p>"},{"location":"643/index.html#fzf","title":"fzf","text":""},{"location":"643/index.html#ripgrep","title":"ripgrep","text":"<ul> <li><code>rg &lt;REGEX_PATTERN&gt;</code></li> </ul> <p>Simple usage is doing a regexp on a local project. This will spit out an easy to consume digest of the file and the lines it is found. Also respects <code>.gitignore</code>.</p>"},{"location":"644/index.html","title":"Keg searching techniques","text":"<p>Searching strategies that work well with knut. I use a Unix searching strategy on the CLI.</p>","tags":["knut","keg"]},{"location":"645/index.html","title":"My current zettelkasten note taking setup","text":"<p>This is the setup and tooling that I use</p> <p>This is an evolving setup and is still quite unstable. I use a combination of neovim, knut, keg and a bunch of custom scripts.</p> <p>The reason for building my own system is because I needed a system where I could didn\u2019t have to fight the system for capturing things and later being able to find them later. Things like notion and obsidian are problematic because I always fight with the wysiwyg. There also lock you into there platform. Obsidian does a bunch of custom stuff that makes syncing a bigger PITA than it should.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#programs-and-dependencies","title":"Programs and dependencies","text":"<ul> <li>bat</li> <li>dotfiles</li> <li>fd-find</li> <li>fzf</li> <li>knut</li> <li>mods</li> <li>neovim</li> <li>prettier</li> <li>ripgrep</li> <li>yq</li> <li>zellij</li> </ul>","tags":["knut","zettelkasten"]},{"location":"645/index.html#command-and-software","title":"Command and software","text":"","tags":["knut","zettelkasten"]},{"location":"645/index.html#neovim","title":"Neovim","text":"<p>My main editor. I use telescope\u2019s built in search features. Word search and grep search for finding content. Telescope file finder if I already know the node number.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#knut","title":"Knut","text":"<p>I use this for searching against all kegs for content. At some point I want to centralize a lot of the functionality to here. Eventually, zet and keg will be a part of this.</p> <p>Configuration in <code>~/.config/knut/config.yaml</code>. This holds the locations for all of my kegs. I then use <code>yq</code> to query the information needed for other scripts.</p> <pre><code># yaml-language-server: $schema=https://raw.githubusercontent.com/jlrickert/knutjs/main/packages/knut-core/knutSchema.json\nformat: yaml\nversion: draft-0.1\nplugins:\n  - name: date\n    enabled: true\nkegs:\n  - url: ~/repos/github.com/jlrickert/zet/docs\n    alias: pub\n  - url: ~/repos/github.com/jlrickert/br8kthru-zet/docs\n    alias: br8kthru\n  - url: ~/repos/github.com/jlrickert/zettel/docs\n    alias: priv\n  - url: ../../repos/github.com/rwxrob/zet/docs\n    alias: rwxrob\n  - url: ../../repos/bitbucket.org/jared52/zet/docs\n    alias: ecw\n</code></pre> <p>To install run <code>npm i -g @jlrickert/knutjs-cli@0.4.1</code></p> <p>At the time of writing this knut is a mess as I am doing a lot of refactoring. Just did a lot of experiments to see what works and what doesn\u2019t.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#keg","title":"keg","text":"<p>I use a modified keg program. To install run <code>go install github.com/jlrickert/keg/cmd/keg@latest</code>.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#zet","title":"zet","text":"<p>I use <code>zet</code> as way to select the keg that I want to work against with.</p> <p><code>zet</code> gets the location using the command <code>KEGS=\"$(yq \".kegs[] | .alias\" \"${HOME}/.config/knut/config.yaml\")\"</code>.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#zets","title":"zets","text":"<p>I use to use it before I figured out Telescope. I need may need to go back to this as it may offer an opportunity to use callbacks between operations on my keg.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#mods","title":"mods","text":"<p>ChatGPT on the CLI. I can pipe my node entries to it to feed it information about a topic. It is vim filter compatible for doing a bunch of fancy stuff like rewriting sections of code.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#zellij","title":"zellij","text":"<p>A better tmux. Still a bit buggy but good enough. I keep my keybindings as close as possible to tmux. Sticking with the defaults I find is better over the long run. I need to have some sort of tiling manager as I often need to have a couple nodes up.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#publishing","title":"Publishing","text":"<p>Have not found a good solution yet as everything I find assumes the name of the file is the title. Checkout https://jlrickert.github.io/zet/index.html. This is a proof of concept using mkdocs.</p>","tags":["knut","zettelkasten"]},{"location":"645/index.html#future-plans","title":"Future plans","text":"<ul> <li>Look into switching to either asciidoc or emacs org mode</li> </ul> <p>Markdown is a mess of a standard and I would like more power</p> <ul> <li>Replace keg with my own that I can control. This will be part of knut</li> <li>Rebuild everything around a new standard rather than keg-spec</li> </ul>","tags":["knut","zettelkasten"]},{"location":"646/index.html","title":"Project: keg (keg)","text":"<p>My customizations to keg. A binary for working with a single keg.</p>","tags":["keg"]},{"location":"647/index.html","title":"Overview: Neovim Telescope Plugin","text":"<p><code>fzf</code> like chooser in neovim</p>","tags":["overview","telescope","neovim"]},{"location":"648/index.html","title":"Ingredient: Einkorn wheat berries","text":"","tags":["flour","baking"]},{"location":"649/index.html","title":"Overview: My Note taking system","text":"<p>Based on a zettelkhasten. Originally, it is based on the keg spec but I have diverged slightly. He is more focused on writing just writing in general. I am more interested on creating technical documentation.</p>","tags":["overview","notetaking"]},{"location":"649/index.html#see-also","title":"See also","text":"<ul> <li>How I organize my notes</li> <li>My current zettelkasten note taking setup</li> </ul>","tags":["overview","notetaking"]},{"location":"65/index.html","title":"Recommended warlock spec for Aberrus bosses","text":"Boss best spec Kazzara any The Amalgamation Chamber Zskarn destro - single Assault of the Zaqali destro - multi Echo of Neltharion destro - multi <pre><code>#wow #warlock #gaming\n</code></pre>"},{"location":"650/index.html","title":"Overview: keg specification","text":"<p>A zettelkasten like specification written by rob.</p>"},{"location":"651/index.html","title":"Overview: keg","text":"<p>Keg program written by rob</p>","tags":["notetaking","keg","zettelkasten","knowledgemanagement"]},{"location":"652/index.html","title":"Reusable Mariadb SQL scripts on the CLI","text":"<p>This is a tricky that I have been playing around with for managing Mariadb databases.</p> <pre><code>SELECT * FROM seo_301s WHERE redir_url = @redir_url;\n</code></pre> <pre><code>#!/usr/bin/env bash\nREDIR_URL=$1\n\nmysql -h localhost -u devel -p -D devdb -e \"set @redir_url='${REDIR_URL}'; source ./query.sql\"\n</code></pre>","tags":["mariadb","sql","cli","bash"]},{"location":"653/index.html","title":"Overview: Mariadb","text":"<p>A fork of MySQL</p>","tags":["mariadb","sql"]},{"location":"653/index.html#installation","title":"Installation","text":"","tags":["mariadb","sql"]},{"location":"653/index.html#macosx","title":"MacOSX","text":"<pre><code>brew install mysql-client\n</code></pre> <p>Add <code>/opt/homebrew/opt/mysql-client/bin</code> to path. This can be done with the path scripts that have in my dotfiles</p>","tags":["mariadb","sql"]},{"location":"653/index.html#scripting","title":"Scripting","text":"<p>Examples:</p> <ul> <li>reusable script</li> </ul>","tags":["mariadb","sql"]},{"location":"654/index.html","title":"Overview: MacOSX (macosx)","text":"","tags":["macosx","os","unix"]},{"location":"655/index.html","title":"Handy pathing scripts","text":"<p>This is trick that I learned from rob that I use in my dotfile.</p> <p>Here is a snippet:</p> <pre><code>_pathappend() {\n    for arg in \"$@\"; do\n        test -d \"$arg\" || continue\n        PATH=${PATH//\":$arg:\"/:} # remove all occuences of `:$arg:` from the PATH\n        PATH=${PATH/#\"$arg:\"/}   # remove `\"$arg:\"` from the the beginning of the string\n        PATH=${PATH/%\":$arg\"/}   # remove `\":$arg` from the end of the string\n        export PATH=\"${PATH:+\"$PATH:\"}$arg\"\n    done\n}\n\n# prepend to path if it exists\n_pathprepend() {\n    for arg in \"$@\"; do\n        test -d \"$arg\" || continue\n        PATH=${PATH//:\"$arg:\"/:}\n        PATH=${PATH/#\"$arg:\"/}\n        PATH=${PATH/%\":$arg\"/}\n        export PATH=\"$arg${PATH:+\":${PATH}\"}\"\n    done\n}\n</code></pre> <p>Example usage</p> <pre><code>_pathprepend \\\n    /usr/local/go/bin \\\n    /usr/local/bin \\\n    \"${SCRIPTS}\" \\\n    \"${HOME}/.local/bin\" \\\n    \"${XDG_DATA_HOME}/flutter/bin\" \\\n    \"${CARGO_HOME}/bin\" \\\n    \"${FNM_HOME}\" \\\n    \"${HOME}/.config/emacs/bin\" \\\n    \"${PNPM_HOME}\" \\\n    \"${XDG_DATA_HOME}/go/bin\" \\\n    \"${DOTNET_ROOT}\"\n\n_pathappend \\\n    /usr/local/bin \\\n    /usr/local/sbin \\\n    /usr/local/games \\\n    /usr/games \\\n    /usr/sbin \\\n    /usr/bin \\\n    /snap/bin \\\n    /sbin \\\n    /bin\n</code></pre>","tags":["dotfiles","bash","zsh"]},{"location":"656/index.html","title":"Issue: stupid MacOSX permissions crap","text":"<p>MacOSX handles permissions in a special way. I ran into this issue on previous projects as well as well as my dotfiles. On mac the UID and GUI are below 1000. On Linux user accounts need to be 1000 or greater.</p> <p>The problem that I had is that I wanted the home directory mounted to <code>/home/${username}</code> to have the same uid and guid as the created user.</p>","tags":["macosx","dotfiles"]},{"location":"656/index.html#wip-solution","title":"WIP solution","text":"","tags":["macosx","dotfiles"]},{"location":"656/index.html#dockerfile","title":"dockerfile","text":"<p><code>add-user.sh</code>:</p> <pre><code>#!/bin/bash\n\n# Get the UID, GID, and USERNAME from environment variables (passed during docker run)\nUSER_ID=${LOCAL_UID:-1000}\nGROUP_ID=${LOCAL_GID:-1000}\nUSERNAME=${USERNAME:-user}\n\necho \"Starting with UID : $USER_ID, GID: $GROUP_ID, USERNAME: $USERNAME\"\n\n# Create a group with the specified GID\ngroupadd --gid \"${GROUP_ID}\" \"${USERNAME}\"\n\n# Create a user with the specified UID, GID, and username\nuseradd --shell /bin/bash --uid \"${USER_ID}\" --gid \"${GROUP_ID}\" --non-unique --create-home \"${USERNAME}\"\n\necho \"$USERNAME ALL=(ALL:ALL) NOPASSWD:ALL\" &gt; \"/tmp/${USERNAME}_sudo\"\nvisudo -cf \"/tmp/${USERNAME}_sudo\" &amp;&amp; cat \"/tmp/${USERNAME}_sudo\" &gt;&gt; /etc/sudoers\nrm \"/tmp/${USERNAME}_sudo\"\n\n# Change ownership of the working directory\nchown -R \"${USERNAME}:${USERNAME}\" \"/home/${USERNAME}\"\n\n# Switch to the new user\nexec su - \"${USERNAME}\" -c \"cd /home/${USERNAME}; exec /bin/bash\"\n</code></pre> <p><code>dockerfile</code>:</p> <pre><code>FROM ubuntu:24.04\n\nRUN apt-get update &amp;&amp; apt-get install -y sudo locales \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/* \\\n    &amp;&amp; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\nENV LANG en_US.utf8\n\nCOPY ./lib/add-user.sh /usr/local/bin/\n\nRUN chmod +x /usr/local/bin/add-user.sh\n\nENTRYPOINT [ \"/usr/local/bin/add-user.sh\" ]\n</code></pre>","tags":["macosx","dotfiles"]},{"location":"656/index.html#build-script","title":"Build script","text":"<pre><code>#!/usr/bin/env bash\n\nset -o errexit  # exit if non-zero status code is returned\nset -o nounset  # exit if undefined variable is used\nset -o pipefail # exit if no-zero status code is returned in a pipeline\n\nSCRIPT_DIR=$(dirname \"$(realpath \"$0\")\")\nPROJECT_DIR=$(realpath \"$SCRIPT_DIR/..\")\n\nUSER_ID=$(id -u)\nGROUP_ID=$(id -g)\nUSERNAME=$(id -un)\n\ncd \"${PROJECT_DIR}\"\ndocker build -t dotfiles-ubuntu -f Dockerfile.ubuntu .\n</code></pre>","tags":["macosx","dotfiles"]},{"location":"656/index.html#run-script","title":"Run script","text":"<pre><code>#!/usr/bin/env bash\n\nset -o errexit  # exit if non-zero status code is returned\nset -o nounset  # exit if undefined variable is used\nset -o pipefail # exit if no-zero status code is returned in a pipeline\n\nSCRIPT_DIR=$(dirname \"$(realpath \"$0\")\")\nPROJECT_ROOT=$(realpath \"$SCRIPT_DIR/..\")\n\nUSER_ID=$(id -u)\nGROUP_ID=$(id -g)\nUSERNAME=$(id -un)\n\ndocker run -it --rm \\\n    --mount \"type=bind,source=${PROJECT_ROOT},target=/home/${USERNAME}/.local/share/dotfiles\" \\\n    --workdir \"/home/${USER}\" \\\n    --env \"LOCAL_UID=${USER_ID}\" \\\n    --env \"LOCAL_GID=${GROUP_ID}\" \\\n    --env \"USERNAME=${USERNAME}\" \\\n    dotfiles-ubuntu \"$@\"\n</code></pre>","tags":["macosx","dotfiles"]},{"location":"657/index.html","title":"Overview: Website development (webdev)","text":"<p>Official HTML standard may be found at whatwg</p> <p>Official aria roles are found at https://w3c.github.io/html-aria</p> <p>Official spec created by the w3c</p>","tags":["overview","webdev","html","css"]},{"location":"657/index.html#examples","title":"Examples","text":"<ul> <li>data tables</li> <li>Adding custom fonts</li> <li>Handling overflows</li> </ul>","tags":["overview","webdev","html","css"]},{"location":"657/index.html#debugging-tricks","title":"Debugging tricks","text":"<ul> <li>Viewing CSS on interactive elements</li> </ul>","tags":["overview","webdev","html","css"]},{"location":"658/index.html","title":"How to add custom fonts to a website","text":""},{"location":"658/index.html#generic-fonts","title":"Generic fonts","text":"<p>Generic fonts include <code>serif</code>, <code>sans-serif</code>, <code>cursive</code>, <code>fantasy</code>, <code>monospace</code>.</p>"},{"location":"658/index.html#custom-fonts","title":"Custom fonts","text":"<p>Example using arial font. Usually pointless because most OS ship with it already.</p> <pre><code>@font-face {\n  font-family: \"Arial\";\n  src:\n    url(\"fonts/Arial.woff2\") format(\"woff2\"),\n    url(\"fonts/Arial.woff\") format(\"woff\"),\n    url(\"fonts/Arial.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n</code></pre> <p>Example usage with sans-serif as the backup</p> <pre><code>body {\n  font-family: \"Arial\", sans-serif;\n}\n\nh1,\np {\n  font-family: \"Arial\", sans-serif;\n}\n</code></pre>"},{"location":"658/index.html#font-formats","title":"Font formats","text":"<ul> <li>woff2 (recomended)</li> <li>woff (oldish)</li> <li>ttf (old school compatibility)</li> </ul>"},{"location":"658/index.html#font-weights-and-styles","title":"Font weights and styles","text":""},{"location":"658/index.html#dynamic-fonts","title":"Dynamic fonts","text":"<p>Only need to create 1 font face for different weights and styles. Need to figure out if weight and stretch are implicit.</p> <pre><code>@font-face {\n  font-family: \"MyVariableFont\";\n  src:\n    url(\"fonts/MyVariableFont.woff2\") format(\"woff2\"),\n    url(\"fonts/MyVariableFont.woff\") format(\"woff\"),\n    url(\"fonts/MyVariableFont.ttf\") format(\"truetype\");\n  font-weight: 100 900; /* Defines the range of weights */\n  font-stretch: 50% 100%; /* Defines the range of widths */\n  font-display: swap; /* Optional but recommended */\n}\n</code></pre> <p>Also known as OpenType Font variations.</p> Axis Name CSS Value Weight wght Width wdth Slant slnt Optical Size opsz Italics ital <p>See googles variable font docs for more information.</p>"},{"location":"658/index.html#performance","title":"performance","text":"<p>Research <code>font-display: swap</code> and <code>font-display: block</code>.</p>"},{"location":"658/index.html#performance_1","title":"Performance","text":"<ul> <li>See improving cls with blocking font loading</li> </ul>"},{"location":"659/index.html","title":"Arial font","text":"<p>A sans serif font. It comes shipped with in windows</p>"},{"location":"660/index.html","title":"Overview: Bash scripting (bash)","text":"","tags":["bash","cli"]},{"location":"660/index.html#script-template","title":"Script template","text":"<pre><code>#!/usr/bin/env bash\n\nset -o errexit  # exit if non-zero status code is returned\nset -o nounset  # exit if undefined variable is used\nset -o pipefail # exit if no-zero status code is returned in a pipeline\n\nSCRIPT_DIR=$(cd -- \"$(dirname -- \"${BASH_SOURCE[0]}\")\" &amp;&gt;/dev/null &amp;&amp; pwd)\n</code></pre> <p>[!NOTE]</p> <p>Don\u2019t use env if you don\u2019t have to. MacOSX is stupid. Prefer <code>#!/bin/bash</code> See rwxrob personal keg on reasons why.</p>","tags":["bash","cli"]},{"location":"660/index.html#see-also","title":"See also","text":"<ul> <li>Context Management</li> </ul> <p>This plays a role with package management</p> <ul> <li>Os fingerprinting</li> <li>export PATH trick</li> <li>Bash completions</li> <li>Colors in bash scripting</li> </ul>","tags":["bash","cli"]},{"location":"660/index.html#handy-executables","title":"Handy executables","text":"<ul> <li><code>entr</code></li> <li><code>rsync</code></li> </ul>","tags":["bash","cli"]},{"location":"660/index.html#integrations","title":"Integrations","text":"<ul> <li>reusable SQL script with mariadb</li> </ul>","tags":["bash","cli"]},{"location":"661/index.html","title":"[x] Homelab Task | setup proxmox","text":"<p>Installing proxmox is as simple as installing on ventoy and booting up.</p> <p>Completed like a week ago from 2024-07-14</p>","tags":["task","homelab","proxmox"]},{"location":"662/index.html","title":"Overview: Pi-Hole","text":"<p>Pi-Hole is a distribution of Linux that blocks ad on a network. Initially designed to run on the low powered raspberry pi.</p>"},{"location":"662/index.html#cluster","title":"Cluster","text":"<p>There is a backup feature that can be used to copy configuration between instances</p>"},{"location":"663/index.html","title":"Overview: Raspberry pi (pi)","text":"<p>Low powered mini computer.</p>","tags":["raspberrypi","homelab","hardware"]},{"location":"663/index.html#example-use-cases","title":"Example use cases","text":"<ul> <li>Pi-Hole</li> </ul>","tags":["raspberrypi","homelab","hardware"]},{"location":"664/index.html","title":"[ ] Dotfiles Task | create a zetq script","text":"<p><code>zetq</code> is a bash script that may be used to query information about the meta data for my notes.</p>","tags":["task","dotfiles"]},{"location":"664/index.html#subtasks","title":"Subtasks","text":"","tags":["task","dotfiles"]},{"location":"664/index.html#create-specification","title":"[ ] Create specification","text":"<p>See spec for details.</p>","tags":["task","dotfiles"]},{"location":"664/index.html#implement","title":"[ ] Implement","text":"<p>for query meta information about my notes</p> <p>Create a zetq script to query meta data for my Zettelkasten.</p> <p>Zettelkasten</p>","tags":["task","dotfiles"]},{"location":"665/index.html","title":"SPEC: <code>zetq</code>","text":"<p>Search through</p>","tags":["spec","knut","zettelkasten"]},{"location":"665/index.html#example-use-cases","title":"Example use cases","text":"<ul> <li>Find nodes that have a specific set of tags</li> <li>Filter out nodes that have dates in them</li> <li>Modify specific tags</li> </ul>","tags":["spec","knut","zettelkasten"]},{"location":"666/index.html","title":"Project: Personal Zettelkasten (notetaking)","text":"<p>This is the project for all my notes.</p> <p>Here are my current kegs</p>","tags":["zettelkasten","notetaking","project"]},{"location":"667/index.html","title":"[x] Homelab Task | setup DNS","text":"<p>Setup 2 pi holes for my homelab.</p> <p>9.9.9.9 and 149.112.112.112</p>","tags":["task","homelab","pihole","dns"]},{"location":"667/index.html#installation-process-steps","title":"Installation process steps","text":"<ul> <li>Install 2 [Ubuntu] version 24.04 on proxmox that is running on trooper.</li> <li>Roughly 2G and 2 CPU is what I have setup. Also ensure they boot up on startup</li> <li>For networking I use the following setup</li> </ul> <p><code>192.168.50.20 pihole-1.int.jlrickert.me   192.168.50.21 pihole-2.int.jlrickert.me</code></p> <p>Use quad9 for dns</p> <ul> <li>Install: <code>curl -sSL https://install.pi-hole.net | bash</code></li> <li>Set password: <code>pihole -a -p</code></li> </ul>","tags":["task","homelab","pihole","dns"]},{"location":"668/index.html","title":"Overview: Quad9 DNS","text":"<p>9.9.9.9 and 149.112.112.112</p>","tags":["quad9","dns","www"]},{"location":"669/index.html","title":"Preferred click handling mouse down vs mouse up","text":"<p>website development</p> <ul> <li>Prefer mouse down for quicker feel</li> <li>Mouse up is used by default because of mobile click and dragging</li> </ul> <p>Something I learned from acorn1010.</p>","tags":["fleeting","webdev"]},{"location":"67/index.html","title":"My first user experience with keg","text":"<p>So far keg seems promising. I haven\u2019t really read much of the documentation much and only have really been poking around with documentation provided by keg in the bonzai tree.</p> <p>I keep running into the following error</p> <pre><code>error: cannot pull with rebase: You have unstaged changes.\nerror: please commit or stash them.\nNo remote repo has been setup. First create it and git push to it.\n</code></pre> <p>After some digging it turns out that in <code>.git/config</code> there is an option <code>rebase = true</code>. Removing this line solved the issue.</p>"},{"location":"67/index.html#meta","title":"Meta","text":"<pre><code>tags: #keg\n</code></pre>"},{"location":"670/index.html","title":"Overview: Ubuntu","text":"<p>Based on Debian</p>"},{"location":"670/index.html#networking","title":"Networking","text":"<ul> <li>networking</li> </ul> <p>See also networking in freebsd</p>"},{"location":"671/index.html","title":"Dialog in website design","text":"<p>Learned from acron1010</p> <p>Parts</p> <ul> <li>Backdrop</li> </ul> <p>Uses react portal</p> <ul> <li>Focus trap</li> </ul> <p>Tab index before and after the thing you want to trap</p>"},{"location":"672/index.html","title":"Overview: FreeBSD","text":"","tags":["freebsd","unix"]},{"location":"672/index.html#see-also","title":"See also","text":"<ul> <li>networking</li> <li>unix</li> </ul>","tags":["freebsd","unix"]},{"location":"673/index.html","title":"Overview: UNIX","text":"","tags":["unix"]},{"location":"674/index.html","title":"Overview: Debian","text":"","tags":["debian"]},{"location":"674/index.html#see-also","title":"See also","text":"<ul> <li>networking</li> </ul>","tags":["debian"]},{"location":"675/index.html","title":"Networking in Linux","text":"","tags":["networking","linux"]},{"location":"675/index.html#systemd","title":"Systemd","text":"","tags":["networking","linux"]},{"location":"675/index.html#network-manager","title":"Network manager","text":"","tags":["networking","linux"]},{"location":"676/index.html","title":"Overview: TrueNas","text":"<p>On open source NAS OS based on Debian. TrueNas core is recommended as TrueNas core looks like it will sunset at some point.</p> <p>Once an interface is setup with DHCP it doesn\u2019t like to be changed. Would be nice to figure out how to do static IP addresses. See networking for ideas.</p>","tags":["debian","nas","truenas","linux"]},{"location":"677/index.html","title":"Techniques for handling scrolling","text":"<p>Website development trick to show the basics for handling scrolling.</p> <p>Example snippet for making content scrollable:</p> <pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"content\"&gt;...&lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>.container {\n  max-height: 300px;\n  overflow: auto;\n}\n\n.content {\n  height: 1000px;\n}\n</code></pre>","tags":["webdev","css","html"]},{"location":"678/index.html","title":"[ ] Neovim Task | hunk text object visual navigation issue","text":"<p><code>]c</code> in neovim doesn\u2019t go to the next hunk</p>","tags":["task","neovim"]},{"location":"679/index.html","title":"Software: <code>entr</code>","text":"<p>A tool built with go that provides a convenient watcher tool.</p>","tags":["bash","golang","cli","software"]},{"location":"680/index.html","title":"Overview: <code>rsync</code>","text":"","tags":["rsync","bash","cli"]},{"location":"681/index.html","title":"[ ] Dotfiles Task | create <code>sync-project</code> script","text":"<p>An idea that I had base on a blog post to use entr and rsync to synchronize local changes with remote as a change them.</p>","tags":["task","dotfiles","bash","cli"]},{"location":"682/index.html","title":"Place: Mill city running","text":"<p>Shoe store located in north east Minneapolis. Has a running group called mcr.</p>","tags":["running","mcr"]},{"location":"683/index.html","title":"Dispersed camping","text":""},{"location":"684/index.html","title":"Colors in bash scripting","text":"<pre><code>NOCOLOR=${NOCOLOR:-}\n[[ -t 1 ]] || NOCOLOR=y\ndeclare GOLD='\u001b[38;2;184;138;0m'\ndeclare RED='\u001b[38;2;255;0;0m'\ndeclare GREY='\u001b[38;2;100;100;100m'\ndeclare CYAN='\u001b[38;2;0;255;255m'\ndeclare GREEN='\u001b[38;2;0;255;0m'\ndeclare RESET='\u001b[0m'\n\nif [[ -n \"${NOCOLOR}\" ]] ; then\necho true\n  GOLD=\n  RED=\n  GREY=\n  CYAN=\n  GREEN=\n  RESET=\nfi\n</code></pre> <p>Example usage:</p> <pre><code>echo \"${GOLD}some goldtext${RESET}\"\necho \"regular text\"\necho \"${GREEN}this is green${RESET}and${RED}this is red${RED}\"\n</code></pre>"},{"location":"685/index.html","title":"Hardware: TP-Link BE550 (be550)","text":"<p>WIFI7 router with 5 2.5G Ethernet ports.</p> <p>Management is done through http://tplinkwifi.net/. How???</p>","tags":["hardware","personal","homelab"]},{"location":"685/index.html#configuration","title":"Configuration:","text":"<ul> <li>Multi-Link Operation (MLO) is on</li> </ul> <p>Current SSID:</p> <ul> <li>ravnet</li> <li>ravnet-6G</li> <li>ravnet-iot</li> <li>ravnet-iot-5G</li> <li>ravnet-mlo</li> </ul>","tags":["hardware","personal","homelab"]},{"location":"685/index.html#benchmarks","title":"Benchmarks","text":"<p>All measurements are Mbits/Sec</p> Client Server Bandwidth 1 Bandwidth 2 Bandwidth 3 Avg Desk S22+ 6G Desk MBP 6G 477 190 325 330 Desk S22+ 6G Desk MBP 2.4/5G 578 510 504 530 Desk S22+ 2.4/5G Desk MBP 6G 636 286 536 486 Desk S22+ 2.4/5G Desk MBP 2.4/5G 213 411 401 341 Desk S22+ 2.4/5G Desk MBP eth 674 654 723 683 Desk S22+ 6G Desk MBP eth 593 670 636 633 Deck S22+ 6G Desk MBP eth 19.7 32.0 35.8 29.2 Deck S22+ 2.4/5G Desk MBP eth 142 158 146 149 Deck MBP 6G TS140 108 145 82 Deck MBP 2.4/5G TS140 255 236 234 Deck MBP MLO TS140 122 260 260 Desk MBP MLO TS140 825 861 841 Desk MBP 6G TS140 536 557 764 Desk MBP eth TS140 852 855 852 Desk MBP eth TS140 2.5G 781 781 781 Desk MBP 6G TS140 2.5G 818 810 824 Desk MBP eth trooper 2.5G 994 941 941 Desk MBP 2.4/5G trooper 2.5G 1240 1310 1290 Desk MBP 6G trooper 2.5G 893 550 1250 Desk MBP 6 MLO trooper 2.5G 1300 1330 1290 TS140 Trooper 2340 2350 2333 ns1 ns2 23300","tags":["hardware","personal","homelab"]},{"location":"685/index.html#see-also","title":"See also","text":"<p>For for information see private notes.</p>","tags":["hardware","personal","homelab"]},{"location":"686/index.html","title":"Place: Utepils","text":"<p>Really nice brewery</p>","tags":["brewery","uteplils","place"]},{"location":"687/index.html","title":"Thirsty Thursdays Theo Trail Runners","text":"<p>Running group that meets up every Thursday at 6pm at Utepils. Like 10-20 minute drive from the office.</p>","tags":["running","trail-running","grouprun","brewery"]},{"location":"687/index.html#see-also","title":"See also","text":"<ul> <li>Time log</li> </ul>","tags":["running","trail-running","grouprun","brewery"]},{"location":"688/index.html","title":"Activity: Running","text":"<ul> <li>For race times see 852</li> </ul>","tags":["activity","running"]},{"location":"688/index.html#groups-groups","title":"groups groups","text":"<ul> <li>Mill city running</li> <li>Theo worth trail running with Thirsty Thursdays</li> <li>Camden running group</li> </ul>","tags":["activity","running"]},{"location":"688/index.html#see-also","title":"See also","text":"<p>For more information see my private notes.</p>","tags":["activity","running"]},{"location":"689/index.html","title":"View CSS on interactive elements","text":"<p>An example would be an interactive menu. Hover over it. Hit <code>f8</code>. Profit. This is assuming google chrome.</p>","tags":["css","webdev","javascript","browser"]},{"location":"69/index.html","title":"Zsh things (zsh)","text":"<p>Config files:</p> File name Description $ZDOTDIR/.zshenv Environmental variables should go here $ZDOTDIR/.zprofile if login shell. $ZDOTDIR/.zshrc if interactive shell. $ZDOTDIR/.zlogin if login shell $ZDOTDIR/.zlogout if login shell ${TMPPREFIX}_ (default is /tmp/zsh_) /etc/zsh/zshenv /etc/zsh/zprofile if login shell /etc/zsh/zshrc /etc/zsh/zlogin if login shell /etc/zsh/zlogout if login shell <p>Interactive shell loading sequence</p> <ol> <li>/etc/zshenv</li> <li>~/.zshenv</li> <li>/etc/zshrc</li> <li>~/.zshrc</li> </ol> <p>When using interactive, login shell sessions:</p> <ol> <li>/etc/zshenv</li> <li>~/.zshenv</li> <li>/etc/zprofile</li> <li>~/.zprofile</li> <li>/etc/zshrc</li> <li>~/.zshrc</li> <li>/etc/zlogin</li> <li>~/.zlogin</li> <li>~/.zlgout</li> <li>/etc/zlogout</li> </ol>","tags":["unix","cli","linux"]},{"location":"69/index.html#useful-ticks","title":"Useful ticks","text":"<p>A way to detect what kind of environment the shell is in.</p> <pre><code>case \"$-\" in\n*i*) echo \"Interactive and login shell\" ;;\n*) echo \"Non Interactive shell\" ;;\nesac\n</code></pre>","tags":["unix","cli","linux"]},{"location":"690/index.html","title":"Event: Two rivers 10 mile 2024","text":"<p>10 mile race at two rivers Wisconsin.</p>","tags":["running","event"]},{"location":"690/index.html#see-also","title":"See also","text":"<ul> <li>Two rivers 10 mile</li> </ul>","tags":["running","event"]},{"location":"691/index.html","title":"Event: Fargo half marathon 2024","text":"<p>Fargo half marathon 2024 June 1. Was a different route than normal due to the rain.</p>","tags":["running","event"]},{"location":"691/index.html#see-also","title":"See also","text":"<p>For more information see my private notes.</p>","tags":["running","event"]},{"location":"692/index.html","title":"Event: Ely marathon 2023","text":"<p>On Saturday, Sep 23, 2023</p> <p>Results: https://elymarathon.itsyourrace.com/Results/5269/2023/115113/1201</p> <p>For more details see private notes.</p>","tags":["running","event"]},{"location":"693/index.html","title":"Event: Fargo half marathon 2019","text":"<p>First official half marathon.</p> <p>Got a time of 1:36:28.</p>","tags":["event","running"]},{"location":"694/index.html","title":"Issue: Rounded borders for a table header","text":"<p><code>border-radius</code> doesn\u2019t work when the display is <code>table-header-group</code> or <code>table-cell</code>. This is the default value for a <code>thead</code> which is the thing that I want to style. Wrapping a <code>thead</code> in a div doesn\u2019t work as it is not a valid tag with a table. It automatically gets removed in the DOM when you try to add it.</p> <p>Problems with changing the display to something else (untested):</p> <ul> <li>Breaks behavior of <code>rowspan</code> and <code>colspan</code> attributes on <code>th</code> tags</li> </ul> <p>See the official spec for <code>thead</code>.</p>","tags":["issue","webdev","datavisualization"]},{"location":"694/index.html#example","title":"Example","text":"<pre><code>&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th rowspan=\"2\"&gt;Student ID&lt;/th&gt;\n      &lt;th colspan=\"2\"&gt;Student&lt;/th&gt;\n      &lt;th rowspan=\"2\"&gt;Major&lt;/th&gt;\n      &lt;th rowspan=\"2\"&gt;Credits&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;th&gt;First name&lt;/th&gt;\n      &lt;th&gt;Last name&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;3741255&lt;/td&gt;\n      &lt;td&gt;Martha&lt;/td&gt;\n      &lt;td&gt;Jones&lt;/td&gt;\n      &lt;td&gt;Computer Science&lt;/td&gt;\n      &lt;td&gt;240&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;3971244&lt;/td&gt;\n      &lt;td&gt;Victor&lt;/td&gt;\n      &lt;td&gt;Nim&lt;/td&gt;\n      &lt;td&gt;Russian Literature&lt;/td&gt;\n      &lt;td&gt;220&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;4100332&lt;/td&gt;\n      &lt;td&gt;Alexandra&lt;/td&gt;\n      &lt;td&gt;Petrov&lt;/td&gt;\n      &lt;td&gt;Astrophysics&lt;/td&gt;\n      &lt;td&gt;260&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre> <pre><code>thead {\n  display: flex;\n  border: 2px solid black;\n  border-radius: 20px;\n  border-bottom: 2px solid rgb(160 160 160);\n  background-color: #2c5e77;\n  color: #fff;\n}\n\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n  font-family: sans-serif;\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n}\n\ntbody {\n  background-color: #e4f0f5;\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n\ntbody &gt; tr &gt; td:last-of-type {\n  text-align: center;\n}\n</code></pre>","tags":["issue","webdev","datavisualization"]},{"location":"694/index.html#things-tried","title":"Things tried","text":"<p>Styling <code>th</code> items directly with borders utilizing the <code>:last-of-type</code> and <code>:first-of-type</code> selectors.</p>","tags":["issue","webdev","datavisualization"]},{"location":"695/index.html","title":"Tabular data in HTML","text":"<p>Official spec is found on html.spec.whatwg.org</p> <p>Not recommended for layout</p>","tags":["webdev","datavisuals"]},{"location":"695/index.html#common-issues","title":"Common issues","text":"<ul> <li>Table header borders</li> </ul>","tags":["webdev","datavisuals"]},{"location":"696/index.html","title":"Layout strategies for webdev","text":"","tags":["issue","webdev"]},{"location":"696/index.html#binary-space-partitioning-with-flex","title":"Binary space partitioning with flex","text":"","tags":["issue","webdev"]},{"location":"697/index.html","title":"World wide web consortium (w3c)","text":"<p>Creates the standards for the web. See there website for more details. Similar to WHATWG.</p> <p>There is also https://www.w3.org/</p>","tags":["issue","w3c"]},{"location":"698/index.html","title":"WHATWG community (whatwg)","text":"<p>They create standards. See official website for more details. Similar to w3c</p>","tags":["html","whatwg","webdev"]},{"location":"699/index.html","title":"Hardware: Beelink EQ12 N100","text":"<p>A 2024-07-31 with the intent as using as a opnsense router</p> <p>A mini computer that has 2 2.5G Ethernet ports. See the beelink website for more details.</p>","tags":["hardware","opnsense","router","homelab","personal","beelink","networking","ethernet"]},{"location":"7/index.html","title":"A Linux distribution called Pop_OS!","text":"<p>Pop_OS! is a linux distribution base on debian linux developed and maintained by the for profit company System76.</p> <p>Tags:</p> <pre><code>#pop-os\n</code></pre>"},{"location":"70/index.html","title":"Useful oh my zsh plugins list","text":"plugin desciption vscode alias alias only volt adds completions for volta vi-mode vi mode stuff for the prompt cp creates function cpv that uses rsync golang alias only battery gh alias only nvm z jump to directires quickly <pre><code>#cli #unix #linux\n</code></pre>"},{"location":"700/index.html","title":"Overview: Beelink (beelink)","text":"<p>Builds mini computers</p>","tags":["beelink","hardware"]},{"location":"701/index.html","title":"[ ] Homelab Task | Explore next cloud","text":"<p>Explore Next Cloud on my homelab. I Installed as VM on proxmox as an app on TrueNas.</p>","tags":["homelab","task"]},{"location":"701/index.html#apps","title":"Apps","text":"<ul> <li>Contacts</li> </ul>","tags":["homelab","task"]},{"location":"702/index.html","title":"Bash trick to run things in parallel","text":"<p>An attempt to speed up a creating an index for baking</p> <pre><code>function baking() {\n    [ -f \"${BAKING_INDEX}\" ] &amp;&amp; rm \"${BAKING_INDEX}\"\n\n    baking_process_id() {\n        local id=\"$1\"\n        local meta_file=\"${id}/meta.yaml\"\n        if [ ! -f \"${meta_file}\" ]; then\n            return\n        fi\n\n        local baking\n        baking=$(yq '.tags[] | select(. == \"baking\")' \"${meta_file}\")\n        local date\n        date=$(yq '.date' \"${meta_file}\")\n        if [ -z \"${baking}\" ] || [ \"${date}\" = \"null\" ]; then\n            return\n        fi\n\n        local title\n        title=$(head -n 1 \"${id}/README.md\" | sed 's/^# //1')\n        echo \"- ${date} [${title}](../${id})\"\n    }\n\n    export -f baking_process_id # Export function for parallel\n\n    local entries=()\n    while IFS= read -r line; do\n        entries+=(\"${line}\")\n    done &lt; &lt;(ku nodes | xargs -P 0 -n 1 -I {} bash -c 'baking_process_id \"$@\"' _ {})\n\n    # Write sorted entries to file\n    printf \"%s\\n\" \"${entries[@]}\" | sort -r &gt;\"${BAKING_INDEX}\"\n}\n</code></pre>"},{"location":"703/index.html","title":"Example fly out navigation menu in website development","text":"<p>An example may be found on the w3.org website</p> <p>This type of menu have the following structure</p> <pre><code>&lt;nav aria-labelledby=\"menulabel\" class=\"menu has-submenu closed\"&gt;\n  &lt;h2 id=\"aria-labelledby\" classname=\"hidden\"&gt;Some text about the menu&lt;/h2&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=aria-current=\"page\"&gt;Some text&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;/li&gt;\n    ...\n  &lt;/ul&gt;\n&lt;/nav\n</code></pre> <p>For styling each item should have the following things:</p> <ul> <li>visual and semantic element for current page</li> <li>may have indicator for already visited pages</li> </ul>","tags":["webdev","css","html"]},{"location":"704/index.html","title":"ts140 as a TrueNas server requirements","text":"<p>A possible use of my ts140 is to run it as a NAS running TrueNas. I also plan on running next cloud. I would need to upgrade my hardware.</p> <p>Ram requirements:</p> <ul> <li>8G min</li> </ul> <p>Looks like 3 HDD will be able to saturate my 2.5G Ethernet card.</p> <p>Requirements:</p> <ul> <li>need 2 5.25 to 3.5 adapters</li> <li>6 3.50 rails</li> <li>possibly fans if using enterprise HDD</li> </ul>","tags":["hardware","truenas","nas"]},{"location":"705/index.html","title":"Service announcement protocols","text":"<ul> <li>NetBIOS-NS</li> </ul> <p>Legacy NetBIOS name server. Advertises the SMB service NetBIOS Name. Can be required for legacy SMB1 clients to discover the server. When advertised, the server appears in Network Neighborhood).</p> <ul> <li>mDNS</li> </ul> <p>Multicast DNS. Uses the system Hostname to advertise enabled and running services. For example, this controls if the server appears under Network on MacOS clients.</p> <ul> <li>WS-Discovery</li> </ul> <p>Uses the SMB Service NetBIOS Name to advertise the server to WS-Discovery clients. This causes the computer appear in the Network Neighborhood of modern Windows OSes.</p>","tags":["networking","homelab"]},{"location":"706/index.html","title":"Styling tab focused items","text":"<p>Looks like the key attribute to look for is <code>:focus-target</code>.</p>","tags":["webdev","css","a11y"]},{"location":"707/index.html","title":"Favorite parking spot in the North Loop","text":"","tags":["parking","minneapolis"]},{"location":"708/index.html","title":"Refurbished enterprise data center HDD for NAS","text":"<p>Turns out there are a lot of refurbished HDD that you can find like half off compared to an equivalent NAS drives. Only issue is that they may be loud and require additional cooling.</p> <p>Look for EXOS, HGST, and other data center HDD providers.</p> Brand Model Speed year Seagate Exos ST4000NM0035 169/163 2016 <p>ST4000NM0035 seems to be a newer model than some of the other on amazon. A bit faster speed for the same price.</p>","tags":["storage","nas","hardware","datacenter","performance"]},{"location":"709/index.html","title":"Places that have good public WiFi in Minneapolis","text":""},{"location":"709/index.html#outdoors","title":"Outdoors","text":"<ul> <li>Utepils</li> </ul>"},{"location":"709/index.html#indoors","title":"Indoors","text":"<ul> <li>Spyhouse</li> </ul>"},{"location":"71/index.html","title":"How to handle conditionals in bash scripting","text":"<pre><code># Test if variable is not set or empty\nif [[ -z \"$xyz\" ]]; then\n    echo \"Variable xyz is empty or not set\"\nfi\n\n# Test if a variable is set and not empty\nif [[ -n \"$my_variable\" ]]; then\n    echo \"Variable my_variable is set and not empty\"\nfi\n\n# Test if two strings are equal\nif [[ \"$string1\" == \"$string2\" ]]; then\n    echo \"Strings are equal\"\nfi\n\n# Test if two strings are not equal\nif [[ \"$string1\" != \"$string2\" ]]; then\n    echo \"Strings are not equal\"\nfi\n\n# Test if two numbers are equal\nif [[ \"$num1\" -eq \"$num2\" ]]; then\n    echo \"Numbers are equal\"\nfi\n\n# Test if first number is greater than second\nif [[ \"$num1\" -gt \"$num2\" ]]; then\n    echo \"num1 is greater than num2\"\nfi\n\n# Test if first number is less than or equal to second\nif [[ \"$num1\" -le \"$num2\" ]]; then\n    echo \"num1 is less than or equal to num2\"\nfi\n\n# test if a command doesn't exist (using command -v)\nif ! command -v command &amp;&gt; /dev/null; then\n    echo \"command does not exist\"\nfi\n\n# another approach test if a command doesn't exist (using which - generally older)\nif ! which command &amp;&gt; /dev/null; then\n    echo \"command does not exist\"\nfi\n\n# Run if directory is found (using test command and &amp;&amp; for AND)\ntest -d build &amp;&amp; rm -r build/ # If build directory exists, remove it\n\n# Run if directory is NOT found (using test command and || for OR)\ntest -d build || mkdir build/ # If build directory does NOT exist, create it\n\n# Test if a file exists (-f)\nif [[ -f \"/path/to/file.txt\" ]]; then\n    echo \"File exists\"\nfi\n\n# Test if a directory exists (-d) - already shown, adding for completeness\nif [[ -d \"/path/to/directory\" ]]; then\n    echo \"Directory exists\"\nfi\n\n# Test if a file is readable (-r)\nif [[ -r \"/path/to/file.txt\" ]]; then\n    echo \"File is readable\"\nfi\n\n# Test if a file is writable (-w)\nif [[ -w \"/path/to/file.txt\" ]]; then\n    echo \"File is writable\"\nfi\n\n# Test if a file is executable (-x)\nif [[ -x \"/path/to/script.sh\" ]]; then\n    echo \"Script is executable\"\nfi\n\n# Test if it is a text file using regex with [[ ]]\nFILE=\"$(which \"$1\")\"\nif ! [[ \"$(file \"${FILE}\")\" =~ ASCII ]]; then\n    echo \"$1 is not an ASCII file\"\n    exit 1 # Exit with an error code\nfi\n\n# Combine conditions using &amp;&amp; (AND) in [[ ]]\nif [[ -f \"/path/to/file.txt\" &amp;&amp; -w \"/path/to/file.txt\" ]]; then\n    echo \"File exists and is writable\"\nfi\n\n# Combine conditions using || (OR) in [[ ]]\nif [[ -f \"/path/to/file.txt\" || -d \"/path/to/directory\" ]]; then\n    echo \"File exists or directory exists\"\nfi\n\n# Using a case statement for multiple distinct conditions\ncase \"$my_variable\" in\n    \"value1\")\n        echo \"Variable is value1\"\n        ;;\n    \"value2\" | \"value3\") # Multiple patterns for one case\n        echo \"Variable is either value2 or value3\"\n        ;;\n    *) # Default case\n        echo \"Variable is something else\"\n        ;;\nesac\n</code></pre>","tags":["cli","bash"]},{"location":"710/index.html","title":"Place: Wandering Leaf Brewing","text":"<p>Parking at Sibley Plaza. It is between downtown St Paul and the airport.</p> <ul> <li>31m drive from work</li> <li>40m drive from home</li> </ul>","tags":["place","brewery"]},{"location":"711/index.html","title":"Adding keyboard only navigation elements to websites","text":"<ul> <li><code>:focus-visible</code> is the pseudo element to target for tab focus.</li> </ul> <p>Typically, outline or box-shadow is targeted.</p> <p>Interactive elements to target, a, button, input</p> <ul> <li> <p>Add a skip list</p> </li> <li> <p>Drop-down menus should be able to be opened up with the keybaord</p> </li> </ul>","tags":["html","css","design","webdev","a11y"]},{"location":"711/index.html#see-also","title":"See also","text":"<ul> <li>https://css-tricks.com/keyboard-only-focus-styles/</li> </ul>","tags":["html","css","design","webdev","a11y"]},{"location":"712/index.html","title":"Time log: Minneapolis 20s and 30s something social meetup group","text":"<p>Time log for the M23SS group.</p> <ul> <li>2024-07-26 18:00 at Wandering Leaf brewing</li> <li>2024-08-02 19:00 at Hewing</li> </ul>","tags":["M23SS","meetup","social","timelog"]},{"location":"713/index.html","title":"Place: 12 Cider","text":"<p>Has couches inside. A good spot to work on things to burn up time. Closed at the end of 2024.</p>","tags":["place","brewery","publicwifi"]},{"location":"714/index.html","title":"Place: Minneapolis airport","text":"","tags":["travel","airport","minnesota","place"]},{"location":"715/index.html","title":"Place: Theodore Wirth Parkway","text":"<p>Lots of good trail running</p>","tags":["place","running","trail-running"]},{"location":"716/index.html","title":"Hardware: Luna Leadville pacer","text":"<p>Running sandal made by Luna that I bought on 2024-06-18.</p> <ul> <li>9mm stack</li> <li>sole is slippery when wet</li> <li>rubs on were the strap meets the shoe on the insides</li> </ul> <p>It gets better after 200 miles is what I have been finding</p> <ul> <li>rubs the balls of my feet if running 7 minute miles</li> </ul> <p>Haven\u2019t done enough fast runs in them yet.</p> <ul> <li>Shoe laces become loose when wet</li> <li>Tech straps are more than likely needed when running</li> </ul>","tags":["running","trail-running","luna","sandal","personal","hardware"]},{"location":"717/index.html","title":"Company: Luna (luna)","text":"<p>Company that makes running sandals. There line up tends to be on the thicker side.</p>","tags":["company","luna"]},{"location":"718/index.html","title":"Networking on MacOSX","text":"<p>Figure out where DNS gets resolved:</p> <pre><code>scutil --dns\n</code></pre>","tags":["macosx","networking","dns","ethernet","wifi"]},{"location":"718/index.html#troubleshooting","title":"Troubleshooting","text":"<p>Flush DNS:</p> <pre><code>sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n</code></pre>","tags":["macosx","networking","dns","ethernet","wifi"]},{"location":"719/index.html","title":"Target uses OpenTelemetry Logging for centralized logging","text":"<p>Target has implemented logging using OpenTelemetry . Not sure how they use it yet. They may have there own custom built system.</p> <p>https://opentelemetry.io/</p>","tags":["target","logging","design","operations"]},{"location":"72/index.html","title":"Pop_OS! setup","text":"<p>There are a few things that needs to done in order for things to work. There are a few issues:</p> <ul> <li>wifi</li> <li>watchman issues for jest</li> </ul> <p>Things that I want:</p> <ul> <li>I WANT THIS NOW!!!</li> </ul>"},{"location":"72/index.html#android-phone-syncing","title":"Android phone syncing","text":"<p>Install and KDE connect in both android and pc.</p>"},{"location":"72/index.html#hotkeys-and-keybindings","title":"Hotkeys and keybindings","text":"<p>Window management script</p> <pre><code>gsettings set org.gnome.mutter dynamic-workspaces false\ngsettings set org.gnome.desktop.wm.preferences num-workspaces 10\n\ngsettings set org.gnome.shell.keybindings switch-to-application-1  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-2  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-3  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-4  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-5  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-6  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-7  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-8  \"[]\"\ngsettings set org.gnome.shell.keybindings switch-to-application-9  \"[]\"\n\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-1  \"['&lt;Super&gt;1']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-2  \"['&lt;Super&gt;2']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-3  \"['&lt;Super&gt;3']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-4  \"['&lt;Super&gt;4']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5  \"['&lt;Super&gt;5']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6  \"['&lt;Super&gt;6']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-7  \"['&lt;Super&gt;7']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-8  \"['&lt;Super&gt;8']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-9  \"['&lt;Super&gt;9']\"\ngsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-10 \"['&lt;Super&gt;0']\"\n\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-1  \"['&lt;Super&gt;&lt;Shift&gt;1']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-2  \"['&lt;Super&gt;&lt;Shift&gt;2']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-3  \"['&lt;Super&gt;&lt;Shift&gt;3']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-4  \"['&lt;Super&gt;&lt;Shift&gt;4']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-5  \"['&lt;Super&gt;&lt;Shift&gt;5']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-6  \"['&lt;Super&gt;&lt;Shift&gt;6']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-7  \"['&lt;Super&gt;&lt;Shift&gt;7']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-8  \"['&lt;Super&gt;&lt;Shift&gt;8']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-9  \"['&lt;Super&gt;&lt;Shift&gt;9']\"\ngsettings set org.gnome.desktop.wm.keybindings move-to-workspace-10 \"['&lt;Super&gt;&lt;Shift&gt;0']\"\n</code></pre> <pre><code>#linux #workstation #distro\n</code></pre>"},{"location":"720/index.html","title":"Time log: Theo trail running with Thirsty Thursdays","text":"","tags":["timelog","running","trail-running","grouprun","brewery"]},{"location":"720/index.html#running-log","title":"Running Log","text":"<ul> <li>2024-10-17 First time with Lone Peak</li> <li>2024-10-03 First time running from the new place</li> <li>2024-09-11</li> <li>2024-07-25 First time running with luna\u2019s.</li> <li>2024-07-18 First run</li> </ul>","tags":["timelog","running","trail-running","grouprun","brewery"]},{"location":"721/index.html","title":"DNS on OPNsense","text":"<p>OPNsense has a few choices for DNS:</p>","tags":["opnsense","dns","networking"]},{"location":"722/index.html","title":"OPNSense for networking","text":"<p>Similar to pfSense. Seems to be better. However, KEA doesn\u2019t seem to be fully implemented yet.</p>","tags":["networking","opnsense","freebsd"]},{"location":"724/index.html","title":"Company: Target","text":"","tags":["company","target"]},{"location":"725/index.html","title":"Event: Biking with 20s 30s somethings","text":"<p>This event was canceled last minute.</p> <p>Biking event on 2024-07-28 with the M23SS starting at Como lake at 10:30 and going to Stillwater.</p> <p>From home it takes like 35 minutes by car (2.25 hours by bike).</p>","tags":["event","M23SS","meetup","biking"]},{"location":"725/index.html#100-mile-route","title":"100 mile route","text":"<ul> <li>Leave by 8</li> </ul>","tags":["event","M23SS","meetup","biking"]},{"location":"725/index.html#lazy-route","title":"Lazy route","text":"<ul> <li>leave by 9:45</li> </ul>","tags":["event","M23SS","meetup","biking"]},{"location":"726/index.html","title":"Place: Stillwater","text":"<p>Small town in Minnesota.</p>","tags":["place","minnesota"]},{"location":"727/index.html","title":"Place: Como lake","text":"","tags":["place","minnesota","twincities"]},{"location":"728/index.html","title":"Place: Minnesota (minnesota)","text":"","tags":["place","minnesota"]},{"location":"729/index.html","title":"Place: Little Falls (little-falls)","text":"<p>Place in Minnesota.</p>","tags":["place","minnesota","little-falls"]},{"location":"73/index.html","title":"Example of keyword searching with awk","text":"<p>Searching with keywords can be accomplished by running <code>ack keyword1|keyword2</code> and so on. This will give you the file and a line number. At some point I would like to create a bash script around this functionality to get a search engine like experience.</p> <p>Here is the example output of <code>ack 'example|ack'</code>:</p> <pre><code>20221115181409/README.md\n1:# Postman close order for table 15 example\n\n20221115183734/README.md\n1:# Example of keyword searching with awk\n3:Searching with keywords can be accomplished by running `awk keyword1|keyword2`\n</code></pre> <pre><code>#cli #linux\n</code></pre>"},{"location":"730/index.html","title":"Place: Tavern on First","text":"<p>Tavern on First is a bar in Little Falls.</p>","tags":["bar","littlefalls"]},{"location":"730/index.html#see-also","title":"See also","text":"<ul> <li>Facebook</li> <li>website</li> </ul>","tags":["bar","littlefalls"]},{"location":"731/index.html","title":"WOW expansions and seasons","text":"","tags":["wow","gaming"]},{"location":"731/index.html#vanilla","title":"Vanilla","text":"","tags":["wow","gaming"]},{"location":"731/index.html#burning-crusade","title":"Burning crusade","text":"<p>Released January 16, 2007</p>","tags":["wow","gaming"]},{"location":"731/index.html#wrath-of-the-lich-king","title":"Wrath of the Lich King","text":"<p>Released November 13, 2008</p>","tags":["wow","gaming"]},{"location":"731/index.html#cataclysm","title":"Cataclysm","text":"<p>Released December 7, 2010</p>","tags":["wow","gaming"]},{"location":"731/index.html#mists-of-pandaria","title":"Mists of Pandaria","text":"<p>Released September 25, 2012</p>","tags":["wow","gaming"]},{"location":"731/index.html#warlords-of-draenor","title":"Warlords of Draenor","text":"<p>Released November 13, 2014</p>","tags":["wow","gaming"]},{"location":"731/index.html#legion","title":"Legion","text":"<p>Released August 30, 2016</p>","tags":["wow","gaming"]},{"location":"731/index.html#battle-for-azeroth","title":"Battle for Azeroth","text":"<p>Released August 14, 2018</p>","tags":["wow","gaming"]},{"location":"731/index.html#shadowlands","title":"Shadowlands","text":"<p>Released November 23, 2020</p>","tags":["wow","gaming"]},{"location":"731/index.html#dragonflight","title":"Dragonflight","text":"<p>Released November 28, 2022</p>","tags":["wow","gaming"]},{"location":"731/index.html#season-4","title":"Season 4","text":"<p>Starts April 23, 2024 and ends July 2024</p>","tags":["wow","gaming"]},{"location":"731/index.html#the-war-within","title":"The war Within","text":"<p>Released August 26, 2024</p>","tags":["wow","gaming"]},{"location":"731/index.html#midnight","title":"Midnight","text":"<p>???</p>","tags":["wow","gaming"]},{"location":"731/index.html#the-last-titan","title":"The last titan","text":"<p>???</p>","tags":["wow","gaming"]},{"location":"732/index.html","title":"Event: Twin Cities Marathon 2024","text":"<p>The event starts at 8 a.m. in downtown Minneapolis on Sunday October 6th. This looks like it will be in the North Loop. Maybe I could park in my favorite spot and take public transport back it at after the race?</p>","tags":["event","race","marathon","running"]},{"location":"732/index.html#packet-pickup","title":"Packet pickup","text":"<p>Packet\u202fpick up will be available at the Health &amp; Fitness Expo at the Saint Paul RiverCentre on Friday, October 4 or Saturday, October 5.</p> <pre><code>175 West Kellogg Blvd\u202fSt. Paul, MN 55102\n\nFriday, October 4\n11 a.m. - 7\u202fp.m.\u202f\n\nSaturday, October 5\n10 a.m. - 6\u202fp.m.\n</code></pre> <p>My bib number is 3444</p> <p>Time was 3:47:04.</p>","tags":["event","race","marathon","running"]},{"location":"733/index.html","title":"Event: Wild Duluth 50K 2024","text":"<p>Starts at 8:00 AM at Jay Cooke State Park on Saturday October 19 2024 (2024-10-19). This is 2 weeks after Twin Cities Marathon</p> <ul> <li>Starts at Oldenburg Point.</li> <li>Ends at Bayfront festival park</li> <li>Weather to be around 50 to 60. Maybe some rain.</li> <li>Bag drop available at start line. Look for Black Toyota Tacoma</li> </ul> <p>LAST NAME, AND YOUR BIB NUMBER</p>","tags":["event","running","trail-running","ultra","duluth"]},{"location":"733/index.html#event-planning","title":"Event planning","text":"<ul> <li>Packet pickup at start line on race day</li> </ul> <p>Also available between 5 and 7 pm on Friday October 18 at Bayfront Festival Park</p> <ul> <li>Last bus from Bayfront Festival Park leaves at 7 am</li> <li> <p>Expect a 3h 11m drive (with bad traffic)</p> </li> <li> <p>Leave no later than 3:50 AM on Saturday. Roughly 157 miles.</p> </li> </ul>","tags":["event","running","trail-running","ultra","duluth"]},{"location":"733/index.html#other-miscellaneous-details","title":"Other miscellaneous details","text":"<ul> <li>First year using dynamic race numbering</li> </ul>","tags":["event","running","trail-running","ultra","duluth"]},{"location":"733/index.html#post-race","title":"Post race","text":"<ul> <li>Used Lone Peak 8</li> <li>6:53:39 Results</li> <li>Same bottleneck as the marathon now. My calves and hamstrings started to cramp up.</li> <li>Race started like 10 minutes late</li> </ul>","tags":["event","running","trail-running","ultra","duluth"]},{"location":"734/index.html","title":"Structured data on the web","text":"<p>To add context to websites schemas may be added to a web page. This essential declares what type of noun or nouns a website contains. For example, the home page may contain an organization schema. The details of a product may have a product schema and so on. See schemas for more details.</p>","tags":["webdev"]},{"location":"735/index.html","title":"Creating backlinks using using schema objects","text":"<p>This is an idea that I picked up when adding schemas to websites. Recently, I have been adding an entry to my zet.</p>","tags":["knowledgemanagement"]},{"location":"736/index.html","title":"Gear for dual training in swimming and running","text":"<p>There are a few runners in the Theo Trail runners that swim in the lakes around Theo.</p>","tags":["running","swimming"]},{"location":"737/index.html","title":"Place: Cedar lake near Theo","text":"<p>One of the cleaner lakes in Minneapolis.</p>","tags":["lake","swimming","theotrailrunners"]},{"location":"738/index.html","title":"Bake: Simple whole wheat focaccia","text":"","tags":["baking","sourdough","italian","food"]},{"location":"738/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Whole turkey red 250g Water 200g rye starter 50g salt 4g","tags":["baking","sourdough","italian","food"]},{"location":"738/index.html#time-log","title":"Time log","text":"<ul> <li>2024-07-28 11:23 Mixed ingredients</li> <li>2024-07-28 16:46 Spent some time kneading</li> <li>2024-07-28 22:16 Baked</li> </ul> <p>450f for 30 minutes in a cast iron skillet.</p>","tags":["baking","sourdough","italian","food"]},{"location":"739/index.html","title":"Ingredient: Turkey Red wheat flour","text":"<p>Made from Turkey Red wheat berries</p>","tags":["baking","ingredient"]},{"location":"74/index.html","title":"Git techniques and cheat sheet","text":"<ul> <li>Interactive add hunks to a commit:</li> </ul> <p>Run <code>git add -i</code>. What you want to do is patch. Enter the numbers of the files   to patch. This allows you to select specifically what you want to include in   your next commit.</p> <ul> <li>Undo the last commit and place them as unstaged commits</li> </ul> <p>Run <code>git reset HEAD^</code>. If you run git status right after you should should see   the items show as unstaged in the status</p> <ul> <li>Pulling in files from upstream</li> </ul> <p>Run <code>git pull upstream --rebase</code>. This will add the upstream changes to you   repo before your commits.</p> <ul> <li>Check for secrets commited</li> </ul> <p><code>git grep 'YOUR_SECRET</code> \u201c$(git rev-list \u2013all)\u201d</p> <p><code>git log -S 'YOUR_SECRET' --oneline --name-only --pretty=format:'%h %s'</code></p>"},{"location":"74/index.html#see-also","title":"See also","text":"<ul> <li>https://rtyley.github.io/bfg-repo-cleaner/</li> </ul>"},{"location":"74/index.html#meta","title":"Meta","text":"<pre><code>#cli #linux #git #unix\n</code></pre>"},{"location":"740/index.html","title":"Ingredient: Rye Berries","text":"","tags":["baking","ingredient"]},{"location":"741/index.html","title":"100% Rye sourdough starter","text":"<p>Has bit more of a sourness to it compared to a whole wheat starter.</p>","tags":["baking","sourdough"]},{"location":"742/index.html","title":"100% whole wheat sourdough starter","text":"","tags":["baking","sourdough"]},{"location":"743/index.html","title":"Ingredient: Einkorn wheat berries","text":"<p>Tastes slightly better then regular wheat. Bit harder to work with when making bread.</p>","tags":["baking","ingredient"]},{"location":"744/index.html","title":"Ingredient: Himalayan pink salt","text":"","tags":["ingredient","cooking"]},{"location":"745/index.html","title":"Testing raw performance of hard drives with dd","text":"<p>Testing write speed</p> <pre><code>time dd if=/dev/zero of=/path/to/file bs=1m count=30720\n</code></pre> <p>Testing read speed</p> <pre><code>time dd if=/path/to/file of=/dev/null bs=1m\n</code></pre> <p>[!NOTE]</p> <p><code>/path/to/file</code> is a file on the device</p>","tags":["storage","performance","nas"]},{"location":"746/index.html","title":"Bryn Mawr neighborhood","text":"<p>Area in Minneapolis right next to Theo. This is a wealthy neighborhood.</p>","tags":["housing","minneapolis","neighborhood"]},{"location":"747/index.html","title":"Harrison neighborhood","text":"<p>Borders Bryn Mawr. Right next to high crime zones but is not nearly as bad.</p> <p>Apparently gentrification going on in La Dona and Misfit Coffee.</p> <ul> <li>Broadway to Lowry in Northwest MPLS is one of the tougher neighborhoods in the city</li> <li>If there is ever any not-good activity going on in Harrison, it\u2019s typically on Glenwood between Penn Ave and Logan</li> </ul>","tags":["housing","rental","neighborhood","minneapolis"]},{"location":"748/index.html","title":"Company: The Stepping Stone Group","text":"<p>Property management company. They use appfolio. Has rentals available in the Harrison and Bryn mawr neighborhoods.</p> <ul> <li>The Stepping Stone Group Office Line (9-5pm M-F) : 612-500-6223</li> <li>The Stepping Stone Group EMERGENCY Line: 952-999-1414</li> <li>XCEL (Electric &amp; Power Outages): 1-800-895-4999</li> <li>Centerpoint Energy (Gas Service &amp; Gas Leaks): 612-372-4727</li> <li>Minneapolis Water, Sewage &amp; Trash: 612-673-1114</li> <li>General Minneapolis Questions: 612-673-3000</li> <li>Emergencies: 911</li> </ul>","tags":["realestate","company"]},{"location":"749/index.html","title":"App: appfolio","text":"<p>Property management application</p>","tags":["app","realestate"]},{"location":"75/index.html","title":"Tiling window management in windows with komorebi","text":"<p>A tiling window manager for Windows like i3. Here is an installation attempt and the things that I tried.</p>"},{"location":"75/index.html#from-source-method","title":"From source method","text":"<ul> <li>Clone and install komorebi</li> </ul> <p><code>bash   git clone https://github.com/LGUG2Z/komorebi.git</code></p> <ul> <li>Build and install (Source method)</li> </ul> <p>Building and installing requires having the rust development toolchain setup   and ahk installed. May also require dependency on [visual studio] stuff.</p> <p>Install with the following</p> <p><code>bash   cargo install --path komorebi --locked   cargo install --path komorebic --locked</code></p> <ul> <li>Configuration</li> </ul> <p>Copy over <code>komorebic.sample.ahk</code> or komorebic.ahk example on github gist.</p> <ul> <li>Start the process</li> </ul> <p><code>bash   komorebic start --await-configuration</code></p> <ul> <li>Stop the process</li> </ul> <p><code>bash   komorebic stop</code></p>"},{"location":"75/index.html#scoop-method","title":"Scoop method","text":"<p>The scoop method uses the scoop package manager.</p> <p>Meta:</p> <pre><code>tags: #workstation #rust\n</code></pre>"},{"location":"750/index.html","title":"Research on recommended rental companies","text":"","tags":["rental","housing","realestate","research"]},{"location":"750/index.html#dump-from-reddit","title":"Dump from Reddit","text":"<ul> <li>The stepping stone group</li> </ul> <p>Liked them for managing their own rentals.</p> <ul> <li>Urban Enterprises</li> </ul>","tags":["rental","housing","realestate","research"]},{"location":"750/index.html#not-recommended","title":"Not recommended","text":"<ul> <li>Renters Warehouse</li> </ul>","tags":["rental","housing","realestate","research"]},{"location":"751/index.html","title":"Community bread oven in the Harrison Neighborhood","text":"<p>There is a community bread oven located in the Harrison neighborhood. The community bread oven is located on the corner of 4th &amp; Morgan Ave behind the Redeemer community gardens</p> <p>See https://www.hnampls.org/bread-oven for more information</p>","tags":["baking","neighborhood","community"]},{"location":"752/index.html","title":"Rich text editors for website development","text":"<ul> <li>","tags":["wysiwyg","webdev"]},{"location":"753/index.html","title":"Hardware: 42\u201d Flexispot corner raiser","text":"<p>Corner riser that sits on top of a desk to allowing transitioning between sitting and standing. Around 320$ at the Office Depot. Cheaper than a full adjustable sizing desk. Keyboard tray takes up quite a bit of room when set the down position. Market seems to average about 50$ all the way up to 150$. 50$ seems to be the most common</p>","tags":["hardware","office","personal"]},{"location":"753/index.html#specifications","title":"Specifications","text":"<ul> <li> <p>Gas spring assisted (pneumatic pistons)</p> </li> <li> <p>Smooth and controlled assisted lift.</p> </li> <li>Maximum height: 19-11/16\u201d.</li> <li>Weight capacity: 35lb</li> <li>Removable keyboard tray</li> <li>Top width is 41\u201d</li> <li>Top depth is</li> <li>Base width is 23\u201d</li> <li>Base depth is 23\u201d</li> <li>Base depth is 31\u201d with removable tray</li> <li>Top depth is 22\u201d</li> <li>Top width is 41\u201d</li> <li>Top depth with tray is 31\u201d</li> <li>Top most corner to bottom corner is 24\u201d</li> <li>Top side edges is around 9\u201d with a slight angle</li> </ul>","tags":["hardware","office","personal"]},{"location":"753/index.html#photos","title":"Photos","text":"<p>Paddle on both sides that lock the vertical position.</p> <p></p> <p></p> <p></p>","tags":["hardware","office","personal"]},{"location":"754/index.html","title":"Place: Polish Palace","text":"<p>Bar in Sobieski near Little Falls.</p>","tags":["place","littlefalls","bar"]},{"location":"755/index.html","title":"Place: Sue falls","text":"<p>Place where Sue fell in near Little Falls.</p>"},{"location":"756/index.html","title":"Hardware: My hands","text":"<p>I have large skinny hands</p>","tags":["personal","wetware","hardware"]},{"location":"756/index.html#specifications","title":"Specifications","text":"<ul> <li>Wrist (where the crease is) to middle finger is 7.5\u201d</li> <li>watch to index is 8.5\u201d</li> <li>hand width is 3.5\u201d</li> </ul>","tags":["personal","wetware","hardware"]},{"location":"757/index.html","title":"React performance trick by using batching","text":"<p>The trick is to delay rendering. Learned this from acorn1010.</p> <p>TODO figure out how she did this</p> <pre><code>class Deleatedtaskrunner {\n  queue = new Dequeue() // array dequeue\n}\nuseEffect(() =&gt; {\n  const cancel = TASK_RUNNER.add(() =&gt; setRender(false))\n}))\n</code></pre>","tags":["react","performance","twitch","acorn1010"]},{"location":"758/index.html","title":"Blog with good tips about react performance","text":"<p>Blog that I learned about through acorn1010. Very performance oriented react.</p>","tags":["react","blog"]},{"location":"759/index.html","title":"Versioned database migration strategies","text":"<ul> <li>go-migrate</li> <li>sqlx</li> </ul>","tags":["operations","database"]},{"location":"76/index.html","title":"Harpoon keybindings in vscode","text":"<p>Settings for the VSCode Harpoon plugin. This is just a dump of the suggested keybindings for my reference.</p> <p>VScode</p> <pre><code>  {\n    \"key\": \"alt+a\",\n    \"commands\": [\"vscode-harpoon.addEditor\"]\n  },\n  {\n    \"key\": \"alt+e\",\n    \"commands\": [\"vscode-harpoon.editEditors\"]\n  },\n  {\n    \"key\": \"alt+p\",\n    \"commands\": [\"vscode-harpoon.editorQuickPick\"]\n  },\n  {\n    \"key\": \"alt+1\",\n    \"command\": \"vscode-harpoon.gotoEditor1\"\n  }\n</code></pre> <pre><code>// settings.json\n{\n  \"vim.leader\": \" \",\n  \"vim.normalModeKeyBindings\": [\n    {\n      \"before\": [\"&lt;leader&gt;\", \"a\"],\n      \"commands\": [\"vscode-harpoon.addEditor\"]\n    },\n    {\n      \"before\": [\"&lt;leader&gt;\", \"e\"],\n      \"commands\": [\"vscode-harpoon.editEditors\"]\n    },\n    {\n      \"before\": [\"&lt;leader&gt;\", \"p\", \"e\"],\n      \"commands\": [\"vscode-harpoon.editorQuickPick\"]\n    },\n    {\n      \"before\": [\"&lt;leader&gt;\", \"1\"],\n      \"commands\": [\"vscode-harpoon.gotoEditor1\"]\n    }\n  ]\n}\n</code></pre> <pre><code>tags: #workstation #vscode coding\n</code></pre>"},{"location":"760/index.html","title":"Bootcamp Career Foundry","text":"<p>Bootcamp based in Germany. Not as popular as some of the other ones in Minneapolis.</p>","tags":["career","education","bootcamp","programming"]},{"location":"761/index.html","title":"AI Group in Minneapolis called C.R.E.A.T.E.","text":"<p>Learned at the MSP Tech.</p>","tags":["meetup","msptech"]},{"location":"762/index.html","title":"MSP Tech meetup group (msptech)","text":"<p>A meetup group in Minneapolis that revolve around tech. Often on the weekends they have some coworking event at some coffee shop.</p> <p>https://www.meetup.com/msp-tech/</p>","tags":["msptech","meetup","coworking"]},{"location":"763/index.html","title":"Fieldkit hardware","text":"<p>Open source hardware and platform company</p> <ul> <li> <li>MSP tech</li> <li>Learned from Kate</li>","tags":["hardware","farming","sensors","iot","opensource"]},{"location":"764/index.html","title":"Jevons paradox reason why junior devs will not be replaced","text":"<p>Never get results of progress as we will always be pushing farthing.</p> <p>Idea that I Learned this from Sage.</p> <ul> <li>test automation as well</li> </ul> <p>See https://en.wikipedia.org/wiki/Jevons_paradox for the economic idea</p>","tags":["meetup","career","economics"]},{"location":"765/index.html","title":"Dave Farley has good content on CI/CD","text":"<p>Learned about from Sage</p> <p>Some highlights would be the strangler pattern.</p>","tags":["devops","cicd","agile","blog"]},{"location":"766/index.html","title":"Youtube channel Fireship","text":"<p>Learned about the channel during an event</p>","tags":["youtube","meetup"]},{"location":"767/index.html","title":"Smooth user input handling for webdev","text":"<p>Prefer earlier events. For example, on mousedown or on touchstart.</p>","tags":["webdev","performance"]},{"location":"767/index.html#touch-events","title":"Touch events","text":"<ul> <li>touchstart</li> <li>touchmove</li> <li>touchend</li> <li>touchcancel</li> </ul>","tags":["webdev","performance"]},{"location":"767/index.html#mouse-events","title":"Mouse events","text":"<ul> <li>click</li> <li>dblclick</li> <li>mouseup</li> <li>mousedown</li> </ul>","tags":["webdev","performance"]},{"location":"768/index.html","title":"Person: Yoytuber Sebastiondaschner","text":"<p>Note taking and kubernetes stuff</p>","tags":["blogger","youtuber","kubernetes"]},{"location":"769/index.html","title":"Kubernetes and notetaking blog","text":"<p>I ran into a [blogger] and [You tuber] that looks like he has decent content. He has content on the following topics:</p> <ul> <li>note taking strategies</li> <li>kubernetes</li> </ul> <p>blogger</p>","tags":["kubernetes","notetaking","blog","youtube"]},{"location":"77/index.html","title":"Article: Really good article about software engineering principles","text":"<p>A co-worker shared a really good article on good development principles.</p> <p>Key take ways</p> <ul> <li>Separation of concerns is overrated. Use Locality of behavior instead.</li> <li>Crafting Interpreters might be worth checking out</li> </ul>","tags":["swe","article"]},{"location":"770/index.html","title":"JavaScriptMN meetup group (jsmn)","text":"<p>JavaScript meetup group in Minnesota. Usually meetup once a month on Wednesdays at 6:00 pm.</p>","tags":["javascript","meetup","jsmn"]},{"location":"771/index.html","title":"Time log: JavaScriptMN","text":"<p>Time log for jsmn</p>","tags":["jsmn","timelog","meetup"]},{"location":"771/index.html#2024-07-31","title":"2024-07-31","text":"<p>Meetup online</p> <p>In person IRL at Datasite in downtown Minneapolis. Partnering up with Frontend Masters.</p> <ul> <li>Max Rahder was talking about neomjs.</li> <li>Brian Mitchell talked about https://css-tip.com</li> </ul>","tags":["jsmn","timelog","meetup"]},{"location":"772/index.html","title":"[x] Homelab Task: OPNSense installation on Beelink EQ12 N1000","text":"<p>First OS installation on my beelink.</p> <p>Initial password is <code>opnsense</code> (yes I changed it)</p>","tags":["beelink","hardware","opnsense","networking","firewall","vpn","wireguard","homelab","task"]},{"location":"772/index.html#dhcp","title":"DHCP","text":"<p>Initially used KEA for dhcp. Using the ISC DHCPv4 for now because I don\u2019t know how to set the DNS on it.</p> <p>Follow how to for setting up WireGuard.</p>","tags":["beelink","hardware","opnsense","networking","firewall","vpn","wireguard","homelab","task"]},{"location":"773/index.html","title":"Company: Frontend Masters","text":"","tags":["frontendmasters","company"]},{"location":"774/index.html","title":"JavaScript multi head library neomjs","text":"<p>Learned about this from Max Rahder during a meetup</p>","tags":["javascript","jsmn","meetup","library"]},{"location":"775/index.html","title":"Technique for aborting <code>fetch</code> in progress","text":"<pre><code>useEffect(() =&gt; {\n  const abortController = new AbortController();\n\n  const fetchData = async () =&gt; {\n    dispatch(requestStarted());\n\n    try {\n      fetch(url, { signal: abortController.signal });\n\n      dispatch(requestSuccessful({ data }));\n    } catch (e) {\n      dispatch(requestFailed({ data }));\n    }\n  };\n  fetchData();\n\n  return () =&gt; {\n    abortController.abort();\n  };\n});\n</code></pre>"},{"location":"776/index.html","title":"Companies that hire Software Engineers in the Twin Cities","text":"<p>Here are some of the companies that do software development where there main offices is located in the twin cities.</p>","tags":["career","job","swe","minneapolis","stpaul","twincities"]},{"location":"776/index.html#companies","title":"Companies","text":"<ul> <li>Ecreativeworks</li> </ul> <p>Builds custom websites mainly for industrial companies</p> <ul> <li>TotalExpert</li> </ul> <p>Financial services startup in St Louis park.</p> <ul> <li>Code42</li> </ul> <p>Tech company whose head quarters are in downtown Minneapolis. They do security and data integrity.</p> <ul> <li>Schwan\u2019s company</li> </ul> <p>Company located in Bloomington. They do have software engineers employed.</p> <ul> <li>Calabrio</li> </ul> <p>Branding company startup. They do have an office in Minneapolis but employees work remote.</p> <ul> <li> <p>APi group</p> </li> <li> <p>OATI</p> </li> <li> <p>Level2</p> </li> </ul> <p>United healthcare company located in Eden prairie</p> <ul> <li>Gravie</li> </ul> <p>Health insurance startup located in Minneapolis. Roughly 200-500 employees.</p> <ul> <li>Infinite Campus</li> </ul> <p>k-12 company</p> <ul> <li>Jamf</li> </ul> <p>Workplace management for Apple based solutions.</p> <ul> <li>Optum</li> </ul>","tags":["career","job","swe","minneapolis","stpaul","twincities"]},{"location":"777/index.html","title":"Setting up Digital Ocean DDNS on OPNSense","text":"<p>OPNsense is able to periodical able to call this endpoint using the <code>ddclient</code> plugin. This needs to be manually installed. The plugin needs to be selected as the backend under general settings. Interval should be at least 600 as well. From there the user name should be the same as the value found on the avatar icon (top right) drop-down. Password is an API token created in the DigitalOcean interface. Mine will expire in like 1 month.</p> <p>General settings:</p> <ul> <li>interval: 600 or more (some services will ban you if you do too often)</li> <li>backend: <code>ddclient</code> (requires installing plugin)</li> </ul> <p>Accounts settings</p> <ul> <li>Service: Digitalocean</li> <li>Username: <code>jaredrickert52</code> (value found from avatar dropdown top right)</li> <li>password: (API token)</li> <li>zone: <code>jlrickert.me</code></li> <li>hostnames: <code>[vpn.jlrickert.me]</code></li> <li>check IP method: interface</li> <li>interface to monitor: WAN</li> </ul>","tags":["ddns","dns","opnsense","vpn","homelab","digital ocean"]},{"location":"777/index.html#attempts","title":"Attempts","text":"","tags":["ddns","dns","opnsense","vpn","homelab","digital ocean"]},{"location":"777/index.html#custom-patch","title":"Custom patch","text":"<p>Found something online that patched it in.</p> <pre><code>opnsense-patch -c plugins 9d8564c\n</code></pre> <p>Turns out just need to set this as the backend to use</p>","tags":["ddns","dns","opnsense","vpn","homelab","digital ocean"]},{"location":"777/index.html#api-and-cron","title":"Api and cron","text":"<p>Digital ocean provides an API endpoint to update DNS entries. Had ddclient installed and was just going to setup a simple cron job. This is FreeBSD as a base after all.</p> <p>Add the following custom configuration:</p> <pre><code>curl -X POST \\\n-H \"Content-Type: application/json\" \\\n-H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \\\n-d '{\"type\":\"A\",\"name\":\"www\",\"data\":\"__MYIP__\",\"priority\":null,\"port\":null,\"ttl\":1800,\"weight\":null,\"flags\":null,\"tag\":null}' \\\n\"https://api.digitalocean.com/v2/domains/__HOSTNAME__/records\"\n</code></pre> <p>http://checkip.dyndns.org/</p> <p>Of course don\u2019t forget to change the token. See script for full example.</p>","tags":["ddns","dns","opnsense","vpn","homelab","digital ocean"]},{"location":"778/index.html","title":"Place: Up Down","text":"<p>An arcade bar located in uptown.</p>","tags":["place","bar","uptown","minneapolis","twincities"]},{"location":"779/index.html","title":"OPNSense <code>opnsense-patch</code> utility","text":"<p>A tool for patching OPNSense. An example usage was one of my 1st uses (although failed to accomplish what I was trying to do).</p>","tags":["operations","sysadmin","opnsense","freebsd","vcs"]},{"location":"78/index.html","title":"Quick fix menus in vim","text":"<p>Quick fix is a windows for showing a list of all things of interest. It takes a input according to \u2018errorfmt\u2019.</p> <p>Example usage:</p> <pre><code>#This provides a list of python errors in modified files\nvim -q &lt;(git status -s | awk '$1 == \"M\" {print $2}' | xargs flake8)\n\n# show grepped items\nvim -q &lt;(rg --line-number --no-heading --column YOUR_REGEX)\n</code></pre> <p>Once the quickfix menu is loaded it may be viewed by running <code>:copen</code>.</p> <p>Example of available formats:</p> <pre><code>{filename}:{linenumber}:{optional_message}\n</code></pre> <p><code>linenumber</code> needs to be 1 or more.</p> <p>See also:</p> <ul> <li>docs</li> <li>guide</li> <li>cool technique</li> <li>error formats</li> </ul> <p>Meta:</p> <pre><code>#vim #cli #linux #unix\n</code></pre>"},{"location":"780/index.html","title":"Place: Hewing Hotel Rooftop","text":"<ul> <li>Located in the north loop.</li> <li>Bar on the rooftop</li> <li>Expensive hotel</li> </ul>","tags":["hotel","travel","place","northloop","bar"]},{"location":"781/index.html","title":"Zet schemas idea based on structured data","text":"<p>I started doing a pattern that is similar to what rwxrob has been doing where he prefixes the title with something. For example a note about a youtube video will have a \ud83d\udcfa emoji. This specifies the type of not it has. This looks similar to what  specifies. Structured google data also follows close to  but is a subtype. <p>Some issues that I run into is coming up with a good schema type that doesn\u2019t conflict with other tags. Do I need to make something other than just <code>tags</code> in <code>meta.yaml</code></p> <p>Schema that I tend to use</p> <ul> <li>Project:</li> </ul> <p>Something that may never be finished that can constantly be working on. Typically, many things will link to this.</p> <ul> <li>Place:</li> </ul> <p>An entity that has a physical location</p> <ul> <li>Hardware:</li> </ul> <p>Specific items that I own</p> <ul> <li>Time log:</li> </ul> <p>Log of when I do things for something</p> <ul> <li>Meeting:</li> </ul> <p>An event (event subtype) that represents a business meeting</p> <ul> <li>Event:</li> </ul> <p>A thing that happens at a specified date</p> <ul> <li> XYZ Task:</li> </ul> <p>A tasklog (another subtyp) where I document when I worked on a project (XYZ is the project) and the type of issues that I ran into.</p> <ul> <li>Issue:</li> </ul> <p>A problem that may have multiple solutions</p>","tags":["fleeting","schema","notetaking"]},{"location":"782/index.html","title":"Place: The Nordic WeWork building","text":"<p>Located in the North Loop.  Has a spot for coding if need to kill time. Coffee shop inside called FRGMNT Coffee.</p>","tags":["place","coffee","northloop"]},{"location":"783/index.html","title":"Task: TrueNas Installation on ts140","text":"<p>Installing TrueNas on the ts140 after the hardware upgrade.</p> <ul> <li>OS Drive on the 1TB SSD.</li> <li>Using default 16GB swap</li> <li>A static IP address is called an alias.</li> </ul> <p>Best way to update was through the GUI. TUI is slight busted. Probably a localization issue.</p>","tags":["task","trenas","hardware","ts140","homelab"]},{"location":"783/index.html#storage-setup","title":"Storage setup","text":"<p>Using RAIDZ1 for now. Not recommended for larger drives as there is a high risk of data loss if you lose one drive. Need to wait for the new drive to arrive and there is a resilvering process that needs to happen.</p> <p>I will use for now until I hit about the 1TB mark. Will buy a 4th drive (I still have room for 1 more) and move over to RAIDZ2.</p> <pre><code>sda (ZC1A8TYD)\nsdc (ZC19EGH0)\nsdd (ZC19B6Q5)\n</code></pre>","tags":["task","trenas","hardware","ts140","homelab"]},{"location":"784/index.html","title":"[x] TS140 Task: Installing upgrades to TS140","text":"<p>Installing the required hardware to meet the requirements on my ts140 to run TrueNas.</p>","tags":["task","hardware","ts140"]},{"location":"784/index.html#ram-upgrade","title":"Ram upgrade","text":"<p>Added 32G of ram. 4 new sticks. Went flawlessly</p>","tags":["task","hardware","ts140"]},{"location":"784/index.html#hard-drives","title":"Hard drives","text":"<p>Wrong brackets for 5.25 to 3.5. The hard drive brackets where missing the pins in the bag so completely worthless. My hard drives are just hanging around in the case.</p> <p>They do feel hot so I may nee to pay attention to that. Maybe a new case with fans.</p>","tags":["task","hardware","ts140"]},{"location":"785/index.html","title":"Overview: Nextcloud (nextcloud)","text":"<p>An alternative to the google echo system. Main features so far that I like is the virtual drive for uploading photos and documents.</p>","tags":["nextcloud","storage"]},{"location":"786/index.html","title":"Issue: Proxmox inaccessible","text":"<p>Was unable to directly connect to Proxmox from both ssh or UI. Ping also didn\u2019t work. However, what I could do is connect on of the hosted VM\u2019s on it as a proxy. Those had access.</p> <p>It was an issue where WireGuard was misconfigured. IP address were using LAN IP address ranges instead of its own subnet. E.g. 192.168.50.1/32 instead of 192.168.150.1/32 and so on.</p>","tags":["issue","proxmox","opnsense","networking","wireguard"]},{"location":"787/index.html","title":"[x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense","text":"<p>This is what I found works for a VPN setup after initially installing OPNsense on my EQ12. OPSense is a Road Warrior guide on how to setup it up. I was able to follow it to a T as this is a rather new setup and have not done anything complex yet. I used the same Interface name of <code>HomeWireGuard</code>.</p> <p>I have the clients setup route all traffic (<code>0.0.0.0/0, ::0</code>) or just to the LAN (<code>192.168.50.0/24, 192.168.150.0/24</code>). DNS is set to <code>192.168.50.20</code>, and <code>192.168.50.21</code>.</p> <p>One thing to note is that MTU 1360 needs to be set on a Mac if using wire guard cli. Not sure why yet. MTU 1280 the smallest recommended MTU and should be the most compatible.</p> <p>WireGuard (group) enabling LAN access breaks things. Why?</p>","tags":["wireguard","vpn","opnsense","firewall","networking","homelab","task"]},{"location":"79/index.html","title":"An example of a bash script that has tab completion","text":"<p>See rwxrob\u2019s twitch command</p>","tags":["bash","linux","cli"]},{"location":"791/index.html","title":"Recommendations for good sleep","text":"<p>Some one asked me about some actionable things about sleep. This was my recommendations that I put on the post.</p> <p>What does good sleep look like</p> <ul> <li>Should take around 20 minutes to fall asleep. If you fall asleep instantly this suggests that you are not getting enough sleep. To measure when you fall asleep and wake up actigraphy works well. This could be sensors on your bed or a smartwatch. Fitbit was good in my experience. My Garmin Forerunner 245 didn\u2019t work well for this. 955 works well.</li> <li>Should wake up at a consistent time feeling refreshed all morning.</li> <li>HRV is another metric to look at that is greatly affect by sleep quality and duration. Not an easy thing to measure but it is a good indicator. Only thing accurate is an EKG chest strap. My forerunner does HRV. Might be good enough to get a decent trend line.</li> </ul> <p>Ways to improve sleep.</p> <ul> <li>Avoid digesting food before you go to bed. What this means is don\u2019t eat too much before bedtime. It is generally recommended to not eat anything 3 hours prior. A light dinner is best. You don\u2019t want to go too long without eating prior to sleeping as this raises stress hormones.</li> <li>Avoid oversleeping</li> <li>Be consistent in your sleep schedule. Typically there is a range of bed times that you can schedule when you sleep regularly. Going to bed at lets say 4am and waking up at 11:30am regularly will prioritize what sleep cycle is dominant and could result lower sleep quality. This is highly variable between individuals.</li> <li>Getting a large dose of sunlight in the morning. This helps set your circadian rhythm.</li> <li>Getting some sunlight in the evening. This helps set your circadian rhythm.</li> <li>Avoid light exposure near bed time. This is things like phones screens. If you do need to look at a phone screen keep it as low as possible in your field of vision. Red light is fine.</li> <li>Spend time in nature. Green reflects infrared radiation. This penetrates down into our cells that does interesting things at the cellular level. This does something for stress management.</li> <li>Avoid alcohol. I have found that even 1 drink will impair my ability to fall asleep and get a deep rest.</li> <li>Finds ways to lower stress prior to bed time. Cortisol keeps you awake.</li> <li>Get some exercise. Exercise promotes higher quality sleep. It is preferable to get earlier in the day as exercise temporarily raises stress hormones that makes it hard to sleep. Some exercise is better than none. Too intense of exercise can also be a problem. I find anything over 2 hours (long runs) will make lengthen the duration to fall asleep. I usually can\u2019t fall asleep at all after a 50k.</li> <li>Most people should avoid caffeine mid to late in the day. It is preferable to wait at least an hour after waking up to have a cup of coffee. Your body naturally will elevate your cortisol levels to get you up in the morning. This will naturally fall as the day goes on. Coffee will help keep it up and waiting will help prevent a crash. Cortisol is your friend here. There a few genetic quirks that make it so you metabolize caffeine faster than normal. If you have the gene you can have caffeine whenever and be fine.</li> <li>Eat a balanced meal. If the body has everything that it needs things tend to work better. Avoid ultra processed foods like the plague. Get the recommended amount of fiber from a diverse range of foods. Closer to its natural form the better. Fiber plus a little bit of fermented food is a really good combination. This consistent lowers systemic inflammation in lots of studies. Promotes a healthy gut. Healthy gut healthy brain.</li> <li>There are a few genetic quirks where some people sleep better eating a very light carby snack just prior to bed time. This could be something like rice, oatmeal, icecream, etc. This is rather rare though.</li> </ul> <p>Please note a lot of this is from memory and may be inaccurate. I don\u2019t remember where I got a lot of this from. Many are from books that I have and podcasts from experts in the field of neurology and biology. Here some sources:</p> <ul> <li>Andrew Huberman podcasts</li> <li>The circadian code (Satchin Panda)</li> <li>couple of places that I don\u2019t remember</li> </ul>","tags":["science","biology","sleep"]},{"location":"792/index.html","title":"Bake: Simple half and half focaccia","text":"<p>Focaccia based on the simple whole wheat focaccia recipe. Increased the weight by 80 grams and replaced a little more than half of the whole wheat to get more rise.</p> <p></p>","tags":["baking","bake","sourdough","italian"]},{"location":"792/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Whole turkey red 125g Bread flour 175g Water 230g rye starter 50g salt 4g","tags":["baking","bake","sourdough","italian"]},{"location":"792/index.html#time-log","title":"Time log","text":"<ul> <li>2024-08-04 18:27 Mix all the things</li> <li>2024-08-04 23:30 Placed in the fridge</li> <li>2024-08-05 13:32 Baked at 450f for 30 minutes</li> </ul>","tags":["baking","bake","sourdough","italian"]},{"location":"793/index.html","title":"Task: Setup OPNsense backups on google drive","text":"<p>Setting up regular backup on google drive for my OPNsense box. OPNsense has a great [guide] on how to do it. Slightly out of date but the process is the same. Google updated its GUI a bit.</p> <p>See also: secrets</p>","tags":["google","storage","backup","networking","opnsense"]},{"location":"794/index.html","title":"[ ] Homelab Task: Updating CloudFlare based email forwarding","text":"<p>Follow the gist. Only issue is that DKIM doesn\u2019t work (marked as spam possibly).</p> <pre><code>TXT jlrickert.me    v=spf1 include:_spf.google.com include:_spf.mx.cloudflare.net ~all\n</code></pre>","tags":["email","cloudflare","homelab","gmail"]},{"location":"795/index.html","title":"[x] Homelab Task: Assign IP address to PHP VM\u2019s","text":"<p>Assigned my php vm\u2019s a static address in the ISC DHCPv4 server on OPNsense box EQ12. Used the interface to get the mac addresses.</p> <p>Also did it for my mac.</p>","tags":["homelab","opnsense","networking"]},{"location":"796/index.html","title":"CSS properties related to lists","text":"<pre><code>/* rest */\nul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\nul {\n  list-style-type:;\n  list-style-position:;\n  list-style-image:;\n\n  /* shortcut for above */\n  list-style: square inside url(\"sqpurple.gif\");\n}\nul &gt; li {\n}\nul &gt; li {\n}\nul &gt; li::marker {\n}\n</code></pre>","tags":["webdev","css","design"]},{"location":"797/index.html","title":"PHP Trick: react inspired reusable components","text":"<p>Vue, Svelte, and React inspired reusable components for PHP. Would be cool to figure out how to add context to this. </p> <pre><code>&lt;?php\nfunction render($name, $data) {\n    include 'components/' . $name . '.php';\n}\n\nfunction require(boolean $condition, string $msg) {\n  if ($condition) {\n    $bt = debug_backtrace();\n    $caller = array_shift($bt);\n    log(['trace' =&gt; $caller, 'message' =&gt; $msg]); // custom log function here\n    die();\n  }\n}\n</code></pre> <pre><code>&lt;?php\n// components/example.php\n\n// component argument handling\n$data = $data ?? [];\n$msg = $data['msg'];\n\nrequire($msg, \"`$msg` is a required parameter\");\n\n// Custom logic\n\n$my_message = upcase($msg) . '!';\n\n// Draw html below\n?&gt;\n&lt;div&gt;&lt;?= my_message ?&gt;&lt;/div&gt;\n</code></pre> <pre><code>&lt;?php\n// General usage\n?&gt;\n\n&lt;div&gt;\n  &lt;?= render('example', ['msg' =&gt; \"hellow world\"]) ?&gt;\n&lt;/div&gt;\n</code></pre> <p>Some other possible improvements include:</p> <ul> <li> <p>dynamic rendering</p> </li> <li> <p>hydration techniques</p> </li> </ul> <p>Instead of rendering html data would be passed out as JSON or something to be rendered on the client instead.</p> <ul> <li>context</li> </ul>","tags":["php","trick"]},{"location":"798/index.html","title":"Place: Finland group campsite","text":"<p>Roughly 1 hour past Duluth.</p>","tags":["place","camping"]},{"location":"799/index.html","title":"<code>foreach</code> mutation weirdness in PHP","text":"<p>Ran into some odd code in a PHP code base. Here is the example with the things in interest:</p> <pre><code>class Example {\n  private $val_array = [];\n  public function do_thing() {\n    $sorted = [ ... ];\n    foreach ($sorted as $this-&gt;val_array) {\n    }\n  }\n}\n</code></pre>","tags":["php"]},{"location":"8/index.html","title":"Pop_OS! unable to run jest","text":"<p>An issue that I discovered is that jest doesn\u2019t run because of an issue with watchman not working because pop-os by default comes with kernel scheduler adjustments.  This needs to be adjust.  TODO: figure out how I did this.</p> <p>Tags:</p> <pre><code>#pop-os\n</code></pre>"},{"location":"80/index.html","title":"Person: Rob Muhlestein","text":"<p>Rob (also known as rwxrob) is a streamer, infrastructure engineer, and software engineer who likes to stream on twitch. His usually streams programming, IRL, or him working out. Word of caution, his stream is either of a technical mastermind or a cringy old man.</p> <ul> <li>github</li> </ul>","tags":["twitch","person"]},{"location":"800/index.html","title":"SCORE venture capital group","text":"<p>SCORE is an organization that helps serious entrepreneurs get started with a business idea.</p> <p>Learned about it </p> <ul> <li>office in western metro</li> </ul> <p>Business startup helper</p> <p>Retired people help entreneurs</p> <p>https://www.score.org/</p>","tags":["entrepreneurship","venturecapitalism"]},{"location":"801/index.html","title":"Opinionated way to to organize application data","text":"<p>Typically, there are 4 locations: data, config, state, and cache. Data refers to application data that may be shared between systems. State is machine-specific data, such as logs. Cache is non-essential data that is also machine-specific. Configuration encompasses user settings for the application. Typically, configuration cascades from the distribution down to the user level.</p> <p>In summary:</p> <ul> <li>data: Non configuration application data. Safe to synchronize.</li> <li>state: Machine specific local state of application. Not safe to synchronize.</li> <li>config: Configuration synchronized between systems</li> <li>cache: Non essentials data. Typically, performance related.</li> </ul>","tags":["os","compatibility","spec"]},{"location":"801/index.html#distribution","title":"Distribution","text":"<ul> <li>data:</li> <li>Linux: <code>/usr/share/ApplicationName</code></li> <li>Windows: <code>C:\\ProgramData\\ApplicationName</code></li> <li>macOS: <code>/Library/ApplicationName/ApplicationName</code></li> <li>config:</li> <li>Linux: <code>/etc</code></li> <li>Windows: <code>C:\\ProgramData\\ApplicationName\\Config</code></li> <li>macOS: <code>/Library/Application Support/ApplicationName/State</code></li> <li>state:</li> <li>Linux: <code>/var</code></li> <li>Windows: <code>C:\\ProgramData\\ApplicationName\\State</code></li> <li>macOS: <code>/Library/Application Support/ApplicationName/Config</code></li> <li>cache:</li> <li>Linux: <code>/var/cache</code></li> <li>Windows: <code>C:\\ProgramData\\ApplicationName\\Cache</code></li> <li>macOS: <code>/Library/Caches/ApplicationName</code></li> </ul>","tags":["os","compatibility","spec"]},{"location":"801/index.html#system","title":"System","text":"<ul> <li>data:</li> <li>Linux: <code>/usr/local/share/ApplicationName</code></li> <li>config:</li> <li>Linux: <code>/usr/local/etc</code></li> <li>state:</li> <li>Linux: <code>/var</code></li> <li>cache:</li> <li>Linux: <code>/var/cache</code></li> </ul>","tags":["os","compatibility","spec"]},{"location":"801/index.html#user","title":"User","text":"<ul> <li>data:</li> <li>Linux: <code>$XDG_DATA_HOME/ApplicationName</code></li> <li>Windows: <code>%APPDATA%\\ApplicationName</code></li> <li>macOS: <code>~/Library/ApplicationName/ApplicationName</code></li> <li>state:</li> <li>Linux: <code>$XDG_STATE_HOME/ApplicationName</code></li> <li>macOS: <code>~/Library/Application Support/ApplicationName/State</code></li> <li>Windows: <code>%LOCALAPPDATA%\\ApplicationName\\State</code></li> <li>config:</li> <li>Linux: <code>$XDG_CONFIG_HOME/ApplicationName</code></li> <li>Windows: <code>%APPDATA%\\ApplicationName\\Config</code></li> <li>macOS: <code>~/Library/Application Support/ApplicationName/Config</code></li> <li>cache:</li> <li>Linux: <code>$XDG_CACHE_HOME/ApplicationName</code></li> <li>Windows: <code>%LOCALAPPDATA%\\ApplicationName\\Cache</code></li> <li>macOS: <code>~/Library/Caches/ApplicationName</code></li> </ul>","tags":["os","compatibility","spec"]},{"location":"801/index.html#see-also","title":"See also","text":"<ul> <li>Unix based program configuration</li> </ul>","tags":["os","compatibility","spec"]},{"location":"802/index.html","title":"SPEC: Data organization in Knutjs","text":"<p>High level details on how Knutjs will organize its data. I intent to following an opinionated way which I believe is best practice.</p> <p>Configuration for Knut will be in <code>~/.config/knut/config.yaml</code> or <code>~/.config/knut/json.yaml</code> on Linux or MacOSX if <code>XDG</code> variables are set.</p> <p>Here are the default locations</p> Key Windows Linux Macosx Data <code>%APPDATA%\\knut</code> <code>$XDG_DATA_HOME/knut</code> <code>~/Library/knut/knut</code> State <code>%LOCALAPPDATA%\\knut\\State</code> <code>$XDG_STATE_HOME/knut</code> <code>~/Library/Application Support/knut/State</code> Config <code>%APPDATA%\\knut\\Config</code> <code>$XDG_CONFIG_HOME/knut</code> <code>~/Library/Application Support/knut/Config</code> Cache <code>%LOCALAPPDATA%\\knut\\Cache</code> <code>$XDG_CACHE_HOME/knut</code> <code>~/Library/Caches/knut</code> <p>If XDG variables do exist they will take precedence.</p> <ul> <li>Data will contain the kegs</li> <li>State will contain logs</li> <li>Config will contain the configuration for Knut</li> <li>Cache will contain data related to</li> </ul>","tags":["knut","spec"]},{"location":"803/index.html","title":"[ ] Homelab task: quick password protected https server","text":"<p>I need a quick way to server out some protected files out to people that is running on my homelab so I can share nodes for my zettelkasten.</p> <p>Here are my requirements:</p> <ul> <li>private content</li> <li>https enabled</li> <li>simple enough for my grandpa to view</li> </ul>","tags":["homelab","task"]},{"location":"804/index.html","title":"Article: Interesting article about obfuscation","text":"<p>An article on the web about packers and ways they can be used. This is something that a coworker found.</p> <p>Key takeaways:</p> <ul> <li>Used to obfuscate code</li> <li>Hide information such as emails from scrapers</li> </ul>","tags":["article","security","privacy"]},{"location":"805/index.html","title":"Webdev cookies","text":"","tags":["webdev"]},{"location":"806/index.html","title":"Deploying WordPress on single docker host","text":""},{"location":"807/index.html","title":"SPEC: Unix utility convention specification","text":"<p>I ran into a looking for a time machine like experience for Linux. The linux-timemachine project linked to the specification.</p>","tags":["unix","backups","spec"]},{"location":"808/index.html","title":"Security: possible PHP vulnerability vector","text":"<p>Recently, I discovered a trick to make react like reusable components. One things that was interesting was that the <code>$data</code> argument was passed down to the file included implicitly.</p> <p>Here is an example:</p> <pre><code>&lt;?php\n\nfunction render_file($file, $message, style = '') {\n  include \"$name.php\";\n}\n\n// Maybe some optional style we get from a user somewhere\n$raw_style = ...;\n\necho render_file('example', \"Some message\", $raw_input);\n</code></pre> <pre><code>&lt;?php\n// in example.php\n\n&lt;?\n&lt;div style=\"&lt;?= $style ?&gt;\"&gt;\"&lt;?= $message ?&gt;\"&lt;/div&gt;;\n</code></pre> <p>In <code>example.php</code> <code>$style</code> will be available for use. In this case <code>$style</code> has not been sanitized.</p>","tags":["php","security"]},{"location":"809/index.html","title":"3 day head start on WOW may prevent early server overload","text":"<p>3 day early access on wow may actually benefit players that don\u2019t get early access.  I spreads out the player load.  Learned from Thor.</p>","tags":["wow","gamedesign"]},{"location":"81/index.html","title":"rwxrob\u2019s list of go packages","text":"Package Repo Description auth-go rwxrob/auth-go authentication cli. Needs better documentation cmdtab rwxrob/cmdtab <pre><code>tags: #golang #programming\n</code></pre>"},{"location":"810/index.html","title":"Reason why WOW implemented wow tokens","text":"<p>Thor signed off at Blizzard to allow buying and selling game gold. Here were the benefits:</p> <ul> <li>Prevent gold sellers from taking over accounts</li> <li>80% reduction in account take over</li> </ul>","tags":["wow","blizzard","gamedesign"]},{"location":"811/index.html","title":"Person: Thor","text":"<p>Thor is a ex employee at Blizzard that now owns Pirate Software. He streams on twitch.</p>","tags":["person","twitch","stream"]},{"location":"812/index.html","title":"Company: Blizzard (blizzard)","text":"<p>Game company</p>","tags":["wow","blizzard","company"]},{"location":"813/index.html","title":"A custom publish function for changeset","text":"<p>Experimenting with creating versioned packages for my dotfiles using changeset.</p> <pre><code>name: Release\n\non:\n  push:\n    branches:\n      - main\n\nconcurrency: ${{ github.workflow }}-${{ github.ref }}\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@v4\n\n      - uses: pnpm/action-setup@v4\n        with:\n          version: 9\n          run_install: false\n\n      - name: Setup Node.js 20.x\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20.x\n          cache: \"pnpm\"\n\n      - name: Install dependencies\n        run: pnpm install\n\n      - name: Create Release Pull Request or Publish to npm\n        id: changesets\n        uses: changesets/action@v1\n        with:\n          # This expects you to have a script called release which does a build\n          # for your packages and calls changeset publish\n          version: pnpm run version-packages\n          # publish: pnpm run publish\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Publish\n        if: steps.changesets.outputs.hasChangesets == 'false'\n        # You can do something when a publish should happen.\n        run: node ./lib/publish.mjs {{ }}\n</code></pre> <p>Shape of output of <code>steps.changesets.outputs</code>:</p> <pre><code>published:\n  description: A boolean value to indicate whether a publishing is happened or not\npublishedPackages:\n  description: &gt;\n    A JSON array to present the published packages. The format is `[{\"name\": \"@xx/xx\", \"version\": \"1.2.0\"}, {\"name\": \"@xx/xy\", \"version\": \"0.8.9\"}]`\n\n\nhasChangesets:\n  description: A boolean about whether there were changesets. Useful if you want to create your own publishing functionality.\npullRequestNumber:\n  description: The pull request number that was created or updated\n</code></pre> <p>See https://github.com/changesets/action/blob/main/action.yml for a complete list.</p>","tags":["operations","github","dotfiles"]},{"location":"814/index.html","title":"Software: changeset","text":"<p>Monorepo versioning and changelog software.</p>","tags":["software","operations"]},{"location":"815/index.html","title":"Person: Twitch streamer BlaiseBits","text":"","tags":["person","twitch"]},{"location":"816/index.html","title":"Trick to display iPad on a windows machine","text":"<p>Tool that BlaiseBits uses to share his IPad screen on his window machine. I think the program that he was sharing was Nebo or something. The sharing program is 3uTools.</p>","tags":["workstation","software"]},{"location":"817/index.html","title":"Bake: Simple 50/50 sourdough Batard","text":"Ingredient Amount Bakers Percentage Comment Bread flour 232g 58% King Author 12.7% protein Whole wheat flour 168g 42% Turkey red wheat berries Water 275g 69% starter 40g 10% 100% turkey red 1:1 sea salt 8g 02% <p>Total weight is roughly 750g.</p>","tags":["baking","bake","sourdough"]},{"location":"817/index.html#time-log","title":"Time log","text":"<ul> <li>2024-08-25 08:31 Fed starter</li> <li>2024-08-25 11:53 Mixed flour and water for hydrolyse</li> <li>2024-08-25 12:59 Mixed everything else</li> <li>2024-08-25 22:00 Shaped an placed into fridge</li> <li>2024-08-26 13:03 Baked at 450f for 35 minutes</li> </ul>","tags":["baking","bake","sourdough"]},{"location":"818/index.html","title":"Company: Hamilton Beach","text":"","tags":["company"]},{"location":"819/index.html","title":"Company: Walmart","text":"","tags":["company"]},{"location":"82/index.html","title":"How to give credit to the original script owner","text":"<p>Often times I run into scripts online that I would like to adapt as my own and modify.  It would be ideal to give the original developer credit for the original script. My usual process has been to embed some meta information into the header.</p> <ul> <li>Author</li> <li>License</li> <li>URL</li> </ul> <p>Here is an example bash script:</p> <pre><code>#!/bin/sh\n# Author: Jack Rabbit\n# License: Apache License 2.0\n# URL: https://raw.githubusercontent.com/username/repo/3533e9632c868d8383fa50b6e8fbb72c95657e6a/sshkey\n</code></pre> <p>There are more than likely better ways but this is what I have been doing.</p> <pre><code>tags: #tags #coding\n</code></pre>"},{"location":"820/index.html","title":"Article: The perfect loafs best sourdough pancakes","text":"<p>Link is https://www.theperfectloaf.com/my-best-sourdough-pancakes/</p> <p>Here is the reorganized table with added baker\u2019s percentage:</p> Ingredient Weight (g) Volume Baker\u2019s Percentage (%) Flour 180 100% Medium Eggs 100 2 medium eggs Ripe Sourdough Starter 250 1 1/2 cups, stirred down 139% Whole Milk 245 1 cup 136% Plain Whole-Milk Yogurt 60 1/4 cup 33% Vanilla Extract (optional) 4 1 teaspoon 2% Sugar 50 1/4 cup 28% Baking Soda 6 1 teaspoon 3.3% Baking Powder 4 1 teaspoon 2.2% Fine Sea Salt 5 1 teaspoon 2.7% Unsalted Butter (melted) 56 1/2 stick 31% Chopped Fresh Fruit (for serving, optional) Maple Syrup (for serving) <p>Halved recipe below</p> Ingredient Weight (g) Volume Baker\u2019s Percentage (%) Flour 90 100% Medium Eggs 50 1 medium egg Ripe Sourdough Starter 125 3/4 cup, stirred down 139% Whole Milk 122.5 1/2 cup 136% Plain Whole-Milk Yogurt 30 2 tablespoons 33% Vanilla Extract (optional) 2 1/2 teaspoon 2% Sugar 25 2 tablespoons 28% Baking Soda 3 1/2 teaspoon 3.3% Baking Powder 2 1/2 teaspoon 2.2% Fine Sea Salt 2.5 1/2 teaspoon 2.7% Unsalted Butter (melted) 28 1/4 stick 31% Chopped Fresh Fruit (for serving, optional) Maple Syrup (for serving) <p>Note:</p> <ul> <li>The weights of eggs can vary. Typically, one medium egg weighs about 50g. Adjust the weight accordingly for large or small eggs.</li> <li>The baker\u2019s percentage is based on the total weight of the flour (180g) being 100%. Other ingredients\u2019 weights are calculated as a percentage of the flour weight.</li> </ul>","tags":["baking"]},{"location":"821/index.html","title":"Hardware: Portable Weber grill","text":"<ul> <li>Mini portable grill. </li> <li>The canisters weight around 400oz. Like 800 oz when full</li> </ul>","tags":["hardware","personal","grilling"]},{"location":"822/index.html","title":"Perfect T-Bone on portable Weber grill","text":"<p>For the perfect T-Bone on the portable Weber grill I get it nice and hot. Throw the steak on for like 4 minutes. Flip and then another 4 minutes.</p>","tags":["cooking","grilling","food"]},{"location":"823/index.html","title":"Connecting to MariaDB from MacOSX CLI","text":"<p>Need to install the <code>mysql</code> client as well as the Maraidb server itself for plugins for the client.</p> <pre><code>brew install mysql-client mariadb\n</code></pre>","tags":["mysql","mariadb","macosx"]},{"location":"824/index.html","title":"The War Within season 1 timeline","text":"<ul> <li>2024-08-22 Early access</li> <li>2024-08-25 Release</li> <li>2024-09-10 Season 1</li> </ul> <p>Normal and heroic raid, Raid Finder wing 1, Mythic 0, Heroic Season Dungeons</p> <ul> <li>2024-09-17 Raid Finder Wing 2, Raid Story mode</li> <li>2024-09-24 Raid Finder Wing 3</li> </ul>","tags":["wow","season1"]},{"location":"825/index.html","title":"The War Within dungeons","text":"<ul> <li>Ara-Kara, City of Echoes (Levels 70-80)</li> <li>Priory of the Sacred Flame (Levels 70-80)</li> <li>The Rookery (Levels 70-80)</li> <li>The Stonevault (Levels 70-80)</li> <li>Cinderbrew Meadery (Level 80)</li> <li>City of Threads (Level 80)</li> <li>Darkflame Cleft (level 80)</li> <li>The Dawnbreaker (Level 80)</li> </ul>","tags":["wow"]},{"location":"826/index.html","title":"Trick: pulling in a commit from upstream with git","text":"<p>Pulling in a commit from upstream is a bit problematic as there typically will be lots of merge conflicts. You could cherry pick it. However, this usually brings in extra crap. I found that using git show and apply tends to work better. The 3way is way to get around the patch not applicable issue.</p> <ul> <li><code>git remote upstream-name git@example.com:repo_name.git</code></li> <li><code>git fetch upstream-name</code></li> <li><code>git show abc123 | git apply --3way</code></li> </ul>","tags":["git","vs"]},{"location":"827/index.html","title":"Bake: Labor day 2024 bread bowl","text":"<p>Bread bowl for labor day. Based on the recipe that I used for July fourth 2023.</p> Ingredient Amount Bakers Percentage Comment All purpose flour 560g 100% King Author AP flour Water 407g 68% starter 150g 27% 100% rye 1:1 salt 6g <p>Total weight is roughly 1123 grams</p> <p>[!NOTE]</p> <p>Bakers percentages are off</p> <p></p>","tags":["baking","bake","sourdough"]},{"location":"827/index.html#time-log","title":"Time log","text":"<ul> <li>2024-08-30 07:00 Mixed starter. Placed in cooler</li> <li>2024-08-30 18:00 Starter pulled out of cooler</li> <li>2024-08-30 21:23 Mixed Flour and water</li> <li>2024-08-30 23:22 Mixed in Starter</li> <li>2024-08-31 08:52 Pull out of the fridge</li> <li>2024-08-31 15:06 Baked</li> </ul> <p>18m at 500f with the lid on. 12m with the lid off. Preheated oven to 500f. I had the dutch oven on top of a cast iron skillet. I put a little bit of water in the dutch oven before I put the load inside. I put them in the preheated oven cold.</p>","tags":["baking","bake","sourdough"]},{"location":"828/index.html","title":"Trick: custom select menus in the browser","text":"<p>Tags:</p> <ul> <li>select</li> <li>option</li> </ul> <p><code>value=\"\"</code> for default</p> <ul> <li>label (optional)</li> </ul>","tags":["trick","webdev","html"]},{"location":"829/index.html","title":"WOW The War Within expansion","text":"<p>WOW expansion Released August 26, 2024. Optionally, had a 3 day head start if you paid a bit more.</p>","tags":["wow","thewarwithin"]},{"location":"83/index.html","title":"Managing personal secrets with an external USB drive","text":"<p>An effective way for managing private data between systems is to use a USB stick. In order to be effective it needs to be compatible with all the systems you intend to use. This requires the right formatting and optionally a way to encrypt/decrypt the data.</p> <p>For use with MacOS, Linux, WSL, Windows and Android, the recommended format is exFAT. If you need more compatibility go with FAT.</p> <p>Encryption could be done with EncFS. Eventually, I plan on looking at encrypting.</p> <p>This is the way I have things structured</p> <ul> <li>A bare git repository <code>repos/priv.git</code> that stores all my certs, keys, and   private scripts</li> <li>A bare git repository for my private git repos such as a <code>zet</code> repo</li> </ul> <p>Meta:</p> <pre><code>#lifehacks #git #tips\n</code></pre>"},{"location":"830/index.html","title":"Game: World of Warcraft (WOW)","text":"<p>Game created by the company blizzard.</p>","tags":["wow"]},{"location":"831/index.html","title":"WOW the War within season 1","text":"<p>WOW season 1 for The War Within.</p>","tags":["wow","season"]},{"location":"832/index.html","title":"Hosting platform Heroku (heroku)","text":"","tags":["heroku"]},{"location":"833/index.html","title":"Software: Frappe an open source quickbook like thing","text":"<p>Learned about an ERP system through the meetup group Code and coffee</p>","tags":["software"]},{"location":"834/index.html","title":"Meetup: Code and coffee meetup group (codeandcoffee)","text":"<p>First meetup on 2024-09-14</p>","tags":["meetup","codeandcoffee"]},{"location":"835/index.html","title":"Place: SK Coffee near Lake monster brewing","text":"<p>Coffee place near Lake Monster brewing.</p>","tags":["place","coffee"]},{"location":"836/index.html","title":"Place: Lake Monster Brewing","text":"<p>Brewery in St Paul.</p>","tags":["place","brewery"]},{"location":"837/index.html","title":"Event: First code and coffee meetup","text":"<p>First time going to the Code and Coffee meetup. It was located at SK coffee.</p>","tags":["event","coffee","meetup"]},{"location":"838/index.html","title":"The War Within dungeons season 1 dungeons","text":""},{"location":"839/index.html","title":"The war within season 1 rogue comparisons","text":"<p>Comparison for rogue stats for season 1.</p>","tags":["wow","rogue"]},{"location":"839/index.html#stats","title":"Stats","text":"Spec Stat priority Assassination Crit &gt; Master &gt; Haste &gt; Versitility Outlaw Versitility = Haste &gt; Crit &gt; Mastery Subtlety Master &gt; Versatility &gt; Crit &gt; Haste","tags":["wow","rogue"]},{"location":"84/index.html","title":"My preferred way of handling text width in documents","text":"<p>Currently, I like having each line of text to be around rough 72 characters long. I have something like the following on my nvim configuration.</p> <pre><code>vim.api.nvim_create_autocmd('FileType', {\n    pattern = { 'gitcommit', 'NeogitCommitMessage', 'text', 'markdown', 'text' },\n    group = text_group,\n    callback = function()\n        -- enough for line number + gutter within 80 standard\n        vim.opt_local.textwidth = 72\n    end,\n})\n</code></pre>","tags":["cli","neovim","linux","vim"]},{"location":"840/index.html","title":"WOW rogue (rogue)","text":"","tags":["rogue"]},{"location":"841/index.html","title":"CSS naming conventions","text":"<ul> <li>Modern CSS</li> <li>BEM</li> <li>SMACSS</li> </ul>"},{"location":"842/index.html","title":"Person: Streamer MarekCounts","text":"<p>Streams software and development on twitch. Does rust stuff.</p>","tags":["twitch","person","streamer"]},{"location":"843/index.html","title":"SQL workflow example with neovim","text":"<p>Seen a streamer using neovim that had completions for SQL. He was also using SQLx for his project.</p>","tags":["neovim","sql","streamer"]},{"location":"844/index.html","title":"Local MN band Six to Midnight","text":"<p>Very good band from St Paul</p> <ul> <li>facebook</li> </ul>","tags":["music","band","live music"]},{"location":"845/index.html","title":"Place: Minnesota city Forest Lake","text":"","tags":["place"]},{"location":"846/index.html","title":"Issue: handling nested links in html","text":"<p>A HTML box that should act as a link. Within the box there are additional items that have more links. The problem with this an <code>a</code> tag should have have <code>a</code> descendants.</p> <p>For the root tag use something like <code>onclick=\"location.href='https://example.com'\"</code>.</p> <p>Still need to figure out what to do with giving it back expected behavior as the root tag won\u2019t use the defaults.</p>","tags":["webev","html"]},{"location":"847/index.html","title":"Luna sandal comparison","text":"<p>Luna sandal choices</p> Name Feel Tread Leadville pacer thin moderate Hybrid between road and technical trails. I own a pair Oso flaco thin great Like leadvill pacer bit with more tread. I might get these for theo venado thin none Probably good for roads. Like pacer but with tread removed","tags":["running","luna","sandals","shoes"]},{"location":"848/index.html","title":"Minimal sandal preferences","text":"<p>What I have been finding is that I prefer thin shoes for road running based on my experience from the hfs. 3mm is great. 9mm works great from the pacers for technical trails. 6mm might be the thinnest that I would go for technical trails.</p>","tags":["running","xero","luna"]},{"location":"849/index.html","title":"Hardware: HFS shoes","text":"<p>Xero shoes that I initial bought in 2023 for weight lifting. Started running in them because I was too lazy to buy new shoes.</p> <p>Rocks are brutal but doable.</p>","tags":["personal","hardware","running"]},{"location":"85/index.html","title":"How to install rust properly to prevent mucking with dotfiles","text":"<p>The rust installer likes to muck around with my dot files. It likes to add an entry for its path. This is redundant to what I already have and only adds noise as this is tracked by git. This is the script that I run to install rather than using the default method on its website to get around this issue. I also use a checksum to validate that the script hasn\u2019t been tampered with for extra security.</p> <pre><code>cd \"$(mktemp -d)\" || exit 1\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs &gt; rustup.sh\nexport RUSTUP_HOME=\"${XDG_DATA_HOME:-$HOME/.local/share}/rustup\"\nexport CARGO_HOME=\"${XDG_DATA_HOME:-$HOME/.local/share}/cargo\"\nif [[ \"$(sha256sum rustup.sh | cut -d' ' -f1)\" = \"be3535b3033ff5e0ecc4d589a35d3656f681332f860c5fd6684859970165ddcc\" ]]; then\n    sh rustup.sh --no-modify-path\nfi\n</code></pre> <p>For reference the checksum was generated on Thu May 25 05:05:07 PM UTC 2023.</p> <pre><code>tags: #rust #coding #bash #cli #linux\n</code></pre>"},{"location":"850/index.html","title":"Quick start guides to Unix, bash, terminal, etc","text":"<ul> <li>https://github.com/ohmybash/oh-my-bash</li> <li>https://github.com/awesome-lists/awesome-bash</li> <li>https://www.howtogeek.com/linux-tools-increased-my-command-line-productivity/</li> <li>https://dev.to/pieter/turbocharge-your-linux-terminal-productivity-with-these-12-tips-322h</li> <li>https://developer.apple.com/library/archive/documentation/OpenSource/Conceptual/ShellScripting/Introduction/Introduction.html</li> <li>rwxrob on youtube has good material on bash scripting and usage if you can find it. Look for things related to his \u201cBoost\u201d.</li> <li>https://dev.to/pieter/turbocharge-your-linux-terminal-productivity-with-these-12-tips-322h</li> </ul>","tags":["bash","shell","scripting"]},{"location":"851/index.html","title":"Issue: Bitbucket markdown rendering is different than GitHub","text":"<p>Found a subtle difference between Bitbucket and GitHub on how markdown lists are rendered. On GitHub a list item may have text items as children. Not sure what the extension is called. An example usage is found on node 781.</p>","tags":["bitbucket","github"]},{"location":"852/index.html","title":"My running event race times","text":"Date Race Distance Time Age Overall 2025-10-05 Twin Cities Marathon Marathon 2025-03-31 Two rivers 10 mile 10 Mile 1:21:17 6/11 33/82 2024-10-19 Wild Duluth 50K 2024 50k 6:53:39 2024-10-06 Twin Cities Marathon Marathon 3:47:04 2024-06-01 Fargo half marathon Half Marathon 01:38:51 41/349 158/3207 2024-04-28 Two rivers 10 mile 10 Mile 01:09:46 2 (30-34) 14/82 2023-09-23 Ely marathon Marathon 03:33:55 2019-05-18 Fargo half marathon Half Marathon 01:36:28 <p>![TODO]</p> <p>Update missing items. Should be 8 marathons, 4 Ultras that I have done.</p>","tags":["running"]},{"location":"853/index.html","title":"Hardware: Ibanez RG421 Electric Guitar","text":"<ul> <li>https://www.sweetwater.com/store/detail/RG421QMCBB\u2013ibanez-rg421qm-electric-guitar-cerulean-blue-burst</li> <li>https://www.ibanez.com/usa/products/detail/rg421qm_1p_02.html</li> </ul> SPECS Neck Type Wizard III Maple neck Top/Back/Body Quilted Maple top / Meranti body Fretboard Jatoba fretboard / White dot inlay Fret Jumbo frets Number of Frets 24 Bridge F106 bridge String Space 10.5mm Neck Pickup Quantum (H) neck pickup / Passive/Ceramic Bridge Pickup Quantum (H) bridge pickup / Passive/Ceramic Factory Tuning 1E, 2B, 3G, 4D, 5A, 6E Strings D\u2019Addario\u00ae EXL110 String Gauge .010 / .013 / .017 / .026 / .036 / .046 Hardware Color Black NECK DIMENSIONS Scale 648mm / 25.5\u201d a: Width 43mm at NUT b: Width 58mm at 24F c: Thickness 19mm at 1F d: Thickness 21mm at 12F Radius 400mm R","tags":["personal","hardware","music","guitar"]},{"location":"853/index.html#possible-upgrades","title":"Possible upgrades","text":"<ul> <li>SH-1 \u201859 (neck) and SH-4 JB (bridge)</li> </ul>","tags":["personal","hardware","music","guitar"]},{"location":"854/index.html","title":"Project: Personal music studio","text":"","tags":["project","music","guitar"]},{"location":"854/index.html#software","title":"Software","text":"","tags":["project","music","guitar"]},{"location":"854/index.html#hardware","title":"Hardware","text":"<ul> <li>scarlet 2i2</li> </ul>","tags":["project","music","guitar"]},{"location":"854/index.html#instruments","title":"Instruments","text":"<ul> <li>Ibanez RG421</li> </ul>","tags":["project","music","guitar"]},{"location":"854/index.html#midi-controllers","title":"MIDI Controllers","text":"<p>Looking into finding a way to do the way pedal things for things like Voodoo Child. Looks like I either need an expression pedal or a MIDI controller pedal</p>","tags":["project","music","guitar"]},{"location":"855/index.html","title":"Hardware: Focusrite Scarlett 2i2","text":"<p>Audio interface for musical instruments</p>","tags":["hardware","personal","music"]},{"location":"855/index.html#specs","title":"Specs","text":"<ul> <li>Max recommend 300 ohms for a headset</li> </ul>","tags":["hardware","personal","music"]},{"location":"855/index.html#dump","title":"Dump","text":"<ul> <li>48v Phantom power</li> <li>inst</li> <li>auto</li> <li>safe</li> <li> <p>air button</p> </li> <li> <p>Boosts the higher frequencies. Like a frequency ramp</p> </li> <li> <p>2 pressence will additionally drop around the 500 ranges and boost the bass</p> </li> <li> <p>direct monitoring</p> </li> </ul>","tags":["hardware","personal","music"]},{"location":"855/index.html#software-settings","title":"Software settings","text":"<ul> <li>44.1 kHz sample rate recommended (unconfirmed)</li> </ul>","tags":["hardware","personal","music"]},{"location":"855/index.html#references","title":"References","text":"<ul> <li>https://soundref.com/focusrite-scarlett-2i2-4th-gen-review/</li> </ul>","tags":["hardware","personal","music"]},{"location":"856/index.html","title":"Music equipment concepts","text":"<ul> <li>Frequency response</li> <li>Dynamic range</li> <li>Parametric EQ</li> <li>Dynamic Transducer</li> <li>Phantom power</li> </ul>","tags":["music"]},{"location":"856/index.html#sound-descriptions","title":"Sound descriptions","text":"<ul> <li>warm</li> <li>thick</li> <li>bright</li> <li>dark</li> </ul>","tags":["music"]},{"location":"857/index.html","title":"Human hearing frequency ranges and preferences","text":"<p>Typical hearing range is 20Hz to 20000Hz.</p> <ul> <li> <p>Harman target Curves</p> </li> <li> <p>The idealized EQ curves for headphones for most people under 50</p> </li> <li>Females and people older than 50 prefer less bass</li> <li>Males and young people prefer more base (3 to 6db) for under 300Hz. 1db more for above 1000Hz</li> </ul>"},{"location":"857/index.html#references","title":"References","text":"<ul> <li>https://audiosolace.com/harman-target-curve-explained/</li> </ul>"},{"location":"858/index.html","title":"Types of lighting for a home","text":""},{"location":"858/index.html#lighting-fixture","title":"Lighting Fixture","text":"<ul> <li>chandelier</li> <li>pendant lighting</li> <li>torchiere</li> <li>lamps</li> <li>recessed</li> <li>track</li> <li>vanety</li> <li>wall scones</li> <li>floor lamps</li> <li>table lamps</li> </ul>"},{"location":"858/index.html#lighting-types","title":"Lighting types","text":"<ul> <li>Ambient</li> <li>accent</li> <li>uplight</li> <li>task</li> <li>downlight</li> </ul>"},{"location":"859/index.html","title":"Hardware: Altra lone peak 8","text":"<p>Trail running shoes I bought on 2024-10-16.</p> <p>Pros:</p> <ul> <li>Wide toe box so no lost to nails</li> <li>Little arch support so no issues there. Arch support cause discomfort for me.</li> </ul> <p>Cons:</p> <ul> <li>Too much padding. I seem to go back to my low cadence compared to minimal shoes. Slight nag in my Knees after running Wild Duluth.</li> </ul>","tags":["hardware","personal","running"]},{"location":"86/index.html","title":"How to verify file integrity on the cli","text":"<p>To verify that files not been tampered with or changed an checksum utility may be used. These could be <code>md5sum</code> or <code>shaXXXsum</code>.</p> <p>Example usage:</p> <pre><code># grab the script\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs &gt; ~/Download/rustup.sh\n\n# calculate the checksum and place into a file\nsha256sum rustup.sh &gt; checksum\n\n# validate the checksum\nshas256 -c checksum\n\n# validate the checksum via CLI\n[[ \"$(sha256sum rustup.sh)\" = \"be3535b3033ff5e0ecc4d589a35d3656f681332f860c5fd6684859970165ddcc\" ]]\n</code></pre> <pre><code>#linux #security #cli #bash\n</code></pre>"},{"location":"860/index.html","title":"Hash house harriers (m3h)","text":"","tags":["m3h","running"]},{"location":"860/index.html#attendance","title":"Attendance","text":"<p>I am missing a couple more before 2024-10-20</p>","tags":["m3h","running"]},{"location":"860/index.html#october-2024-10-27","title":"October 2024-10-27","text":"<p>Halloween run in Minnetonka. Went to Kips afterwards.</p>","tags":["m3h","running"]},{"location":"860/index.html#2024-10-20","title":"2024-10-20","text":"<p>Was named Helen Keller\u2019s booty call</p>","tags":["m3h","running"]},{"location":"860/index.html#2024-xx-xx","title":"2024-xx-xx","text":"<p>First run with sandals; SNOWBALL FIGHT!!!</p>","tags":["m3h","running"]},{"location":"860/index.html#march-19-2023-2023-03-19","title":"March 19 2023 (2023-03-19)","text":"","tags":["m3h","running"]},{"location":"861/index.html","title":"Embedding data within go binaries","text":"<p>See <code>embed.FS</code>. Use this instead of embedded data.</p>","tags":["golang"]},{"location":"862/index.html","title":"Bake: Whole wheat 50/50 sourdough batard","text":"<p>Recipe base on 817</p> Ingredient Amount Bakers Percentage Comment Bread flour 232g 58% King Author 12.7% protein Whole wheat flour 168g 42% Turkey red wheat berries Water 275g 69% starter 40g 10% 100% turkey red 1:1 sea salt 8g 02% <p>Total weight is roughly 750g.</p>","tags":["baking","bake","sourdough"]},{"location":"862/index.html#time-log","title":"Time log","text":"<ul> <li>2024-10-22 10:00 Mix starter</li> <li>2024-10-23 08:21 Mix flour and whole wheat</li> <li>2024-10-23 09:56 Mix all the things</li> <li>2024-10-23 15:00 Shaped</li> <li>2024-10-23 20:38 Baked</li> </ul> <p>500f for 30 minutes. Baked in dutch oven on top of a cast iron skillet</p>","tags":["baking","bake","sourdough"]},{"location":"863/index.html","title":"Person: het_tanis","text":"<p>A streamer on twitch that actually has a job. Twitch account is <code>het_tanis</code>. Name is Scott. He does HPC things.</p>","tags":["twitch","person"]},{"location":"864/index.html","title":"Person: Adrian Cantril","text":"<p>Some software developer that rwxrob mentioned.</p>","tags":["person"]},{"location":"865/index.html","title":"Bonzai/hashicorp based completions in zsh","text":"<p>See https://github.com/Chaitanyabsprip/zsh-self-completions/blob/main/compfix.zsh. He got these functions from reverse engineering what ohmyzsh does.</p> <p>I supplied him with the following:</p> <ul> <li><code>which complete</code></li> <li><code>which _bash_complete</code></li> <li><code>which compgen</code></li> </ul> <p>He actually got this from somewhere else. I think he mentioned he was doing things in containers.</p>","tags":["shell","cli","bash","zsh"]},{"location":"866/index.html","title":"Group: Hazy Rhythms dance","text":"<p>Regular dancing group called Hanzy Rythms Dance in St Paul. They do swing dancing. Typically, every Friday at 6 to 8 pm. Also on meetup.com.</p>","tags":["group","dancing"]},{"location":"866/index.html#see-also","title":"See also","text":"<ul> <li>Started by</li> </ul>","tags":["group","dancing"]},{"location":"867/index.html","title":"Recipe: Thai inspired chili","text":"<ul> <li>curry paste</li> <li>coconut cream</li> <li>beans</li> <li>carrots</li> <li>onions</li> </ul>"},{"location":"868/index.html","title":"Bake: large 80/20 sourdough bowl","text":"<p>A tweak on the labor day 2024 bread bowl that I made to bring to work .</p> <p></p> Ingredient Amount Bakers Percentage All purpose flour 558g 80% Turkey red 140g 20% Water 474g 68% starter 80g 11% salt 10g <p>Total weight is 1250g.</p>","tags":["baking","bake","sourdough"]},{"location":"868/index.html#time-log","title":"Time log","text":"<ul> <li>2024-10-28 08:45 Mixed starter</li> <li>2024-10-28 12:31 Mixed flour and water</li> <li>2024-10-28 13:38 Mixed rest of ingredients</li> <li>2024-10-28 20:00 Shaped</li> <li>2024-10-29 22:30 Placed in fridge</li> <li>2024-10-29 07:15 Baked</li> </ul> <p>500f for 24m with lid on and 450f for 14m with lid off. Used the dutch oven with cast iron skillet underneath</p>","tags":["baking","bake","sourdough"]},{"location":"869/index.html","title":"Possibly solution to dynamic autocompletes in oclif","text":"<p>Looking for a possible solution for dynamic auto completions in knut.</p> <p>See https://github.com/heroku/cli/tree/main/packages/cli/src/lib/autocomplete</p>","tags":["cli","typescript"]},{"location":"87/index.html","title":"Logitech G604 issues on macOS","text":"<p>Installed Logitech G Hub</p> <p>Hitting the side buttons asks for permission</p> <p>I found a reddit post that sounds a lot like my issue.  Sounds like they never found a solution.</p> <p>Meta:</p> <pre><code>tags: #fixme #macOS #workstation #hardware\n</code></pre>"},{"location":"870/index.html","title":"Bake: Generic weekend sourdough","text":"Ingredient Amount Bakers Percentage All purpose flour 268g 60% Turkey red 178g 40% Water 303g 68% starter 40g 11% salt 6g 1.5% <p>Total weight is 795g.</p> <p></p>","tags":["baking","sourdough"]},{"location":"870/index.html#time-log","title":"Time log","text":"<ul> <li>2024-11-02 16:14 Mixed dry ingredients</li> <li>2024-11-03 28:30 Mixed rest of ingredients</li> <li>2024-11-02 22:00 Shaped</li> <li>2024-11-03 01:00 Placed in fridge</li> <li>2024-11-03 11:30 Baked</li> </ul> <p>500f for 20m with lid on and 450f for 12m with lid off. Used the dutch oven with cast iron skillet underneath</p>","tags":["baking","sourdough"]},{"location":"871/index.html","title":"Connecting to Truenas storage volumes with NFS on my MacOS","text":"<p>I found a way to connect to nfs volumes on my mac that are hosted on my TrueNAS server ts140 that I use on my homelab.</p> <pre><code>sudo mkdir /Volumes/pxe\nsudo mount -t nfs -o resvport,rw 192.168.50.4:/mnt/main/pxe /Volumes/pxe\n</code></pre> <p>This was largely learned from an article I found online.</p>","tags":["homelab","truenas","storage"]},{"location":"872/index.html","title":"Networking in Ubuntu 24.04","text":"<p>Configuration is found in <code>/etc/netplan/01-netcfg.yaml</code>. Netplan was introduced in Ubuntu 20.04 (Focal Fossa).</p> <ul> <li>Promiscuity mode on a device <code>ip -d link show enps018</code></li> </ul> <p>May be needed for macvlan or ipvlan for a bridge setup with docker.</p>","tags":["ubuntu","linux","networking"]},{"location":"873/index.html","title":"Article: Security Incident Survey Cheatsheet for Server Administrators","text":"<p>An article that I learned about from het_tanis. It is a cheat sheet about the rough steps on what to do when a breach happens relative to a system administrator.</p> <p>https://zeltser.com/media/docs/security-incident-survey-cheat-sheet.pdf?msc=Cheat+Sheet+Blog</p>","tags":["article","security","sysadmin"]},{"location":"874/index.html","title":"Article: macOS X Mount NFS Share / Set an NFS Client","text":"<p>See https://www.cyberciti.biz/faq/apple-mac-osx-nfs-mount-command-tutorial/</p>","tags":["article","sysadmin"]},{"location":"875/index.html","title":"Migrating Virtualbox VM to Proxmox","text":"<p>Create a VM over to Proxmox. This works on version 8.2.2</p> <ul> <li>Convert <code>.vmi</code> to <code>.raw</code> or <code>.qcow2</code> (recommended)</li> <li>Move image to the Proxmox server</li> <li>Create VM in Proxmox.</li> </ul> <p>Remove any disks. Adjust settings as needed. Keep a note of the VM ID.</p> <ul> <li>Import disk image to the created VM</li> </ul> <p>Import the disk. Should look like the following   <code>qm importdisk 106 ./image.qcow2 pxe-image</code>. Here <code>./image.qcow2</code> is the path   to the image to import and <code>pxe-image</code> is the created storage. In this case   <code>pxe-image</code> is a storage powered by NFS.</p> <ul> <li>Ensure that the storage is the first for boot order.</li> <li>Start up the VM</li> </ul>","tags":["homelab","proxmox","virtualbox"]},{"location":"875/index.html#troubleshooting","title":"Troubleshooting","text":"<p>One of the most common issues is changes in drivers. Disks and network devices are an example. Chances are you need to reconfigure them.</p>","tags":["homelab","proxmox","virtualbox"]},{"location":"876/index.html","title":"IPv6 Certification","text":"<p>See https://ipv6.he.net/certification/</p>","tags":["networking"]},{"location":"877/index.html","title":"Using TrueNAS NFS for Proxmox images","text":"<p>This is an experiment to see how well moving the VM disk over to my TrueNAS server currently running on ts140.</p> <p>What I found is it works very well. There is also iSCSI to look into as well.</p>","tags":["homelab","truenas","proxmox"]},{"location":"877/index.html#nfs-on-truenas-setup","title":"NFS on TrueNAS setup","text":"<p>Steps:</p> <ul> <li>Create a user (I named it pxe)</li> </ul> <p>Users shell is <code>/usr/sbin/nologin</code></p> <ul> <li> <p>Create a datastore under Datasets</p> </li> <li> <p>main/pxe/pxe-backup</p> </li> <li>main/pxe/pxe-data</li> <li> <p>main/pxe/pxe-images</p> </li> <li> <p>Update permissions</p> </li> </ul> <p>Currently I have lax permissions where the user and group is pxe. rwx is 777.</p>","tags":["homelab","truenas","proxmox"]},{"location":"877/index.html#proxmox-setup","title":"Proxmox setup","text":"<p>Configuration is found at Datacenter -&gt; Storage</p> <p>Add a NFS device. Recommended to use the IP address.</p>","tags":["homelab","truenas","proxmox"]},{"location":"878/index.html","title":"Patch | Homelab - Setting up DNS with Unbound with DHCP DNS registration","text":"<p>I figured out how to make it so that when devices connect to the LAN on my homelab there <code>hostname</code> becomes registered in the DNS. This only applies to devices added via DHCP from ISC DHCPv4.</p> <p>One issue with this is that when 2 hosts come up with the same hostname. Duplicates will get additional entries in the DNS.</p> <p>The key is found under Services -&gt; Unbound DNS -&gt; General. Check the box Register ISC DHCP4 Leases.</p>","tags":["opnsense","homelab","dhcp","dns","unbound"]},{"location":"879/index.html","title":"Tech GODS list","text":"<p>Non exhaustive list</p> <ul> <li>Dennis Richie:: #unix #c</li> <li>Rob Pike:: #unix #plan9 #go</li> <li>Ken Tompson:: #unix</li> <li>Alan Donovan:: #go #java</li> </ul>"},{"location":"88/index.html","title":"My MacOS workstation setup","text":"<ul> <li>Install Rosetta</li> </ul> <p><code>bash   sudo softwareupdate --install-rosetta --agree-to-license</code></p> <ul> <li>Swap escape and caps lock in settings.</li> </ul> <p>See also</p> <ul> <li> <p>How to swap caps lock</p> </li> <li> <p>Disable keyboard accents</p> </li> </ul> <p>Run <code>defaults write -g ApplePressAndHoldEnabled -bool false</code> in the terminal. This allows VSCode to work as expected.</p> <ul> <li>Xcode</li> </ul> <p>This is done by running <code>xcode-select --install</code></p> <ul> <li>homebrew</li> </ul> <p>This is installed by running <code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"</code></p> <ul> <li>Install vs code</li> </ul> <p>Installing vs code is done by installing from the website. To be able to use <code>code</code> on the command line run <code>Shell Command: Install `code` command in PATH</code>. If this fails you may need to run <code>Shell Command: Uninstall `code` command in PATH</code></p> <ul> <li> <p>Install dotfiles</p> </li> <li> <p>Install all the things with brew</p> </li> </ul> <p><code>bash   brew install go tmux bat fzf ripgrep stow awk tig gh shfmt shellcheck exa coreutils httpie</code></p> <ul> <li>Install fzf utilitites</li> </ul> <p><code>bash   /opt/homebrew/opt/fzf/install --xdg --key-bindings --completion --no-update-rc</code></p> <ul> <li>Install rust</li> </ul> <p><code>bash   cd \"$(mktemp -d)\" || exit 1   curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs &gt; rustup.sh   export RUSTUP_HOME=\"${XDG_DATA_HOME:-$HOME/.local/share}/rustup\"   export CARGO_HOME=\"${XDG_DATA_HOME:-$HOME/.local/share}/cargo\"   if [[ \"$(sha256sum rustup.sh | awk '{print $1}')\" = \"be3535b3033ff5e0ecc4d589a35d3656f681332f860c5fd6684859970165ddcc\" ]]; then     sh rustup.sh --no-modify-path   fi</code></p> <ul> <li>Install utilities with cargo</li> </ul> <p><code>bash   cargo install fd-find stylua   ln -s \"$(which fd)\" ~/.local/bin/fdfind</code></p> <p><code>fdfind</code> is used by <code>fzf</code> for finding files and directories</p> <ul> <li> <p>Install flutter</p> </li> <li> <p>Install yabai for tiling window manager</p> </li> <li> <p>Install Lando</p> </li> <li> <p>Setup notifications</p> </li> </ul> <p>Use spotlight to search for notifications</p>","tags":["macosx","workstation"]},{"location":"880/index.html","title":"Setting up DHCP on OPNSense (2024-11-09)","text":"<p>As of 2024-11-09 I am using ISC DHCPv4 for DHCP on my homelab. It is currently setup on my beelink.</p>","tags":["homelab","dhcp","opnsense"]},{"location":"881/index.html","title":"Most efficient transpiler see go tool chain","text":"<ul> <li>Uses <code>goto</code> all over the place</li> <li>Fastest in the world</li> </ul> <p>Rob Pike was obsessed with compile time. Compiles and runs faster than Python.</p>"},{"location":"882/index.html","title":"Vim filter cheatsheet","text":"<ul> <li><code>%!</code>: whole buffer</li> <li><code>.!</code>: line</li> <li><code>:!</code>: selection</li> </ul>","tags":["vim"]},{"location":"882/index.html#cheatsheet","title":"Cheatsheet","text":"<ul> <li><code>.!</code></li> </ul> <p>Pipes the current line into the command. Replace line with stdout</p> <ul> <li><code>:'&lt;,'&gt;.!</code></li> </ul> <p>Pipe the selected lines into the command. Replace selected with stdout</p>","tags":["vim"]},{"location":"883/index.html","title":"SPEC: dotz package manager","text":"<p><code>dotz</code> is mean to be a <code>dotfiles</code> package manager designed to combine multiple dotfiles together. An example would be a set of dotfiles for work and personal use. The way that it will work is that there will be multiple repos tracked with git. Each repo will contain a bunch of packages.</p>","tags":["dotz","spec"]},{"location":"883/index.html#dotfile-repos","title":"Dotfile repos","text":"<p>Each repo contains a <code>packages</code> directory that contains a <code>package.json</code>. Do note that <code>package.json</code> has nothing to do with the node echo system. I am just abusing some pre-existing tools that make use of the file <code>package.json</code>. A future version may switch to something like <code>dotz.yaml</code>.</p> <p><code>package.json</code> contains version info for the package that it resides in.</p>","tags":["dotz","spec"]},{"location":"883/index.html#example-personal-repo","title":"Example personal repo","text":"<p>Example that includes the packages <code>chezmoi</code>, <code>go</code>, <code>shell</code>, and <code>yq</code>. These are mostly installers. <code>chezmoi</code> is unique in that it installs chezmoi as well as apply it to the system. The rest are just packages that installs <code>go</code>, <code>yq</code> to a custom location for the user.</p> <pre><code>\u276f tree ~/repos/personal/dotfiles\n.\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 packages\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 chezmoi\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CHANGELOG.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 install.sh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 home\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u251c\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502   \u2514\u2500\u2500 ...\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 go\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 install.sh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 remove.sh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yq\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 install.sh\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 remove.sh\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 package.json\n\u251c\u2500\u2500 pnpm-lock.yaml\n\u2514\u2500\u2500 pnpm-workspace.yaml\n</code></pre>","tags":["dotz","spec"]},{"location":"883/index.html#example-work-repo","title":"Example work repo","text":"<p>The work <code>dotfile</code> repo contains an installer for a custom program and some configuration.</p> <pre><code>\u276f tree ~/repos/work/dotfiles\n.\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 packages\n\u2502\u00a0\u00a0 \u2514\u2500\u2500\u2500 work-shell\n\u2502\u00a0\u00a0 \u00a0\u00a0  \u251c\u2500\u2500 install.sh\n\u2502\u00a0\u00a0 \u00a0\u00a0  \u251c\u2500\u2500 config.yaml\n\u2502\u00a0\u00a0 \u00a0\u00a0  \u2514\u2500\u2500 package.json\n\u251c\u2500\u2500 pnpm-lock.yaml\n\u2514\u2500\u2500 pnpm-workspace.yaml\n</code></pre>","tags":["dotz","spec"]},{"location":"883/index.html#configuration","title":"Configuration","text":"<p>The configuration will contain where to find packages and what packages to install</p>","tags":["dotz","spec"]},{"location":"883/index.html#configuration-example","title":"Configuration example","text":"<p>The configuration needs to specify repos to include for where to look for packages</p> <pre><code>&gt; cat ~/.config/dotz/config.yaml repos:\nrepos:\n  - name: work\n    url: file:~/repos/work/dotfiles\n  - name: personal\n    url: file:~/repos/personal/dotfiles\n  - name: personal\n    url: https://github.com/example-user/dotfiles.git\npackages:\n  - chezmoi==^0.8.1\n  - ecw-shell==^0.113.4\n  - personal:yq==^0.4.2\n</code></pre>","tags":["dotz","spec"]},{"location":"883/index.html#cli-design","title":"CLI design","text":"<p>Rough output of <code>dotz help</code>:</p> <pre><code>NAME:\n  dotz - dotfiles package manager\n\nCOMMANDS\n  config  - manage configuration\n  add     - add a package or packages\n  remove  - remove a package or packages\n  install - install package\n  fetch   - fetch a list of packages.  Mainly used updating packages\n  search  - search for packages\n</code></pre> <p>Rough output of <code>dotz help config</code>:</p> <pre><code>COMMANDS\n  edit   - open config in $EDITOR\n  set    - set a configuration variable\n  get    - get a configuration variable\n  yq     - wrapper around yq with the config file\n</code></pre> <p>Rough output of <code>dotz install</code>:</p> <pre><code>NAME\n  install - install packages\nDESCRIPTION\n  Installs a list of packages. If there is no arguments packages found in the configuration are installed. Packages passed through the command line will install the package and either update or add a package to the config file\n</code></pre>","tags":["dotz","spec"]},{"location":"883/index.html#architecture","title":"Architecture","text":"<p>Add and removing a package will respectably add or remove the packages from the config file</p> <p>When installing a packages are vendored into a state directory. A vendored copy either consists of symbolically linking the package or a copy of the contents tracked by a git tag. This could be implemented using the <code>git archive</code> feature that is part of <code>git</code>. Once all packages are vendored the install.sh file will be called in all packages.</p>","tags":["dotz","spec"]},{"location":"884/index.html","title":"Trump 2024 presidential election ramifications","text":"<p>Trump won the presidential election in 2024.</p> <ul> <li>Tariffs: Proposed 60% on china and 10% for everything else</li> </ul> <p>This will result in roughly 10% price increase on everything in the short term</p> <p>Wether this will actually lead to increases in domestic manufacturing int long run is hard to say. It most likely depends on the particular market. May decrease manufacturing if customers simply won\u2019t purchase at the higher price. May increase if customers still buy at higher prices. Tariffs may work well for inelastic goods.</p> <p>How does triffin dilemma play into this? Will the pressure the world to move away from the US dollar. This would destroy us.</p> <ul> <li>Supreme court</li> </ul> <p>He is a felon that a pass. Does he now have immunity?</p> <p>Already appointed , Neil Gorsuch, Brett Kavanaugh, and Amy Coney Barret.</p> <p>Will he be appointing more?</p> <ul> <li>Unified government: 3 branches are now republican</li> <li>New record for political race spending (16B) - is this adjusted for inflation?</li> <li>Musk may have a role as Department of Government Efficiency (DOGE). Will this make America an oligopoly? Bernie sanders suggested potential of this years before. See https://www.youtube.com/watch?v=ZaekogALkFM</li> <li>Federal reserve ramifications. Trumps wants to fire him. Reelecting a new one in 2026</li> <li> <p>Trump is the first [felon] to win a presidential election. </p> </li> <li> <p>interesting discussion</p> </li> </ul>","tags":["politics","economics"]},{"location":"885/index.html","title":"SPEC: encode bash script","text":"<p>A simple bash script to encode text strings into some formats</p> <p>Supported formats:</p> <ul> <li>base64url</li> <li>base64</li> <li>url</li> </ul> <p>Remove invalid characters. For example spaces become the right thing</p>"},{"location":"885/index.html#cli-interface","title":"CLI Interface","text":"<pre><code>encode base64url \"Here is some example\" # outputs ...\n</code></pre>"},{"location":"886/index.html","title":"Process for create my encode script","text":"<p>This is my process for creating the encode script. I first wrote a simple spec. I then generated a bash script. I fed the spec and the template into the AI with a program called mods.</p> <pre><code>zet pub cat 885 | mods --role bash \"This is my spec for the encode program\"\ncreate-bash-script encode\ncat encode | mods --role bash -C\n</code></pre> <p>The output largely did what I want.</p>","tags":["ai","bash"]},{"location":"887/index.html","title":"Prompt: Details of how my KEG is setup","text":"<p>My KEG is personal knowledge management and collaborative information sharing tool. It is a set of numbered nodes (I sometimes call them notes) that contain a README.md file that contains Github flavored markdown. Nodes may also contain a meta.yaml file that will typically contain tags.</p> <ol> <li>Node Structure:</li> </ol> <ul> <li>Each node is represented by a README.md file.</li> <li>The file uses GitHub-flavored markdown for formatting.</li> <li>The title is placed on the first line.</li> <li>The first paragraph contains a synopsis of the node\u2019s content. Typically, tells what the node is about and how its associated to other nodes within the keg.</li> </ul> <ol> <li>Interlinking:</li> </ol> <ul> <li>Nodes may link to other nodes, providing context and creating a network.</li> <li>Nodes may link to other nodes in a different keg. These are in the form of <code>keg:alias/234</code> where <code>keg</code> is the protocol, <code>alias</code> is the name of the keg, and <code>234</code> is the node id. For KEG nodes that reside in this KEG <code>../234</code> should be used where 234 is the node id.</li> </ul> <ol> <li>Node Types:</li> </ol> <ul> <li>Entity: Represents a discrete piece of information such as an article, event, or meeting.</li> <li>Log: Describes actions or activities done in relation to an entity. Logs are specific and help in pattern identification over time.</li> </ul> <p>Here is an incomplete list of entities:</p> <ol> <li>Issue: - Bug or Issue Description</li> <li>Project: - Project Descriptions</li> <li>Place: - Locations or Events</li> <li>Person: - Notable Individuals</li> <li>Recipe: - Cooking or Food-related Entries</li> <li>Event: - Specific Events or Occasions</li> <li>Meeting: - An event that is business meeting</li> <li>SPEC: - Specifications or Detailed Descriptions</li> <li>Article: - Articles or Reading Material</li> <li>Software: - Software-related Information</li> <li> <p>Hardware: - Hardware or physical thing that I own</p> </li> <li> <p>Indexes:</p> </li> </ol> <ul> <li>Index are maintained in the <code>dex</code> directory.</li> <li>Indexes are generated from the content of nodes</li> <li>There is a <code>dex/nodes.tsv</code> file that contains in tsv format the node id, last update time, and its title where its context or sorted from lowest to highest id number</li> <li>There is a <code>dex/changes.md</code> file that contains an alternative to <code>dex/nodes.tsv</code> in markdown format sorted by most recently updated at the top</li> <li>There is a <code>dex/tags</code> file that contains an index that maps a tag to a list of nodes</li> <li>Additional indexes may be generated</li> </ul> <ol> <li>Purpose:</li> </ol> <ul> <li>The primary goal is personal information capture and recall.</li> <li>The secondary goal is sharing information with others.</li> </ul> <ol> <li>Benefits:</li> </ol> <ul> <li>Helps in identifying patterns through logs.</li> <li>A powerful tool for prompt engineering. Able to feed nodes and there links to an LLM to provide additional context for chat bots</li> <li>Facilitates the discovery of forgotten or related information by navigating through interlinked nodes.</li> </ul>","tags":["ai","prompt"]},{"location":"889/index.html","title":"SPEC: nexi bash script","text":"<p>A bash script for training an AI against my kegs and to interact with a chat bot that has knowledge of its contents.</p> <pre><code>CONFIG_FILE=\"${HOME}/.config/knut/config.yaml\"\n</code></pre> <p>A list of available kegs may be found with:</p> <pre><code>KEGS=\"$(yq \".kegs[] | .alias\" \"${CONFIG_FILE}\")\"\ncmd=\"$(printf \"%s\" \"${COMP_LINE}\" | awk '{print $2}')\"\n</code></pre>","tags":["nexi","bash"]},{"location":"889/index.html#cli-examples","title":"CLI examples","text":"","tags":["nexi","bash"]},{"location":"889/index.html#nexi-train-personal-54","title":"<code>nexi train personal 54</code>","text":"<pre><code>nexi train personal 54\n</code></pre>","tags":["nexi","bash"]},{"location":"889/index.html#nexi-log-personal-edit","title":"<code>nexi log personal edit</code>","text":"<p>Opens up a log to what nodes have been trained. This is more for debugging. Logs will be in <code>${HOME}/.local/state/nexi/personal.json</code>. <code>personal</code> is the name of the keg.</p>","tags":["nexi","bash"]},{"location":"889/index.html#training-script","title":"Training script","text":"<pre><code># feed all nodes from keg keg-spec to the AI\nzet pub cat 887 | mods --role keg \"This is the contents of node pub/887\"\nzet pub cat 889 | mods --role keg -C \"This is the contents of node pub/889\"\ncat \"$(command -v ecw)\" | mods --role keg -C \"This is the content of a script that I wrote.  I would like nexi to be in the same coding style.\"\n</code></pre>","tags":["nexi","bash"]},{"location":"89/index.html","title":"Logitech G604 issues on macOS","text":"<p>Installed Logitech G Hub</p> <p>Hitting the side buttons asks for permission.  I think this has to do with G Hub.  It is also interesting to note that some mice the side buttons may not work without additional software.</p> <p>At work the mouse was struggling to stay connected.  This doesn\u2019t occur at home when attached to my Razer thunderbolt hub.</p> <p>See also:</p> <p>Meta:</p> <pre><code>tags: #macOS #workstation #hardware\n</code></pre>"},{"location":"890/index.html","title":"Enabling vi mode editing in bash","text":"<p><code>vi</code> mode in bash lets you navigate the current line using the <code>vi</code> based keybindings that you already know.</p> <p></p> <p>To enable add the following to your <code>.bashrc</code></p> <pre><code>set -o vi\n</code></pre> <p>By default you will be in insert mode. To enable navigation normal mode needs be enabled. This may be hitting the escape key.</p> <p>Another trick is to enter visual mode. In normal mode hit v. This will open up the current line in \u201c${EDITOR}\u201d (vim by default I think - not verified). Edit like a normal bash script. Enter normal mode and type <code>:wq</code>. By default I think the script will auto run. If not hit enter.</p>","tags":["bash","cli"]},{"location":"890/index.html#cheat-sheet","title":"Cheat sheet","text":"<p>Most common keybindings to get you started. There are a lot more. Words are supported <code>w</code>, <code>e</code>, <code>b</code> work as expected.</p> <ul> <li>Entering normal mode:</li> </ul> <p>Spam ESCAPE key</p> <ul> <li>Entering insert mode</li> </ul> <p>Hit either <code>i</code> or <code>a</code>. <code>i</code></p> <ul> <li>Entering visual mode (editing the line as a bash script instead of a long line)</li> </ul> <p>In normal mode hit <code>v</code></p> <ul> <li>Navigation</li> </ul> <p>In normal mode use <code>h</code> (left) and <code>l</code> (right)</p>","tags":["bash","cli"]},{"location":"891/index.html","title":"Migrating from pnpm to deno","text":"<p>For knut I did an experiment to see how well deno 2.0 works. Previously I have done an experiment to see how to run the knutjs core library in a script to do some one off thing.</p> <p>Some problems I ran into include:</p> <ul> <li> <p>Type issues</p> </li> <li> <p>Issue with the <code>fp-ts/HKT</code> types</p> <p>Ended up in lining the contents found in node modules</p> </li> <li> <p>Issues with <code>mdast</code> types</p> <p>Ended up in lining the contents found in node modules</p> <p>See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/mdast/v3/index.d.ts for the types. This seems to be slightly different though</p> </li> <li> <p>Package imports</p> </li> </ul> <p>Imports are finicky on other packages on the mono repo:</p>"},{"location":"892/index.html","title":"Software: Local AI (localai)","text":"<p>Localai is a api compatible with openai.</p>","tags":["entity","software","localai"]},{"location":"893/index.html","title":"First impressions with localai on my mac","text":"<p>I was experimenting with localai on my mac as an alternative to openai. I was finding that openai gets kind of spendy when you start feeding it tons of data to use it as a search engine. I was initially checking the feasibility for use with knut to see if a KEG would fit in the context window. The short answer is no. See node 894 for details. I can only reasonable do like 20 nodes.</p>","tags":["localai","openai","ai"]},{"location":"894/index.html","title":"Experimenting with AI context windows on LocalAI and OpenAI","text":"<p>Typically, I use the [<code>mod</code>] program and a couple of scripts around my <code>zet</code> script to selectively feed the model KEG nodes to provide additional context for the AI to answer back. LocalAI offers a way to instead run on local hardware rather an OpenAI. Here is what I found out:</p> <ul> <li>Costs roughly 1$ per 20 nodes on OpenAI</li> <li>Expect up to 5 seconds per node as OpenAI has limits on its API.</li> <li>LocalAI is roughly 4x slower on my mac (<code>gpt-4o</code> vs <code>qwen2.5-coder-32b-instruct</code>)</li> <li>LocalAI is a PITA to setup on windows. Couldn\u2019t figure out how to get it to work with a 1060 GPU for the given amount of time I wanted to spend on it.</li> <li>Able to install from brew. <code>brew install localai</code>. Image generation TTS and Talk don\u2019t seem to work. Compiling locally doesn\u2019t work.</li> <li><code>localai</code> crashes and stops working after like 80 nodes or so</li> </ul> <p><code>mod</code></p>","tags":["knut","ai","localai","openai"]},{"location":"894/index.html#local-ai-setup","title":"Local AI setup","text":"<p>How I setup localai on my mac</p> <pre><code>brew install localai\nmkdir -p \"${HOME}/.local/share/localai\"\ncd \"${HOME}/.local/share/localai\"\nlocal-ai # runs local-ai\n</code></pre> <p>Once localai is running go to models and download the models.</p> <p>I added <code>\"${HOME}/.local/share/localai\"</code> to the excludes list for time machine as it takes up a ton of space. I could just re download them from the internet.</p>","tags":["knut","ai","localai","openai"]},{"location":"894/index.html#mods-setup","title":"<code>mods</code> setup","text":"<p>The application that I use for consuming chatgpt\u2019s APIs is <code>mods</code>. Easy to install with <code>brew install mods</code>.</p> <p>Key points about mods:</p> <ul> <li>mods alias don\u2019t seem to work. Need to use the full model name (e.g. <code>qwen2.5-coder-32b-instruct</code>)</li> <li>localai models need to be added to <code>mods.yaml</code> (located at <code>${HOME}/.config/mods/mods.yml</code>)</li> </ul> <p>I created a wrapper script around <code>mods</code> called <code>nexi</code>. It simply tells mods to use either <code>qwen2.5-coder-32b-instruct</code> on localai instead of <code>gpt-4o</code> on openai. An example of the call to mods is <code>mods -m \"qwen2.5-coder-32b-instruct\" -t \"nexi\" -c \"nexi\" \"your message\"</code> to use localai instead of openai. These models need to be available in <code>mods.yml</code> (located at <code>${HOME}/.config/mods/mods.yml</code>).</p> <pre><code>apis:\n  openai:\n    openai:\n    base-url: https://api.openai.com/v1\n    api-key:\n    api-key-env: OPENAI_API_KEY\n    models:\n      gpt-4o:\n        aliases: [\"4o\"]\n        max-input-chars: 392000\n        fallback: gpt-4\n      gpt-4:\n        aliases: [\"4\"]\n        max-input-chars: 24500\n        fallback: gpt-3.5-turbo\n  localai:\n    # LocalAI setup instructions: https://github.com/go-skynet/LocalAI#example-use-gpt4all-j-model\n    base-url: http://localhost:8080\n    models:\n      qwen2.5-coder-32b-instruct:\n        aliases: [\"gwen32b\"]\n        max-input-chars: 12800\n        fallback:\n      qwen2.5-coder-3b-instruct:\n        aliases: [\"gwen3b\"]\n      qwen2.5-72b-instruct:\n        aliases: [\"gwen\"]\n</code></pre>","tags":["knut","ai","localai","openai"]},{"location":"895/index.html","title":"Creating a time machine backup on TrueNAS","text":"<p>Wanted to backup my mac on my TrueNAS server in my homelab as well as on my backup external HDD.</p> <p>Steps to reproduce:</p> <ul> <li>Enable Apple SMB2/3 Protocol Extensions</li> </ul> <p>This is fund under Shares. Configure SMB shares to enable the extension in the modal that pops up on the right of the screen.</p> <ul> <li>Add SMB dataset</li> </ul> <p>Found under Datasets create a SMB share. I named it <code>time-machine</code> - may be too generic as I may want to backup multiple devices to it. Problem for later. Set the purpose to Multi-user time machine I also set a quota of 4 TiB.</p> <ul> <li>Mount smb on mac (<code>smb:truenas.int.jlrickert.me/time-machine</code>).</li> <li>Add the time machine through the Time Machine in Settings</li> </ul>","tags":["homelab","truenas","networking"]},{"location":"896/index.html","title":"Article: code signing deno applications","text":"<p>Found an article that describes how to code sign a deno compiled application.</p> <p>This possible goes further than just deno. Might be useful for other applications as well. I know I ran into this issue for other programs as well.</p>","tags":["article"]},{"location":"897/index.html","title":"Bake: Generic weekend sourdough ~batard~ focaccia","text":"<p>A remake of the batard that I made a few weeks back. Turned it into a focaccia because I forgot to through it in the fridge.</p> Ingredient Amount Bakers Percentage All purpose flour 268g 60% Turkey red 178g 40% Water 303g 68% starter 40g 11% salt 6g 1.5% <p>Total weight is 795g.</p> <p></p>","tags":["bread","bake","sourdough"]},{"location":"897/index.html#time-log","title":"Time log","text":"<ul> <li>2024-11-16 11:00 Fed starter</li> <li>2024-11-16 17:17 Autolyse ingredients</li> <li>2024-11-16 18:24 Mixed in starter</li> <li>2024-11-17 10:14 Baked</li> </ul> <p>500f in the cast iron skillet for 500f</p>","tags":["bread","bake","sourdough"]},{"location":"898/index.html","title":"Skill stack log dumps","text":"<p>Logs for skillstack. I typically don\u2019t follow real close. I </p>","tags":["twitch","technology"]},{"location":"898/index.html#time-logs","title":"Time logs","text":"","tags":["twitch","technology"]},{"location":"898/index.html#2024-11-17","title":"2024-11-17","text":"<ul> <li>NFS for k8s storage</li> <li>Socratic method (trick rob uses). Its playing the fool</li> <li>watch Deep or dumb bill and teds excellent adventure</li> <li>LVM vs LVM-thin vs directory (Rob uses LVM)</li> <li>Learning to code is associated with knowing algebra. Especially linear algebra</li> <li>Rob used to use gitlab.  Hasn\u2019t looked at it in years</li> <li>People remember narratives better (e.g. Learn pi by creating a story around each number.)</li> </ul>","tags":["twitch","technology"]},{"location":"899/index.html","title":"EDU: Skill stack beginner boost (skillstack)","text":"<p>rwxrob weekly skill stack that he does in school.</p>","tags":["tech","skillstack"]},{"location":"9/index.html","title":"The processes of migrating my private zets to my public zets","text":"<p>I have been slowly migration all my public zets from my private zettelkasten into this repo. One benefit of this is that I have been moving away from pre keg things and get a chance to update to newer patterns. This does raise the question on how I am going to manage multiple kegs.</p> <p>So far I have currently moved over all my world of warcraft notes and pop-os notes</p>"},{"location":"90/index.html","title":"Sanity content management system","text":"<p>This is something that Edwin has been experimenting on.</p>"},{"location":"900/index.html","title":"Using environment variables to populate YAML configurations","text":"<p>To avoid storing sensitive information directly in a YAML configuration file, you can leverage environment variables to dynamically replace placeholders before the file is used. One effective way to achieve this is by piping the contents of the YAML file through <code>envsubst</code>. Secret environment variables can be defined in a shell script and sourced before processing the YAML file.</p>","tags":["yaml","bash","cli","scripting","unix"]},{"location":"900/index.html#example","title":"Example","text":"<p>This proof of concept demonstrates the approach:</p> <pre><code># config.yaml\nusername: ${USER_NAME}\npassword: ${USER_PASSWORD}\n</code></pre> <pre><code># secrets.sh\nexport USER_NAME=myusername\nexport USER_PASSWORD=mypassword\n</code></pre> <pre><code># Usage in a script\nsource secrets.sh\ncat config.yaml | envsubst | yq '.'\n</code></pre>","tags":["yaml","bash","cli","scripting","unix"]},{"location":"901/index.html","title":"SPEC: homelab multi call binary monolith","text":"<p>Specification for a multi call binary monolith for my homelab.</p> <p>Links to open with <code>homelab open $LINK</code>:</p> <ul> <li>https://trunas.int.jlrickert.me</li> <li>https://opnsense.int.jlrickert.me</li> <li>https://proxmox.int.jlrickert.me:8006</li> </ul>","tags":["homelab","bash","cli"]},{"location":"901/index.html#sub-commands","title":"Sub commands","text":"","tags":["homelab","bash","cli"]},{"location":"901/index.html#homelab-open-link","title":"<code>homelab open $LINK</code>","text":"<p>Links to open with <code>homelab open $LINK</code>:</p> <ul> <li>https://trunas.int.jlrickert.me</li> <li>https://opnsense.int.jlrickert.me</li> <li>https://proxmox.int.jlrickert.me:8006</li> </ul>","tags":["homelab","bash","cli"]},{"location":"901/index.html#configuration-specification","title":"Configuration specification","text":"","tags":["homelab","bash","cli"]},{"location":"901/index.html#homelab-config-edit","title":"<code>homelab config edit</code>","text":"<p>Configuration for <code>homelab config</code>:</p>","tags":["homelab","bash","cli"]},{"location":"902/index.html","title":"Place: Mac\u2019s Industrial Sports Bar","text":"<p>Mac\u2019s Industrial Sports Bar is a bar in [Dinky Town] at 312 Central Ave SE \u00b7 Minneapolis, MN.</p>","tags":["place","bar","minneapolis"]},{"location":"903/index.html","title":"Place: Dinky Town","text":"<p>Place in Minneapolis just south of the Mississippi river.</p>","tags":["place","minneapolis"]},{"location":"904/index.html","title":"Trick to prevent page reloading for debugging","text":"<p>Ran into a problem where I needed to see a console log in the browser inspector. However, the page was navigating away.</p> <p>Add the following to the console.</p> <pre><code>window.onbeforeunload = function () {\n  return \"\";\n};\n</code></pre>","tags":["webdev","javascript","browser"]},{"location":"905/index.html","title":"Trick: type safe error handling with error maps","text":"","tags":["trick","typescript"]},{"location":"905/index.html#base-implementation","title":"Base implementation","text":"<pre><code>type Result&lt;T, E&gt; = { ok: true; value: T } | { ok: false; Error: T };\n\ntype MyErr&lt;Code, Context&gt; = {\n  code: Code;\n  cause?: string;\n  context: Context;\n  stack?: string;\n  error?: unknown;\n};\n\ntype ErrMap&lt;Map&gt; = {\n  [Code in MapKey&lt;Map&gt;]: MyErr&lt;Code, Map[Code]&gt;;\n};\n\nexport const make: {\n  &lt;E extends MyErr&lt;any, any, any&gt;&gt;(params: Omit&lt;E, \"name\"&gt;, options?: MakeErrOptions): E;\n  &lt;Code extends string, Context&gt;(\n    params: Omit&lt;MyErr&lt;Code, Context&gt;, \"name\"&gt;,\n    options?: MakeErrOptions,\n  ): BaseErr&lt;Scope, Code, Context&gt;;\n} = &lt;Code extends string, Context&gt;(\n  { code, context, error, cause, stack }: Omit&lt;MyErr&lt;Scope, Code, Context&gt;, \"name\"&gt;,\n  options?: MakeErrOptions,\n): BaseErr&lt;Scope, Code, Context&gt; =&gt; {\n  const o: any = {\n    name: `@${scope}/${code}`,\n    scope,\n    code,\n    context,\n  };\n  if (cause) {\n    o[\"cause\"] = cause;\n  }\n  if (error) {\n    o[\"error\"] = error;\n  }\n  const trace = stack ? stack : options?.stackTrace ? new Error().stack : undefined;\n  if (trace) {\n    o[\"stack\"] = trace;\n  }\n  return o;\n};\n</code></pre>","tags":["trick","typescript"]},{"location":"906/index.html","title":"Research: upgrading to an adjustable desk with a treadmill","text":"<p>Sitting for long periods of time I find uncomfortable.</p> <p>Facts and preferences</p> <ul> <li>Prefer sitting 80% of the time as opposed to standing</li> <li>I like having the option to move around</li> <li>I can work while walking on a treadmill as long at it only involves a keyboard</li> </ul> <p>Roughly like 1.5 hours</p> <p>Some unknowns</p> <ul> <li> <p>Monitors tend to be shaky while walking. Is this an issue when they are mounted with arms.</p> </li> <li> <p>Flexi</p> </li> <li> <p>uplift</p> </li> <li> <p>Spendy</p> </li> <li> <p>vari</p> </li> </ul>","tags":["research","ergonomics"]},{"location":"907/index.html","title":"Project: <code>claude</code> stateful command line tree program (claude-cli)","text":"<p>Wrapper around claude to make it easy to use with the Unix tool set.</p>","tags":["claude-cli","claude","ai","llm"]},{"location":"907/index.html#dump","title":"Dump","text":"<ul> <li>Plan on building with deno</li> <li>Does this work with langchain?</li> <li>typesceript sdk</li> <li>docs</li> <li>Need to figure out workflows around prompt caching</li> <li><code>CLAUDE_API_KEY</code> in <code>~/.config/dotfiles/secrets/personal.sh</code></li> </ul>","tags":["claude-cli","claude","ai","llm"]},{"location":"908/index.html","title":"Issue: LSP may expose sensitive contents","text":"<p>Typing <code>~/.config/dotfiles/secrets/personal.sh</code> shows the contents of a file.</p>","tags":["issue","security"]},{"location":"909/index.html","title":"Prompt: converting tables in word documents to markdown tables","text":"<p>One trick that I found is to copy and paste the contents of a word document into vim. The contents will be garbage. I feed it into chat gpt to the format.</p> <p>Known issues with this approach:</p> <ul> <li>converts checkboxes to either 1 or 0. I prefer [x] and [ ]</li> </ul>","tags":["prompt"]},{"location":"91/index.html","title":"How to swap caps lock on MacOS","text":"<p>On MacOS 13 the option is built right in. Apple button (top left) &gt; System settings &gt; keyboard &gt; keyboard shortcuts &gt; modifier keys &gt; do the thing.</p>","tags":["workstation","macosx"]},{"location":"910/index.html","title":"Bake: More Rye-Based Sourdough Loaf","text":"<p>This rye-forward loaf is an adaptation of the labor day 2024 bread bowl. A bit of an experiment as I haven\u2019t made one in a while. The recipe emphasizes a higher proportion of rye flour to develop a distinct flavor and texture, perfect for rye enthusiasts.</p> <p>Loaf turned out decent on the outsides. The middle was still dough though and there was a rather large hole in the middle.</p> <p></p>","tags":["sourdough","baking","bake","rye"]},{"location":"910/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Rye flour 193g 17.5% Stone-ground rye flour All purpose flour 392g 70% Used to balance the structure Water 355g 74% Adjust water depending on humidity starter 180g 31% 100% rye 1:1 salt 9g 1.6% Sea salt for flavor enhancement <p>Total weight is approximately 1100g.</p> <p>[!TIP]</p> <p>Due to the high rye content, the dough may be stickier. Trust the process and adjust hydration if needed.</p>","tags":["sourdough","baking","bake","rye"]},{"location":"910/index.html#time-log","title":"Time log","text":"<ul> <li>2024-12-15 10:00 Mixed starter</li> <li>2024-12-15 16:18 Autolyse flour</li> </ul> <p>30g short of Rye flour. Too lazy to make more right now. Going to add 30g more starter. Also added 20g more water as it was really dry. I updated the ingredients table.</p> <ul> <li>2024-12-16 00:00 Placed into the fridge</li> <li>2024-12-16 00:00 Pulled out of the fridge</li> <li>2024-12-16 15:33 Baked at 500 for 35 minutes in the oven using the cast iron skillet trick. I didn\u2019t use parchment paper at all. The middle was still dough. Most likely from the high rye content.</li> </ul>","tags":["sourdough","baking","bake","rye"]},{"location":"911/index.html","title":"Autolyse Flour","text":"<p>The autolyse process is a crucial step in bread baking, particularly in sourdough and artisan bread recipes. It involves mixing flour and water together and letting it rest before adding other ingredients like starter and salt.</p>","tags":["baking"]},{"location":"911/index.html#purpose-of-autolyse","title":"Purpose of Autolyse","text":"<ul> <li>Gluten Development: The resting time allows the flour to hydrate, facilitating the enzymatic breakdown of proteins, which leads to gluten formation.</li> <li>Dough Consistency: Improves dough extensibility, making it easier to stretch and shape.</li> <li>Flavor Enhancement: Enzymatic activity begins breaking down starches into sugars, aiding fermentation and enhancing flavor.</li> </ul>","tags":["baking"]},{"location":"911/index.html#autolyse-steps","title":"Autolyse Steps","text":"<ol> <li>Combine Flour and Water: Mix the specified amount of flour and water in your recipe until no dry flour remains. Avoid over-mixing.</li> <li>Resting Period: Cover the mixture and let it rest. The duration can vary from 20 minutes to several hours, depending on the recipe and desired outcomes.</li> <li>Continue with Recipe: After the autolyse, continue with the rest of the recipe by incorporating the starter, salt, and any additional ingredients.</li> </ol>","tags":["baking"]},{"location":"911/index.html#tips","title":"Tips","text":"<ul> <li>Water Temperature: Use water that is appropriate for ambient conditions, generally around room temperature.</li> <li>Cover During Rest: Keep the dough covered to prevent drying out.</li> <li>Adjust Time as Needed: Different flours and environmental conditions might necessitate adjustments in time.</li> </ul>","tags":["baking"]},{"location":"911/index.html#benefits","title":"Benefits","text":"<p>Engaging in the autolyse process can lead to a more manageable dough and enhanced bread quality, providing a richer flavor and better crumb structure in the final product.</p> <p>[!NOTE]</p> <p>Some recipes recommend omitting salt during autolyse to allow complete hydration and enzymatic activity before strengthening the dough.</p> <p>This foundational step in bread-making is adaptable and can be tailored to fit various recipes and techniques.</p>","tags":["baking"]},{"location":"912/index.html","title":"Hardware: Harrison gas stove","text":"<p>The stove that I had starting 2024-10-01.</p>","tags":["hardware","baking"]},{"location":"913/index.html","title":"Dutch Oven and Cast Iron Skillet Method for baking bread","text":"<p>The process of baking bread using a Dutch Oven placed on top of a cast iron skillet is a technique designed to enhance heat distribution and steam retention, crucial for achieving a good crust and proper rise in artisanal bread.</p>"},{"location":"913/index.html#baking-process","title":"Baking Process","text":"<ol> <li>Preheat the Oven:</li> </ol> <p>Preheat your oven to the desired temperature, often around 500\u00b0F, with the Dutch oven inside. Refer to Autolyse Flour for preparation steps.</p> <ol> <li>Add Steam (Optional):</li> </ol> <p>Optionally, add a small amount of water into the preheated Dutch oven before placing the loaf inside to create steam essential for a crispy crust.</p> <ol> <li>Place the Dough:</li> </ol> <p>Carefully transfer your dough into the hot Dutch oven. Some techniques involve using parchment paper for easier handling and transfer, as mentioned in Labor day 2024 bread bowl.</p> <ol> <li>Baking with Lid On:</li> </ol> <p>Cover the Dutch oven with its lid to retain steam and moisture around the dough during the initial phase of baking, typically for 18-24 minutes at high temperature.</p> <ol> <li>Remove the Lid:</li> </ol> <p>After the steam phase, remove the lid to allow the crust to brown and crisp up. Lower the oven to 450\u00b0F and bake for an additional 12-14 minutes. Something to note about bread with high content of rye is that it does take longer.</p> <ol> <li>Finish Baking:</li> </ol> <p>Bake until the crust achieves your desired color and the loaf sounds hollow when tapped at the bottom.</p> <ol> <li>Cool Down:</li> </ol> <p>Remove the loaf from the oven and cool on a wire rack to set the crumb and retain crust structure.</p>"},{"location":"913/index.html#benefits","title":"Benefits","text":"<ul> <li>Steam Retention: The Dutch oven captures steam released from the dough, crucial for crust development.</li> <li>Even Heat Distribution: The cast iron skillet helps maintain consistent heat, aiding uniform rise and bake.</li> <li>Versatile Setup: This method adapts to various bread recipes, offering reliable results for novice and experienced bakers alike.</li> <li>Prevent Burning: This prevents burning the bottom of the loaf</li> </ul> <p>This method mimics professional bakery steam ovens, allowing home bakers to achieve professional-quality artisan bread with a crusty exterior and a chewy, well-structured interior.</p>"},{"location":"914/index.html","title":"Issue: troubleshoot large holes in sourdough bread","text":"<p>Something to do with the amount of hydration.</p>","tags":["baking","sourdough"]},{"location":"915/index.html","title":"Issue: unable to change model of an ongoing <code>mods</code> conversation","text":"<p>The <code>mods</code> command has been observed to exhibit a bug where users are unable to change the model once a conversation title has been established. I discovered this limitation while working on my dotfiles project, which can hinder flexibility for users attempting to switch models based on evolving needs during a session.</p>","tags":["issue"]},{"location":"915/index.html#steps-to-reproduce","title":"Steps to Reproduce","text":"<ol> <li>Execute the <code>mods</code> command to set a conversation title, e.g.:</li> </ol> <p><code>bash    mods --api openai --model gpt-4o --title \"example_title\"</code> 2. Attempt to change the model after the title has been set by executing a command like:</p> <p><code>bash    mods --api openai --model gpt-4 --continue \"example_title\"</code> 3. Observe that the model does not change, and the command continues to use the initially set model.</p>","tags":["issue"]},{"location":"915/index.html#expected-behavior","title":"Expected Behavior","text":"<p>Users should be able to change the model at any point during the conversation, even after a title has been established. This flexibility allows for more tailored interactions with the AI, enabling users to select the most appropriate model for their requirements.</p>","tags":["issue"]},{"location":"915/index.html#actual-behavior","title":"Actual Behavior","text":"<p>Once the title is set, any attempts to modify the model yield no effect; the conversation continues under the previously defined model, limiting user adaptability.</p>","tags":["issue"]},{"location":"915/index.html#impact","title":"Impact","text":"<p>This bug restricts the usability of the <code>mods</code> command and can lead to frustration for users who expect to have the ability to dynamically switch models during their interactions. Addressing this issue would enhance the user experience by providing greater control over AI model selection throughout a session.</p>","tags":["issue"]},{"location":"915/index.html#proposed-solution","title":"Proposed Solution","text":"<ul> <li>Refactor the internal logic of the <code>mods</code> command to separate the model selection from the title management, allowing users to update the model independently at any point.</li> <li>Implement validations that inform users when a model change is ignored or denied, providing clarity on the command\u2019s behavior.</li> </ul> <p>This summarizes the issue related to the inability to change the model after setting a conversation title within the <code>mods</code> command.</p>","tags":["issue"]},{"location":"916/index.html","title":"Project: <code>mods</code> by Charmbracelets","text":"<p>The <code>mods</code> command is a powerful tool developed by Charmbracelets for managing interactions with language models, particularly from OpenAI. It simplifies the process of creating, continuing, and customizing AI-driven conversations while providing users with flexibility in model selection.</p>","tags":["mods","project"]},{"location":"916/index.html#high-level-details","title":"High-Level Details:","text":"<ul> <li>Model Management: Easily switch and specify which AI model to use.</li> <li>Session Control: Start new sessions or continue existing conversations based on user-defined titles.</li> <li>Flexible Input Handling: Supports inputs from various sources, enhancing integration capabilities.</li> <li>Customizable Operations: Pass additional parameters to refine interactions based on project needs.</li> </ul> <p>For detailed documentation and further information, please visit the [mods GitHub repository]</p> <p>mods GitHub repository.</p>","tags":["mods","project"]},{"location":"916/index.html#mcp","title":"MCP","text":"<pre><code>mcp-servers:\n  # Example: GitHub MCP via Docker:\n  # github:\n  #   command: docker\n  #   env:\n  #     - GITHUB_PERSONAL_ACCESS_TOKEN=xxxyyy\n  #   args:\n  #     - run\n  #     - \"-i\"\n  #     - \"--rm\"\n  #     - \"-e\"\n  #     - GITHUB_PERSONAL_ACCESS_TOKEN\n  #     - \"ghcr.io/github/github-mcp-server\"\n# {{ index .Help \"mcp-timeout\" }}\n</code></pre> <p>This is what I have so far</p> <pre><code>mcp-servers:\n  github:\n    command: github-mcp-server\n    args:\n      - \"stdio\"\n      - \"--read-only\"\n</code></pre>","tags":["mods","project"]},{"location":"917/index.html","title":"Article: [Choosing an AI Model]","text":"<p>Choosing an AI Model</p>","tags":["article","ai"]},{"location":"918/index.html","title":"Place: Halftime sports barbershop","text":"<p>Barber shop in the Harrison neighborhood.</p> <p>Facts:</p> <ul> <li>Open Tuesday through Saturday 10:00-20:00</li> <li>Phone: 612 250 0782</li> <li>Link:","tags":["place","minneapolis","minnesota"]},{"location":"919/index.html","title":"Place: Rojo St Louis park","text":"<p>Mexican restaurant in St Louis Park MN.</p>","tags":["place","minnesota","twincities"]},{"location":"92/index.html","title":"Must have plugins for google chrome","text":"<p>Productivity</p> <ul> <li>vimuim</li> </ul> <p>Performance enhancing</p> <ul> <li>uBlock Origin</li> <li>Redux DevTools</li> </ul> <p>Security</p> <ul> <li>Bitwarden- Free Password Manager</li> <li>Dashline</li> </ul> <p>Meta:</p> <pre><code>tags: #workstation #browser\n</code></pre>"},{"location":"920/index.html","title":"Place: Chanhassen Dinner Theater","text":"<p>Chanhassen Dinner Theatres (often referred to as Chanhassen Dinner Theater) is located in Chanhassen, Minnesota, which is near Minneapolis. Here are some key points about it:</p>"},{"location":"920/index.html#overview","title":"Overview","text":"<ul> <li>Inception: Chanhassen Dinner Theatres opened in 1970 and is known for being one of the largest and most successful dinner theaters in the United States.</li> <li>Format: The venue combines a full-service restaurant experience with live theatrical productions. Patrons enjoy dinner while watching performances from a variety of genres, including musical theater, comedy, and original shows.</li> </ul>"},{"location":"920/index.html#theater-features","title":"Theater Features","text":"<ul> <li>Theaters: The venue features multiple performance spaces, including the Main Stage and smaller stages for more intimate productions.</li> <li>Seating: The seating is designed to provide good views of the stage from nearly every angle, enhancing the theater experience.</li> <li>Menu: The dining aspect includes a selection of appetizers, entrees, and desserts, often focusing on American cuisine and offering vegetarian options.</li> </ul>"},{"location":"920/index.html#productions","title":"Productions","text":"<ul> <li>Variety: The theater hosts a rotating lineup of productions, including popular musicals, holiday shows, and other special events.</li> <li>Local Talent: It frequently features local talent, as well as performances that may appeal to a broad audience base.</li> </ul>"},{"location":"920/index.html#notable-aspects","title":"Notable Aspects","text":"<ul> <li>Accessibility: Chanhassen Dinner Theatres is known for its accessible services and has been recognized for making performances enjoyable for all patrons.</li> <li>Community Engagement: The theater is an important part of the local community, often engaging in educational opportunities and collaborations with local artists.</li> </ul>"},{"location":"920/index.html#location","title":"Location","text":"<ul> <li>Address: While Chanhassen is located just outside of Minneapolis, the theater is easily accessible from the Twin Cities, making it a popular destination for residents and visitors alike.</li> </ul> <p>Chanhassen Dinner Theatres is a beloved institution in Minnesota, known for its unique combination of fine dining and quality live entertainment. If you need specific information or details about upcoming shows or events, feel free to ask!</p>"},{"location":"921/index.html","title":"Prompt: \u201cLinkify\u201d KEG notes","text":"<p>\u201cLinkify\u201d refers to the process of adding hyperlinks to specific keywords, phrases, or phrases in a text, connecting them to relevant documents, websites, or other resources within a system like your KEG. This enhances the text by providing instant access to more detailed information or related content, facilitating easy navigation and improved information retrieval from your KEG repository.</p> <p>What \u201clinkify\u201d means</p> <ul> <li>To add hyperlinks to keywords or phrases in a note so readers can jump to related notes, documents, or external resources.</li> <li>This makes navigation and information retrieval faster inside your KEG.</li> </ul> <p>Quick rules</p> <ul> <li>Use internal links for notes in the same KEG (e.g., ../123).</li> <li>Use the keg: protocol for links to notes in other KEGs (e.g., keg:js-resources/250).</li> <li>For external websites, prefer reference-style links to keep the body text clean and make URLs easy to update.</li> </ul> <p>How to linkify \u2014 examples</p> <ol> <li>Internal link (same KEG)</li> </ol> <ul> <li>Before: We discussed the project details in the Project Specification document.</li> <li>After: We discussed the project details in the Project Specification document.</li> <li>(Here ../123 is the local note ID.)</li> </ul> <ol> <li>External KEG link (different KEG)</li> </ol> <ul> <li>Before: For functional programming concepts, see the JavaScript resources in another KEG.</li> <li>After: For a deep dive into functional programming, see Functional JavaScript in Practice.</li> <li>(Uses the keg: protocol, KEG alias, and note ID.)</li> </ul> <ol> <li>External website (reference-style)</li> </ol> <ul> <li>Before: For more information, visit the company\u2019s homepage.</li> <li>After: For more information, visit the company\u2019s homepage.</li> <li>Reference-style URLs (placed at the bottom):</li> <li></li> </ul> <p>Why use reference-style links for external URLs</p> <ul> <li>Keeps the main text uncluttered.</li> <li>Makes it easier to update URLs in one place.</li> </ul> <p>Example links (short descriptions)</p> <ul> <li>Docker Basics \u2014 spinning up a dev environment with Docker.</li> <li>Neovim IDE Features \u2014 Neovim as an IDE.</li> <li>Sourdough Techniques \u2014 tips for sourdough baking.</li> <li>AWS Services Overview \u2014 summary of AWS services.</li> <li>Bash Scripting Tips \u2014 Bash tricks and techniques.</li> <li>Warcraft Dungeon Guides \u2014 dungeons in The War Within expansion.</li> <li>Python Development Setup \u2014 environment setup for Python projects.</li> <li>React Design Concepts \u2014 design ideas for React Native.</li> <li>Running Event Preparation \u2014 race times and event prep.</li> <li>WordPress Plugin Development \u2014 plugin dev overview.</li> <li>Functional Programming in JavaScript \u2014 external KEG guide.</li> <li>Advanced CSS Techniques \u2014 external KEG on advanced CSS.</li> <li>Cloud Infrastructure Management \u2014 cloud management strategies (external KEG).</li> <li>Machine Learning Algorithms \u2014 ML algorithms and use cases (external KEG).</li> <li>Digital Marketing Strategies \u2014 marketing strategies (external KEG).</li> </ul> <p>Reference-style external resources (examples)</p> <ul> <li></li> <li></li> <li></li> <li></li> <li></li> </ul> <p>Short checklist before saving a note</p> <ul> <li>Is the target note internal or in another KEG? Use ../ID for internal, keg:alias/ID for external KEGs.</li> <li>For websites, add reference-style links at the bottom.</li> <li>Keep link text descriptive (not just raw URLs or generic words like \u201cclick here\u201d).</li> </ul>","tags":["prompt","ai"]},{"location":"922/index.html","title":"Guitar tone","text":"","tags":["guitar","music"]},{"location":"922/index.html#single-vs-humbucker","title":"Single vs Humbucker","text":"","tags":["guitar","music"]},{"location":"922/index.html#frequency-responses","title":"Frequency responses","text":"","tags":["guitar","music"]},{"location":"922/index.html#sub-bass-frequencies-20-hz-60-hz","title":"Sub-Bass Frequencies (20 Hz - 60 Hz)","text":"<ul> <li>Character: These frequencies provide the fundamental depth and resonance.</li> <li>Impact on Guitar Sound:</li> <li>Typically not prominent in standard guitar playing, but when amplified or affected (especially in bass guitars or lower-tuned guitars), they add power and solidity.</li> <li>Can contribute to an overall warmth if present in the guitar\u2019s design (like a thick body or certain woods).</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#bass-frequencies-60-hz-250-hz","title":"Bass Frequencies (60 Hz - 250 Hz)","text":"<ul> <li>Character: Rich, full-bodied sound that provides the foundation.</li> <li>Impact on Guitar Sound:</li> <li>Enhances the warmth and fullness of the low strings, allowing for strong chordal support.</li> <li>Affects how the guitar sits in the mix, often giving a sense of body and depth.</li> <li>The richness in this range can make notes sound fat and robust, particularly for rhythm playing.</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#low-mid-frequencies-250-hz-500-hz","title":"Low Mid Frequencies (250 Hz - 500 Hz)","text":"<ul> <li>Character: Provides thickness and a full, round tone.</li> <li>Impact on Guitar Sound:</li> <li>Contributes to the warmth of the guitar, especially in sounding full and mellow.</li> <li>Excessive low mids can make the sound muddy, while a balanced approach enhances body without overwhelming it.</li> <li>This range is vital for producing a smooth, bluesy sound, particularly with thicker neck profiles and humbucker pickups.</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#mid-frequencies-500-hz-2-khz","title":"Mid Frequencies (500 Hz - 2 kHz)","text":"<ul> <li>Character: The heart of the guitar\u2019s sound; crucial for clarity and articulation.</li> <li>Impact on Guitar Sound:</li> <li>Enhances the presence of the guitar, allowing notes to cut through a mix.</li> <li>Important for the clarity of single notes and power chords, making it essential for solos and lead playing.</li> <li>Provides a musical quality that adds texture, making the guitar sound more lively and dynamic.</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#high-mid-frequencies-2-khz-5-khz","title":"High Mid Frequencies (2 kHz - 5 kHz)","text":"<ul> <li>Character: Adds brightness and clarity, often leading to harshness if overemphasized.</li> <li>Impact on Guitar Sound:</li> <li>Highlights the attack and definition of strings, making riffs and solos more pronounced.</li> <li>Balancing this range is critical: while it can add brilliance and clarity, too much can lead to a harsh tone that\u2019s unpleasant to the ear.</li> <li>Enhances the \u201csnappiness\u201d in the tone, especially noticeable in aggressive playing styles like rock and metal.</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#presence-frequencies-5-khz-10-khz","title":"Presence Frequencies (5 kHz - 10 kHz)","text":"<ul> <li>Character: Accentuation of clarity and definition.</li> <li>Impact on Guitar Sound:</li> <li>Contributes to the sparkle in the sound, making high notes and harmonics stand out.</li> <li>Enhances the articulation of the playing techniques and string harmonics.</li> <li>Affects how \u201copen\u201d or \u201cbright\u201d the guitar sounds, capturing the intricacies of fingerpicking or nuanced playing.</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#brilliance-frequencies-10-khz-20-khz","title":"Brilliance Frequencies (10 kHz - 20 kHz)","text":"<ul> <li>Character: The air and shimmer in the sound.</li> <li>Impact on Guitar Sound:</li> <li>Adds a sense of spaciousness and depth to the tone.</li> <li>Important for defining the harmonics, giving notes a crispness.</li> <li>While overly emphasizing this range can lead to a brittle sound, the right balance provides glistening highs that enhance musicality.</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#pickups","title":"Pickups","text":"","tags":["guitar","music"]},{"location":"922/index.html#bridge-pickups","title":"Bridge pickups","text":"<ul> <li>Dreamcatcher:</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#stuff","title":"Stuff","text":"<ul> <li>sustain</li> <li>grit</li> <li>saturation</li> <li>clean vs overdriven vs distorted</li> <li>bite: presence of highs and mids</li> <li>clarity: Separation between notes</li> <li>paralell switching: maintains more high end frequencies increasing clarity</li> </ul>","tags":["guitar","music"]},{"location":"922/index.html#amps","title":"Amps","text":"","tags":["guitar","music"]},{"location":"922/index.html#_1","title":"Guitar tone","text":"<p>Many high-gain guitarists use a Tube Screamer pedal in front of their amp to reduce muddiness in distortion. The Tube Screamer rolls off bass frequencies, which helps to clarify the sound. Players often set the pedal\u2019s gain to low for a cleaner tone and increase the volume to boost the gain entering the amp\u2019s preamp.</p>","tags":["guitar","music"]},{"location":"922/index.html#frequencies","title":"Frequencies","text":"<ul> <li>Low mids: 200 - 400 range</li> </ul> <p>These sound nice</p> <ul> <li>Mids:: 2000</li> </ul> <p>Solos in your face faces</p>","tags":["guitar","music"]},{"location":"923/index.html","title":"Places to play pickle ball in the twin cities","text":"Place Open cost Description Williston fitness center 13:00-17:00 saturdays 6$ drop in. Need equipment"},{"location":"924/index.html","title":"Place: Williston Fitness Center","text":"<p>Fitness center</p>","tags":["place","gym","pickleball"]},{"location":"924/index.html#pickle-ball-schedule","title":"Pickle ball Schedule","text":"<p>Williston Fitness Center offers drop-in pickleball October through May. Please bring your own paddle. Pickleball balls are provided.</p> <p>Cost:</p> <ul> <li>Williston, SilverSneakers, Silver&amp;Fit and Renew Active Members: Free</li> <li>Nonmembers: $6</li> </ul> <p>Drop in times:</p> Day Drop-in Times Monday - Thursday 06:00 - 09:30 Tuesday 19:00 - 21:00 Friday 06:00 - 09:00 Saturday 06:00 - 09:30 13:00 - 16:00","tags":["place","gym","pickleball"]},{"location":"924/index.html#gpt-dump","title":"GPT DUMP","text":"<p>[!NOTE]</p> <p>GPT probably inaccurate</p>","tags":["place","gym","pickleball"]},{"location":"924/index.html#location","title":"Location","text":"<ul> <li>City: Minnetonka</li> <li>State: Minnesota</li> </ul>","tags":["place","gym","pickleball"]},{"location":"924/index.html#features","title":"Features","text":"<ul> <li>Pickleball: Yes, the facility offers pickleball courts for members and   guests.</li> <li>Fitness Facilities: Includes a variety of workout equipment, such as   cardio machines, weightlifting equipment, and more.</li> <li>Swimming Pool: An indoor pool available for lap swimming, lessons, and   recreational use.</li> <li>Group Classes: Offers a range of fitness classes, including yoga, pilates,   spinning, and more.</li> <li>Childcare: On-site childcare services available for members while they use   the facilities.</li> <li>Tennis Courts: Indoor and outdoor tennis courts for lessons and   recreational play.</li> <li>Basketball Courts: Available for pick-up games and organized leagues.</li> </ul>","tags":["place","gym","pickleball"]},{"location":"924/index.html#membership","title":"Membership","text":"<ul> <li>Types: Various membership options are available, including individual,   family, and senior memberships.</li> <li>Benefits: Membership typically includes access to all facilities, group   classes, and discounts on special programs.</li> </ul>","tags":["place","gym","pickleball"]},{"location":"924/index.html#additional-amenities","title":"Additional Amenities","text":"<ul> <li>Locker Rooms: Equipped with showers and lockers for member convenience.</li> <li>Pro Shop: Offers sports and fitness gear for purchase.</li> <li>Cafe: On-site cafe providing healthy snacks and beverages.</li> </ul>","tags":["place","gym","pickleball"]},{"location":"924/index.html#contact-information","title":"Contact Information","text":"<ul> <li>Website: https://www.minnetonkamn.gov/our-city/williston-fitness-center</li> </ul>","tags":["place","gym","pickleball"]},{"location":"925/index.html","title":"Place: Misfit coffee","text":"<p>One of my favorite coffee shops to work at that is near home. Quite a few small tables that could be put together for small groups. Won\u2019t be as good as Spyhouse if there is a larger group.</p> <ul> <li>WiFi: <code>MISFIT</code></li> <li>Password: <code>coffeecoffe</code></li> </ul>","tags":["place","coffee","coworking"]},{"location":"925/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>Fast internet</li> <li>Not really a good space for a larger group.</li> <li>I typically work at the coffee bar</li> <li>Parking is great</li> </ul>","tags":["place","coffee","coworking"]},{"location":"926/index.html","title":"Skiing in the Twin Cities","text":""},{"location":"926/index.html#places-to-ski","title":"Places to Ski","text":"<p>There are two primary ski systems in the Twin Cities: the Three Rivers Park District and the Minneapolis Park and Recreation Board (MPRB) trail system. There are a few that require the same pass as the one required for the State Parks as well.</p>"},{"location":"926/index.html#ski-passes","title":"Ski Passes","text":"<p>Typical seasonal passes costs 90$. Probably cheaper to do the day passes mostly because of global warming issues.</p> <ul> <li>MPRB Passes: Can be purchased at MPRB Ski Passes.</li> <li>Three Rivers Park District Passes: Can be purchased at Three Rivers Park District Passes.</li> </ul>"},{"location":"926/index.html#additional-resources","title":"Additional Resources","text":"<ul> <li>Three Rivers Park District: Three Rivers Park District</li> <li>MPRB: Minneapolis Park &amp; Recreation Board</li> <li>Trail Conditions at Three Rivers Park District: Trail Conditions</li> </ul>"},{"location":"927/index.html","title":"Trick: Embedding version information in go binaries","text":"<p>Handy trick in go that I found while looking through the source code of mods to embed version information. It uses [cobra].</p> <pre><code>// Build vars.\nvar (\n    //nolint: gochecknoglobals\n    Version   = \"\"\n    CommitSHA = \"\"\n)\n\nfunc buildVersion() {\n    if len(CommitSHA) &gt;= sha1short {\n        vt := rootCmd.VersionTemplate()\n        rootCmd.SetVersionTemplate(vt[:len(vt)-1] + \" (\" + CommitSHA[0:7] + \")\\n\")\n    }\n    if Version == \"\" {\n        if info, ok := debug.ReadBuildInfo(); ok &amp;&amp; info.Main.Sum != \"\" {\n            Version = info.Main.Version\n        } else {\n            Version = \"unknown (built from source)\"\n        }\n    }\n    rootCmd.Version = Version\n}\n</code></pre>","tags":["golang","trick"]},{"location":"928/index.html","title":"Concerts of interest for 2025","text":"<ul> <li>2025-01-31 Hinder at Medina Entertainment center</li> <li>2025-03-02 Starset at Urban Growler brewing</li> <li>2025-04-15 Trilogy tribute fest at Myth live</li> <li>2025-05-16 Larken poe</li> </ul>","tags":["music"]},{"location":"929/index.html","title":"Local band The Gentlemen\u2019s Anti-Temperance League","text":"<p>A band local to Minneapolis named Gentlemen\u2019s Anti-Temperance League. They play folk music.</p> <ul> <li>facebook: https://www.facebook.com/thegatl</li> <li>website: https://www.thegatl.band/</li> </ul>","tags":["music","minneapolis"]},{"location":"93/index.html","title":"Installing patched power line fonts for MacOS","text":"<p>I use nerd fonts to provide powerline details for my prompts. I use fira code nerd font. To install go to the website and install using the builtin tools that macOS has. The only font that needs to be installed is <code>FiraCodeNerdFont-Retina</code>. Retina looks good. Haven\u2019t tried the other variations yet.</p> <p>Once the fonts are installed your terminal needs to be setup.</p> <p>Nerd Fonts for iTerm2</p> <ul> <li>=&gt; Preferences ( Cmd \u2318 + , )</li> <li>=&gt; Profiles.</li> <li>=&gt; Text.</li> <li>=&gt; Font.</li> <li>=&gt; Select \u201cFiraCode Nerd Font\u201d</li> <li>=&gt; (you may also want to turn on Anti-Aliasing and turn off highlight bold text)</li> </ul> <p>This then needs to be setup in Iterm2</p> <pre><code>tags: #macOS #workstation\n</code></pre>"},{"location":"930/index.html","title":"Trick with go to embed version info","text":"<p>Handy trick that I found while looking through the source code of mods to emded version information. It uses [cobra].</p> <pre><code>// Build vars.\nvar (\n    //nolint: gochecknoglobals\n    Version   = \"\"\n    CommitSHA = \"\"\n)\n\nfunc buildVersion() {\n    if len(CommitSHA) &gt;= sha1short {\n        vt := rootCmd.VersionTemplate()\n        rootCmd.SetVersionTemplate(vt[:len(vt)-1] + \" (\" + CommitSHA[0:7] + \")\\n\")\n    }\n    if Version == \"\" {\n        if info, ok := debug.ReadBuildInfo(); ok &amp;&amp; info.Main.Sum != \"\" {\n            Version = info.Main.Version\n        } else {\n            Version = \"unknown (built from source)\"\n        }\n    }\n    rootCmd.Version = Version\n}\n</code></pre>","tags":["golang","trick"]},{"location":"931/index.html","title":"Local band The Last Revel","text":"<p>A band local to Minneapolis named The Last Revel. They are a folk band.</p>","tags":["music"]},{"location":"932/index.html","title":"Place: Minneapolis (minneapolis)","text":"<p>Place that I currently live at.</p>","tags":["minneapolis","place"]},{"location":"933/index.html","title":"Place: 321 Club","text":"<p>A music venue in Northeast Minneapolis.</p>","tags":["place","music"]},{"location":"934/index.html","title":"The style of music called Folk","text":"<p>Folk music is a genre that encompasses a wide range of musical traditions, often characterized by its roots in the cultural and social experiences of everyday people. It is typically passed down through generations, evolving over time while retaining its core elements. Here are some key features and aspects of folk music:</p>","tags":["music"]},{"location":"934/index.html#characteristics-of-folk-music","title":"Characteristics of Folk Music","text":"<ol> <li> <p>Storytelling: Folk songs often tell stories about life, love, work, and the struggles of everyday people. The lyrics are usually straightforward and relatable, making them accessible to a wide audience.</p> </li> <li> <p>Instrumentation: Traditional folk music often features acoustic instruments such as guitars, banjos, fiddles, mandolins, and harmonicas. The emphasis is on natural sounds and simple melodies, creating an intimate atmosphere.</p> </li> <li> <p>Cultural Roots: Folk music is deeply tied to the cultural heritage of a community. It reflects the history, traditions, and values of the people who create and perform it. Different regions may have their own unique styles and instruments, contributing to the diversity of the genre.</p> </li> <li> <p>Participation: Folk music often encourages audience participation, whether through singing along, clapping, or dancing. This communal aspect fosters a sense of connection and shared experience among listeners.</p> </li> <li> <p>Variability: Folk music is not static; it evolves as new influences and styles emerge. Contemporary folk artists may blend traditional elements with modern genres, creating a fusion that appeals to new audiences.</p> </li> </ol>","tags":["music"]},{"location":"934/index.html#subgenres-of-folk-music","title":"Subgenres of Folk Music","text":"<p>Folk music encompasses various subgenres, including:</p> <ul> <li> <p>Traditional Folk: Rooted in the historical and cultural traditions of a specific community, often featuring songs that have been passed down through generations.</p> </li> <li> <p>Contemporary Folk: A modern interpretation of folk music that may incorporate elements from other genres, such as rock, pop, or blues. Artists like Bob Dylan and Joan Baez are notable figures in this category.</p> </li> <li> <p>Indie Folk: A subgenre that emerged in the late 20th century, characterized by its DIY ethos and often featuring introspective lyrics and acoustic instrumentation. Bands like Fleet Foxes and Bon Iver exemplify this style.</p> </li> <li> <p>Celtic Folk: Originating from the Celtic regions of Europe, this style incorporates traditional instruments like the fiddle, tin whistle, and bodhr\u00e1n, often featuring themes of nature and mythology.</p> </li> </ul>","tags":["music"]},{"location":"934/index.html#conclusion","title":"Conclusion","text":"<p>Folk music serves as a powerful medium for expressing the human experience, connecting people across generations and cultures. Its emphasis on storytelling, community, and cultural heritage makes it a vital part of the musical landscape, continually evolving while remaining true to its roots. Whether through traditional ballads or contemporary interpretations, folk music continues to resonate with audiences around the world.</p>","tags":["music"]},{"location":"935/index.html","title":"Prompt: Creating git comments","text":"<p>This is the instructions and requirements on how to create git comments. The requirements are designed to create clear, consistent, and easily readable commit messages that facilitate collaboration and understanding within a development team.</p> <p>Here are my requirements:</p> <ul> <li>Use conventional commit format.</li> <li>Do not include a scope in the comment.</li> <li>Title must not exceed 72 characters.</li> <li>Body should be wrapped at 80 characters.</li> <li>Keep the message very brief.</li> <li>Output only; do not include backticks.</li> </ul>","tags":["prompt","llm"]},{"location":"936/index.html","title":"Prompt: Instructions for commenting code","text":"","tags":["prompt","llm"]},{"location":"936/index.html#how-to-comment-code","title":"How to Comment Code","text":"<ol> <li>Determine Purpose: Identify the main purpose of the function or code block.</li> <li>Select Comment Style: Use the appropriate syntax for the programming language (e.g., // for single-line, / \u2026 / for multi-line).</li> <li>Write a Brief Description: Summarize what the function does without detailing implementation.</li> <li>Use Docblock Format: For functions, include a docblock with a brief description, parameters, and return values if applicable.</li> <li>Preserve Indentation: Maintain the same indentation level as the code.</li> <li>Avoid Redundancy: Exclude information that can be inferred from the code.</li> <li>Ensure Valid Output: Make sure the comment format is valid for the specific programming language.</li> <li>Preserve Function Contents: Ensure the function\u2019s contents remain unchanged. It should be placed directly below the comment. It should not trigger a git diff.</li> <li>Output Should Be Valid for the Language: Ensure that the comment and any related syntax conform to the requirements of the programming language being used.</li> <li>Side effects: All side effects should be documented</li> <li>Output Output should add the comment directly to the code. No additional markup</li> </ol> <p>Output should include should include the contents unchanged with additional code comments included.</p>","tags":["prompt","llm"]},{"location":"937/index.html","title":"Article: UnderCurrent MPLS show list","text":"<p>Found a google document that lists local shows happening in Minneapolis. It is associated with UnderCurrentMPLS.</p>","tags":["music","article"]},{"location":"938/index.html","title":"Bake: 50/50 Wheat Sourdough Loaf","text":"<p>This is a recipe for a smaller 50/50 loaf using equal parts all-purpose flour and whole wheat flour.</p> <p>Forgot to put it in the fridge before I went to bed and ended up over proofing</p> <p></p>","tags":["baking","bake","sourdough","wheat"]},{"location":"938/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment bread flour flour 300g 60% King Arthur Whole wheat flour 200g 40% Hard red wheat Water 350g 70% Adjust based on humidity Starter 50g 10% 100% hydration, fed Salt 5g 1.0% <p>Total weight is approximately 905g.</p>","tags":["baking","bake","sourdough","wheat"]},{"location":"938/index.html#key-events","title":"Key Events","text":"<ul> <li>2025-01-26 09:00 Fed starter.</li> <li>2025-01-26 12:30 Mixed the dough.</li> <li>2025-01-26 13:15 Mixed in the</li> <li>2025-01-26 20:29 Shaped</li> <li>2025-01-27 11:24 Baked</li> </ul> <p>Using the cast iron trick. 500f for 35 minutes.</p>","tags":["baking","bake","sourdough","wheat"]},{"location":"938/index.html#see-also","title":"See Also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","bake","sourdough","wheat"]},{"location":"939/index.html","title":"Bands local to Minneapolis","text":"<p>Lost of bands that I like to listen to in Minneapolis</p> <ul> <li>Six to midnight: rand and pop band that sound good live</li> <li>The TH3: Instrumental funk. They are ok</li> <li>Galleon:</li> <li>Mathews: they sound good</li> </ul>","tags":["music"]},{"location":"94/index.html","title":"fzf setup and usage","text":"<p><code>fzf</code> is an interactive unix filter.</p> <ul> <li>github</li> </ul>","tags":["bash","cli","macosx"]},{"location":"94/index.html#use-cases","title":"Use cases","text":"<p>Use to find an item based on a keyword. To make this smooth a preview should show if the item found.</p>","tags":["bash","cli","macosx"]},{"location":"94/index.html#setup","title":"Setup","text":"<p>Key pieces</p> Item Description fzf binary This is the binary to be run shell scripts These are files that provide completions and keybindings shell config This is configuration for fzf. This links to the fzf shell scripts and binary installer installs fzf, completions, keybindings, and rc files","tags":["bash","cli","macosx"]},{"location":"94/index.html#fzf-binary","title":"fzf binary","text":"<p>The binary is a program written go. As such, it may be installed with <code>go get -u github.com/junegunn/fzf</code>. Running the</p> <p>Running the installer with <code>install --bin</code> will install the binary in the source directory. This needs needs to be further setup by the user. Basic bin binary stuff. I use stow for that.</p>","tags":["bash","cli","macosx"]},{"location":"94/index.html#shell-config","title":"Shell config","text":"<p>The install script can be found at the top level of the fzf git repo. If you installed fzf with homebrew on MacOS then it may be found at <code>/opt/homebrew/opt/fzf/install</code></p> <p>Running <code>install --no-update-rc --xdg --key-bindings --completion</code> generate <code>~/.config/fzf/fzf.zsh</code> and <code>~/.config/fzf/fzf.bash</code>. This prevents the fzf installer from muking up the dotfiles.</p> <p>Normally the installer will add the following:</p> <pre><code># Update $HOME/.bashrc:\n[ -f \"${XDG_CONFIG_HOME:-$HOME/.config}\"/fzf/fzf.bash ] &amp;&amp; source \"${XDG_CONFIG_HOME:-$HOME/.config}\"/fzf/fzf.bash\n\n#Update $HOME/.zshrc:\n[ -f \"${XDG_CONFIG_HOME:-$HOME/.config}\"/fzf/fzf.zsh ] &amp;&amp; source \"${XDG_CONFIG_HOME:-$HOME/.config}\"/fzf/fzf.zsh\n</code></pre>","tags":["bash","cli","macosx"]},{"location":"94/index.html#see-also","title":"See Also","text":"<ul> <li>my fzf installation process</li> </ul>","tags":["bash","cli","macosx"]},{"location":"940/index.html","title":"Local band The TH3","text":"<p>An ok instrumental funk band here in Minneapolis.</p>","tags":["music","band","funk","instramental","minneapolis"]},{"location":"941/index.html","title":"The style of music called Funk","text":"","tags":["music","funk"]},{"location":"942/index.html","title":"Purely instrumental music","text":"","tags":["music","instramental"]},{"location":"943/index.html","title":"Weekly outing plan","text":"<p>Current activities of interest:</p>"},{"location":"943/index.html#monday","title":"Monday","text":"<ul> <li>See The TH3 at Palmers starting at 19:00.</li> <li>Live music at white squirrel at 21:00. Its sounds OK. Very mellow rock</li> </ul>"},{"location":"943/index.html#tuesday","title":"Tuesday","text":"<ul> <li>The backfires at 7th St Entry at 7pm. It is downtown. They sound good. Indie rock band. Like 20$ tickets</li> <li>The The Get Up Kids at Fine Line 7pm. It is downtown. They sound good. Indie rock band. Like 20$ tickets</li> <li>Hyooman and Curve at 331 Club at 21:30. Indie and punk</li> </ul>"},{"location":"943/index.html#wednesday","title":"Wednesday","text":"<ul> <li>Bunch of bands at palmers. 5$ entry. Blues. See https://palmers-bar.com/calendar/2025/1/29/monarch-in-solid-air-galleon-and-cause-for-concern-5</li> </ul>"},{"location":"943/index.html#friday","title":"Friday","text":"<ul> <li>Six to Midnight at 9</li> </ul>"},{"location":"944/index.html","title":"Place: Palmers","text":"<p>A live music bar east of downtown Minneapolis. Often has music with cheap cover charges.</p> <p>Free Parking if you west a little bit.</p>","tags":["music","bar","minneapolis"]},{"location":"945/index.html","title":"Event: Moving out of the ECW office in St Louis Park","text":""},{"location":"946/index.html","title":"Band: Nick David &amp; Demitrious Rallis","text":"<p>Kind of a funky blues band local to Minneapolis. I seen them for the first time at Bear Cave Brewing on 2025-01-29.</p> <p>The guitar player played an SG Gibson. He had a GHD amp and custom guitar. Never got a chance to hear that guitar.</p>","tags":["music","minneapolis","band"]},{"location":"947/index.html","title":"Place: Bear Cave Brewing","text":"<p>A brewery in Minneapolis.  Seems like a lot of professionals 30+ hang out here.</p>","tags":["place","minneapolis"]},{"location":"948/index.html","title":"Band: Larkin Poe","text":"<p>A bluesy rock back band with roots in bluegrass. They are playing in Minneapolis May 16 2025.</p>","tags":["music","blues","bluegrass"]},{"location":"949/index.html","title":"Article: programming language foundations in agda","text":"<p>A book about agda that I learned about at the MSP Tech meetup group on 2025-02-01.</p>","tags":["agda","programming","meetup","article"]},{"location":"95/index.html","title":"How to set path variables on MacOS","text":"<p>System wide paths are found in <code>/etc/paths</code></p> <p>Example of how I add <code>/usr/local/bin</code> and <code>~/scripts</code> to my PATH variable in <code>~/.zshrc</code></p> <pre><code>typeset -U\npath+=(\n  \"$SCRIPTS\"\n  /usr/local/bin\n)\n</code></pre> <p>Meta</p> <pre><code>tags: #macOS #linux #cli\n</code></pre>"},{"location":"950/index.html","title":"Programming by composition in PHP","text":"","tags":["php","architecture"]},{"location":"950/index.html#code-consistency-and-git-diff","title":"Code consistency and git diff","text":"<p>Prefer hanging indent. 1 less line change in the git diffs</p> <pre><code>$map = [\n    'a' =&gt; '123',\n    'b' =&gt; '234' // Optional hanging indent\n];\n\n// without hanging indent\n$map = [\n    'a' =&gt; '123',\n    'b' =&gt; '234', // change here\n    'c' =&gt; '234'  // change here\n];\n\n// with hanging indent\n$map = [\n    'a' =&gt; '123',\n    'b' =&gt; '234',\n    'c' =&gt; '234',  // change here\n];\n</code></pre>","tags":["php","architecture"]},{"location":"950/index.html#coupling-vs-cohesion","title":"Coupling vs Cohesion","text":"","tags":["php","architecture"]},{"location":"950/index.html#coupling","title":"Coupling","text":"<ul> <li>Definition: Coupling refers to the degree of interdependence between software modules. It describes how closely connected different components or classes are in a system.</li> <li> <p>Types of Coupling:</p> </li> <li> <p>Tight Coupling: Occurs when a module heavily relies on the internal details of another module, making changes difficult and increasing the risk of introducing bugs.</p> </li> <li> <p>Loose Coupling: Represents a design where modules interact with minimal knowledge of each other\u2019s implementation details. This enhances flexibility and maintainability.</p> </li> <li> <p>Benefits of Loose Coupling:</p> </li> <li>Easier to maintain and modify systems since changes in one module will have minimal impact on others.</li> <li>Promotes reusability because loosely coupled components can often be used in different contexts without significant alteration.</li> </ul>","tags":["php","architecture"]},{"location":"950/index.html#cohesion","title":"Cohesion","text":"<ul> <li> <p>Definition: Cohesion refers to how closely related and focused the responsibilities of a single module are. It measures the degree to which the elements within a module work together to fulfill a single purpose.</p> </li> <li> <p>Types of Cohesion:</p> </li> <li> <p>High Cohesion: Occurs when a module performs a single task or a set of related tasks, resulting in better organization and easier understanding of the code.</p> </li> <li> <p>Low Cohesion: Indicates that a module has unrelated responsibilities, leading to chaos, confusion, and difficulties in maintaining the code.</p> </li> <li> <p>Benefits of High Cohesion:</p> </li> <li>Improved readability and maintainability, as modules have clearly defined purposes.</li> <li>Easier testing and debugging because functionalities are grouped logically within a module.</li> </ul>","tags":["php","architecture"]},{"location":"950/index.html#relationship-between-coupling-and-cohesion","title":"Relationship Between Coupling and Cohesion","text":"<ul> <li>Balance: High cohesion within a module and low coupling between modules are ideal in software design. High cohesion increases the module\u2019s clarity and purpose while low coupling minimizes dependencies between modules.</li> <li>Impact on Design: Striving for high cohesion and low coupling in design leads to systems that are more modular, easier to understand, maintain, and extend.</li> </ul>","tags":["php","architecture"]},{"location":"950/index.html#conclusion","title":"Conclusion","text":"<p>Understanding the concepts of coupling and cohesion helps developers create robust, maintainable, and scalable software architectures. Prioritizing high cohesion and low coupling in design decisions leads to better-structured code that is easier to work with over time.</p>","tags":["php","architecture"]},{"location":"950/index.html#type-safety","title":"Type Safety","text":"<p>In PHP, type safety refers to the enforcement of data types in your programs to prevent type errors and ensure that functions receive the expected types of arguments and return the expected types of values. PHP\u2019s type system has evolved to include type hints and scalar type declarations, and using PHPDoc blocks can enhance type safety, especially in cases where strict typing is not enforced.</p>","tags":["php","architecture"]},{"location":"950/index.html#branded-types","title":"Branded Types","text":"<p>Typically, it is considered best practice to not allow invalid states to be representable. Branded types help achieve this by creating unique types based on existing types, thus preventing accidental misuse. In PHP, you can implement branded types using classes or interfaces to ensure that only valid values can be instantiated.</p>","tags":["php","architecture"]},{"location":"950/index.html#code-example-email-validation","title":"Code Example: Email Validation","text":"<p>Here\u2019s an example in PHP that demonstrates the concept of branded types using an Email class:</p> <pre><code>class Email {\n    private string $email;\n\n    private function __construct(string $email) {\n        $this-&gt;email = $email;\n    }\n\n    /**\n     * Factory method to create a new Email instance.\n     * Throws an exception if the email address is invalid.\n     */\n    public static function create(string $email): self {\n        if (!self::isValidEmail($email)) {\n            throw new InvalidArgumentException(\"Invalid email address\");\n        }\n        return new self($email);\n    }\n\n    /**\n     * Validates the given email address using a regex pattern.\n     */\n    private static function isValidEmail(string $email): bool {\n        return filter_var($email, FILTER_VALIDATE_EMAIL) !== false;\n    }\n\n    /**\n     * Returns the email address as a string.\n     */\n    public function __toString(): string {\n        return $this-&gt;email;\n    }\n}\n\n// Usage Example\ntry {\n    $myEmail = Email::create(\"valid.email@example.com\");\n    echo \"Valid email created: \" . $myEmail; // Output: Valid email created: valid.email@example.com\n\n    $invalidEmail = Email::create(\"invalid-email\"); // This will throw an error\n} catch (InvalidArgumentException $error) {\n    echo $error-&gt;getMessage(); // Output: Invalid email address\n}\n</code></pre>","tags":["php","architecture"]},{"location":"950/index.html#explanation-of-the-code","title":"Explanation of the Code","text":"<ol> <li> <p>Email Class: The <code>Email</code> class serves as a branded type that holds a valid email address. The private constructor prevents instantiation outside the class.</p> </li> <li> <p>Factory Method: The <code>create</code> method validates the provided email address. If the email is invalid, it throws an <code>InvalidArgumentException</code>, ensuring that only valid instances of <code>Email</code> can be created.</p> </li> <li> <p>Validation: The <code>isValidEmail</code> method uses PHP\u2019s built-in <code>filter_var</code> function with the <code>FILTER_VALIDATE_EMAIL</code> filter, leveraging PHP\u2019s capabilities for robust validation.</p> </li> <li> <p>String Representation: The <code>__toString</code> method allows the <code>Email</code> object to be converted to a string, providing an easy way to retrieve the email address value.</p> </li> <li> <p>Usage: In the usage example, a valid email is created successfully, while attempting to create an invalid email results in an exception, preventing invalid states throughout the application.</p> </li> </ol>","tags":["php","architecture"]},{"location":"950/index.html#how-to-use-php-doc-blocks-for-type-safety","title":"How to Use PHP Doc Blocks for Type Safety","text":"<p>Nominal vs structural types:</p> <p>A nominal type would be its own type that encapsulates some thing. An example would be a class. A structural type is a type inferred from its contents. An example would be a record. A record in php may be typed out as something like <code>array{name: string, email: string}</code></p> <ol> <li>Basic Type Declarations: Use type declarations in function signatures to specify what types of parameters the function accepts and what type it returns. This provides basic type safety at runtime.</li> </ol> <p><code>php    function add(int $a, int $b): int {        return $a + $b;    }</code></p> <ol> <li>Advanced Type Checking with PHPDoc: PHPDoc comments can be used to annotate types in cases where you cannot enforce types directly (e.g., in older PHP versions). This helps tools like IDEs and static analysis tools understand expected types and ensures consistency in your codebase.</li> </ol> <p><code>php    /**     * Adds two numbers.     *     * @param int $a The first number.     * @param int $b The second number.     * @return int The sum of the two numbers.     */    function add($a, $b) {        return $a + $b;    }</code></p> <ol> <li>Specifying Complex Types: You can specify complex types using PHPDoc, including arrays, objects, and nullable types.</li> </ol> <p><code>php    /**     * Processes user data.     *     * @param array&lt;string, mixed&gt; $userData An associative array of user data.     * @return User|null Returns a User object or null if not found.     */    function processUserData(array $userData): ?User {        // Implementation    }</code></p> <ol> <li>Using Collection Types: Utilize arrays and collections to indicate the expected structure of data.</li> </ol> <p><code>php    /**     * Gets a list of users.     *     * @return array&lt;int, array{name: string, email: string, isAdmin?: boolean}&gt; An array of User objects.     */    function getUsers() {        // Implementation    }</code></p> <ol> <li> <p>Static Analysis Tools: Tools like PHPStan or Psalm can analyze your code and check for type inconsistencies based on the declarations provided in your PHPDoc comments. This enhances type safety by identifying potential issues before runtime.</p> </li> <li> <p>Integration with IDEs: Many modern Integrated Development Environments (IDEs) use the information in PHPDoc blocks to provide linting and autocomplete features, assisting developers in writing type-safe code.</p> </li> </ol>","tags":["php","architecture"]},{"location":"950/index.html#conclusion_1","title":"Conclusion","text":"<p>Using PHPDoc blocks is an effective way to enhance type safety in your PHP code. By documenting expected types for function parameters and return values, you improve code clarity, maintainability, and collaboration. Coupling these practices with PHP\u2019s built-in type declarations facilitates rigorous type checking and can catch potential errors during development instead of at runtime.</p>","tags":["php","architecture"]},{"location":"950/index.html#code-quality-metrics","title":"Code Quality Metrics","text":"<p>Code quality metrics are quantitative measures that help assess various aspects of software quality, maintainability, and performance. These metrics provide insights into potential issues within the codebase, enabling developers to make informed decisions for improvement. Here are some key code quality metrics:</p>","tags":["php","architecture"]},{"location":"950/index.html#1-cyclomatic-complexity","title":"1. Cyclomatic Complexity","text":"<ul> <li>Definition: Cyclomatic complexity is a software metric used to measure the complexity of a program by quantifying the number of linearly independent paths through its source code. It provides an indication of how complicated the control flow of a program is.</li> <li> <p>Calculation: The cyclomatic complexity (CC) can be calculated using the formula: [ CC = E - N + 2P ] where:</p> </li> <li> <p>(E) = the number of edges in the control flow graph,</p> </li> <li>(N) = the number of nodes in the control flow graph,</li> <li> <p>(P) = the number of connected components (typically 1 for a single program).</p> </li> <li> <p>Interpretation:</p> </li> <li>A cyclomatic complexity score of 1-10 signifies low complexity and that the code is generally easy to understand and maintain.</li> <li>Scores above 10 often indicate that the code might be too complex, leading to potential issues such as difficulty in testing, increased risk of bugs, and challenges in maintenance.</li> <li>Use Cases: Cyclomatic complexity is particularly useful for identifying areas of the code that may require refactoring or additional documentation. It can help prioritize code reviews and testing efforts, emphasizing sections with higher complexity.</li> </ul>","tags":["php","architecture"]},{"location":"950/index.html#2-halstead-metrics","title":"2. Halstead Metrics","text":"<ul> <li> <p>Definition: Halstead metrics are a set of software metrics that measure various attributes of code based on the operators and operands used within it. These metrics focus on the size and complexity of the code, providing insights into the code\u2019s maintainability, understandability, and error proneness.</p> </li> <li> <p>Key Halstead Metrics:</p> </li> <li> <p>Program Length (N): The total number of operators and operands.</p> </li> <li>Vocabulary (n): The number of distinct operators and operands.</li> <li>Volume (V): A measure of the size of the implementation. Calculated as: [ V = N \\times \\log_2(n) ]</li> <li>Difficulty (D): Indicates the complexity of the program and is calculated as: [ D = \\frac{n_1}{2} \\times \\frac{N_2}{n_2} ] where (n_1) is the number of unique operators and (n_2) is the number of unique operands.</li> <li> <p>Effort (E): A measure of the effort required to implement the program, calculated as: [ E = D \\times V ]</p> </li> <li> <p>Interpretation:</p> </li> <li> <p>Higher values in Halstead metrics are generally indicative of more complex code that may be harder to understand and maintain.</p> </li> <li> <p>For example, increasing complexity and decreasing volume might suggest a need for refactoring to enhance code clarity.</p> </li> <li> <p>Use Cases: Halstead metrics are valuable for assessing code maintainability and guiding refactoring efforts. They can also be used in automated analysis tools to give developers a quick overview of code complexity and potential areas for improvement.</p> </li> </ul>","tags":["php","architecture"]},{"location":"950/index.html#coherence","title":"Coherence","text":"<p>Coherence refers to the logical and meaningful organization of elements within a software system or module. It is about how well the components of a module work together to fulfill a single purpose or task, ensuring that all parts contribute to the overall functionality in a cohesive manner.</p>","tags":["php","architecture"]},{"location":"950/index.html#key-characteristics-of-coherence","title":"Key Characteristics of Coherence","text":"<ol> <li> <p>Purposeful Design: A coherent system or module has a well-defined purpose. Each element within the module should relate directly to that purpose, making it easier for developers to understand its functionality.</p> </li> <li> <p>Consistency: Coherent modules maintain consistent naming conventions, coding styles, and behaviors. This consistency aids developers in navigating and using the code, reducing the cognitive load.</p> </li> <li> <p>Logical Flow: Coherent systems exhibit a clear logical flow, where the interactions between components are intuitive and align with the system\u2019s overall goals. This enhances user experience and makes the system easier to use.</p> </li> </ol>","tags":["php","architecture"]},{"location":"950/index.html#benefits-of-coherence","title":"Benefits of Coherence","text":"<ul> <li> <p>Improved Understandability: When elements within a module are logically organized and share a common purpose, it becomes easier for developers and users to understand the codebase.</p> </li> <li> <p>Ease of Maintenance: Coherent modules are simpler to maintain and extend because changes are localized within a specific area of the code, reducing the potential for introducing bugs in unrelated parts.</p> </li> <li> <p>Enhanced Collaboration: Clear and coherent structures enable teams to work together more effectively. Developers can quickly understand each other\u2019s contributions, facilitating collaboration and code reviews.</p> </li> </ul>","tags":["php","architecture"]},{"location":"950/index.html#conclusion_2","title":"Conclusion","text":"<p>Coherence is a crucial aspect of software design that contributes to the overall quality, maintainability, and usability of code. By focusing on creating coherent modules and systems, developers can ensure that their software is not only functional but also easier to work with and understand.</p>","tags":["php","architecture"]},{"location":"950/index.html#summary","title":"Summary","text":"<p>Cyclomatic complexity and Halstead metrics are essential tools for evaluating code quality. Cyclomatic complexity highlights potential areas of high complexity that may need more careful testing and maintenance, while Halstead metrics provide insights into code size, complexity, and effort required for implementation. Utilizing these metrics helps enhance the maintainability and reliability of software systems, ultimately leading to cleaner and more efficient codebases.</p>","tags":["php","architecture"]},{"location":"950/index.html#abstract-algebra-inspired-pattern-creation","title":"Abstract algebra inspired pattern creation","text":"<p>Abstract algebra offers a rough guideline for creating design patterns. Not really in the strict sense though. They describe how discreet chunks of things get composed together. Each one builds on top of one another and offers more descriptive power.</p>","tags":["php","architecture"]},{"location":"950/index.html#monoids","title":"Monoids","text":"<p>Enable the composition and aggregation of values through an associative operation and identity element. They provide a simple and effective way to build complex structures from smaller components, promoting modularity and clarity in software design.</p> <p>Examples of Monoids in PHP.</p>","tags":["php","architecture"]},{"location":"950/index.html#functor","title":"Functor","text":"<p>Allow functions to be applied to values wrapped in a context (such as arrays or optional types). Functors facilitate mapping operations across collections, enhancing code reusability and encouraging a declarative programming style. They promote uniform handling of data transformations.</p> <p>Examples of Functors in PHP.</p>","tags":["php","architecture"]},{"location":"950/index.html#monads","title":"Monads","text":"<p>Allow for the chaining of operations while managing context and side effects. Monads encapsulate values within a computation framework, providing methods for transforming those values without losing context. This promotes clean and expressive code structures that avoid side effects, enabling functional programming paradigms within an object-oriented context.</p> <p>Examples of Monads in PHP.</p>","tags":["php","architecture"]},{"location":"950/index.html#kleisli","title":"Kleisli","text":"<p>Provide a means to work with functions that return monadic values, allowing for seamless composition of operations. A Kleisli arrow is a way to chain functions that produce monadic results, enhancing the structure of code by allowing the output of one function to be easily passed into another. This pattern promotes cleaner handling of computations that may involve side effects and supports a functional programming style.</p> <p>Examples of Kleisli Arrows in PHP.</p>","tags":["php","architecture"]},{"location":"951/index.html","title":"Typical places to go dancing in Twin Cities","text":"<p>Typical places to go dancing in Minneapolis</p>","tags":["dancing","twincities"]},{"location":"951/index.html#tuesday","title":"Tuesday","text":"<ul> <li>Hazy Rhythms Dance at 18:00</li> </ul>","tags":["dancing","twincities"]},{"location":"951/index.html#wednesday","title":"Wednesday","text":"<ul> <li>Conga Bistro at 21:00 - Salsa and Bachata</li> </ul>","tags":["dancing","twincities"]},{"location":"951/index.html#thursday","title":"Thursday","text":"<ul> <li>Ukranian Center - East coast swing and Lindy hop</li> </ul>","tags":["dancing","twincities"]},{"location":"951/index.html#friday","title":"Friday","text":"<ul> <li>Hazy Rhythms Dance at 18:00</li> </ul>","tags":["dancing","twincities"]},{"location":"951/index.html#saturdays","title":"Saturdays","text":"<ul> <li>Mediterranean Cruise Cafe: Salsa and Bachata</li> </ul>","tags":["dancing","twincities"]},{"location":"951/index.html#other-resource","title":"Other resource","text":"<p>https://golatindance.com/events/category/minneapolis/</p>","tags":["dancing","twincities"]},{"location":"952/index.html","title":"Monoids in PHP","text":"<p>Monoids offer several benefits in programming:</p> <ul> <li>Composition: They allow for the combination of values using an associative operation, making it easy to aggregate results.</li> <li>Modularity: Monoids facilitate breaking down complex problems into smaller, manageable components that can be combined, promoting cleaner code.</li> <li>Abstraction: They enable generic programming and context independence, allowing for reusable code across different data types.</li> <li>Readability: Monoids encourage a declarative style, enhancing code clarity and maintainability.</li> <li>Granularity: They help decompose programs into granular chunks, making it easier to manage and reason about each part.</li> </ul> <p>In summary, monoids support structured, modular, and maintainable code by providing a framework for combining and organizing components.</p>","tags":["php","programming"]},{"location":"952/index.html#what-is-a-monoid","title":"What is a Monoid?","text":"<p>A monoid is an algebraic structure that is defined by a set equipped with a binary operation and an identity element. The key properties of a monoid are:</p> <ol> <li> <p>Closure: For all elements (a) and (b) in the set, the result of the operation (a \\cdot b) is also in the set.</p> </li> <li> <p>Associativity: The operation satisfies the property ( (a \\cdot b) \\cdot c = a \\cdot (b \\cdot c) ) for all elements (a), (b), and (c) in the set.</p> </li> <li> <p>Identity Element: There exists an identity element (e) in the set such that (a \\cdot e = e \\cdot a = a) for any element (a) in the set.</p> </li> </ol> <p>In programming, monoids can help structure code to allow for the combination of operations and data, enabling clearer logic and functional paradigms.</p>","tags":["php","programming"]},{"location":"952/index.html#monoids-in-object-oriented-programming-oop","title":"Monoids in Object-Oriented Programming (OOP)","text":"<p>In an OOP context, certain design patterns align with the principles of monoids by facilitating composition and aggregation of objects. Here are some OOP design patterns that exemplify the concept of monoids:</p>","tags":["php","programming"]},{"location":"952/index.html#1-composite-pattern","title":"1. Composite Pattern","text":"<ul> <li>Description: This pattern allows you to build complex tree structures where individual objects and groups of objects can be treated uniformly. It embodies the monoidal principle through its ability to combine parts into a whole.</li> <li>Example Usage: Useful for representing hierarchies, such as file systems or UI components that consist of subcomponents.</li> </ul> <pre><code>interface Component {\n    public function operation(): string;\n}\n\nclass Leaf implements Component {\n    public function operation(): string {\n        return \"Leaf\";\n    }\n}\n\nclass Composite implements Component {\n    private $children = [];\n\n    public function add(Component $child) {\n        $this-&gt;children[] = $child;\n    }\n\n    public function operation(): string {\n        $results = [];\n        foreach ($this-&gt;children as $child) {\n            $results[] = $child-&gt;operation();\n        }\n        return \"Composite [\" . implode(\", \", $results) . \"]\";\n    }\n}\n\n// Example Usage\n$composite = new Composite();\n$composite-&gt;add(new Leaf());\n$composite-&gt;add(new Leaf());\necho $composite-&gt;operation(); // Output: Composite [Leaf, Leaf]\n</code></pre>","tags":["php","programming"]},{"location":"952/index.html#2-strategy-pattern","title":"2. Strategy Pattern","text":"<ul> <li>Description: The strategy pattern defines a family of algorithms, encapsulating each one and making them interchangeable. This resembles the concept of combining functions, allowing you to treat the strategies as monoidal entities.</li> <li>Example Usage: Applicable in scenarios where you have multiple algorithms for operations, such as sorting or payment processing.</li> </ul>","tags":["php","programming"]},{"location":"952/index.html#2-strategy-pattern_1","title":"2. Strategy Pattern","text":"<pre><code>interface SortingStrategy {\n    public function sort(array $data): array;\n}\n\nclass QuickSort implements SortingStrategy {\n    public function sort(array $data): array {\n        // Implement quicksort algorithm\n        return $data; // Sample return\n    }\n}\n\nclass MergeSort implements SortingStrategy {\n    public function sort(array $data): array {\n        // Implement mergesort algorithm\n        return $data; // Sample return\n    }\n}\n\nclass Context {\n    private $strategy;\n\n    public function setStrategy(SortingStrategy $strategy) {\n        $this-&gt;strategy = $strategy;\n    }\n\n    public function executeStrategy(array $data): array {\n        return $this-&gt;strategy-&gt;sort($data);\n    }\n}\n\n// Example Usage\n$context = new Context();\n$context-&gt;setStrategy(new QuickSort());\n$result = $context-&gt;executeStrategy([3, 1, 2]); // Uses QuickSort\n</code></pre>","tags":["php","programming"]},{"location":"952/index.html#3-builder-pattern","title":"3. Builder Pattern","text":"<ul> <li>Description: The builder pattern enables the construction of complex objects step by step, representing the idea of combining parts (or attributes) to create a unified object, akin to the way monoids combine elements.</li> <li>Example Usage: Highly beneficial for constructing objects with multiple configurations, such as building UI elements or data structures.</li> </ul> <pre><code>class Car {\n    private $make;\n    private $model;\n\n    public function setMake($make) {\n        $this-&gt;make = $make;\n    }\n\n    public function setModel($model) {\n        $this-&gt;model = $model;\n    }\n\n    public function __toString() {\n        return \"Car: \" . $this-&gt;make . \" \" . $this-&gt;model;\n    }\n}\n\nclass CarBuilder {\n    private $car;\n\n    public function __construct() {\n        $this-&gt;car = new Car();\n    }\n\n    public function setMake($make) {\n        $this-&gt;car-&gt;setMake($make);\n        return $this; // Enable method chaining\n    }\n\n    public function setModel($model) {\n        $this-&gt;car-&gt;setModel($model);\n        return $this; // Enable method chaining\n    }\n\n    public function build() {\n        return $this-&gt;car;\n    }\n}\n\n// Example Usage\n$builder = new CarBuilder();\n$car = $builder-&gt;setMake('Toyota')-&gt;setModel('Camry')-&gt;build();\necho $car; // Output: Car: Toyota Camry\n</code></pre>","tags":["php","programming"]},{"location":"952/index.html#4-decorator-pattern","title":"4. Decorator Pattern","text":"<ul> <li>Description: This pattern allows behaviors to be added to individual objects dynamically, without modifying the structure of existing objects. This encapsulates the idea of augmenting an object with additional features, similar to adding elements in a monoidal structure.</li> <li>Example Usage: Frequently used to extend functionalities of UI components in a flexible manner.</li> </ul> <pre><code>interface Coffee {\n    public function cost(): float;\n}\n\nclass SimpleCoffee implements Coffee {\n    public function cost(): float {\n        return 2.00;\n    }\n}\n\nclass MilkDecorator implements Coffee {\n    protected $coffee;\n\n    public function __construct(Coffee $coffee) {\n        $this-&gt;coffee = $coffee;\n    }\n\n    public function cost(): float {\n        return $this-&gt;coffee-&gt;cost() + 0.50; // adds milk cost\n    }\n}\n\n// Example Usage\n$coffee = new SimpleCoffee();\n$coffeeWithMilk = new MilkDecorator($coffee);\necho $coffeeWithMilk-&gt;cost(); // Output: 2.50\n</code></pre>","tags":["php","programming"]},{"location":"952/index.html#5-aggregate-pattern","title":"5. Aggregate Pattern","text":"<ul> <li>Description: Similar to the composite pattern, the aggregate pattern focuses on managing collections of objects, typically providing a common interface for operations on these collections.</li> <li>Example Usage: Useful for processing collections, such as performing calculations or rendering lists.</li> </ul> <pre><code>class Item {\n    public function __construct(public string $name, public float $price) {}\n}\n\nclass ShoppingCart {\n    private array $items = [];\n\n    public function addItem(Item $item) {\n        $this-&gt;items[] = $item;\n    }\n\n    public function total(): float {\n        $total = 0.0;\n        foreach ($this-&gt;items as $item) {\n            $total += $item-&gt;price;\n        }\n        return $total;\n    }\n}\n\n// Example Usage\n$cart = new ShoppingCart();\n$cart-&gt;addItem(new Item(\"Apple\", 1.00));\n$cart-&gt;addItem(new Item(\"Banana\", 0.50));\necho $cart-&gt;total(); // Output: 1.50\n</code></pre>","tags":["php","programming"]},{"location":"952/index.html#6-command-pattern","title":"6. Command Pattern","text":"<ul> <li>Description: The command pattern encapsulates requests as objects, allowing operations to be parameterized and composed flexibly. This aligns with monoidal principles through the encapsulation of operations that can be combined.</li> <li>Example Usage: Particularly useful for implementing features like undo/redo functionality in applications.</li> </ul> <pre><code>interface Command {\n    public function execute(): void;\n}\n\nclass Light {\n    public function turnOn() {\n        echo \"Light is on\\n\";\n    }\n\n    public function turnOff() {\n        echo \"Light is off\\n\";\n    }\n}\n\nclass LightOnCommand implements Command {\n    private Light $light;\n\n    public function __construct(Light $light) {\n        $this-&gt;light = $light;\n    }\n\n    public function execute(): void {\n        $this-&gt;light-&gt;turnOn();\n    }\n}\n\nclass LightOffCommand implements Command {\n    private Light $light;\n\n    public function __construct(Light $light) {\n        $this-&gt;light = $light;\n    }\n\n    public function execute(): void {\n        $this-&gt;light-&gt;turnOff();\n    }\n}\n\n// Example Usage\n$light = new Light();\n$lightOn = new LightOnCommand($light);\n$lightOff = new LightOffCommand($light);\n\n$lightOn-&gt;execute(); // Output: Light is on\n$lightOff-&gt;execute(); // Output: Light is off\n</code></pre>","tags":["php","programming"]},{"location":"952/index.html#conclusion","title":"Conclusion","text":"<p>Monoids provide valuable ways to structure code by representing operations and data combinations clearly and succinctly. By leveraging OOP design patterns like Composite, Strategy, Builder, Decorator, Aggregate, and Command, developers can achieve similar goals to those offered by monoids in functional programming. This results in modular, maintainable, and scalable software systems that effectively handle complex logic and data structures.</p>","tags":["php","programming"]},{"location":"953/index.html","title":"Functors in PHP","text":"<pre><code>class Functor f where\n    map :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre> <p>Other names include <code>fmap</code>, <code>flat_map</code>, etc.</p>"},{"location":"953/index.html#what-is-a-functor","title":"What is a Functor?","text":"<p>A functor is a concept from functional programming that refers to a type that implements a mapping functionality, allowing functions to be applied to values wrapped in a context without altering the structure of that context.</p> <p>Key characteristics of functors include:</p> <ol> <li> <p>Mapping Function: Functors must provide a method to apply a function to the values contained within them. This is often referred to as the <code>map</code> function in many programming languages.</p> </li> <li> <p>Identity: When an identity function is applied to a functor, it should return the same functor without any modification to the contained value.</p> </li> <li> <p>Composition: Functors support the ability to compose functions, allowing a sequence of transformations to be applied in a way that maintains the functor\u2019s structure.</p> </li> </ol> <p>In programming, functors can be used with collections, optional types, and other data structures to promote cleaner and more expressive code.</p>"},{"location":"953/index.html#functors-in-object-oriented-programming-oop","title":"Functors in Object-Oriented Programming (OOP)","text":"<p>In OOP, functors can be realized through classes that handle one or more values and provide methods to transform those values. PHP can implement functor behavior using methods that adhere to the mapping concept.</p>"},{"location":"953/index.html#observer-pattern","title":"Observer Pattern","text":""},{"location":"953/index.html#description","title":"Description:","text":"<p>This pattern defines a one-to-many dependency between objects, so that when one object changes state, all its dependents are notified.</p>"},{"location":"953/index.html#code-example","title":"Code Example:","text":"<pre><code>interface Observer {\n    public function update(string $event): void;\n}\n\nclass ConcreteObserver implements Observer {\n    private string $name;\n\n    public function __construct(string $name) {\n        $this-&gt;name = $name;\n    }\n\n    public function update(string $event): void {\n        echo \"$this-&gt;name received update: $event\\n\";\n    }\n}\n\nclass Subject {\n    private array $observers = [];\n\n    public function attach(Observer $observer) {\n        $this-&gt;observers[] = $observer;\n    }\n\n    public function notify(string $event) {\n        foreach ($this-&gt;observers as $observer) {\n            $observer-&gt;update($event);\n        }\n    }\n}\n\n// Example Usage\n$subject = new Subject();\n$observer1 = new ConcreteObserver(\"Observer 1\");\n$observer2 = new ConcreteObserver(\"Observer 2\");\n\n$subject-&gt;attach($observer1);\n$subject-&gt;attach($observer2);\n\n$subject-&gt;notify(\"Event A\"); // Output: Observer 1 received update: Event A\n                               // Output: Observer 2 received update: Event A\n</code></pre> <p>The Observer Pattern is not a functor in the strictest sense, but there are ways to draw parallels between the two concepts, particularly in the context of functional programming principles. To understand why the Observer Pattern can be seen as having functor-like qualities, let\u2019s break down both concepts:</p>"},{"location":"953/index.html#functor-overview","title":"Functor Overview","text":"<p>A functor is a data structure that can be mapped over, allowing you to apply a function to its contained values while preserving its structure. In programming, functors are typically associated with operations that transform data without altering the underlying context.</p>"},{"location":"953/index.html#observer-pattern-overview","title":"Observer Pattern Overview","text":"<p>The Observer Pattern defines a one-to-many dependency between objects so that when one object (the subject) changes state, all its dependents (observers) are notified and updated automatically.</p>"},{"location":"953/index.html#how-the-observer-pattern-relates-to-functors","title":"How the Observer Pattern Relates to Functors","text":"<ol> <li>Mapping Behavior: In the Observer Pattern, when the subject changes, it \u201cmaps\u201d the event to all registered observers. Each observer can be thought of as a context where a function (or update behavior) is applied. This resembles the way a functor facilitates the application of a function over contained values.</li> <li>Decoupled Operations: Just as a functor allows operations to be decoupled from the data they operate on, the Observer Pattern decouples the subject from the observers. The subject does not need to know the specifics of how each observer handles an event, which can enhance modularity and reusability.</li> <li>Handling State Changes: Observers can be seen as functions that operate on the state of the subject. Each observer implements its behavior when notified of changes, functioning similarly to how a functor applies a mapping function to the values it wraps.</li> <li>Composable Behavior: The Observer Pattern supports composability since multiple observers can be registered to respond to changes in the subject. This idea aligns with the functional programming concept of applying multiple transformations or behaviors to data in a cohesive manner.</li> <li>Return of Configured Functions: The behavior of observers is often defined as a function or method that will be called when an event occurs. This encapsulates behavior in a way similar to functor applications, where custom functions are applied to the data.</li> </ol>"},{"location":"953/index.html#benefits-of-functors-in-oop","title":"Benefits of Functors in OOP","text":"<ul> <li>Encapsulation: Functors allow you to encapsulate both data and behavior, making code easier to manage.</li> <li>Reusability: Since functors can operate on any data type, they promote code reuse by allowing a single function to work across different functor implementations.</li> <li>Improved Readability: Using functors can make your code more expressive, clearly showing the intent behind data transformations.</li> </ul>"},{"location":"953/index.html#functors-and-design-patterns","title":"Functors and Design Patterns","text":"<p>Functors can fit into various design patterns, such as:</p> <ul> <li>Decorator Pattern: Where additional behavior is added to an object without altering its structure.</li> <li>Strategy Pattern: Where you can define a family of algorithms and use them interchangeably.</li> </ul>"},{"location":"953/index.html#conclusion","title":"Conclusion","text":"<p>Functors are an essential concept in programming that promotes clean, functional approaches to data manipulation. In PHP, they can reduce code complexity, improve readability, and enhance maintainability by providing a structured way to apply transformations to wrapped values. Their integration in object-oriented design can lead to more robust and flexible code structures.</p>"},{"location":"954/index.html","title":"Monads in PHP","text":"<p>Monads in PHP are abstract structures that allow for the chaining of operations while managing side effects and context. They encapsulate a value and provide methods for transforming that value, promoting cleaner and more expressive code. By leveraging monadic principles, developers can create reusable and modular designs that handle complex workflows effectively.</p> <p>A Monad is a monoid in the category of endo functors.</p> <pre><code>class Monad m where\n    return :: a -&gt; m a\n    (&gt;&gt;=)  :: m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>","tags":["php","programming","architecture"]},{"location":"954/index.html#what-is-a-monad","title":"What is a Monad?","text":"<p>A monad is an abstract data type that represents computations as a series of steps. In functional programming, monads provide a way to encapsulate values along with the operations that can be performed on those values, allowing for a clean way to manage side effects and chaining of operations.</p>","tags":["php","programming","architecture"]},{"location":"954/index.html#key-characteristics-of-monads","title":"Key Characteristics of Monads","text":"<ol> <li> <p>Type Constructor: A monad defines a way to wrap a value in a computational context, transforming a regular value into a monadic value.</p> </li> <li> <p>Bind Operator: Monads support a bind operation (often denoted as <code>&gt;&gt;=</code>) that allows for the chaining of functions. This operator takes a monadic value and a function that returns a monadic value, enabling sequential operations while preserving context.</p> </li> <li> <p>Identity Function: Monads must provide a way to inject a value into their context using a method often called <code>return</code> (or <code>pure</code> in some contexts). This effectively serves as an identity element.</p> </li> <li> <p>Associativity: Composing monadic operations must satisfy the associative law, meaning the order in which operations are performed should not affect the final result.</p> </li> </ol>","tags":["php","programming","architecture"]},{"location":"954/index.html#why-use-monads","title":"Why Use Monads?","text":"<ul> <li>Handling Side Effects: Monads manage side effects in a controlled manner, allowing pure functions to maintain their integrity while still performing necessary operations (e.g., I/O, state changes).</li> <li> <p>Code Reusability: By defining a standard interface for chaining operations, monads promote code reuse, making it easier to combine different operations without modifying their underlying implementations.</p> </li> <li> <p>Clarity and Readability: The use of monads can lead to clearer code structures, where the flow of data through functions is explicit and easy to follow.</p> </li> </ul>","tags":["php","programming","architecture"]},{"location":"954/index.html#common-examples-of-monads","title":"Common Examples of Monads","text":"<ul> <li>Maybe Monad: Represents optional values, allowing for safe handling of potentially missing data.</li> <li>List Monad: Represents computations that can produce multiple results.</li> <li>IO Monad: Handles input/output operations while maintaining functional purity.</li> </ul> <p>In summary, monads serve as powerful abstractions in programming that allow developers to build complex operations while managing state and side effects in a clean and organized manner.</p>","tags":["php","programming","architecture"]},{"location":"954/index.html#monads-in-object-oriented-programming-oop","title":"Monads in Object-Oriented Programming (OOP)","text":"","tags":["php","programming","architecture"]},{"location":"954/index.html#asynchronous-tasks-pattern","title":"Asynchronous Tasks Pattern","text":"<p>The Asynchronous Tasks pattern is a way to represent computations that may involve waiting for results while maintaining functional purity and composability. In an object-oriented context, this pattern allows for chaining operations on asynchronous tasks, enabling the handling of side effects such as delays and asynchronous event management.</p>","tags":["php","programming","architecture"]},{"location":"954/index.html#code-example","title":"Code Example","text":"<p>Here\u2019s how you can implement a simple Task Monad in PHP to manage asynchronous operations:</p> <pre><code>class Task {\n    private $closure;\n    private $result;\n    private $error;\n\n    public function __construct(callable $closure) {\n        $this-&gt;closure = $closure;\n    }\n\n    public function execute() {\n        try {\n            $this-&gt;result = ($this-&gt;closure)();\n            return $this; // Return Task instance for chaining\n        } catch (Exception $e) {\n            $this-&gt;error = $e-&gt;getMessage();\n            return $this; // Return Task instance with error\n        }\n    }\n\n    public function map(callable $func) {\n        return $this-&gt;isNothing() ? $this : new Task(function() use ($func) {\n            return $func($this-&gt;result); // Pass the result through the mapping function\n        });\n    }\n\n    public function flatMap(callable $func) {\n        if ($this-&gt;isNothing()) {\n            return $this; // Pass through if there's an error\n        }\n        return $func($this-&gt;result); // Execute the function using the result\n    }\n\n    public function getResult() {\n        return $this-&gt;result;\n    }\n\n    public function getError() {\n        return $this-&gt;error;\n    }\n\n    public function isNothing() {\n        return $this-&gt;error !== null; // Check if there was an error\n    }\n}\n\n// Example Usage\n$task = new Task(function() {\n    // Simulating an asynchronous operation\n    return \"Task completed successfully!\";\n});\n\n$result = $task-&gt;execute()\n    -&gt;map(function($value) {\n        return strtoupper($value); // Transform the result to uppercase\n    })\n    -&gt;flatMap(function($value) {\n        return new Task(function() use ($value) {\n            // Simulate another async operation\n            if (rand(0, 1) === 0) { // Randomly succeed or fail\n                throw new Exception(\"Simulated failure.\");\n            }\n            return \"Final result: \" . $value;\n        });\n    });\n\nif ($result-&gt;isNothing()) {\n    echo \"Error: \" . $result-&gt;getError(); // Handle the error\n} else {\n    echo $result-&gt;getResult(); // Outputs the final result\n}\n</code></pre>","tags":["php","programming","architecture"]},{"location":"954/index.html#explanation-of-the-code","title":"Explanation of the Code","text":"<ol> <li> <p>Task Class: The <code>Task</code> class represents an asynchronous operation. It holds a closure (the operation to be performed), and it can store the resulting value or any error that occurs during execution.</p> </li> <li> <p>Execute Method: The <code>execute</code> method runs the closure and captures any exceptions. This allows the class to maintain the result or error state, which is crucial for managing asynchronous behavior.</p> </li> <li> <p>Mapping and FlatMapping:</p> </li> </ol> <ul> <li><code>map</code>: Enables the transformation of the result while respecting the monadic structure. If an error has occurred, it returns the current instance unchanged.</li> <li><code>flatMap</code>: Allows for chaining of operations that return new <code>Task</code> instances, facilitating more complex workflows.</li> </ul> <ol> <li>Result Handling: After creating a <code>Task</code> instance and executing it, you can chain further transformations and operations. The example simulates a simple asynchronous operation and shows how to handle potential failures in a clean manner.</li> </ol>","tags":["php","programming","architecture"]},{"location":"954/index.html#conclusion","title":"Conclusion","text":"<p>The Asynchronous Tasks pattern exemplifies how monads can be implemented in OOP to manage complex workflows and side effects. By encapsulating operations within a monadic structure, you can create readable and maintainable code that handles asynchronous tasks seamlessly. This approach allows developers to focus on the logic of operations without worrying about the underlying complexities of handling asynchronous behavior.</p>","tags":["php","programming","architecture"]},{"location":"955/index.html","title":"Kleisli\u2019s in PHP","text":"","tags":["architecture","php","programming"]},{"location":"955/index.html#type-signature","title":"Type Signature","text":"<p>In Haskell, the type signature for a Kleisli arrow can be expressed as follows:</p> <pre><code>newtype Kleisli m a b = Kleisli { runKleisli :: a -&gt; m b }\n</code></pre>","tags":["architecture","php","programming"]},{"location":"955/index.html#description","title":"Description","text":"<p>Kleisli arrows are a way to represent functions that return monadic values, enabling the chaining of operations in a manner consistent with the monadic interface. In programming, this concept allows for the composition of functions that handle context or effects (like optional values, asynchronous operations, or side effects) seamlessly, promoting cleaner and more maintainable code.</p> <p>In PHP, implementing Kleisli arrows can facilitate operations where the output of one function seamlessly flows into another, enhancing functional programming approaches and improving code readability.</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#what-is-a-kleisli","title":"What is a Kleisli","text":"<p>A Kleisli refers to a specific type of arrow used in functional programming that represents functions that return monadic values. Named after mathematician Haskell Curry, a Kleisli arrow allows for the chaining of these functions, enabling a clear and concise way to work with computations that encapsulate context, such as state or side effects.</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#key-characteristics-of-kleisli-arrows","title":"Key Characteristics of Kleisli Arrows","text":"<ol> <li>Function Representation: A Kleisli arrow is represented as a function that takes an input and returns a value wrapped in a monadic context.</li> <li> <p>Composition: Kleisli arrows allow for the composition of functions that return monadic results. If you have two functions, where the output of the first is a monadic value that can be fed into the second function, the Kleisli arrow provides a mechanism for this flow.</p> </li> <li> <p>Monadic Behavior: They embody the behavior of monads, handling the propagation of context throughout the computation process, thus simplifying the management of side effects.</p> </li> </ol>","tags":["architecture","php","programming"]},{"location":"955/index.html#example-in-programming","title":"Example in Programming","text":"<p>In programming languages like Haskell, Kleisli arrows streamline the process of working with operations that involve multiple steps of computations, particularly in contexts like error handling, asynchronous programming, or data transformations.</p> <p>By using Kleisli arrows, developers can write cleaner, more maintainable code that clearly expresses the flow of data through various transformations while encapsulating the context that may be associated with those operations. In object-oriented languages like PHP, similar concepts can be applied to facilitate smooth chaining of functions and methods that return wrapped values.</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#kleisli-in-object-oriented-programming-oop","title":"Kleisli in Object-Oriented Programming (OOP)","text":"<p>In Object-Oriented Programming (OOP), a Kleisli can be thought of as a design that allows functions returning monadic values to be easily composed and integrated into a workflow. It facilitates a clean way to handle operations that may involve side effects or context-dependent computations, enabling a more functional approach within an OOP context.</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#middleware-pattern-for-routing","title":"Middleware Pattern for Routing","text":"<p>In this example, we\u2019ll implement a simple routing system in PHP that utilizes the Kleisli concept. Middleware functions will serve as Kleisli arrows, processing incoming requests and passing them through a chain of handlers while returning responses.</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#code-example","title":"Code Example","text":"<pre><code>class Middleware {\n    private $handler;\n\n    public function __construct(callable $handler) {\n        $this-&gt;handler = $handler;\n    }\n\n    public function process($request) {\n        return ($this-&gt;handler)($request);\n    }\n\n    public function andThen(Middleware $next) {\n        return new Middleware(function ($request) use ($next) {\n            $response = $this-&gt;process($request);\n            // You could modify the response here if needed\n            return $next-&gt;process($response);\n        });\n    }\n}\n\n// Example middleware handlers\n$middleware1 = new Middleware(function ($request) {\n    echo \"Middleware 1 processing request: $request\\n\";\n    return \"Request processed by Middleware 1\";\n});\n\n$middleware2 = new Middleware(function ($request) {\n    echo \"Middleware 2 processing request: $request\\n\";\n    return \"Request processed by Middleware 2\";\n});\n\n// Chain middleware using andThen\n$finalMiddleware = $middleware1-&gt;andThen($middleware2);\n\n// Simulate a request\n$request = \"GET /example\";\n$response = $finalMiddleware-&gt;process($request);\n\necho \"Final Response: $response\\n\";\n</code></pre>","tags":["architecture","php","programming"]},{"location":"955/index.html#explanation-of-the-code","title":"Explanation of the Code","text":"<ol> <li>Middleware Class: This class represents a middleware function. Each instance is initialized with a callable that defines how to process a request.</li> </ol> <ul> <li>The <code>process()</code> method executes the handler, passing the incoming request to it.</li> <li>The <code>andThen()</code> method allows chaining another middleware. It returns a new <code>Middleware</code> instance that processes the current request through the first handler and then passes the result to the next handler.</li> </ul> <ol> <li> <p>Example Middleware Handlers: Two middleware functions (<code>middleware1</code> and <code>middleware2</code>) are created, representing processing logic for incoming requests. Each middleware logs a message and returns a response.</p> </li> <li> <p>Chaining Middleware: The <code>andThen()</code> method allows the sequential composition of middleware, representing how different processing functions can be combined. This chaining is what represents the essence of Kleisli arrows.</p> </li> <li> <p>Request Simulation: Finally, a simulated request is processed through the chained middleware, demonstrating how the output from one middleware can be seamlessly passed to the next.</p> </li> </ol>","tags":["architecture","php","programming"]},{"location":"955/index.html#why-this-is-a-kleisli","title":"Why This is a Kleisli","text":"<ul> <li> <p>Encapsulation of Computation: Each middleware operates on an input (the request) and produces an output (the response), encapsulating the computation in a manner similar to how a Kleisli arrow encapsulates a function that returns a monadic value.</p> </li> <li> <p>Chaining Operations: The <code>andThen()</code> method allows for the combination of multiple middleware functions in a way that mirrors how Kleisli arrows allow the chaining of functions that produce monadic results.</p> </li> <li> <p>Handling Context: Each middleware processes the request and can modify the output or context before passing it along, similar to how monads manage context in computations. This emphasizes the flow of data while keeping error handling and state management coherent.</p> </li> </ul>","tags":["architecture","php","programming"]},{"location":"955/index.html#conclusion","title":"Conclusion","text":"<p>This implementation of the Middleware Pattern for Routing exemplifies the concept of Kleisli arrows by allowing functions to be chained together in a clear and structured manner, maintaining control over the context of the computations (in this case, the request and response flow). This approach enhances modularity, readability, and maintainability, key principles in software architecture.</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#concrete-design-pattern-asynchronous-task-handling","title":"Concrete Design Pattern: Asynchronous Task Handling","text":"","tags":["architecture","php","programming"]},{"location":"955/index.html#description_1","title":"Description","text":"<p>The Kleisli Pattern can be used in OOP to manage asynchronous tasks that may fail or produce optional results. Here\u2019s how it can look in PHP with a concrete example:</p>","tags":["architecture","php","programming"]},{"location":"955/index.html#implementation-example","title":"Implementation Example","text":"<pre><code>class Task {\n    private $closure;\n\n    public function __construct(callable $closure) {\n        $this-&gt;closure = $closure;\n    }\n\n    public function execute() {\n        try {\n            return $this-&gt;closure(); // Run the task\n        } catch (Exception $e) {\n            return \"Error: \" . $e-&gt;getMessage(); // Handle errors\n        }\n    }\n\n    public function map(callable $func) {\n        return new Task(function() use ($func) {\n            return $func($this-&gt;execute()); // Chain the function\n        });\n    }\n\n    public function flatMap(callable $func) {\n        return new Task(function() use ($func) {\n            return $func($this-&gt;execute())-&gt;execute(); // Chain the task\n        });\n    }\n}\n\n// Example Usage\n$task1 = new Task(function() {\n    return \"Data from Task 1\";\n});\n\n$task2 = new Task(function() {\n    throw new Exception(\"Task 2 failed.\");\n});\n\n// Chaining tasks using map and flatMap\n$result = $task1-&gt;map(function($data) {\n    return strtoupper($data); // Transform the result\n})-&gt;flatMap(function($data) use ($task2) {\n    return $task2; // Return the second task\n});\n\n// Execute\necho $result-&gt;execute(); // Output: Error: Task 2 failed.\n</code></pre>","tags":["architecture","php","programming"]},{"location":"955/index.html#why-its-a-kleisli","title":"Why It\u2019s a Kleisli","text":"<ol> <li> <p>Encapsulation of Computation: The <code>Task</code> class encapsulates asynchronous computations. Each instance holds a callable that can be executed, similar to how a Kleisli arrow encapsulates a function that returns a monadic type.</p> </li> <li> <p>Function Composition: The <code>map</code> and <code>flatMap</code> methods enable chaining of operations that produce monadic results. This allows tasks to be composed in a clean manner, where the output of one task can seamlessly become the input of another.</p> </li> <li> <p>Context Management: By handling execution errors and managing context (like task states), the <code>Task</code> class reflects the monadic behavior of Kleisli arrows. If any task in the chain fails, the resulting state (error message) propagates through the chain, demonstrating the same principles as a monadic context in functional programming.</p> </li> <li> <p>Flexibility: The beauty of this pattern lies in its ability to allow various tasks to be defined and composed without tightly coupling their implementations, adhering to the principles of functional programming while using OOP.</p> </li> </ol>","tags":["architecture","php","programming"]},{"location":"955/index.html#conclusion_1","title":"Conclusion","text":"<p>In OOP, the Kleisli pattern exemplifies how to compose operations that yield monadic values, enhancing the handling of asynchronous tasks and encapsulating errors gracefully. By utilizing this approach, developers can build modular, maintainable code that retains the expressiveness found in functional programming paradigms.</p>","tags":["architecture","php","programming"]},{"location":"956/index.html","title":"Musk rats and DOGE take over","text":"<ul> <li>Dep of Treasery</li> <li>dep of education</li> <li>vet affairs</li> <li>EPA</li> <li>NORA</li> <li>office of personal management</li> <li>medicare and medicaid</li> <li>FAA</li> <li>small business administration</li> </ul> <p>Doge Gang:</p> <ol> <li>Akash Bobba (21)</li> <li>Edward Coristine (24) (big balls). He might actual be 19</li> <li>Luke Farritor (22)</li> <li>Gautier Cole Killian (19)</li> <li>Gavin Kliger (23)</li> <li>Ethan Shaotran (25)</li> </ol>","tags":["politics"]},{"location":"957/index.html","title":"Place: Bar Zia","text":"<p>Bar in downtown Minneapolis</p>","tags":["place"]},{"location":"958/index.html","title":"Bake: 50/50 Sourdough Loaf","text":"<p>This is a recipe for a 50/50 sourdough loaf using equal parts all-purpose flour and whole wheat flour.</p> <p></p>","tags":["baking","bake","sourdough","wheat"]},{"location":"958/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 300g 60% King Arthur Whole wheat flour 200g 40% Hard red wheat Water 350g 70% Adjust based on humidity Starter 50g 10% 100% hydration, fed Salt 5g 1.0% <p>Total weight is approximately 905g.</p>","tags":["baking","bake","sourdough","wheat"]},{"location":"958/index.html#key-events","title":"Key Events","text":"<ul> <li>2025-02-10 09:00 Fed starter.</li> <li>2025-02-10 13:48 Autolyse flour</li> <li>2025-02-11 08:30 Placed into fridge</li> <li>2025-02-11 12:00 Baked at 500f using the standard technique with the dutch oven and cast iron skillet.</li> </ul>","tags":["baking","bake","sourdough","wheat"]},{"location":"958/index.html#see-also","title":"See Also","text":"<ul> <li>Baking index</li> </ul>","tags":["baking","bake","sourdough","wheat"]},{"location":"959/index.html","title":"Article: Website that compares different new providers","text":"<p>An article that compares news reliability and party bias.  An interesting observation is that the more in the middle with regards to bias the more reliable the news. </p>","tags":["politics"]},{"location":"96/index.html","title":"keg create git issue","text":"<p>An issue where keg complains about not being able to pull with a rebase.</p> <pre><code>error: cannot pull with rebase: You have unstaged changes.\nerror: please commit or stash them.\nNo remote repo has been setup. First create it and git push to it.\n</code></pre> <p>When <code>keg edit</code> or <code>keg create</code> is called the keg indexes are updated and a few git commands are run. From the code base of keg these git commands invoked from <code>keg edit</code> or <code>keg create</code>.</p> <p>The following git commands are run after a new is created and the dex is updated.</p> <ul> <li><code>git -C kegpath pull</code></li> <li><code>git -C kegpath add -A .</code></li> <li><code>git -C kegpath commit -m ???</code></li> <li><code>git -C kegpath push</code></li> </ul> <p>The <code>-C</code> option is the working directory to use. <code>kegpath</code> is the git directory.</p>","tags":["solved","issue"]},{"location":"96/index.html#solution","title":"Solution","text":"<p><code>rebase</code> is set to true in <code>.git/config</code>. This needs to be set to <code>false</code>.</p>","tags":["solved","issue"]},{"location":"960/index.html","title":"Game: Incremental epic hero 2 (ieh2)","text":"<p>An incremental game on crazygames.com. It is a unity game.</p>","tags":["ieh2"]},{"location":"961/index.html","title":"Warrior stat spread for IEH2","text":"<p>Stat spread for IEH2 for warrior depending on goal .</p>","tags":["warrior","ieh2"]},{"location":"961/index.html#slime-raid-boss-build","title":"Slime raid boss build","text":"<ul> <li>20 vit</li> <li>20 str</li> <li>20 luck</li> <li>rest str</li> </ul>","tags":["warrior","ieh2"]},{"location":"962/index.html","title":"Bake: 80/20 sourdough loaf","text":"<p>A more white loaf based on the loaf that I made last week.</p> <p>The kitchen was roughly 64f.</p> <p></p>","tags":["baking","sourdough","wheat"]},{"location":"962/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 400g 80% King Arthur Whole wheat flour 100g 20% Hard red wheat Water 350g 70% Adjust based on humidity wheat starter 50g 10% 100% hydration, fed Salt 5g 1.0% <p>Total weight is approximately 905g.</p>","tags":["baking","sourdough","wheat"]},{"location":"962/index.html#time-log","title":"Time log","text":"<ul> <li>2025-02-19 10:35 Fed starter</li> <li>2025-02-19 15:05 Autolyse ingredients</li> <li>2025-02-19 17:30 Mixed rest of the ingredients</li> <li>2025-02-19 17:50 Couple of stretch and folds</li> <li>2025-02-19 23:00 Stretch and fold, shaped and placed in fridge</li> <li>2025-02-20 14:45 removed from fridge</li> <li>2025-02-20 15:24 Placed into the oven</li> </ul> <p>Preheated to 500f. Maybe around 30m to heat up the dutch oven. Baked at 500f for 20m with lid on. Another 12m for 450 with the lid off. Was using the trick with the frying pan.</p>","tags":["baking","sourdough","wheat"]},{"location":"963/index.html","title":"Hardware: Enameled cast iron pot","text":"","tags":["hardware","baking"]},{"location":"964/index.html","title":"Hardware: 12 inch Cast iron pan","text":"","tags":["hardware","baking"]},{"location":"965/index.html","title":"Article: The Wildernet","text":"<p>A website that Amanda has been working on thewildernet.</p>"},{"location":"966/index.html","title":"Article: Language learning website","text":"<p>A language learning website that I learned about during a MSP tech meetup (2025-02-22) from a knowledgeable person about languages.</p>","tags":["article","lanugage"]},{"location":"967/index.html","title":"Article: Foony architecture post on twitter","text":"<p>acorn1010 posted on twitter the architecture of Foony and the decisions made.</p>"},{"location":"968/index.html","title":"Website: Foony","text":"<p>Gaming website created by acorn1010</p>"},{"location":"969/index.html","title":"Bake: 54/46 sourdough loaf","text":"<p>A mostly whole wheat loaf. Didn\u2019t have enough whole flour ground up to make the 80/20 that I wanted.</p> <p>The kitchen is roughly 60f. Forgot to throw in the fridge but still turned out good</p> <p></p>","tags":["bake","sourdough"]},{"location":"969/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 229g 46% King Arthur Whole wheat flour 271g 54% Turkey red wheat Water 350g 70% Adjust based on humidity rye starter 50g 10% 100% hydration, fed Salt 5g 1.0% <p>Total weight is approximately 905g.</p>","tags":["bake","sourdough"]},{"location":"969/index.html#time-log","title":"Time log","text":"<ul> <li>2025-03-12 09:00 Fed starter</li> <li>2025-03-12 12:06 Autolyse Flour ingredients</li> <li> <p>2025-03-12 13:30 Mixed</p> </li> <li> <p>2025-03-12 12:30 Shaped</p> </li> <li>2025-03-13 09:30 Baked using my usual trick. Preheated to 550 for 30 minutes. Baked for 475f for 20m with lid on. 450f for 18m</li> </ul>","tags":["bake","sourdough"]},{"location":"97/index.html","title":"Ergonomic mouse research","text":"<p>I tend to have slight discomfort in my wrist after using a regular mouse.</p> <p>My hand size is roughly 3.5 inches.</p> Name Price Compatability Comment Logitech MX Vertical Works with logitech software Forward and back may work better Evoluent VM4R No side buttons because of apple bullshit Possibly more comfortable than MX Vertical Anker 25 No side buttons <pre><code>tags: #hardware #workstation\n</code></pre>"},{"location":"970/index.html","title":"App: skhd - a simple hotkey daemon for macOS","text":"<p>A macOSX hotkey daemon that I use on my mac. Works well with Yabai.</p>","tags":["app","macosx"]},{"location":"970/index.html#common-issues","title":"Common issues","text":"","tags":["app","macosx"]},{"location":"970/index.html#skhd-refuses-to-run-when-starting-service","title":"<code>skhd</code> refuses to run when starting service.","text":"<p>I had to remove the <code>skhd</code> from the list of accessibility items and rerun <code>skhd --start-service</code> on the command line. Then accept the popup</p>","tags":["app","macosx"]},{"location":"971/index.html","title":"Dance classes in the twin cities","text":"<p>Dancing in Minneapolis. Currently incomplete.</p>","tags":["dancing","minneapolis"]},{"location":"971/index.html#monday","title":"Monday","text":"<ul> <li>18:30 - 20:00: TC Swing East coast swing beginner (begins April 7)</li> <li>20:00 - 20:00: TC Swing Lindy Hop beginner (begins April 7)</li> <li>19:30 - 20:30: Onereason Salsa 1</li> </ul>","tags":["dancing","minneapolis"]},{"location":"971/index.html#tuesday","title":"Tuesday","text":"<ul> <li>18:30: Duende salsa 1</li> <li>18:00: Hazy Rhythms</li> </ul>","tags":["dancing","minneapolis"]},{"location":"971/index.html#wednesday","title":"Wednesday","text":"<ul> <li>18:30: Duende Salsa 1</li> <li>18:30: Onereason Bachata practice</li> <li>18:30: Onereason Bachata 1</li> </ul>","tags":["dancing","minneapolis"]},{"location":"971/index.html#thursday","title":"Thursday","text":"<ul> <li>18:00 - 18:30: Onereason salsa practice</li> <li>18:30 - 19:30: Onereason salsa 1</li> <li>18:30 - 20:00: TC Swing Advanced East coast swing (begins april 7)</li> </ul>","tags":["dancing","minneapolis"]},{"location":"971/index.html#friday","title":"Friday","text":"<ul> <li>18:00: Hazy Rhythms</li> </ul>","tags":["dancing","minneapolis"]},{"location":"971/index.html#saturday","title":"Saturday","text":"<ul> <li>12:00: Duende Salsa 1</li> <li>13:00: Duende Bachata 1</li> </ul>","tags":["dancing","minneapolis"]},{"location":"972/index.html","title":"Studio: Duende dance studio","text":"<p>Dancing studio located in St Louis Park. Classes are a series are a monthly series starting at the beginning of the month.</p>","tags":["studio","dancing"]},{"location":"973/index.html","title":"Studio: TC Swing dance studio","text":"<p>East coast swing and Lindy Hop. Beginner classes on Monday and advanced classes on Thursday.</p>","tags":["studio","dancing"]},{"location":"974/index.html","title":"East coast swing (ecs)","text":"<p>Here\u2019s a list of popular dance moves commonly used in East Coast Swing:</p>","tags":["ecs","dancing"]},{"location":"974/index.html#basic-moves","title":"Basic Moves","text":"<ol> <li>Basic Step: The foundational step for East Coast Swing, typically consisting of a triple step followed by a rock step.</li> <li>Rock Step: A basic weight transfer step where the dancer steps back on one foot and then steps forward to return to the original position.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#common-variations","title":"Common Variations","text":"<ol> <li>Triple Step: Two quick side steps followed by a step in the opposite direction, often used in combination with other moves.</li> <li>Side Step: A simple side-to-side movement that can be incorporated into various combinations.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#turns-and-spins","title":"Turns and Spins","text":"<ol> <li>Inside Turn: The lead guides the follow into a turn towards the inside of the circle, typically used after a basic step.</li> <li>Outside Turn: The lead guides the follow into a turn away from the center, creating a beautiful spin action.</li> <li>Underarm Turn: A classic turn where the lead raises their arm, allowing the follow to turn under it.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#hand-hold-variations","title":"Hand Hold Variations","text":"<ol> <li>Two-Hand Hold: The dancers hold hands with both partner\u2019s hands joining together, often used in basic moves and turns.</li> <li>One-Hand Hold: Utilized in specific transitions and turns, with one hand holding while the other may be free.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#footwork-patterns","title":"Footwork Patterns","text":"<ol> <li>Sugar Push: A move where dancers take a step back and then push forward to come together, often ending in a rock step.</li> <li>Tuck Turn: A technique where the lead \u201ctucks\u201d the follow under their arm while moving, resulting in an elegant rotation.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#advanced-moves","title":"Advanced Moves","text":"<ol> <li>Charleston: A fun and energetic move that incorporates quick footwork and turns, characteristic of early swing dances.</li> <li>Swingout: A more advanced move where dancers create a wide arc during the step, adding flair and style.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#styling-and-variations","title":"Styling and Variations","text":"<ol> <li>Cuban Break: Side steps with a hip action that adds flair and style to the dance.</li> <li>Fancy Footwork: Includes variations like the \u201ckick,\u201d \u201cshuffle,\u201d or \u201ccross-step\u201d that dancers may integrate for personal expression.</li> </ol>","tags":["ecs","dancing"]},{"location":"974/index.html#conclusion","title":"Conclusion","text":"<p>These moves provide a framework for East Coast Swing dancing. Many dancers adapt these foundational steps, combining them with their unique styling and improvisation to create dynamic, energetic dance routines. Whether you\u2019re just starting out or looking to enhance your skills, practicing these moves can improve your East Coast Swing dancing experience.</p>","tags":["ecs","dancing"]},{"location":"975/index.html","title":"Lindy hop (lindy)","text":"<p>Lindy Hop is a lively and energetic dance style that originated in the 1920s and 1930s in Harlem. Here\u2019s a list of fundamental dance moves and variations commonly associated with Lindy Hop:</p>","tags":["dancing","lindy"]},{"location":"975/index.html#basic-moves","title":"Basic Moves","text":"<ol> <li> <p>Lindy Basic: The foundational step in Lindy Hop, consisting of a basic rock step followed by triple steps.</p> </li> <li> <p>Swingout: A core move that involves a leader and follower swinging out from a closed position into an open position, often followed by additional moves.</p> </li> <li> <p>Charleston: Characterized by a rhythmic forward and backward stepping pattern, often incorporating kicks.</p> </li> </ol>","tags":["dancing","lindy"]},{"location":"975/index.html#popular-variations-and-add-ons","title":"Popular Variations and Add-ons","text":"<ol> <li> <p>Lindy Turn: A turn performed during the swingout, where the follower turns under the leader\u2019s arm back into a closed position.</p> </li> <li> <p>Inside Turn: A turn executed by the follower while moving toward the leader, often during the swingout phase.</p> </li> <li> <p>Outside Turn: Similar to the inside turn but moving away from the leader.</p> </li> <li> <p>Tuck Turn: A variation where the leader \u201ctucks\u201d the follower under their arm, allowing them to turn while maintaining movement.</p> </li> <li> <p>Texas Tommy: A move where the leader passes the follower\u2019s hand behind their back while turning.</p> </li> </ol>","tags":["dancing","lindy"]},{"location":"975/index.html#advanced-moves","title":"Advanced Moves","text":"<ol> <li> <p>Bonus Step: Also known as the \u201cLindy Circle\u201d, it involves a circular dance pattern that includes swingouts and turns, creating a flowing continuous movement.</p> </li> <li> <p>Air Steps: These are aerial moves performed during the dance where the follower is lifted off the ground, such as the \u201cLindy Hop Air Step\u201d or \u201cAirplane\u201d.</p> </li> <li> <p>The Scissor Kick: A dynamic move that incorporates a kick as the couple moves into their next step.</p> </li> <li> <p>Breakaway: A move that involves the couple breaking apart briefly before coming back together, enhancing the connection and rhythm.</p> </li> </ol>","tags":["dancing","lindy"]},{"location":"975/index.html#styling-and-musicality-moves","title":"Styling and Musicality Moves","text":"<ol> <li> <p>Jazz Hands: A playful hand position often utilized during turns or pauses.</p> </li> <li> <p>Footwork Variations: Including syncopated steps, shuffles, and embellishments that add flair to movements.</p> </li> <li> <p>Hip Bumps: Incorporating playful hip movements to accent the rhythm.</p> </li> </ol>","tags":["dancing","lindy"]},{"location":"975/index.html#practice-tips","title":"Practice Tips","text":"<p>Feel free to explore and practice these moves with varying tempos of swing music. The engaging nature of Lindy Hop allows dancers to express their personalities through styling and improvisation. As always, consider taking lessons from experienced instructors to refine your technique and learn new variations!</p>","tags":["dancing","lindy"]},{"location":"976/index.html","title":"Studio: Onereason dance studio","text":"","tags":["studio","dancing"]},{"location":"977/index.html","title":"Salsa (salsa)","text":"<p>Here\u2019s a list of popular dance moves commonly used in Salsa dancing:</p>","tags":["dancing","salsa"]},{"location":"977/index.html#basic-moves","title":"Basic Moves","text":"<ol> <li>Basic Step: The foundational step in Salsa, typically comprising a    six-count rhythm.</li> <li>Forward &amp; Back Basic: Step forward and back, maintaining a consistent    rhythm, often used as a starting point for many combinations.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#turns-and-spins","title":"Turns and Spins","text":"<ol> <li>Right Turn: The dancer rotates to the right while maintaining the basic    step, usually initiated by the lead.</li> <li>Left Turn: The dancer spins to the left, following the lead\u2019s direction,    often combined with arm motions.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#footwork-patterns","title":"Footwork Patterns","text":"<ol> <li>Cross-Body Lead: A move where the lead guides the follow across their    body, allowing for a switch of positions.</li> <li>Side Step (Lateral Step): Dancers step to the side, maintaining the    rhythm, often used to transition between moves.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#partner-holds","title":"Partner Holds","text":"<ol> <li>Open Hold: A standard grip positioning where partners hold each other\u2019s    hands, creating space for turns and movements.</li> <li>Closed Hold: Partners hold each other closely, facilitating more intimate    turns and spins.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#variations-and-styling","title":"Variations and Styling","text":"<ol> <li>Cuban Break (Cuban Step): A side step with a quick weight transfer,    adding hip action and flair.</li> <li>New York (or Suzy Q): A styling move where dancers switch weight from     one foot to the other while turning slightly.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#advanced-moves","title":"Advanced Moves","text":"<ol> <li>Salsa Dips: A dramatic move where one partner dips the other, adding     flair to the performance.</li> <li>Mambo Step: A classic step that can be added for flavor, involving a     step forward and tapping back.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#tricks-and-spins","title":"Tricks and Spins","text":"<ol> <li>Alemana (or Inside Turn): A turn where the follow turns inward towards     the lead.</li> <li>Enchufla: A move that involves the lead guiding the follow into a turn     while maintaining a handhold.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#complex-combinations","title":"Complex Combinations","text":"<ol> <li>Lady\u2019s Styling: Various embellishments that the follow can perform     during basic steps, such as arm movements or footwork variations.</li> <li>Backspot Turn: A more advanced turn for the follow that adds complexity     and style to the dance.</li> </ol>","tags":["dancing","salsa"]},{"location":"977/index.html#conclusion","title":"Conclusion","text":"<p>These moves form the core vocabulary of Salsa dancing. Each move can be adapted and stylized according to personal preference and the style of Salsa being danced (e.g., Cuban Salsa, LA Salsa, Colombian Salsa). Practicing these moves helps dancers develop their skills and confidence on the dance floor, allowing for creativity and expression in their dancing.</p>","tags":["dancing","salsa"]},{"location":"978/index.html","title":"Bachata (bachata)","text":"<p>Here\u2019s a list of popular dance moves commonly used in Bachata dancing:</p>","tags":["bachata","dancing"]},{"location":"978/index.html#basic-moves","title":"Basic Moves","text":"<ol> <li> <p>Basic Step: The foundational step in Bachata involves a side-to-side motion. Typically, it consists of four beats: step to the side, together, step to the other side, and a tap or slight hip movement on the fourth beat.</p> </li> <li> <p>Side to Side Step: A variation of the basic step, where dancers move to the left and right in a smooth motion.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#turns-and-spins","title":"Turns and Spins","text":"<ol> <li> <p>Right Turn: The lead guides the follow into a right turn on the fourth beat, allowing for a smooth rotation.</p> </li> <li> <p>Left Turn: Similarly, the follow can be led to perform a left turn, creating dynamic movement in the dance.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#footwork-patterns","title":"Footwork Patterns","text":"<ol> <li> <p>Back and Front Step: Dancers step backward or forward, incorporating the basic rhythm and tapping on the fourth beat.</p> </li> <li> <p>Cross-Body Lead: The lead allows the follow to step across their body, facilitating a change in positions.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#partner-holds","title":"Partner Holds","text":"<ol> <li> <p>Open Hold: A loose grip where partners are slightly apart, allowing for turns and arm extensions.</p> </li> <li> <p>Closed Hold: Partners hold each other closely to enable intimate movements and rotations.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#variations-and-styling","title":"Variations and Styling","text":"<ol> <li> <p>Body Roll: A smooth wave-like motion of the body, often used to add style during certain steps.</p> </li> <li> <p>Hip Movement: Emphasizing hip action during the step or tap, which is characteristic of Bachata.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#advanced-moves","title":"Advanced Moves","text":"<ol> <li> <p>Dips: A dramatic move in which one partner dips the other, adding flair to the dance.</p> </li> <li> <p>Footwork Variations (e.g., Bachata Steps): Different footwork patterns that create variation, such as quick steps or turns integrated into basic movements.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#complex-combinations","title":"Complex Combinations","text":"<ol> <li> <p>Bachata Azul (or Chicos and Chicas): A playful move where partners alternate steps with added flair, like spins or turns.</p> </li> <li> <p>Foot Tap: A stylish finish to sequences, where one partner taps their foot while presenting their hips.</p> </li> </ol>","tags":["bachata","dancing"]},{"location":"978/index.html#conclusion","title":"Conclusion","text":"<p>These moves form the basic vocabulary of Bachata dancing. Each can be mixed, matched, and stylized according to the dancer\u2019s preferences and the context of the dance. Practicing these moves can enhance confidence and expression on the dance floor, making Bachata a vibrant and enjoyable dance style.</p>","tags":["bachata","dancing"]},{"location":"979/index.html","title":"Jive (jive)","text":"<p>Jive is a lively and energetic partner dance that originated from swing dances like the Jitterbug and Lindy Hop. It\u2019s characterized by its fast pace, kicks, flicks, and often bouncy rhythm, commonly danced to rock and roll, swing, or jump blues music.</p>","tags":["jive","dancing"]},{"location":"980/index.html","title":"Studio: Minneapolis salsa and bachata (msbd)","text":"<p>https://minneapolissalsabachatadance.com/</p>","tags":["studio","dancing"]},{"location":"981/index.html","title":"Place: St Paul (stpaul)","text":"<p>Part of the Twin Cites.</p>","tags":["minneosta","twincites","stpaul"]},{"location":"982/index.html","title":"Place: Twin Cities (twincities)","text":"<p>The Twin Cities refers to the metropolitan area consisting of Minneapolis and Saint Paul, the two largest cities in the state of Minnesota, USA. This term is commonly used to describe the combined cultural, economic, and social landscape of these cities, which are located adjacent to each other and are separated by the Mississippi River.</p>","tags":["stpaul","minneapolis","twincities","minnesota"]},{"location":"982/index.html#key-characteristics-of-the-twin-cities","title":"Key Characteristics of the Twin Cities","text":"<ol> <li>Geography:</li> </ol> <ul> <li>Minneapolis is located to the west of the Mississippi River, while Saint Paul is on the east side. The cities are approximately 10 miles apart and are connected by various bridges and transportation routes.</li> </ul> <ol> <li>Cultural Hub:</li> </ol> <ul> <li>The Twin Cities are known for their vibrant arts and cultural scene, including theaters, music venues, museums, and festivals. Both cities host a variety of cultural events and activities that reflect their rich history and diversity.</li> </ul> <ol> <li>Economic Center:</li> </ol> <ul> <li>The metropolitan area is a significant economic hub in the Midwest, home to numerous Fortune 500 companies and a strong workforce. Industries such as healthcare, finance, manufacturing, and technology thrive here.</li> </ul> <ol> <li>Education:</li> </ol> <ul> <li>The Twin Cities are home to several higher education institutions, including the University of Minnesota, which is one of the largest public universities in the country, as well as numerous private colleges and universities.</li> </ul> <ol> <li>Outdoor Activities:</li> </ol> <ul> <li>With numerous parks, lakes, and trails, the Twin Cities offer ample opportunities for outdoor recreation year-round. The area is known for its beautiful parks system and proximity to nature.</li> </ul> <ol> <li>Sports:</li> </ol> <ul> <li>The Twin Cities are home to several professional sports teams, including the Minnesota Vikings (NFL), Minnesota Twins (MLB), Minnesota Timberwolves (NBA), and Minnesota Wild (NHL).</li> </ul> <ol> <li>Diverse Communities:    - Both cities boast a diverse population with a mix of cultural backgrounds, contributing to a rich tapestry of food, art, and traditions.</li> </ol>","tags":["stpaul","minneapolis","twincities","minnesota"]},{"location":"982/index.html#conclusion","title":"Conclusion","text":"<p>The Twin Cities represent a unique combination of urban life, culture, and community, making them a vibrant place to live, work, and explore. Their proximity and shared resources contribute to a strong sense of identity and connection between Minneapolis and Saint Paul.</p>","tags":["stpaul","minneapolis","twincities","minnesota"]},{"location":"983/index.html","title":"Place: Boil seafood Restaurant","text":"<p>Seafood restaurant in St Cloud.</p> <p>Address is:</p> <pre><code>Boil Seafood Restraunt\n801 W St Germain St,\nSt Cloud, MN 56301\n</code></pre>","tags":["place","stcloud"]},{"location":"984/index.html","title":"Place: St Cloud (stcloud)","text":"","tags":["place","stcloud"]},{"location":"985/index.html","title":"Bake: White sourdough batard with purple Barley pearls","text":"<p>An experimental high hydration sourdough bread with purple barley pearls. Only 77% hydration but much high due to addition water from the parley pearls.</p> <p>37% humidity and 61f.</p> <p></p>","tags":["bake","baking"]},{"location":"985/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 450g 100% King Arthur Purple Praire Barley pearls 100g 20% Purple Barley Water 350g 77.0% rye starter 50g 10% 100% hydration, fed Salt 5g 1.0% <p>Total weight is approximately 965g.</p>","tags":["bake","baking"]},{"location":"985/index.html#time-log","title":"Time log","text":"<ul> <li>2025-03-24 08:30 Fed starter</li> <li>2025-03-24 12:26 Autolyse</li> <li>2025-03-24 13:21 Mixed ingredient together</li> <li>2025-03-25 20:00 Shaped</li> <li>2025-03-24 22:00 Placed in fridge</li> <li>2025-03-25 10:13 Baked at 500f for 21m and 15m at 450f with lid off. Used the trick with the cast iron frying pan. Used gas oven.</li> </ul>","tags":["bake","baking"]},{"location":"986/index.html","title":"Company: Timeless Seeds","text":"","tags":["company","baking"]},{"location":"987/index.html","title":"Ingredient: Semi-Pearled Purple Prairie Barley","text":"<p>Produced by Timeless Seeds and sold on amazon.</p>","tags":["ingredient","baking"]},{"location":"988/index.html","title":"Event: Two Rivers 10 Mile 2025","text":"<p>Ran a 10 mile at Two Rivers Wisconsin on 2025-03-30.</p> <p>Ran a 1:21:17.3 time.</p> <p>Stopped an ate the following places:</p> <ul> <li>El Srape at Green Bay</li> <li>LoLo at Hudson</li> </ul>","tags":["event","running","wisconsin"]},{"location":"988/index.html#see-also","title":"See also","text":"","tags":["event","running","wisconsin"]},{"location":"989/index.html","title":"Activity: Hiking (hiking)","text":"","tags":["activity","hiking"]},{"location":"99/index.html","title":"Fedora workstation setup","text":"<p>Installed fedora workstation. This comes with gnome using wayland.</p>","tags":["fedora","arch","flutter","linux"]},{"location":"99/index.html#i3-gaps-exploration","title":"i3 gaps exploration","text":"<p>Ran the following to install i3 <code>sudo dnf install --allowerasing i3-gaps</code></p> <p>This installs the following:</p> <pre><code>  dex-autostart-0.9.0-7.fc38.noarch                    dmenu-5.2-2.fc38.x86_64                              i3-4.22-4.fc38.x86_64\n  i3-config-4.22-4.fc38.noarch                         i3lock-2.14.1-3.fc38.x86_64                          i3status-2.14-4.fc38.x86_64\n  i3status-config-2.14-4.fc38.noarch                   libappindicator-gtk3-12.10.1-1.fc38.x86_64           libconfuse-3.3-8.fc38.x86_64\n  libdbusmenu-16.04.0-21.fc38.x86_64                   libdbusmenu-gtk3-16.04.0-21.fc38.x86_64              libptytty-2.0-5.fc38.x86_64\n  network-manager-applet-1.30.0-3.fc38.x86_64          perl-AnyEvent-7.17-14.fc38.x86_64                    perl-AnyEvent-I3-0.17-19.fc38.noarch\n  perl-Filter-2:1.64-2.fc38.x86_64                     perl-Guard-1.023-26.fc38.x86_64                      perl-JSON-XS-1:4.03-9.fc38.x86_64\n  perl-Sys-Syslog-0.36-491.fc38.x86_64                 perl-Task-Weaken-1.06-16.fc38.noarch                 perl-Time-HiRes-4:1.9770-490.fc38.x86_64\n  perl-Types-Serialiser-1.01-8.fc38.noarch             perl-Unicode-Normalize-1.31-490.fc38.x86_64          perl-common-sense-3.7.5-11.fc38.x86_64\n  perl-encoding-4:3.00-493.fc38.x86_64                 perl-open-1.13-495.fc38.noarch                       rxvt-unicode-9.31-2.fc38.x86_64\n  xcb-util-cursor-0.1.4-2.fc38.x86_64                  xcb-util-xrm-1.3-11.fc38.x86_64                      xorg-x11-fonts-misc-7.5-35.fc38.noarch\n</code></pre> <p>Ran the following to install i3 <code>sudo dnf install --allowerasing feh thunar dunst i3-blocks rofi arandr</code></p>","tags":["fedora","arch","flutter","linux"]},{"location":"99/index.html#sway-exploration","title":"sway exploration","text":"<p><code>sway</code> is a drop in replacemnt for i3-gaps but on wayland. This uses some different utilities than what is found with</p>","tags":["fedora","arch","flutter","linux"]},{"location":"99/index.html#arch-setup","title":"Arch setup","text":"<p>Packages install on my arch system</p> <ul> <li>rofi (dmenu replacement)</li> </ul> <p>EndeavourOS repo</p>","tags":["fedora","arch","flutter","linux"]},{"location":"99/index.html#flutter-experiment","title":"Flutter Experiment","text":"<p>This needs to be somewhere in your dotfiles</p> <pre><code>export ANDROID_SDK_ROOT=\"$HOME/.local/share/android\"\nPATH=\"$HOME/.local/share/flutter/bin:$PATH\"\nPATH=\"$ANDROID_SDK_ROOT/cmdline-tools/bin:$PATH\"\n</code></pre> <pre><code>sudo dnf install clang cmake ninja-build gtk3-devel\ncurl -fsSL -O https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.7.12-stable.tar.xz\ntar xf flutter_linux_3.7.12-stable.tar.xz\nmv flutter \"$HOME/.local/share/flutter\"\nflutter config --no-analytics\nflutter precache\ncurl -fsSL -O https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip\nunzip commandlinetools-linux-9477386_latest.zip\nmkdir -p \"$HOME/.local/share/android\"\nmv cmdline-tools \"$HOME/.local/share/android/cmdline-tools\"\nmkdir \"$HOME/.local/share/cmdline-tools/latest\"\nflutter config --android-studio-dir=/opt/android-studio\ndart --disable-analytics sdkmanager \"platform-tools\" \"platforms;android-33\" sdkmanager \"system-images;android-30;default;x86_64\"\nsdkmanager \"platform-tools\"\nsdkmanager \"build-tools;27.0.3\"\nsdkmanager \"platforms;android-32\"\nsdkmanager emulator\n</code></pre>","tags":["fedora","arch","flutter","linux"]},{"location":"990/index.html","title":"Places to go hiking in the twin cities","text":"<p>Places to go hiking or trail running in the Twin Cities Minnesota.</p> <ul> <li>Theodore Worth</li> <li>Minnesota River valley - Good start at the old cedar bridge trailhead</li> <li>Elm Creek</li> <li>Lebanon Hills regional park</li> <li>battle creek</li> </ul>","tags":["twincities","minneapolis","minnesota"]},{"location":"991/index.html","title":"Activity: Trail running (trail-running)","text":"","tags":["activity","trail-running","running"]},{"location":"993/index.html","title":"Bake: Potluck pretzel bites","text":"<p>An experiment to figure out something that works better for a large group. This would be the first attempt at making pretzel bites. I am using https://www.pantrymama.com/sourdough-discard-pretzel-bites/ as a rough guideline but am modifying it a bit. I have done something similar in the past making pretzels.</p> <p>Turned out well. Maybe a bit salty but I suppose they are pretzels.</p> <p>Roughly 65f inside</p> <p></p>","tags":["bake","baking","sourdough"]},{"location":"993/index.html#ingredients","title":"Ingredients","text":"Ingredient Amount Bakers Percentage Comment Bread flour 475g 100.0% Turkey red 27g 100.0% I ran out of bread flour Water 300g 60.00% rye starter 125g 20.00% 100% hydration, fed Salt 10g 02.00% <p>Total weight is approximately 865g.</p>","tags":["bake","baking","sourdough"]},{"location":"993/index.html#time-log","title":"Time log","text":"<ul> <li>2025-04-09 08:45 Mixed starter</li> <li>2025-04-09 12:24 Autolyse flour and water</li> <li>2025-04-09 13:50 Mixed the rest of the ingredients</li> <li>2025-04-09 23:00 Placed in the fridge</li> <li>2025-04-10 13:29 Baked at 400f. Took like 30 minutes of work to shape, 20s boil, and egg wash. Baked for 22m. 21m is perfect for 30g-35g balls.</li> </ul>","tags":["bake","baking","sourdough"]},{"location":"994/index.html","title":"Activity: Pickleball (pickleball)","text":"","tags":["activity","sport"]},{"location":"995/index.html","title":"Rust based static site generator Zola","text":"<p>I ran into the use of a new static site generator that was based on rust and inspired by Hugo and golang templates. Uses Tera as a template engine which is something that I haven\u2019t heard of before.</p>","tags":["programming","rust","ssg"]},{"location":"996/index.html","title":"Template engine Tera","text":"<p>A rust based template engine that I first ran into when learning about Zola.</p>","tags":["ssg","rust","ssg"]},{"location":"997/index.html","title":"LLM model comparison for use with mods (2025-04-17)","text":"<p>Available models may be found in the config template on GitHub.</p> <ul> <li>OpenAI pricing: see OpenAI pricing</li> <li>OpenAI models overview: see OpenAI models</li> <li>GPT-5 model docs: see OpenAI GPT-5</li> <li>Anthropic pricing: see Anthropic pricing</li> <li>Anthropic models overview: see Anthropic models</li> </ul>","tags":["llm","ai"]},{"location":"997/index.html#comparison","title":"Comparison","text":"<p>Note: Prices are per 1M tokens. For GPT-5 and the latest Claude models, check the official pricing pages above for current rates.</p> <p>Here\u2019s the normalized table combining both pricing structures:</p> Model Base Input Output OpenAI Models gpt-5 $1.25 / MTok $10.00 / MTok gpt-5-mini $0.25 / MTok $02.00 / MTok gpt-5-nano $0.05 / MTok $00.40 / MTok Claude Models Claude Sonnet 4.5 $3.00 / MTok $15.00 / MTok Claude Haiku 4.5 $1.00 / MTok $05.00 / MTok","tags":["llm","ai"]},{"location":"997/index.html#latest-models-to-consider","title":"Latest models to consider","text":"<p>OpenAI</p> <ul> <li>gpt-5 - see OpenAI GPT-5 and OpenAI models for capabilities and limits.</li> <li>gpt-5-mini - lower cost and latency option. See OpenAI models.</li> </ul> <p>Anthropic</p> <ul> <li>Claude Sonnet 4.5 - general purpose. See Anthropic models.</li> <li>Claude Opus 4.1 - top capability tier. See Anthropic models.</li> <li>Claude Haiku 3.5 - fast and low cost. See Anthropic models.</li> </ul>","tags":["llm","ai"]},{"location":"998/index.html","title":"Place: Up Coffee","text":"<p>A coffee shop in North East Minneapolis</p>","tags":["coffee","msptech","coworking"]},{"location":"998/index.html#notes-considerations","title":"Notes / considerations","text":"<ul> <li>easy parking</li> <li>slow internet</li> <li>large table for coworking</li> </ul>","tags":["coffee","msptech","coworking"]},{"location":"999/index.html","title":"Guitar frequency spectrum","text":"<p>Frequency spectrum for guitars</p>","tags":["music","guitar"]},{"location":"999/index.html#80-hz","title":"&gt; 80 Hz","text":"<p>Low E string is typically 82 Hz in standard tuning.</p>","tags":["music","guitar"]},{"location":"999/index.html#guitar-frequency-spectrum-cheat-sheet","title":"Guitar Frequency Spectrum Cheat Sheet","text":"String Note Open String Frequency (Hz) Frequency Range (Fundamental + Harmonics) 6th (Low E) E2 ~82.41 Hz ~82 Hz fundamental, harmonics at multiples (164, 246, 329 Hz, etc.) 5th A2 ~110.00 Hz ~110 Hz fundamental, harmonics at 220, 330, 440 Hz, etc. 4th D3 ~146.83 Hz ~147 Hz fundamental, harmonics at 293, 440, 587 Hz, etc. 3rd G3 ~196.00 Hz ~196 Hz fundamental, harmonics at 392, 588, 784 Hz, etc. 2nd B3 ~246.94 Hz ~247 Hz fundamental, harmonics at 494, 740, 987 Hz, etc. 1st (High E) E4 ~329.63 Hz ~330 Hz fundamental, harmonics at 659, 988, 1319 Hz, etc.","tags":["music","guitar"]},{"location":"999/index.html#notes","title":"Notes:","text":"<ul> <li>Fundamental Frequency: The lowest frequency produced by each open string.</li> <li>Harmonics (Overtones): Multiples of the fundamental frequency, contributing to the guitar\u2019s tonal character.</li> <li>Playing Higher Frets: Each fret increases pitch by a semitone; frequencies rise exponentially by the 12th root of 2 (~1.0595).</li> <li>Frequency Range: The guitar\u2019s overall playable frequency range spans roughly from 82 Hz (low E open string) to about 1.3 kHz (high E note at the 24th fret) and beyond, especially through harmonics and overtones.</li> </ul>","tags":["music","guitar"]},{"location":"999/index.html#quick-reference-frequencies-for-common-notes-on-the-low-e-string","title":"Quick Reference Frequencies for Common Notes on the Low E String","text":"Fret Note Frequency (Hz) 0 E2 82.41 1 F2 87.31 2 F#2/Gb2 92.50 3 G2 98.00 4 G#2/Ab2 103.83 5 A2 110.00 7 B2 123.47 9 C#3/Db3 138.59 12 E3 164.81","tags":["music","guitar"]},{"location":"999/index.html#additional-tips","title":"Additional Tips:","text":"<ul> <li>The fundamental frequency corresponds roughly to the pitch you hear.</li> <li>Body resonance and pickups (on electric guitars) add complexity to the frequency spectrum.</li> <li>Electric guitars often have stronger harmonics in midrange frequencies (~400 Hz to 2 kHz).</li> <li>Acoustic guitars\u2019 frequency response also includes prominent lower mids (100-300 Hz) and body resonances (around 100-200 Hz).</li> </ul> <p>Prompt: Could create a cheat sheet for the frequency spectrum for a guitar for me</p> <p>Assistant: Certainly! Here\u2019s a concise cheat sheet for the frequency spectrum of a standard 6-string guitar (tuned EADGBE):</p>","tags":["music","guitar"]},{"location":"999/index.html#guitar-frequency-spectrum-cheat-sheet_1","title":"Guitar Frequency Spectrum Cheat Sheet","text":"String Note Open String Frequency (Hz) Frequency Range (Fundamental + Harmonics) 6th (Low E) E2 ~82.41 Hz ~82 Hz fundamental, harmonics at multiples (164, 246, 329 Hz, etc.) 5th A2 ~110.00 Hz ~110 Hz fundamental, harmonics at 220, 330, 440 Hz, etc. 4th D3 ~146.83 Hz ~147 Hz fundamental, harmonics at 293, 440, 587 Hz, etc. 3rd G3 ~196.00 Hz ~196 Hz fundamental, harmonics at 392, 588, 784 Hz, etc. 2nd B3 ~246.94 Hz ~247 Hz fundamental, harmonics at 494, 740, 987 Hz, etc. 1st (High E) E4 ~329.63 Hz ~330 Hz fundamental, harmonics at 659, 988, 1319 Hz, etc.","tags":["music","guitar"]},{"location":"999/index.html#notes_1","title":"Notes:","text":"<ul> <li>Fundamental Frequency: The lowest frequency produced by each open string.</li> <li>Harmonics (Overtones): Multiples of the fundamental frequency, contributing to the guitar\u2019s tonal character.</li> <li>Playing Higher Frets: Each fret increases pitch by a semitone; frequencies rise exponentially by the 12th root of 2 (~1.0595).</li> <li>Frequency Range: The guitar\u2019s overall playable frequency range spans roughly from 82 Hz (low E open string) to about 1.3 kHz (high E note at the 24th fret) and beyond, especially through harmonics and overtones.</li> </ul>","tags":["music","guitar"]},{"location":"999/index.html#quick-reference-frequencies-for-common-notes-on-the-low-e-string_1","title":"Quick Reference Frequencies for Common Notes on the Low E String","text":"Fret Note Frequency (Hz) 0 E2 82.41 1 F2 87.31 2 F#2/Gb2 92.50 3 G2 98.00 4 G#2/Ab2 103.83 5 A2 110.00 7 B2 123.47 9 C#3/Db3 138.59 12 E3 164.81","tags":["music","guitar"]},{"location":"999/index.html#additional-tips_1","title":"Additional Tips:","text":"<ul> <li>The fundamental frequency corresponds roughly to the pitch you hear.</li> <li>Body resonance and pickups (on electric guitars) add complexity to the frequency spectrum.</li> <li>Electric guitars often have stronger harmonics in midrange frequencies (~400 Hz to 2 kHz).</li> <li>Acoustic guitars\u2019 frequency response also includes prominent lower mids (100-300 Hz) and body resonances (around 100-200 Hz).</li> </ul>","tags":["music","guitar"]},{"location":"999/index.html#guitar-tone-descriptors-and-their-frequency-spectrum-cheat-sheet","title":"Guitar Tone Descriptors and Their Frequency Spectrum Cheat Sheet","text":"Descriptor Frequency Range (Hz) Description / Effect Notes Sub Bass 40 \u2013 80 Hz Very low rumble, body and fullness Adds power and warmth to the low E string Bass / Boominess 80 \u2013 200 Hz Body, warmth, roundness; bad if overdone \u2192 \u201cmuddy\u201d or \u201cboomy\u201d Too much \u2192 \u201cboxy\u201d or \u201cmuddy\u201d sound Boxy 200 \u2013 400 Hz Nasal, honky, \u201cboxy\u201d tone Cutting here often clears muddiness Lower Midrange 250 \u2013 600 Hz Warmth, fullness, body Important for thickening sound Nasal 400 \u2013 800 Hz Honky, thin, or \u201cnasal\u201d character Boosting \u2192 \u201cpinched\u201d or \u201chonky,\u201d cutting \u2192 clarity Presence / Definition 1 kHz \u2013 3 kHz Clarity, attack, pick definition, \u201csnap\u201d Most important region for guitar presence Clarity and Attack 2 kHz \u2013 5 kHz Crispness, pick attack, articulation Boosting adds clarity and \u201cstring noise\u201d Sparkle / Brightness 5 kHz \u2013 8 kHz Brilliance, air, sparkle Adds \u201cshine,\u201d too much \u2192 harshness Hardness / Harshness 2 kHz \u2013 6 kHz Can make sound brittle or harsh if boosted too much Be careful with boosting around 3-5 kHz Sibilance / String Noise 6 kHz \u2013 10 kHz Scratchiness, excessive string or pick noise Use gently or selectively Air / Openness 8 kHz \u2013 12 kHz Extreme high-end airiness Adds open, shimmering sound","tags":["music","guitar"]},{"location":"999/index.html#explanation-of-terms-in-context-of-guitar-tone","title":"Explanation of Terms in Context of Guitar Tone","text":"<ul> <li>Boxy: Caused by excessive energy around 200\u2013400 Hz, often giving a \u201cclosed-in\u201d or \u201cmuddy\u201d sound like playing inside a box.</li> <li>Nasal: More honky or pinched, linked to 400\u2013800 Hz \u2014 over-boosting can make the guitar sound like a kazoo or trumpet.</li> <li>Presence: Frequencies around 1-3 kHz bring pick attack and definition, making the guitar more \u201cin your face.\u201d</li> <li>Clarity: Higher mids (2-5 kHz) help the string articulation shine through, aiding note separation and detail.</li> <li>Sparkle: Bright, shimmering sounds in 5-8 kHz region \u2014 good for acoustic guitars or clean electric guitar tones.</li> <li>Hardness: When boosts in 2-6 kHz are overdone or the tone is harsh and biting.</li> <li>Air: Very high frequencies (8kHz and above) that contribute to brightness and openness.</li> </ul>","tags":["music","guitar"]},{"location":"999/index.html#eq-tips-based-on-this-cheat-sheet","title":"EQ Tips Based on This Cheat Sheet","text":"<ul> <li>To reduce boxiness, cut around 200\u2013400 Hz.</li> <li>To add warmth or body, slightly boost 100\u2013200 Hz.</li> <li>To reduce nasal character, cut 400\u2013800 Hz.</li> <li>For more presence and attack, boost 1\u20133 kHz gently.</li> <li>For adding sparkle or \u201cshine,\u201d a small boost at 5\u20138 kHz helps.</li> <li>To tame harshness, cut or narrow reduce 3\u20136 kHz.</li> <li>To add airiness, boost 8 kHz+, but with care to avoid hiss.</li> </ul>","tags":["music","guitar"]},{"location":"999/index.html#visual-summary","title":"Visual Summary","text":"<pre><code>40-80 Hz:    Sub Bass (fullness)\n80-200 Hz:   Bass (warmth, boominess)\n200-400 Hz:  Boxy, mud\n400-800 Hz:  Nasal, honky\n1-3 kHz:     Presence, pick definition\n2-5 kHz:     Clarity, attack, possible harshness zone\n5-8 kHz:     Sparkle, brightness\n8-12 kHz:    Air, openness\n</code></pre>","tags":["music","guitar"]},{"location":"dex/index.html","title":"Index","text":""},{"location":"dex/index.html#indexes","title":"Indexes","text":"<p>These indexes are automatically updated when new content is created or old content is updated.</p> <ul> <li>Latest additions and updates</li> <li>Tab-delimited by ID</li> <li>Baking</li> <li>Homelab</li> </ul>"},{"location":"dex/baking.html","title":"Baking","text":"<ul> <li>2025-10-31 Bake: Halloween Sourdough Loaf</li> <li>2025-07-25 Bake: Pearled Barley Sourdough Loaf with Lower Hydration</li> <li>2025-07-05 Bake: 4th of July 2025 sourdough bread bowl</li> <li>2025-04-10 Bake: Potluck pretzel bites</li> <li>2025-03-25 Bake: White sourdough batard with purple Barley pearls</li> <li>2025-02-20 Bake: 80/20 sourdough loaf</li> <li>2025-02-11 Bake: 50/50 Sourdough Loaf</li> <li>2025-01-27 Bake: 50/50 Wheat Sourdough Loaf</li> <li>2024-12-15 Bake: More Rye-Based Sourdough Loaf</li> <li>2024-11-03 Bake: Generic weekend sourdough</li> <li>2024-10-29 Bake: large 80/20 sourdough bowl</li> <li>2024-10-23 Bake: Whole wheat 50/50 sourdough batard</li> <li>2024-08-30 Bake: Labor day 2024 bread bowl</li> <li>2024-08-25 Bake: Simple 50/50 sourdough Batard</li> <li>2024-08-04 Bake: Simple half and half focaccia</li> <li>2024-07-28 Bake: Simple whole wheat focaccia</li> <li>2024-07-04 Bake: Fourth of July focaccia</li> <li>2024-06-30 Bake: Fourth of July Pizza dough</li> <li>2024-06-29 Bake: Experimental whole wheat focaccia</li> <li>2024-06-14 Bake: Fathers Day Weekend focaccia 2024</li> <li>2024-06-10 Bake: Mid week Focaccia sourdough</li> <li>2024-05-23 Bake: Memorial Day Weekend focaccia 2024</li> <li>2024-05-19 Basic sourdough batard</li> <li>2024-04-14 Sourdough batard with purple prairie barley</li> <li>2024-02-02 Bake: Sourdough bread batard February 02 2024</li> <li>2024-01-19 Sourdough bread batard January 19 2024</li> <li>2024-01-16 White sourdough batard</li> <li>2024-01-10 Sourdough batard</li> <li>2023-12-30 Sourdough batard</li> <li>2023-12-23 Christmas bread bowl 2023</li> <li>2023-12-01 Uzbek Lepyoshki take 2</li> <li>2023-12-01 Uzbek Lepyoshki experiment</li> <li>2023-11-26 Guesswork Sourdough bread</li> <li>2023-11-24 Thanksgiving bread bowl 2022</li> <li>2023-09-16 Sourdough rye and barley pancakes</li> <li>2023-09-06 Sourdough pizza dough batch request</li> <li>2023-09-01 Labor day weekend bread bowl</li> <li>2023-08-25 Pizza night at the cabin pizza dough</li> <li>2023-08-18 Sourdough rye and barley pita bread</li> <li>2023-08-06 Sourdough somewhat whole wheat pizza for the ooni</li> <li>2023-08-02 Whole wheat tortilla recipe</li> <li>2023-07-26 First bigga sourdough pizza batch for the Ooni</li> <li>2023-07-22 Bigga sourdough pizza dough Saturday July 22 2023</li> <li>2023-06-30 July fourth weekend 2023 sourdough pizza</li> <li>2023-06-30 July fourth weekend 2023 sourdough bread bowl</li> <li>2023-06-23 Large sourdough pizza batch for BYOT pizza event</li> <li>2023-06-16 Father\u2019s day whole wheat sourdough batard</li> <li>2023-05-26 Memorial day sourdough bread bowl</li> <li>2023-05-08 Whole wheat sourdough loaf</li> <li>2023-04-20 Thu Apr 20 2023 sourdough pizza</li> <li>2023-04-18 Sourdough Pizza experiment</li> <li>2023-04-16 Experimental whole wheat pizza sourdough small batch</li> <li>2023-03-31 Experimental rye and barley pullman loaf</li> <li>2023-01-01 Einkorn sourdough bread bowl</li> <li>2022-11-24 Sourdough pizza</li> </ul>"},{"location":"dex/changes.html","title":"Changes","text":"<ul> <li>2025-10-31 19:42:02Z Bake: Halloween Sourdough Loaf</li> <li>2025-10-31 19:41:48Z Bake: 50/50 Wheat Sourdough Loaf</li> <li>2025-10-31 19:31:57Z Overview: Baking (baking)</li> <li>2025-10-31 19:29:04Z Bake: Fourth of July Pizza dough</li> <li>2025-10-31 19:25:03Z Bake: Mid week Focaccia sourdough</li> <li>2025-10-31 19:24:50Z Bake: Fathers Day Weekend focaccia 2024</li> <li>2025-10-31 19:24:36Z Bake: Experimental whole wheat focaccia</li> <li>2025-10-31 19:24:20Z Bake: Sourdough bread batard February 02 2024</li> <li>2025-10-31 19:23:21Z Bake: 50/50 Sourdough Loaf</li> <li>2025-10-31 19:23:07Z Bake: Fourth of July focaccia</li> <li>2025-10-31 19:23:02Z Bake: Labor day 2024 bread bowl</li> <li>2025-10-31 19:22:54Z Bake: large 80/20 sourdough bowl</li> <li>2025-10-31 19:22:32Z Bake: Simple half and half focaccia</li> <li>2025-10-31 19:21:56Z Bake: Simple 50/50 sourdough Batard</li> <li>2025-10-31 19:21:50Z Bake: More Rye-Based Sourdough Loaf</li> <li>2025-10-31 19:21:39Z Bake: Whole wheat 50/50 sourdough batard</li> <li>2025-10-31 19:21:29Z Bake: 4th of July 2025 sourdough bread bowl</li> <li>2025-10-31 19:20:54Z Bake: Generic weekend sourdough ~batard~ focaccia</li> <li>2025-10-31 19:20:41Z Bake: Pearled Barley Sourdough Loaf with Lower Hydration</li> <li>2025-10-31 19:17:41Z Categorization of numbers</li> <li>2025-10-30 17:14:40Z LLM model comparison for use with mods (2025-04-17)</li> <li>2025-10-30 14:57:23Z Project: Current Homelab (homelab)</li> <li>2025-10-29 15:58:55Z PHP setup for Neovim</li> <li>2025-10-25 16:45:28Z Common network ranges used in private networks</li> <li>2025-10-25 16:44:48Z Home Assistant smart home (home-assistant)</li> <li>2025-10-25 16:44:45Z Home assistant research</li> <li>2025-10-24 23:04:35Z </li> <li>2025-10-24 23:04:31Z Hardware: Beelink SEi 9</li> <li>2025-10-24 23:04:28Z Current Homelab topology</li> <li>2025-10-23 15:40:10Z Private IPv4 ranges</li> <li>2025-10-21 21:22:28Z iMessage public key</li> <li>2025-10-17 21:08:27Z Article: Number 1 use case for GPT according to Harvard</li> <li>2025-10-16 01:18:42Z Salsa (salsa)</li> <li>2025-10-11 17:01:09Z Bundling and compiling typescript files</li> <li>2025-10-11 01:29:12Z Hardware: My hands</li> <li>2025-10-10 14:18:52Z App: Tiling window management on macOSX with Yabai</li> <li>2025-10-07 21:40:57Z Modern jive circle</li> <li>2025-10-07 21:32:40Z Modern jive dance moves</li> <li>2025-10-06 15:14:07Z Migrating Virtualbox VM to Proxmox</li> <li>2025-10-06 15:07:35Z My history of public IP addresses</li> <li>2025-10-05 21:05:57Z Place: Williston Fitness Center</li> <li>2025-10-05 21:05:52Z Event: Twin Cities Marathon 2025</li> <li>2025-10-05 21:04:23Z Project: MCP Fileystem (filesystem-mcp-server)</li> <li>2025-10-03 19:58:47Z Place: Evergreen park</li> <li>2025-10-03 18:42:43Z Research: search engines</li> <li>2025-10-03 18:42:38Z Open-Source search engine: Meilisearch</li> <li>2025-10-01 20:11:48Z Automating Keycloak setup with Terraform</li> <li>2025-10-01 20:11:44Z Software: Pocket</li> <li>2025-10-01 20:11:39Z Software: <code>Terraform</code> (terraform)</li> <li>2025-10-01 17:06:21Z Software: Keycloak (keycloak)</li> <li>2025-09-29 16:32:42Z Coffee shops in Minneapolis/St Paul for large coworking groups</li> <li>2025-09-25 14:27:35Z Patch: Add logging with Grafana Loki - 2025-09-14</li> <li>2025-09-24 15:42:39Z Place: Gigi\u2019s cafe</li> <li>2025-09-24 15:38:48Z Place: Misfit coffee</li> <li>2025-09-24 15:35:44Z Place: Spyhouse Coffee Roasters - NE Minneapolis</li> <li>2025-09-24 15:34:07Z Place: Up Coffee</li> <li>2025-09-21 22:45:30Z Patch: Add Home Assistant - homelab</li> <li>2025-09-15 17:21:46Z Golang development loop with multi repos</li> <li>2025-09-14 23:13:06Z MCP servers (mcp)</li> <li>2025-09-14 22:51:20Z Github MCP setup</li> <li>2025-09-13 20:57:50Z Patch: serving password protected static websites on my homelab</li> <li>2025-09-13 20:03:26Z How to work on a multirepo setup for golang projects</li> <li>2025-09-11 17:23:57Z Patch make ed get edit\u2019s zsh completions (temporary hack)</li> <li>2025-09-11 16:58:06Z Golang setup</li> <li>2025-09-08 16:08:39Z Opinionated way to handle logging with golang</li> <li>2025-09-07 16:16:58Z Opinionated way to build cli programs with GO</li> <li>2025-09-07 15:51:53Z Opinionated error handling strategy in Go</li> <li>2025-09-06 15:56:08Z Opinionated config management with golang examples</li> <li>2025-09-03 21:36:21Z Prose linting on neovim with vale</li> <li>2025-09-03 21:20:34Z Neovim intellisense for JSON files</li> <li>2025-09-03 21:02:40Z LSP setup on Neovim</li> <li>2025-08-26 13:46:13Z Dungeons and dragons (dnd)</li> <li>2025-08-24 15:46:25Z [x] Issue: EOL for 25.1 Opnsense</li> <li>2025-08-24 15:45:50Z Hardware: Garmin Forerunner 955</li> <li>2025-08-24 15:45:45Z [ ] Issue: Garmin smartwatch fails to update</li> <li>2025-08-23 16:14:31Z Software: Opnsense (opnsense)</li> <li>2025-08-23 15:46:32Z How to setup email using AWS SES</li> <li>2025-08-23 15:46:27Z Patch: homelab email admin@jlrickert.me</li> <li>2025-08-23 15:16:13Z Service: iCloud (icloud)</li> <li>2025-08-23 15:14:16Z AWS (aws)</li> <li>2025-08-23 14:53:51Z AWS Simple Queue Service (SQS)</li> <li>2025-08-23 14:53:45Z Simple Notification Service (SNS)</li> <li>2025-08-23 14:53:38Z CI/CD on AWS</li> <li>2025-08-23 14:53:28Z API Gateway</li> <li>2025-08-23 14:53:07Z Event monitoring with Amazon CloudWatch</li> <li>2025-08-23 14:53:01Z Amazon EventBridge</li> <li>2025-08-23 14:52:55Z X-Ray debugging tool</li> <li>2025-08-23 14:52:48Z Amazon CodeStar</li> <li>2025-08-23 14:52:43Z Amazon CodeCommit</li> <li>2025-08-23 14:52:37Z Amazon CodeBuild</li> <li>2025-08-23 14:52:30Z Amazon CodeDeploy</li> <li>2025-08-23 14:52:23Z Amazon CodePipeline</li> <li>2025-08-23 14:52:08Z AWS Service CloudFormation</li> <li>2025-08-23 14:51:57Z AWS Cloud Development Kit (CDK)</li> <li>2025-08-23 14:51:48Z AWS CloudWatch</li> <li>2025-08-23 14:51:41Z AWS Elastic Kubernetes Service EKS</li> <li>2025-08-23 14:51:26Z AWS Elastic Container Registry (ECR)</li> <li>2025-08-23 14:51:20Z AWS Cognito</li> <li>2025-08-23 14:51:00Z AWS Developer Associate study guide</li> <li>2025-08-23 14:50:53Z AWS Elastic Block Storage</li> <li>2025-08-23 14:50:45Z AWS AppSync</li> <li>2025-08-23 14:28:19Z Service: CloudFlare (cloudflare)</li> <li>2025-08-22 20:22:32Z Validating AWS SES credentials</li> <li>2025-08-19 20:10:36Z AWS simple email service - SES</li> <li>2025-08-14 21:26:07Z Spin up PostgreSQL cluster on k8s</li> <li>2025-08-14 21:21:14Z Bitnami chart</li> <li>2025-08-14 21:21:10Z Person: Rob Muhlestein</li> <li>2025-08-14 21:21:06Z Streamer: rwxrob</li> <li>2025-08-14 18:49:29Z PostgreSQL server (postgresql)</li> <li>2025-08-13 21:40:40Z Place: Shoreview</li> <li>2025-08-13 21:39:41Z Place: Lions Tap</li> <li>2025-08-13 21:36:36Z Activate Global League</li> <li>2025-08-13 21:34:01Z Place: Little Falls (little-falls)</li> <li>2025-08-13 21:33:19Z Place: Brainerd (brainerd)</li> <li>2025-08-13 21:32:03Z Place: St Paul (stpaul)</li> <li>2025-08-13 20:18:25Z Hennepin County DMV appoints</li> <li>2025-08-11 14:42:46Z Go release strategy</li> <li>2025-08-10 06:03:18Z Software: Task runner <code>task</code> (taskfile)</li> <li>2025-08-10 01:46:51Z Software: Releases with chglog (git-chglog)</li> <li>2025-08-10 01:46:16Z Software: Releases with goreleaser (goreleaser)</li> <li>2025-08-08 15:49:54Z Prompt: \u201cLinkify\u201d KEG notes</li> <li>2025-08-08 14:54:33Z Project: keg (keg)</li> <li>2025-08-05 18:00:37Z Managing disks on MacOS</li> <li>2025-08-05 12:35:49Z Article: Twin Cities dancing event calendar</li> <li>2025-08-05 12:33:22Z AI Vibe coding tools</li> <li>2025-08-05 03:21:42Z Trick: YAML based config management in Golang</li> <li>2025-08-05 02:18:29Z Article: Twin Cities event calendar</li> <li>2025-08-04 14:14:48Z Programming language Go (golang)</li> <li>2025-08-03 00:55:21Z Places to go hiking in the twin cities</li> <li>2025-08-02 22:40:52Z Software: monitoring with Prometheus (prometheus)</li> <li>2025-08-02 22:40:37Z Kubernetes (k8s)</li> <li>2025-08-02 22:31:33Z Section 174 tax code from The Big Beautiful Bill</li> <li>2025-08-02 20:33:40Z Fedora workstation setup</li> <li>2025-08-02 20:12:28Z Project: <code>mods</code> by Charmbracelets</li> <li>2025-08-02 15:54:07Z E2e and Integration testing for go</li> <li>2025-08-02 14:59:36Z GitHub (github)</li> <li>2025-08-02 14:21:51Z Trick: Embedding version information in go binaries</li> <li>2025-08-02 14:20:14Z [ ] Dotfiles Task | create <code>sync-project</code> script</li> <li>2025-08-02 14:19:32Z Software: <code>entr</code></li> <li>2025-08-02 14:17:18Z A quick to making a module in golang</li> <li>2025-08-02 14:14:14Z Programming languae rust (rust)</li> <li>2025-08-02 14:14:09Z Programming language node (node)</li> <li>2025-08-02 14:10:55Z Programming language deno (deno)</li> <li>2025-07-30 15:08:33Z Event: Flash project showoff - tentative summer 2025</li> <li>2025-07-29 15:55:50Z Project ideas</li> <li>2025-07-28 21:38:18Z Patch: Add fzf to ku script</li> <li>2025-07-28 17:24:29Z Bake: White sourdough batard with purple Barley pearls</li> <li>2025-07-28 04:59:40Z Node installation</li> <li>2025-07-28 03:18:58Z Recommend language sever to use for golang development</li> <li>2025-07-26 20:42:26Z Choice of cli framework in go 2025</li> <li>2025-07-26 20:41:28Z Trick with go to embed version info</li> <li>2025-07-26 20:01:39Z Setting up DHCP on OPNSense (2024-11-09)</li> <li>2025-07-26 20:01:31Z Trick: Alt pipelines in bash</li> <li>2025-07-26 20:01:21Z Ubuntu template cloud version 1 for my homelab</li> <li>2025-07-26 19:42:06Z Ubuntu template version 1 for my homelab</li> <li>2025-07-26 19:32:05Z Proxmox cheatsheet</li> <li>2025-07-26 19:30:02Z Networking on MacOSX</li> <li>2025-07-26 17:17:01Z MSP Tech meetup group (msptech)</li> <li>2025-07-26 17:16:51Z Place: Minneapolis (minneapolis)</li> <li>2025-07-26 16:56:29Z Chamber of commerce office for finding what jobs are available</li> <li>2025-07-26 16:38:01Z Largest gaming convention 2d con in Minnesota</li> <li>2025-07-26 15:55:26Z Trick: Enforce interface implementation in GO</li> <li>2025-07-26 15:46:07Z Project: Database to local FS mount</li> <li>2025-07-25 20:35:40Z Software: frizbee fuzzy matcher</li> <li>2025-07-25 18:13:48Z Ingredient: Organic Goods and Gather all purpose flour</li> <li>2025-07-25 18:12:34Z Dutch Oven and Cast Iron Skillet Method for baking bread</li> <li>2025-07-25 17:31:30Z Hardware: Lodge 12 cast iron skillet</li> <li>2025-07-25 17:31:28Z Hardware: Lodge dutch oven</li> <li>2025-07-24 20:18:03Z Sourdough baking (sourdough)</li> <li>2025-07-24 20:01:00Z Automatically rerunning commands with <code>entr</code></li> <li>2025-07-24 18:09:53Z Sourdough batard with purple prairie barley</li> <li>2025-07-24 18:09:26Z Ingredient: King Author all purpose flour</li> <li>2025-07-22 22:26:42Z Cloud init first experience on my homelab</li> <li>2025-07-22 20:51:59Z Example search output for my KEG</li> <li>2025-07-20 17:09:11Z Cloud init (cloud-init)</li> <li>2025-07-20 16:39:55Z Creating an [Ubuntu Server](../670) template my [Homelab](../578)</li> <li>2025-07-20 15:32:40Z Person: Leonard Leo</li> <li>2025-07-20 15:32:37Z The federalist society group</li> <li>2025-07-19 04:11:23Z Person: Trump</li> <li>2025-07-17 14:43:36Z Factorio resources</li> <li>2025-07-17 14:39:50Z LLM frontend research</li> <li>2025-07-17 14:33:24Z Example neovim setups that other people use</li> <li>2025-07-17 14:33:19Z Person: ThePrimeagon</li> <li>2025-07-17 14:33:12Z Person: streamer s9tpepper</li> <li>2025-07-16 18:48:38Z Place: FRGMNT Coffee Eden Prairie</li> <li>2025-07-16 14:48:16Z Modern Jive (modern-jive)</li> <li>2025-07-16 02:57:11Z Diagnostics in neovim</li> <li>2025-07-15 21:16:24Z Formating for neovim</li> <li>2025-07-12 16:30:20Z Package manager UV for python</li> <li>2025-07-12 16:22:39Z Website: temporal.io</li> <li>2025-07-12 16:22:22Z State machine libararies</li> <li>2025-07-12 15:55:28Z Neovim file explorers</li> <li>2025-07-12 15:45:54Z Entity: Chingu (chingu)</li> <li>2025-07-12 15:44:11Z Learning in public</li> <li>2025-07-10 18:55:48Z Installing JavaScript minifier uglify with deno</li> <li>2025-07-10 18:55:37Z Installing CSS compressor csso with deno</li> <li>2025-07-08 20:34:18Z rwxrob\u2019s current hardware sizes for his homelab</li> <li>2025-07-07 17:13:37Z Labor day weekend bread bowl</li> <li>2025-06-28 22:14:47Z Managing disk space on unix</li> <li>2025-06-27 18:19:02Z Hilarious way to copy and paste into a VM</li> <li>2025-06-25 22:33:09Z Place: Blues saloon</li> <li>2025-06-09 04:05:36Z Copy and paste support on remote systems</li> <li>2025-06-09 04:05:10Z Zsh things (zsh)</li> <li>2025-06-09 01:41:29Z Patch: Reconfiguring zsh for my dotfiles</li> <li>2025-06-07 19:21:00Z How to handle conditionals in bash scripting</li> <li>2025-06-07 16:37:25Z My personal Bash style guide</li> <li>2025-06-04 23:22:11Z Patch: Installing proxmox on Beelink SEi 9</li> <li>2025-06-04 23:21:09Z Resources to figure out what protest are happening in Minnesota</li> <li>2025-06-03 21:58:04Z Facebook (facebook)</li> <li>2025-06-03 21:43:34Z Deno shell script example</li> <li>2025-06-03 03:46:29Z How to benchmark zsh</li> <li>2025-06-02 19:25:05Z Using TrueNAS NFS for Proxmox images</li> <li>2025-05-31 18:20:12Z CSS grid attributes and cheatsheet</li> <li>2025-05-30 20:46:32Z Programmatic bash completions</li> <li>2025-05-29 14:01:54Z Article: Really cool terminal web site</li> <li>2025-05-28 18:48:36Z Stateful command tree design architecture</li> <li>2025-05-28 17:30:17Z Software: CLI cheat sheets with <code>navi</code></li> <li>2025-05-28 14:50:49Z I3 like tiling window manager on MacOSX with AeroSpace</li> <li>2025-05-25 00:48:25Z Software: image previewing on CLI with yazi</li> <li>2025-05-24 16:46:01Z Quake style dropdown terminal on MacOSX</li> <li>2025-05-17 15:34:57Z Ansible like text blocks with bash for my dotfiles</li> <li>2025-05-17 15:01:51Z Overview: Ansible (ansible)</li> <li>2025-05-17 15:01:22Z SPEC: encode bash script</li> <li>2025-05-17 15:00:59Z Overview: Bash scripting (bash)</li> <li>2025-05-16 17:12:00Z Project: dotfiles (dotfiles)</li> <li>2025-05-16 17:08:46Z My running event race times</li> <li>2025-05-16 17:07:35Z Activity: Running</li> <li>2025-05-15 16:39:35Z OS Fingerprinting strategies in bash</li> <li>2025-05-15 15:30:54Z Adding dark/light mode toggle to my dotfiles</li> <li>2025-05-15 14:27:03Z Project: Neovim editor</li> <li>2025-05-15 14:26:45Z Project: WezTerm as my terminal of choice (wezterm)</li> <li>2025-05-15 14:25:59Z Project: Zellij (zellij)</li> <li>2025-05-15 14:22:19Z Ceroc dancing</li> <li>2025-05-14 20:06:42Z Terminal color</li> <li>2025-05-13 22:17:47Z Dance move: First Move</li> <li>2025-05-13 21:45:33Z Jive (jive)</li> <li>2025-05-13 21:45:30Z Swing dancing (swing)</li> <li>2025-05-13 21:44:26Z Studio: TC Swing dance studio</li> <li>2025-05-13 20:10:30Z </li> <li>2025-05-13 19:56:16Z Resources for rebuilding my neovim setup</li> <li>2025-05-11 17:12:36Z Event: Minnebar19 2025</li> <li>2025-05-08 22:55:33Z Case of using webp over png</li> <li>2025-05-05 14:36:55Z Quick start on settup lsp for neovim lua hacking</li> <li>2025-05-05 14:36:50Z Mason manager thingy in neovim</li> <li>2025-05-05 14:35:52Z Running neovim in an isolated docker context</li> <li>2025-05-05 14:32:33Z My vim setup</li> <li>2025-05-04 14:25:54Z Package management in neovim with mason</li> <li>2025-05-03 20:16:25Z [x] Homelab Task: OPNSense installation on Beelink EQ12 N1000</li> <li>2025-05-03 16:56:25Z Combat Candies</li> <li>2025-05-03 16:56:17Z Guitar frequency spectrum</li> <li>2025-05-03 16:52:46Z Human hearing frequency ranges and preferences</li> <li>2025-05-01 14:04:44Z Hardware: Gretsch G1617 Synchromatic guitar</li> <li>2025-04-21 21:15:55Z Prompt: Instructions for commenting code</li> <li>2025-04-18 20:56:49Z Prompt: Details of how my KEG is setup</li> <li>2025-04-10 19:01:52Z Bake: Potluck pretzel bites</li> <li>2025-04-10 16:32:11Z Rust based static site generator Zola</li> <li>2025-04-10 16:31:49Z Template engine Tera</li> <li>2025-04-09 19:08:05Z Activity: Pickleball (pickleball)</li> <li>2025-04-09 17:32:48Z Ingredient: Turkey Red wheat flour</li> <li>2025-04-07 14:43:46Z Activity: Trail running (trail-running)</li> <li>2025-04-07 14:43:42Z Event: Wild Duluth 50K 2024</li> <li>2025-04-07 14:43:32Z Time log: Theo trail running with Thirsty Thursdays</li> <li>2025-04-07 14:43:21Z Hardware: Luna Leadville pacer</li> <li>2025-04-07 14:43:06Z Place: Theodore Wirth Parkway</li> <li>2025-04-07 14:42:52Z Thirsty Thursdays Theo Trail Runners</li> <li>2025-04-07 14:38:02Z Activity: Hiking (hiking)</li> <li>2025-03-31 14:52:12Z Event: Two Rivers 10 Mile 2025</li> <li>2025-03-31 14:48:28Z Event: Two rivers 10 mile 2024</li> <li>2025-03-28 14:33:30Z Dance classes in the twin cities</li> <li>2025-03-24 18:44:06Z Company: Timeless Seeds</li> <li>2025-03-24 17:43:00Z Ingredient: Semi-Pearled Purple Prairie Barley</li> <li>2025-03-23 15:50:54Z Place: Boil seafood Restaurant</li> <li>2025-03-23 15:50:19Z Place: St Cloud (stcloud)</li> <li>2025-03-23 00:19:28Z Typical places to go dancing in Twin Cities</li> <li>2025-03-22 17:43:29Z Place: Twin Cities (twincities)</li> <li>2025-03-22 17:37:49Z Bachata (bachata)</li> <li>2025-03-22 17:17:35Z Studio: Minneapolis salsa and bachata (msbd)</li> <li>2025-03-22 16:16:44Z Studio: Onereason dance studio</li> <li>2025-03-22 16:16:13Z Studio: Duende dance studio</li> <li>2025-03-22 16:13:51Z Group: Hazy Rhythms dance</li> <li>2025-03-22 15:57:01Z Lindy hop (lindy)</li> <li>2025-03-22 15:56:15Z East coast swing (ecs)</li> <li>2025-03-17 14:22:24Z App: skhd - a simple hotkey daemon for macOS</li> <li>2025-03-17 14:20:12Z Overview: MacOSX (macosx)</li> <li>2025-03-15 22:18:30Z DNS on OPNsense</li> <li>2025-03-13 20:00:12Z Bake: 54/46 sourdough loaf</li> <li>2025-03-13 14:21:24Z Bake: 80/20 sourdough loaf</li> <li>2025-03-12 20:48:10Z Article: The disaster that is Copilot+ Recall</li> <li>2025-03-04 19:09:09Z Article: Foony architecture post on twitter</li> <li>2025-03-04 19:09:02Z Website: Foony</li> <li>2025-02-28 02:30:47Z Article: UnderCurrent MPLS show list</li> <li>2025-02-22 19:24:48Z Article: Language learning website</li> <li>2025-02-22 19:10:16Z Ingredient: King Arthur\u2019s bread flour 12.7%</li> <li>2025-02-22 17:13:25Z Article: The Wildernet</li> <li>2025-02-20 21:30:12Z Hardware: 12 inch Cast iron pan</li> <li>2025-02-20 21:29:39Z Hardware: Enameled cast iron pot</li> <li>2025-02-19 15:09:56Z Game: Incremental epic hero 2 (ieh2)</li> <li>2025-02-19 05:20:05Z Warrior stat spread for IEH2</li> <li>2025-02-16 21:51:44Z Article: Website that compares different new providers</li> <li>2025-02-16 21:51:36Z Musk rats and DOGE take over</li> <li>2025-02-15 22:57:20Z Managing styles for block theme in WordPress</li> <li>2025-02-08 18:25:27Z My preferred way of handling text width in documents</li> <li>2025-02-08 17:42:47Z Place: Bar Zia</li> <li>2025-02-06 16:12:29Z Programming by composition in PHP</li> <li>2025-02-05 17:34:27Z Kleisli\u2019s in PHP</li> <li>2025-02-05 17:27:46Z Monads in PHP</li> <li>2025-02-05 17:25:41Z Functors in PHP</li> <li>2025-02-05 15:52:41Z Monoids in PHP</li> <li>2025-02-02 00:40:57Z Article: programming language foundations in agda</li> <li>2025-01-31 15:10:47Z Concerts of interest for 2025</li> <li>2025-01-31 15:10:38Z Band: Larkin Poe</li> <li>2025-01-31 03:14:29Z The style of music called Folk</li> <li>2025-01-30 15:34:10Z Band: Nick David &amp; Demitrious Rallis</li> <li>2025-01-30 15:31:29Z Place: Bear Cave Brewing</li> <li>2025-01-30 15:18:45Z Event: Moving out of the ECW office in St Louis Park</li> <li>2025-01-28 15:19:16Z Weekly outing plan</li> <li>2025-01-28 15:19:10Z Place: Palmers</li> <li>2025-01-28 15:17:19Z Local band The TH3</li> <li>2025-01-28 15:17:12Z Bands local to Minneapolis</li> <li>2025-01-28 01:19:49Z Purely instrumental music</li> <li>2025-01-28 01:18:40Z The style of music called Funk</li> <li>2025-01-26 16:37:05Z SPEC: <code>zetq</code></li> <li>2025-01-26 16:36:55Z My current zettelkasten note taking setup</li> <li>2025-01-26 16:36:49Z Keg searching techniques</li> <li>2025-01-26 16:36:41Z Project: Knutjs (knutjs)</li> <li>2025-01-26 16:36:35Z Knut mobile app workflow</li> <li>2025-01-21 18:25:03Z Prompt: Creating git comments</li> <li>2025-01-21 01:20:32Z Place: 321 Club</li> <li>2025-01-21 01:19:28Z Local band The Gentlemen\u2019s Anti-Temperance League</li> <li>2025-01-21 01:16:16Z Place: 612 Brewing</li> <li>2025-01-21 01:09:04Z Local band The Last Revel</li> <li>2025-01-20 16:03:56Z Guitar tone</li> <li>2025-01-12 22:06:41Z Skiing in the Twin Cities</li> <li>2025-01-04 16:49:33Z Places to play pickle ball in the twin cities</li> <li>2025-01-02 15:15:10Z Hardware: Ibanez RG421 Electric Guitar</li> <li>2024-12-28 16:49:32Z Place: Chanhassen Dinner Theater</li> <li>2024-12-27 16:34:17Z Place: Rojo St Louis park</li> <li>2024-12-21 22:10:47Z Place: Halftime sports barbershop</li> <li>2024-12-19 15:46:33Z Prompt: converting tables in word documents to markdown tables</li> <li>2024-12-19 15:45:08Z Article: [Choosing an AI Model]</li> <li>2024-12-19 15:23:04Z Issue: unable to change model of an ongoing <code>mods</code> conversation</li> <li>2024-12-17 19:12:37Z Issue: troubleshoot large holes in sourdough bread</li> <li>2024-12-17 01:55:22Z Hardware: Harrison gas stove</li> <li>2024-12-17 01:53:57Z Deploying a keg on MkDocs</li> <li>2024-12-17 01:11:43Z Steps to host a keg with GitHub pages</li> <li>2024-12-17 00:21:55Z Overview: keg specification</li> <li>2024-12-17 00:09:50Z Autolyse Flour</li> <li>2024-12-10 17:51:47Z Hardware: Think Server 140 (ts140)</li> <li>2024-12-05 15:27:39Z Project: <code>claude</code> stateful command line tree program (claude-cli)</li> <li>2024-12-05 15:27:11Z Issue: LSP may expose sensitive contents</li> <li>2024-12-02 05:35:19Z Research: upgrading to an adjustable desk with a treadmill</li> <li>2024-11-30 21:14:53Z Trick: type safe error handling with error maps</li> <li>2024-11-27 16:07:25Z Trick to prevent page reloading for debugging</li> <li>2024-11-24 19:54:19Z Place: Mac\u2019s Industrial Sports Bar</li> <li>2024-11-24 19:54:11Z Place: Dinky Town</li> <li>2024-11-24 19:52:36Z Place: 12 Cider</li> <li>2024-11-20 21:18:34Z Experimenting with AI context windows on LocalAI and OpenAI</li> <li>2024-11-20 15:17:38Z Skill stack log dumps</li> <li>2024-11-19 22:59:44Z SPEC: homelab multi call binary monolith</li> <li>2024-11-19 21:58:09Z Using environment variables to populate YAML configurations</li> <li>2024-11-17 18:24:55Z EDU: Skill stack beginner boost (skillstack)</li> <li>2024-11-17 17:17:37Z Article: code signing deno applications</li> <li>2024-11-16 20:31:35Z Creating a time machine backup on TrueNAS</li> <li>2024-11-16 19:13:29Z First impressions with localai on my mac</li> <li>2024-11-16 04:35:55Z Software: Local AI (localai)</li> <li>2024-11-15 14:15:45Z Migrating from pnpm to deno</li> <li>2024-11-15 02:25:34Z Article: Security Incident Survey Cheatsheet for Server Administrators</li> <li>2024-11-15 02:24:07Z SPEC: Unix utility convention specification</li> <li>2024-11-14 15:54:58Z Enabling vi mode editing in bash</li> <li>2024-11-14 15:10:19Z How to use docker for NodeJS development</li> <li>2024-11-13 16:27:40Z SPEC: nexi bash script</li> <li>2024-11-12 17:41:33Z Connecting to MariaDB from MacOSX CLI</li> <li>2024-11-12 02:51:54Z Person: het_tanis</li> <li>2024-11-12 02:17:29Z Trump 2024 presidential election ramifications</li> <li>2024-11-11 18:35:28Z Process for create my encode script</li> <li>2024-11-10 04:47:38Z SPEC: dotz package manager</li> <li>2024-11-09 23:00:57Z Vim filter cheatsheet</li> <li>2024-11-09 20:39:41Z Most efficient transpiler see go tool chain</li> <li>2024-11-09 19:56:26Z [x] Homelab Task | setup proxmox</li> <li>2024-11-09 19:35:14Z Tech GODS list</li> <li>2024-11-09 17:55:02Z Task: TrueNas Installation on ts140</li> <li>2024-11-09 16:56:21Z [x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense</li> <li>2024-11-09 16:50:58Z IPv6 Certification</li> <li>2024-11-07 15:16:33Z Article: macOS X Mount NFS Share / Set an NFS Client</li> <li>2024-11-07 15:16:32Z Connecting to Truenas storage volumes with NFS on my MacOS</li> <li>2024-11-07 03:45:33Z Docker compose service cli interactions</li> <li>2024-11-04 14:44:45Z Networking in Ubuntu 24.04</li> <li>2024-11-04 14:08:27Z [x] Homelab Task: Assign IP address to PHP VM\u2019s</li> <li>2024-11-03 18:41:18Z Bake: Generic weekend sourdough</li> <li>2024-11-01 14:15:19Z PHP Trick: react inspired reusable components</li> <li>2024-11-01 03:56:45Z Possibly solution to dynamic autocompletes in oclif</li> <li>2024-10-28 17:23:22Z Hash house harriers (m3h)</li> <li>2024-10-28 16:01:02Z Recipe: Thai inspired chili</li> <li>2024-10-27 16:24:27Z Event: Minnebar 18 details</li> <li>2024-10-25 02:04:55Z Person: cmgriffing the streamer</li> <li>2024-10-24 13:26:50Z Hardware: Kineses Advantage 360</li> <li>2024-10-23 20:39:40Z Bonzai/hashicorp based completions in zsh</li> <li>2024-10-23 20:39:36Z Person: Adrian Cantril</li> <li>2024-10-21 17:46:30Z Embedding data within go binaries</li> <li>2024-10-21 13:51:54Z Air purifiers for home research</li> <li>2024-10-21 13:21:39Z Hardware: Altra lone peak 8</li> <li>2024-10-20 16:58:47Z Article: The perfect loafs best sourdough pancakes</li> <li>2024-10-09 13:55:27Z FreeBSD networking overview</li> <li>2024-10-08 02:02:29Z Types of lighting for a home</li> <li>2024-10-07 01:00:42Z Event: Twin Cities Marathon 2024</li> <li>2024-10-06 21:27:03Z Music equipment concepts</li> <li>2024-10-05 19:25:54Z Hardware: Focusrite Scarlett 2i2</li> <li>2024-10-05 17:09:57Z Project: Personal music studio</li> <li>2024-10-04 19:19:32Z How to install homebrew on a MacOS</li> <li>2024-10-04 19:19:01Z MacOS vs Linux difference</li> <li>2024-10-03 18:13:59Z Issue: Bitbucket markdown rendering is different than GitHub</li> <li>2024-10-03 18:10:13Z Quick start guides to Unix, bash, terminal, etc</li> <li>2024-09-24 14:53:49Z Zeros shoe comparison chart</li> <li>2024-09-24 14:53:37Z Minimal sandal preferences</li> <li>2024-09-24 13:59:36Z Luna sandal comparison</li> <li>2024-09-23 20:53:50Z Hardware: HFS shoes</li> <li>2024-09-23 18:56:19Z Issue: handling nested links in html</li> <li>2024-09-23 14:11:40Z Local MN band Six to Midnight </li> <li>2024-09-23 14:06:55Z Place: Minnesota city Forest Lake</li> <li>2024-09-21 15:20:55Z SQL workflow example with neovim</li> <li>2024-09-21 15:16:58Z Person: Streamer MarekCounts</li> <li>2024-09-19 16:24:29Z Dynamic themes in sveltekit</li> <li>2024-09-19 16:08:41Z CSS naming conventions</li> <li>2024-09-16 20:33:35Z WOW the War within season 1</li> <li>2024-09-16 13:44:12Z The War Within season 1 timeline</li> <li>2024-09-16 03:22:52Z WOW rogue (rogue)</li> <li>2024-09-16 03:22:42Z The war within season 1 rogue comparisons</li> <li>2024-09-15 22:57:19Z The War Within dungeons season 1 dungeons</li> <li>2024-09-14 18:12:30Z Meetup: Code and coffee meetup group (codeandcoffee)</li> <li>2024-09-14 18:12:27Z Event: First code and coffee meetup</li> <li>2024-09-14 17:16:10Z Jevons paradox reason why junior devs will not be replaced</li> <li>2024-09-14 17:15:56Z Place: SK Coffee near Lake monster brewing</li> <li>2024-09-14 17:14:06Z Place: Lake Monster Brewing</li> <li>2024-09-14 16:45:45Z Software: Frappe an open source quickbook like thing</li> <li>2024-09-12 15:16:28Z Hosting platform Heroku (heroku)</li> <li>2024-09-12 12:03:02Z WOW The War Within expansion</li> <li>2024-09-12 12:00:48Z Game: World of Warcraft (WOW)</li> <li>2024-09-12 11:58:56Z WOW expansions and seasons</li> <li>2024-09-09 13:28:20Z [ ] Homelab task: quick password protected https server</li> <li>2024-09-05 14:54:58Z Trick: custom select menus in the browser</li> <li>2024-08-31 02:04:44Z July fourth weekend 2023 sourdough bread bowl</li> <li>2024-08-29 15:34:45Z Trick: pulling in a commit from upstream with git</li> <li>2024-08-29 02:48:55Z The War Within dungeons</li> <li>2024-08-27 18:12:52Z Reverse engineering Wagmi Github CI/CD pipeline</li> <li>2024-08-26 18:17:10Z Perfect T-Bone on portable Weber grill</li> <li>2024-08-26 18:15:17Z Hardware: Portable Weber grill</li> <li>2024-08-26 14:25:27Z Reusable Mariadb SQL scripts on the CLI</li> <li>2024-08-25 19:38:27Z Security: possible PHP vulnerability vector</li> <li>2024-08-25 19:14:48Z Company: Walmart</li> <li>2024-08-25 19:13:48Z Company: Hamilton Beach</li> <li>2024-08-25 19:13:19Z Sourdough batard</li> <li>2024-08-25 13:24:05Z A custom publish function for changeset</li> <li>2024-08-25 04:00:30Z Person: Twitch streamer BlaiseBits</li> <li>2024-08-25 04:00:20Z Trick to display iPad on a windows machine</li> <li>2024-08-24 19:43:02Z Github CLI tips and tricks</li> <li>2024-08-24 19:36:05Z Software: changeset</li> <li>2024-08-24 14:22:59Z Company: Blizzard (blizzard)</li> <li>2024-08-24 14:20:46Z Person: Thor</li> <li>2024-08-24 14:20:42Z Reason why WOW implemented wow tokens</li> <li>2024-08-24 14:15:42Z 3 day head start on WOW may prevent early server overload</li> <li>2024-08-22 03:14:38Z Deploying WordPress on single docker host </li> <li>2024-08-21 14:05:06Z Webdev cookies</li> <li>2024-08-21 14:04:48Z Overview: Website development (webdev)</li> <li>2024-08-21 13:57:58Z Article: Interesting article about obfuscation</li> <li>2024-08-20 17:26:44Z Company: The Stepping Stone Group</li> <li>2024-08-18 15:20:39Z SPEC: Data organization in Knutjs</li> <li>2024-08-18 06:43:01Z Opinionated way to to organize application data</li> <li>2024-08-18 06:07:06Z Modern software configuration management specification Unix systems</li> <li>2024-08-18 02:57:22Z Harrison neighborhood</li> <li>2024-08-18 02:26:17Z SCORE venture capital group</li> <li>2024-08-15 14:10:25Z <code>foreach</code> mutation weirdness in PHP</li> <li>2024-08-13 14:17:37Z Place: Finland group campsite</li> <li>2024-08-12 19:13:25Z CSS properties related to lists</li> <li>2024-08-06 23:55:06Z Place: Cuzzy\u2019s Grill and bar in downtown Minneapolis</li> <li>2024-08-06 23:53:50Z Neovim repositories</li> <li>2024-08-05 19:41:06Z Bake: Simple whole wheat focaccia</li> <li>2024-08-05 15:22:34Z Time log: Homelab</li> <li>2024-08-05 15:21:11Z [x] TS140 Task: Installing upgrades to TS140</li> <li>2024-08-05 15:13:46Z OPNSense for networking</li> <li>2024-08-05 15:01:18Z [ ] Homelab Task: Updating CloudFlare based email forwarding</li> <li>2024-08-05 01:38:11Z Task: Setup OPNsense backups on google drive</li> <li>2024-08-04 22:46:52Z Recommendations for good sleep</li> <li>2024-08-04 17:37:58Z Setting up Digital Ocean DDNS on OPNSense</li> <li>2024-08-03 20:51:06Z Issue: Proxmox inaccessible</li> <li>2024-08-03 20:29:56Z ts140 as a TrueNas server requirements</li> <li>2024-08-03 20:10:40Z Overview: Nextcloud (nextcloud)</li> <li>2024-08-03 20:09:07Z Overview: TrueNas</li> <li>2024-08-02 22:46:43Z Place: The Nordic WeWork building</li> <li>2024-08-02 19:42:34Z CSS image sizing strategies</li> <li>2024-08-02 16:11:46Z Zet schemas idea based on structured data</li> <li>2024-08-02 15:59:41Z Target uses OpenTelemetry Logging for centralized logging</li> <li>2024-08-02 14:49:37Z Place: Hewing Hotel Rooftop</li> <li>2024-08-02 14:49:35Z Time log: Minneapolis 20s and 30s something social meetup group</li> <li>2024-08-02 14:43:10Z Place: Wandering Leaf Brewing</li> <li>2024-08-02 14:31:14Z Time log: JavaScriptMN</li> <li>2024-08-02 14:31:05Z OPNSense <code>opnsense-patch</code> utility</li> <li>2024-08-01 19:24:23Z Place: Up Down</li> <li>2024-08-01 04:50:41Z Digital ocean regions</li> <li>2024-08-01 03:56:53Z Hardware: Beelink EQ12 N100</li> <li>2024-08-01 03:32:38Z Companies that hire Software Engineers in the Twin Cities</li> <li>2024-08-01 02:09:30Z Technique for aborting <code>fetch</code> in progress</li> <li>2024-07-31 23:59:30Z [x] Homelab Task | setup DNS</li> <li>2024-07-31 23:58:24Z Smooth user input handling for webdev</li> <li>2024-07-31 23:56:54Z JavaScript multi head library neomjs</li> <li>2024-07-31 23:07:48Z Company: Frontend Masters</li> <li>2024-07-31 22:54:11Z JavaScriptMN meetup group (jsmn)</li> <li>2024-07-31 17:29:06Z Kubernetes and notetaking blog</li> <li>2024-07-31 17:28:21Z Person: Yoytuber Sebastiondaschner</li> <li>2024-07-31 14:23:35Z Bootcamp Career Foundry</li> <li>2024-07-30 23:39:51Z Youtube channel Fireship</li> <li>2024-07-30 23:37:53Z AI Group in Minneapolis called C.R.E.A.T.E.</li> <li>2024-07-30 23:36:54Z Dave Farley has good content on CI/CD</li> <li>2024-07-30 23:34:35Z Fieldkit hardware</li> <li>2024-07-30 22:45:05Z How to sort an array with -1, 0, and 1 sort function</li> <li>2024-07-30 20:37:00Z Blog with good tips about react performance</li> <li>2024-07-30 13:51:54Z Versioned database migration strategies</li> <li>2024-07-30 13:38:19Z Bryn Mawr neighborhood</li> <li>2024-07-30 03:00:17Z React performance trick by using batching</li> <li>2024-07-29 23:49:07Z Research on recommended rental companies</li> <li>2024-07-29 01:53:12Z Hardware: 42\u201d Flexispot corner raiser</li> <li>2024-07-28 21:51:51Z Place: Sue falls</li> <li>2024-07-28 21:49:50Z Place: Polish Palace</li> <li>2024-07-28 20:55:29Z Overview: Raspberry pi (pi)</li> <li>2024-07-28 20:39:18Z App: appfolio</li> <li>2024-07-28 20:38:38Z Rich text editors for website development</li> <li>2024-07-28 19:05:24Z Community bread oven in the Harrison Neighborhood</li> <li>2024-07-28 17:35:39Z Testing raw performance of hard drives with dd</li> <li>2024-07-28 16:24:57Z Ingredient: Himalayan pink salt</li> <li>2024-07-28 16:20:27Z Sourdough pizza</li> <li>2024-07-28 16:20:08Z Ingredient: Einkorn wheat berries</li> <li>2024-07-28 16:18:42Z 100% whole wheat sourdough starter</li> <li>2024-07-28 16:18:26Z 100% Rye sourdough starter</li> <li>2024-07-28 16:14:30Z Ingredient: Rye Berries</li> <li>2024-07-28 16:12:17Z Company: King Arthur</li> <li>2024-07-28 16:05:56Z WordPress development overview</li> <li>2024-07-28 06:01:50Z Overview: of the service Mailchimp (mailchimp)</li> <li>2024-07-28 06:01:22Z How to implement a contact form with MailChimp</li> <li>2024-07-28 06:00:42Z What is platform requirements</li> <li>2024-07-28 06:00:24Z WordPress email integrations</li> <li>2024-07-28 05:59:58Z Recommended PHP language server to use</li> <li>2024-07-28 05:59:57Z Issue: saving files in vim updates the modified time stamp</li> <li>2024-07-28 05:58:53Z How to manage files in vanilla vim with netrw</li> <li>2024-07-28 05:58:31Z Overview of themes in WordPress</li> <li>2024-07-28 05:58:08Z How to effectively use cp</li> <li>2024-07-28 05:57:34Z How to get started developing themes and plugins with WordPress</li> <li>2024-07-28 05:56:52Z How to work with gradients with tailwind</li> <li>2024-07-28 05:56:31Z How to quickly test out space vim</li> <li>2024-07-28 05:56:08Z Overview of a classic theme in WordPress</li> <li>2024-07-28 05:55:42Z Event: Biking with 20s 30s somethings</li> <li>2024-07-28 05:55:08Z How to get started with the redfin api</li> <li>2024-07-28 05:54:43Z The service userzoom for doing UX research</li> <li>2024-07-28 05:53:35Z Domain model for yabai</li> <li>2024-07-28 05:53:13Z How to setup bbPress forums in WordPress</li> <li>2024-07-28 05:52:44Z Place: Como Park Zoo and Conservatory in St Paul Minnesota</li> <li>2024-07-28 05:51:42Z WordPress development key concepts</li> <li>2024-07-28 05:49:37Z Problems with Linux as a workstation</li> <li>2024-07-28 05:48:58Z How to configure bash scripting behavior</li> <li>2024-07-28 05:48:33Z WordPress plugin Gravity forms</li> <li>2024-07-28 05:48:12Z Fierce armor kit construction cost calculation</li> <li>2024-07-28 05:46:31Z Tmux integration with iTerm 2</li> <li>2024-07-28 05:46:04Z Managing contexts with bash</li> <li>2024-07-28 05:45:41Z Lando concepts</li> <li>2024-07-28 05:41:55Z Necromancer leveling build on Diablo 4</li> <li>2024-07-28 05:41:28Z Recommended android SDK target for new android apps</li> <li>2024-07-28 05:40:49Z How to quickly spin up a dev environment for testing with docker</li> <li>2024-07-28 05:40:27Z Thinking about a Zettelkasten organization as a form a taxonomy</li> <li>2024-07-28 05:39:06Z Official WordPress theme review process</li> <li>2024-07-28 05:38:30Z Issue: Task to fix keybinding issues between MacOS and ranger</li> <li>2024-07-28 05:37:29Z Event: M23SS brewery event at Blackstack Brewing</li> <li>2024-07-28 05:36:06Z How to create your own theme in WordPress</li> <li>2024-07-28 05:35:41Z Diablo 4 completions</li> <li>2024-07-28 05:35:19Z Nginx clear cache hack with echo \u201c\u201d</li> <li>2024-07-28 05:34:06Z How to use arrays in bash</li> <li>2024-07-28 05:33:36Z How to view and edit pdfs and the command line</li> <li>2024-07-28 05:32:39Z Overview: Samsung S22+ device specification</li> <li>2024-07-28 05:31:27Z My personal PHP style guide</li> <li>2024-07-28 05:31:07Z Unix help pages with color</li> <li>2024-07-28 05:30:12Z Date standards</li> <li>2024-07-28 05:29:44Z How to install lando on MacOS</li> <li>2024-07-28 05:28:49Z Concrete 5</li> <li>2024-07-28 05:27:58Z Using a temporary directory that require installing transient scripts</li> <li>2024-07-28 05:27:28Z How I manage my secret dot files using a usb stick</li> <li>2024-07-28 05:21:47Z Places that have good public WiFi in Minneapolis</li> <li>2024-07-28 05:11:02Z Gear for dual training in swimming and running</li> <li>2024-07-28 05:05:49Z Place: Cedar lake near Theo</li> <li>2024-07-28 04:48:05Z Creating backlinks using using schema objects</li> <li>2024-07-28 04:37:53Z Structured data on the web</li> <li>2024-07-28 02:17:40Z Favorite parking spot in the North Loop</li> <li>2024-07-28 01:54:51Z Devastation Evoker priorities</li> <li>2024-07-28 01:52:52Z Overview: MacOSX tools and software</li> <li>2024-07-28 01:50:06Z World of Warcraft Evoker game play</li> <li>2024-07-28 01:48:52Z Place: Blackstack Brewing</li> <li>2024-07-28 01:48:00Z FreeBSD for homelab exploration</li> <li>2024-07-28 01:43:16Z Place: Tavern on First</li> <li>2024-07-28 01:41:12Z Place: Minnesota (minnesota)</li> <li>2024-07-28 01:36:52Z Place: Como lake</li> <li>2024-07-28 01:34:54Z Place: Stillwater</li> <li>2024-07-28 00:52:37Z Company: Target</li> <li>2024-07-28 00:40:59Z pfSense for networking</li> <li>2024-07-26 22:43:05Z Overview: keg</li> <li>2024-07-26 22:30:45Z My MacOS workstation setup</li> <li>2024-07-26 22:29:51Z Node setup on MacOSX</li> <li>2024-07-26 22:29:45Z How to increase cursor speed on MacOSX</li> <li>2024-07-26 22:29:30Z <code>nmap</code> installation on macOSX</li> <li>2024-07-26 22:29:10Z Managing neovim versions with brew</li> <li>2024-07-26 20:45:04Z Company: Luna (luna)</li> <li>2024-07-26 20:37:40Z Minneapolis 20s 30s something social meetup group (M23SS)</li> <li>2024-07-26 20:37:09Z Place: Minneapolis airport</li> <li>2024-07-26 16:25:39Z Adding keyboard only navigation elements to websites</li> <li>2024-07-26 14:16:30Z Place: Padraigs Brewing</li> <li>2024-07-26 14:07:48Z Refurbished enterprise data center HDD for NAS</li> <li>2024-07-25 22:35:10Z Sorry, planned but not yet available</li> <li>2024-07-25 22:35:08Z Example fly out navigation menu in website development</li> <li>2024-07-25 18:00:24Z Styling tab focused items</li> <li>2024-07-25 01:03:13Z Service announcement protocols</li> <li>2024-07-24 23:00:59Z World of warcraft evoker preservation gameplay</li> <li>2024-07-24 19:19:10Z View CSS on interactive elements</li> <li>2024-07-24 19:16:41Z Hardware: Netgear R7000 router</li> <li>2024-07-24 18:57:20Z Hardware: Dell XPS 9710</li> <li>2024-07-24 18:56:29Z Hardware: My Ooni Karu 12G</li> <li>2024-07-24 18:45:26Z Bash trick to run things in parallel</li> <li>2024-07-24 18:41:34Z Mill city running group</li> <li>2024-07-22 23:24:48Z [ ] Homelab Task | Explore next cloud</li> <li>2024-07-22 23:24:41Z [ ] mintea Task | help with minttea</li> <li>2024-07-22 13:43:00Z Overview: Proxmox (proxmox)</li> <li>2024-07-22 13:36:20Z Overview: Beelink (beelink)</li> <li>2024-07-21 15:03:08Z How to setup VSCode for PHP and WordPress development</li> <li>2024-07-20 14:16:54Z Hardware: TP-Link BE550 (be550)</li> <li>2024-07-20 14:16:24Z Hardware: Custom built PC Trooper (trooper)</li> <li>2024-07-19 20:15:58Z CSS selectors and combinators</li> <li>2024-07-19 20:15:35Z Issue: Rounded borders for a table header</li> <li>2024-07-19 19:37:03Z World wide web consortium (w3c)</li> <li>2024-07-19 19:31:03Z Project: Personal Zettelkasten (notetaking)</li> <li>2024-07-19 19:30:17Z Tabular data in HTML</li> <li>2024-07-19 19:30:13Z WHATWG community (whatwg)</li> <li>2024-07-19 19:14:09Z Layout strategies for webdev</li> <li>2024-07-19 05:27:11Z Event: Fargo half marathon 2019</li> <li>2024-07-19 05:25:30Z Event: Ely marathon 2023</li> <li>2024-07-19 05:24:21Z Event: Fargo half marathon 2024</li> <li>2024-07-18 20:10:43Z How to add custom fonts to a website</li> <li>2024-07-18 19:21:02Z Place: Utepils</li> <li>2024-07-18 04:59:51Z Research: 2024 WiFi upgrade</li> <li>2024-07-18 00:10:00Z Colors in bash scripting</li> <li>2024-07-17 20:40:10Z Place: Huckleberry ridge conservatory</li> <li>2024-07-17 20:37:26Z Dispersed camping</li> <li>2024-07-17 17:11:23Z Improving CLS with blocking font loading</li> <li>2024-07-16 22:14:04Z Person: Foony\u2019s developer acorn1010</li> <li>2024-07-16 21:58:03Z Place: Mill city running</li> <li>2024-07-16 15:35:32Z Article: Really good article about software engineering principles</li> <li>2024-07-16 02:50:58Z Techniques for handling scrolling</li> <li>2024-07-15 20:59:55Z Overview: <code>rsync</code></li> <li>2024-07-15 16:43:52Z Overview: Neovim Telescope Plugin</li> <li>2024-07-15 16:42:43Z [ ] Neovim Task | hunk text object visual navigation issue</li> <li>2024-07-15 14:35:24Z Overview: Ubuntu</li> <li>2024-07-15 04:23:44Z Bash scripting tricks</li> <li>2024-07-15 02:56:29Z Networking in Linux</li> <li>2024-07-15 02:54:10Z Overview: Debian</li> <li>2024-07-15 02:03:45Z Overview: FreeBSD</li> <li>2024-07-15 02:03:30Z Overview: UNIX</li> <li>2024-07-15 02:02:18Z Dialog in website design</li> <li>2024-07-14 23:24:32Z Preferred click handling mouse down vs mouse up</li> <li>2024-07-14 23:13:30Z Overview: Quad9 DNS</li> <li>2024-07-14 21:43:35Z Keg introduction</li> <li>2024-07-14 21:09:20Z [ ] Dotfiles Task | create a zetq script</li> <li>2024-07-14 21:08:56Z Overview: Pi-Hole</li> <li>2024-07-14 20:53:29Z [x] Homelab Task | setup pfSense on ts140</li> <li>2024-07-14 20:39:31Z Issue: Generating documentation for nvim plugins</li> <li>2024-07-14 20:34:25Z [x] Homelab Task | setup a vpn</li> <li>2024-07-14 19:46:02Z Research: buying Ethernet adapters for a PC or server</li> <li>2024-07-14 18:16:23Z Hardware: My M2 Macbook Pro</li> <li>2024-07-12 20:21:57Z PCI-DSS compliance</li> <li>2024-07-12 19:58:38Z Overview: Mariadb</li> <li>2024-07-12 16:32:36Z Arial font</li> <li>2024-07-12 04:09:14Z Issue: stupid MacOSX permissions crap</li> <li>2024-07-11 17:04:44Z Handy pathing scripts</li> <li>2024-07-11 14:40:48Z Overview: My Note taking system</li> <li>2024-07-11 14:39:27Z How I organize my notes</li> <li>2024-07-11 14:35:06Z Other note taking structures</li> <li>2024-07-11 14:30:39Z How to utilize these notes</li> <li>2024-07-11 14:21:26Z Overview: Zettelkasten definition</li> <li>2024-07-11 14:07:28Z Reason why some things will not work on apple</li> <li>2024-07-11 14:02:58Z Overview: Mailhog</li> <li>2024-07-11 13:58:22Z </li> <li>2024-07-08 04:52:13Z Sourdough pizza dough batch request</li> <li>2024-07-08 04:51:57Z Place: Taste of India St Louis Park</li> <li>2024-07-04 23:27:04Z Ingredient: Einkorn wheat berries</li> <li>2024-07-04 18:22:35Z An example of a bash script that has tab completion</li> <li>2024-07-04 17:53:31Z Overview: Unix style search and replace utilities</li> <li>2024-07-04 17:05:52Z Research: a Rofi like experience on MacOSX</li> <li>2024-07-04 17:04:23Z fzf setup and usage</li> <li>2024-07-04 15:27:18Z Bake: Memorial Day Weekend focaccia 2024</li> <li>2024-07-04 15:24:26Z Ingredient: Turkey red wheat berries</li> <li>2024-07-03 18:31:43Z Feature: search domain in DNS</li> <li>2024-07-02 20:51:57Z Place: St Louis Park, MN</li> <li>2024-07-01 20:24:27Z Overview: backing up Unix systems</li> <li>2024-07-01 19:18:47Z Beelink mini computers</li> <li>2024-07-01 15:32:05Z Issue: Host only adapter not working in UTM</li> <li>2024-07-01 15:24:21Z Ingredient: Polselli 00 flour classica</li> <li>2024-07-01 15:23:03Z Ingredient: Hard red wheat</li> <li>2024-06-30 22:16:00Z Person: VTuber Mischa van den Burg</li> <li>2024-06-30 21:26:52Z Information normalization in note taking</li> <li>2024-06-30 20:42:07Z Research: Wowhead diablo 4 class ranking comparison</li> <li>2024-06-30 20:22:51Z Google structured data</li> <li>2024-06-30 19:22:45Z Neapolitan pizza</li> <li>2024-06-30 19:18:13Z Large sourdough pizza batch for BYOT pizza event</li> <li>2024-06-30 18:16:53Z Issue: Sticking issues with baking</li> <li>2024-06-30 18:02:07Z Hardware: Samsung S22+ android phone (s22)</li> <li>2024-06-30 17:53:15Z Hardware: Razer thunderbolt docking station</li> <li>2024-06-30 17:29:32Z Task to figure out how to make scrolling faster on MacOS</li> <li>2024-06-30 17:28:16Z Wireguard for AWS VPC access gateway for Ubuntu server</li> <li>2024-06-30 17:25:50Z Research: docker setup for multiple php websites</li> <li>2024-06-29 02:22:06Z Accessing <code>package.json</code> version for a TypeScript cli applicationg</li> <li>2024-06-28 14:18:21Z Overview of navicat</li> <li>2024-06-27 13:30:32Z Place: Loadstone Coffee and Games</li> <li>2024-06-26 22:40:40Z Cross compatibility with Windows Explorer zip files</li> <li>2024-06-26 22:28:22Z Zip cheatsheet</li> <li>2024-06-26 19:18:24Z Running FreeBSD VM on apple silicon with QEMU</li> <li>2024-06-24 14:33:28Z Git techniques and cheatsheet</li> <li>2024-06-23 17:17:21Z Covariance and contravariance in TypeScript</li> <li>2024-06-22 18:48:48Z Building guis with Dioxis in rust</li> <li>2024-06-22 15:25:52Z Issue: running a typescript library in deno</li> <li>2024-06-21 03:43:43Z Basic setup for a React Native app with expo and pnpm monorepo</li> <li>2024-06-21 03:43:40Z CommonJs module system in Node</li> <li>2024-06-21 03:43:38Z ESM module system in Node</li> <li>2024-06-21 02:22:52Z Optimal rice to water ratio</li> <li>2024-06-19 23:43:17Z [ ] Neovim Task | setup configuration</li> <li>2024-06-19 23:33:15Z Research: Running sandals</li> <li>2024-06-19 23:33:12Z Huarache</li> <li>2024-06-19 16:09:53Z WordPress docker container</li> <li>2024-06-19 15:48:26Z AWS service elastic beanstalk</li> <li>2024-06-18 01:42:48Z Recommended wine list</li> <li>2024-06-13 23:16:52Z Sat 17 Dec 2022 farrel\u2019s kick boxing party</li> <li>2024-06-11 21:35:55Z How to build a generic accordion in WordPress</li> <li>2024-06-11 21:09:04Z Accordion plugins for WordPress</li> <li>2024-06-11 19:38:23Z How to manage ssh keys</li> <li>2024-06-11 19:38:17Z Installing patched power line fonts for MacOS</li> <li>2024-06-11 15:11:40Z Network switch research</li> <li>2024-06-10 15:57:40Z AWS service CloudFront</li> <li>2024-06-10 15:56:58Z AWS service CloudTrail</li> <li>2024-06-09 17:13:01Z Node version management with nvm</li> <li>2024-06-09 16:10:11Z Think Server T140 hardware dump</li> <li>2024-06-08 18:15:39Z Package management in Ubuntu</li> <li>2024-06-08 16:19:09Z Converting a VirtualBox VDI to a QEMU on MacOSX</li> <li>2024-06-08 16:19:05Z VirtualBox on apple silicon</li> <li>2024-06-08 16:08:06Z File system recommendation for FreeBSD</li> <li>2024-06-08 15:44:24Z Manage virtual machines with QEMU</li> <li>2024-06-08 15:37:36Z How I use chezmoi to manage my dot files</li> <li>2024-06-07 22:37:58Z Package management in FreeBSD</li> <li>2024-06-07 21:48:22Z Wireguard topologies</li> <li>2024-06-07 20:03:47Z VLAN overview</li> <li>2024-06-07 18:00:23Z Tools needed to setup a npm library for typescript</li> <li>2024-06-07 17:56:20Z How to convert JSON typescript schema</li> <li>2024-06-07 03:53:05Z Full list of operating systems that ansible is able to detect</li> <li>2024-06-06 21:44:45Z KeePass is the only password manager resistant to Copilot+ Recall</li> <li>2024-06-05 22:02:05Z KEG website with CMS</li> <li>2024-05-30 22:27:52Z My personal typescript style guide</li> <li>2024-05-30 20:59:55Z All things sudo</li> <li>2024-05-28 14:15:40Z Basic sourdough batard</li> <li>2024-05-23 15:10:51Z Local network machine IP address discovery protocols</li> <li>2024-05-22 04:13:52Z Middleware pattern with typescript</li> <li>2024-05-21 14:29:19Z First exploration into Nix</li> <li>2024-05-21 14:27:01Z Releasing software with python</li> <li>2024-05-21 00:22:45Z World of Warcraft court of stars dungeon</li> <li>2024-05-21 00:04:29Z Mongo style filter example with typescript</li> <li>2024-05-20 22:50:53Z Proof of concept for a monorepo with changesets</li> <li>2024-05-20 21:41:36Z How to setup automated change logs with github actions</li> <li>2024-05-18 23:46:58Z Git clients</li> <li>2024-05-18 23:46:17Z Vexilla is using tailblocks</li> <li>2024-05-18 23:13:42Z In search of a configuration and data exchange language</li> <li>2024-05-18 23:13:30Z GitHub action using nix</li> <li>2024-05-18 20:41:58Z Snippets in neovim</li> <li>2024-05-18 19:20:13Z Known standards</li> <li>2024-05-18 15:31:14Z MariaDB SQL cheat sheet</li> <li>2024-05-17 19:42:00Z Database data management for MySQL with Navicat</li> <li>2024-05-15 21:58:49Z Sync a directory with rsync</li> <li>2024-05-15 19:47:32Z Recommended image types to use on the web</li> <li>2024-05-15 16:43:35Z My preferred intellij settings</li> <li>2024-05-14 02:28:04Z Flexbox CSS attributes</li> <li>2024-05-13 19:12:23Z How to swap caps lock on MacOS</li> <li>2024-05-10 15:18:01Z How to swap caps lock on windows</li> <li>2024-05-09 20:11:54Z How is width calculated within CSS</li> <li>2024-05-09 20:11:52Z Git gutter issues in Phpstorm based editor when using SMB protocol</li> <li>2024-05-09 20:09:38Z PHP awesome list</li> <li>2024-05-07 14:56:39Z Bootstrap 3 tips and tricks</li> <li>2024-05-06 14:58:07Z How to upload a SSH key pair from the CLI to AWS</li> <li>2024-05-06 14:57:36Z Traditional Italian Easter bread</li> <li>2024-05-04 22:14:46Z Uzbek Lepyoshki experiment</li> <li>2024-05-04 20:56:00Z Recommended temperature for bread rising with active dry yeast</li> <li>2024-05-04 20:47:48Z Uzbek Lepyoshki take 2</li> <li>2024-05-04 20:28:50Z keg create git issue</li> <li>2024-05-03 01:36:40Z Vim, tmux and ssh copy and paste madness</li> <li>2024-05-03 01:36:37Z How to setup fira code fonts on windows</li> <li>2024-05-01 16:23:17Z How do document php code</li> <li>2024-04-30 18:48:32Z Tips for adding TypeScript to legacy JavaScript code bases</li> <li>2024-04-29 22:05:50Z Add type checking to babel configuration</li> <li>2024-04-27 16:38:35Z How to mount a sambda drive on macosx CLI</li> <li>2024-04-23 17:01:39Z Nodejs ecosystem support on freebsd</li> <li>2024-04-22 18:01:49Z Installing software with curl</li> <li>2024-04-17 18:46:00Z User agent switcher</li> <li>2024-04-16 21:54:09Z My tmux setup</li> <li>2024-04-16 21:01:22Z SSH key rotation best practices</li> <li>2024-04-15 19:36:37Z Monday April 15 2024 daily entry</li> <li>2024-04-13 18:57:14Z A better zustand store</li> <li>2024-04-08 16:18:17Z Davy Crockett National Forest camping</li> <li>2024-04-08 15:57:04Z Primitive Camping in Texas</li> <li>2024-04-08 04:47:16Z Caddo national grasslands</li> <li>2024-04-08 04:01:13Z WOW Dragonflight season 4</li> <li>2024-04-02 19:03:30Z WOW Dragonflight Season 3</li> <li>2024-04-02 17:18:26Z Phone research for 2024</li> <li>2024-03-29 15:00:33Z Common bacteria in the human mouth</li> <li>2024-03-28 19:33:00Z React native design concepts</li> <li>2024-03-27 20:42:27Z Only fans PR move</li> <li>2024-03-27 16:14:58Z Flutter experiments</li> <li>2024-03-27 16:14:01Z Install flutter on macOSX with apple silicon</li> <li>2024-03-25 05:49:08Z Dependency injection using the Reader pattern</li> <li>2024-03-25 05:19:51Z Notes about the neurological impact of music from a podcast</li> <li>2024-03-12 21:09:33Z Air quality in my living area research</li> <li>2024-03-02 18:56:35Z Knut installation process on MacOSX</li> <li>2024-02-29 19:28:48Z Stateful command tree using commander js</li> <li>2024-02-28 06:03:46Z Java 16.02 bug with AMD processors</li> <li>2024-02-24 19:51:16Z Simple versioning using changesets</li> <li>2024-02-16 23:51:02Z Where to do research on the job market for tech jobs</li> <li>2024-02-14 17:49:39Z System interactions in Tauri</li> <li>2024-02-13 17:29:10Z OCaml awesome</li> <li>2024-02-13 17:26:50Z Mirage OS virtual library OS</li> <li>2024-02-13 17:18:33Z How to programmatically upload to S3</li> <li>2024-02-12 20:12:55Z TypeScript auto imports in neovim</li> <li>2024-02-12 19:08:39Z Strange .pnpm-store appearing in my repo</li> <li>2024-02-12 19:07:28Z Example usage of Ethereum block chain being used</li> <li>2024-02-11 15:08:48Z JavaScript article</li> <li>2024-02-09 17:11:21Z leostera the streamer</li> <li>2024-02-09 17:11:20Z Biomarkers associated to centenarians</li> <li>2024-02-09 16:36:26Z Recommended formatting for OCaml</li> <li>2024-02-08 18:06:37Z Convert physically pointing to the stream to a virtual one</li> <li>2024-02-05 21:19:34Z Research on Webpack\u2019s plugin architecture</li> <li>2024-02-05 21:03:46Z Plugin architecture of vscode</li> <li>2024-02-05 19:17:49Z SVG security in public extensions for VSCode</li> <li>2024-02-05 19:02:51Z Knutjs project idea</li> <li>2024-02-05 05:15:32Z Rock paper scissors game</li> <li>2024-02-05 05:15:31Z Ice Skating in Twin Cities</li> <li>2024-02-05 03:51:06Z AWS Certifications</li> <li>2024-02-04 01:25:15Z jq cheat sheet</li> <li>2024-02-02 20:17:42Z Sourdough bread batard January 19 2024</li> <li>2024-01-27 21:24:29Z Moving over to a different way to handle my public KEG</li> <li>2024-01-27 20:40:38Z Guesswork Sourdough bread</li> <li>2024-01-27 20:39:55Z Sourdough rye and barley pita bread</li> <li>2024-01-27 20:39:08Z Sourdough rye and barley pancakes</li> <li>2024-01-27 20:36:59Z Pizza night at the cabin pizza dough</li> <li>2024-01-27 20:36:04Z Sourdough somewhat whole wheat pizza for the ooni</li> <li>2024-01-27 20:35:24Z Whole wheat tortilla recipe</li> <li>2024-01-21 20:37:20Z How to sort an array with -1, 0, and 1 sort function</li> <li>2024-01-21 13:25:17Z Material to learn functional programming</li> <li>2024-01-19 16:28:12Z White sourdough batard</li> <li>2024-01-19 16:26:50Z Companies that are hiring remote works in 2024</li> <li>2024-01-19 02:47:54Z Companies in the Twin Cities that hire Software Engineers</li> <li>2024-01-19 02:21:38Z Junior Automation Application Developer</li> <li>2024-01-17 20:42:34Z Sourdough batard</li> <li>2024-01-17 19:34:45Z Portable pizza oven buying checklist</li> <li>2024-01-15 04:03:12Z AWS Typescript CDK Quick start</li> <li>2024-01-14 02:19:27Z Concerts of interest in 2024</li> <li>2024-01-14 00:26:20Z IEEE 754 floating point format</li> <li>2024-01-13 20:21:25Z STAR method</li> <li>2024-01-12 23:59:44Z Basil for culinary use</li> <li>2024-01-12 23:59:42Z How to grow basil indoors</li> <li>2024-01-12 22:13:55Z First bigga sourdough pizza batch for the Ooni</li> <li>2024-01-11 18:49:56Z Bigga sourdough pizza dough Saturday July 22 2023</li> <li>2024-01-11 18:49:29Z July fourth weekend 2023 sourdough pizza</li> <li>2024-01-11 18:47:48Z SQL and DBMS concepts</li> <li>2024-01-11 18:31:41Z Father\u2019s day whole wheat sourdough batard</li> <li>2024-01-11 17:55:47Z Memorial day sourdough bread bowl</li> <li>2024-01-11 17:55:26Z Whole wheat sourdough loaf</li> <li>2024-01-11 17:55:05Z Thu Apr 20 2023 sourdough pizza</li> <li>2024-01-11 17:54:31Z Sourdough Pizza experiment</li> <li>2024-01-11 17:54:03Z Experimental whole wheat pizza sourdough small batch</li> <li>2024-01-11 17:53:18Z Experimental rye and barley pullman loaf</li> <li>2024-01-11 17:53:05Z Einkorn sourdough bread bowl</li> <li>2024-01-11 17:49:14Z Thanksgiving bread bowl 2022</li> <li>2024-01-11 15:08:44Z Bartender terminology</li> <li>2024-01-11 14:57:28Z A list of tech communities on slack</li> <li>2024-01-10 23:39:31Z Drink mixing tools and strategies</li> <li>2024-01-10 23:21:43Z Bartender tips</li> <li>2024-01-08 04:14:37Z .Net core setup for MacOSX and neovim</li> <li>2023-12-30 23:41:04Z How to shape a batard</li> <li>2023-12-30 17:16:12Z How to make good sourdough bread</li> <li>2023-12-30 16:23:23Z Christmas bread bowl 2023</li> <li>2023-12-26 23:43:04Z Lazy sourdough Uzbek Lepyoshki experiment</li> <li>2023-12-25 16:28:29Z Dill Pickle Tortilla Roll Up recipe</li> <li>2023-12-23 20:07:29Z Karble cheat sheet</li> <li>2023-12-23 20:05:27Z Spinach dip recipe</li> <li>2023-12-22 23:01:48Z How to implement \u201ccook mode\u201d on a website</li> <li>2023-12-22 17:19:13Z Tool and strategies for making sourdough bread</li> <li>2023-12-22 17:04:10Z Professional Full Stack developer prompt for ChatGPT</li> <li>2023-12-21 18:09:42Z The science of motivation</li> <li>2023-12-17 14:34:26Z How to belay top rope at climbing gym</li> <li>2023-12-11 06:43:37Z Triton Purple radish sprouts</li> <li>2023-12-11 00:24:36Z General Index</li> <li>2023-12-10 19:01:45Z Micro green index</li> <li>2023-12-10 18:52:12Z Purple radish micro green batch 1</li> <li>2023-12-05 20:38:11Z My personal website design</li> <li>2023-12-05 19:53:42Z Creating KEG commands plugin in NeoVim</li> <li>2023-12-05 18:20:52Z Coco coir for micro green growing</li> <li>2023-12-01 18:30:11Z Git techniques and cheat sheet</li> <li>2023-12-01 17:38:30Z Types of sourdough preferments</li> <li>2023-11-30 18:39:27Z My first user experience with keg</li> <li>2023-11-30 18:37:37Z Example for how to build a KEG for use with google docs</li> <li>2023-11-26 00:08:56Z How to setup HP Officejet j4680 for printing</li> <li>2023-11-26 00:08:49Z Strategy for learning</li> <li>2023-11-26 00:08:45Z Neuroscience on how learning occurs</li> <li>2023-11-25 22:22:23Z Different types of learning</li> <li>2023-11-24 17:50:56Z Netmagic cloud</li> <li>2023-11-22 22:38:07Z Raw module 4 instructions</li> <li>2023-11-22 20:51:08Z Test exams</li> <li>2023-11-19 01:33:46Z AWS Developer Associate Exam</li> <li>2023-11-18 21:11:59Z AWS Chat app tutorial</li> <li>2023-11-17 16:35:51Z Deploying a sveltkit app on AWS</li> <li>2023-11-13 17:30:24Z Research for tendonitis issue</li> <li>2023-11-13 00:27:38Z Interesting bug in AWS ECS</li> <li>2023-11-12 23:20:35Z ECS cluster tutorial</li> <li>2023-11-02 03:07:34Z Message de-duplication on AWS FIFO topics</li> <li>2023-11-02 02:12:26Z AWS Lambda</li> <li>2023-11-02 01:53:39Z Setup OpenSearch AWS for learning</li> <li>2023-11-02 01:45:21Z Chrome book comparison</li> <li>2023-11-02 01:14:41Z Solid Principles</li> <li>2023-10-30 15:23:06Z Tyler Industries entry level .Net role</li> <li>2023-10-24 21:37:33Z mono repo setup with pnpm</li> <li>2023-10-24 21:24:09Z pnpm mono repo strategy</li> <li>2023-10-24 20:57:05Z Frontend masters OpenAI and NodeJS</li> <li>2023-10-24 03:56:50Z How I created my first nvim plugin</li> <li>2023-10-21 14:21:49Z Green curry recipe</li> <li>2023-10-20 21:32:36Z Project management for python</li> <li>2023-10-17 15:09:21Z Web authentication strategies</li> <li>2023-10-17 14:58:47Z AWS Aura serverless database</li> <li>2023-10-13 15:41:20Z Volunteering at Habitat for Humanity</li> <li>2023-10-08 15:59:25Z Sveltekit how to debounce input</li> <li>2023-10-06 22:28:16Z Resources to get started with Ocaml</li> <li>2023-10-04 23:06:13Z React experts</li> <li>2023-10-04 23:05:24Z Reactivity concepts in web development</li> <li>2023-10-04 16:30:32Z Dynamic colors with SvelteKit and tailwind</li> <li>2023-10-04 16:30:30Z Battle tanks the game</li> <li>2023-10-04 14:58:15Z Multiplayer game with FireBase video</li> <li>2023-10-02 01:29:00Z Power lifting workout routines</li> <li>2023-10-01 05:09:44Z Effecting centralized logging strategy</li> <li>2023-09-30 20:24:35Z Proper way to read user input when using Go</li> <li>2023-09-30 17:34:14Z Recommended regex syntax to use</li> <li>2023-09-30 17:20:55Z Docker compose host name resolution</li> <li>2023-09-29 17:34:11Z Handling flags in bash</li> <li>2023-09-28 18:55:51Z AWS EC2</li> <li>2023-09-28 18:55:49Z how to login to AWS via command line</li> <li>2023-09-27 23:01:04Z AWS Access management</li> <li>2023-09-26 23:50:09Z AWS free tier</li> <li>2023-09-26 23:46:54Z Cool facts about octopus</li> <li>2023-09-26 23:46:26Z Society requires perfect trust</li> <li>2023-09-26 23:46:09Z Setting up a new KEG app with tina and jekyll</li> <li>2023-09-26 23:46:00Z Managing ruby version on MacOSX with chruby</li> <li>2023-09-21 19:05:25Z Hugo theme development loop</li> <li>2023-09-18 15:50:10Z Testing in Go</li> <li>2023-09-16 15:55:05Z Chia jam recipe</li> <li>2023-09-16 02:19:26Z KEG repo with tina cms and jekyll experiment</li> <li>2023-09-15 20:21:14Z The processes of migrating my private zets to my public zets</li> <li>2023-09-12 19:23:17Z Cool idea for my own website</li> <li>2023-09-11 22:48:40Z Streaming setup research</li> <li>2023-09-11 04:32:54Z Recommend wheat flour to use for different bakes</li> <li>2023-09-11 03:24:05Z Brewery Bahaus Brew Labs</li> <li>2023-09-10 19:05:06Z Digital fonts</li> <li>2023-09-07 02:26:52Z Ergonomic mouse research</li> <li>2023-09-07 02:26:52Z How to set path variables on MacOS</li> <li>2023-09-07 02:26:52Z Must have plugins for google chrome</li> <li>2023-09-07 02:26:52Z Sanity content management system</li> <li>2023-09-07 02:26:52Z Logitech G604 issues on macOS</li> <li>2023-09-07 02:26:52Z Logitech G604 issues on macOS</li> <li>2023-09-07 02:26:52Z How to verify file integrity on the cli</li> <li>2023-09-07 02:26:52Z How to install rust properly to prevent mucking with dotfiles</li> <li>2023-09-07 02:26:52Z Managing personal secrets with an external USB drive</li> <li>2023-09-07 02:26:52Z How to give credit to the original script owner</li> <li>2023-09-07 02:26:52Z rwxrob\u2019s list of go packages</li> <li>2023-09-07 02:26:52Z Pop_OS! unable to run jest</li> <li>2023-09-07 02:26:52Z Quick fix menus in vim</li> <li>2023-09-07 02:26:52Z Harpoon keybindings in vscode</li> <li>2023-09-07 02:26:52Z Tiling window management in windows with komorebi</li> <li>2023-09-07 02:26:52Z Example of keyword searching with awk</li> <li>2023-09-07 02:26:52Z Pop_OS! setup</li> <li>2023-09-07 02:26:52Z Useful oh my zsh plugins list</li> <li>2023-09-07 02:26:52Z A Linux distribution called Pop_OS!</li> <li>2023-09-07 02:26:52Z Recommended warlock spec for Aberrus bosses</li> <li>2023-09-07 02:26:52Z Top gear for warlock</li> <li>2023-09-07 02:26:52Z How does a generic search engine work for the web</li> <li>2023-09-07 02:26:52Z Zettelkasten search engine</li> <li>2023-09-07 02:26:52Z How to setup fira code fonts on windows</li> <li>2023-09-07 02:26:52Z Dragonflight leather working recipes</li> <li>2023-09-07 02:26:52Z Pop_OS! window management setup</li> <li>2023-09-07 02:26:52Z Skeuomorphism website design</li> <li>2023-09-07 02:26:52Z Top typing program out there</li> <li>2023-09-07 02:26:52Z Interesting things that I ran into when researching neovim as an ide</li> <li>2023-09-07 02:26:52Z Broodkeeper diurna boss fight</li> <li>2023-09-07 02:26:52Z Gold and black armor for dragon riding mounts</li> <li>2023-09-07 02:26:52Z Obsidian Dracthyr Battlegear</li> <li>2023-09-07 02:26:52Z Alacrity configuration notes</li> <li>2023-09-07 02:26:52Z Neovim workspaces</li> <li>2023-09-07 02:26:52Z December 2022 week 2 2022 world of warcraft checklist</li> <li>2023-09-07 02:26:52Z Formatting in neovim</li> <li>2023-09-07 02:26:52Z World of warcraft weekly checklist </li> <li>2023-09-07 02:26:52Z Transmogs for windborne velocidrake</li> <li>2023-09-07 02:26:52Z Mon 26 Dec 2022 world of warcraft weekly checklist</li> <li>2023-09-07 02:26:52Z Cool streaming setup that I should look into</li> <li>2023-09-07 02:26:52Z How to do complex filtering with mongosh</li> <li>2023-09-07 02:26:52Z How to update fields using mongosh</li> <li>2023-09-07 02:26:52Z References to other peoples dotfiles that I find interesting</li> <li>2023-09-07 02:26:52Z How to get a portal mailbox in world of warcraft</li> <li>2023-09-07 02:26:52Z World of warcraft dragonflight season 1 dungeons</li> <li>2023-09-07 02:26:52Z Halls of valor dungeon</li> <li>2023-09-07 02:26:52Z Shadow moon burial grounds dungeon</li> <li>2023-09-07 02:26:52Z File type specific settings in neovim</li> <li>2023-09-07 02:26:52Z Key things that make neovim as an ide</li> <li>2023-09-07 02:26:52Z How to manually install a package from the AUR</li> <li>2023-09-07 02:26:52Z Halls of Valor dungeon</li> <li>2023-09-07 02:26:52Z World of warcraft dragonflight season 1</li> <li>2023-09-07 02:26:52Z Linux desktop comparison</li> <li>2023-09-07 02:26:52Z Solution to being locked out of arch linux</li> <li>2023-09-07 02:26:52Z Arch linux setup on blaze</li> <li>2023-09-07 02:26:52Z Mythic plus progress on Ravalock for season 2</li> <li>2023-09-07 02:26:52Z Meetup.com alternative idea</li> <li>2023-09-07 02:26:52Z PGP cheatsheet</li> <li>2023-09-07 02:26:52Z Personal dotfiles</li> <li>2023-09-07 02:26:52Z Configuration of IntelliJ IDEA and friends</li> <li>2023-09-07 02:26:52Z How to replace a missing MN license plate</li> <li>2023-09-07 02:26:52Z AwesomeWM Terminology</li> <li>2023-09-07 02:26:52Z Ranger alternatives</li> <li>2023-09-07 02:26:52Z EDID emulator</li> <li>2023-09-07 02:26:52Z Setting up refind as a boot loader</li> <li>2023-09-07 02:26:52Z Pacman cheatsheet and usage patterns</li> <li>2023-09-07 02:26:52Z Arch linux setup on Terra</li> <li>2023-09-07 02:26:52Z Thanksgiving bread bowl 2022</li> <li>2023-09-07 02:26:52Z When to use CGO_ENABLED</li> <li>2023-09-07 02:26:52Z Jekyll theme hacker google analytics issue</li> <li>2023-09-07 02:26:52Z The idea of cognitive distance</li> <li>2023-09-07 02:26:52Z Research on type of mic for my streaming</li> <li>2023-09-07 02:26:52Z An interesting article about LINQ in JavaScript</li> <li>2023-09-07 02:26:52Z Seamless navigation between tmux and vim</li> <li>2023-09-07 02:26:52Z Types of pizza</li> <li>2023-09-07 02:26:52Z How to export postman files</li> <li>2023-09-07 02:26:52Z Managing encrypted data with ssh keys</li> <li>2023-09-07 02:26:52Z Article about how PostCSS is an alternatie to SCSS</li> <li>2023-09-07 02:26:52Z Introductory material for statistics</li> <li>2023-09-07 02:26:52Z List of core blocks for the block editor</li> <li>2023-09-07 02:26:52Z Schema google thing</li> <li>2023-09-07 02:26:52Z Keg and Case Market</li> <li>2023-09-07 02:26:52Z Chezmoi cheatsheet</li> <li>2023-09-07 02:26:52Z How to add a new post type in WordPress</li> <li>2023-09-07 02:26:52Z WordPress block editor domain model</li> <li>2023-09-07 02:26:52Z How to create a new category for blocks</li> <li>2023-09-07 02:26:52Z Bertello portable 12\u201d pizza oven</li> <li>2023-09-07 02:26:52Z 980 pro NVME upgrade on the XPS 9710</li> <li>2023-09-07 02:26:52Z Example of a vm with out a garbage collect</li> <li>2023-09-07 02:26:52Z The Word of Warcraft addons that I use</li> <li>2023-09-07 02:26:52Z Wooden ship brewing</li> <li>2023-09-07 02:26:52Z COC Categorization</li> <li>2023-09-07 02:26:52Z What is Multi-Factor authentication</li> <li>2023-09-07 02:26:52Z Problem solution sets</li> <li>2023-09-07 02:26:52Z Article about HCTA real world outcomes</li> <li>2023-09-07 02:26:52Z What is critical thinking</li> <li>2023-09-07 02:26:52Z WordPress plugin development overview</li> <li>2023-09-07 02:26:52Z Tips when researching laptops</li> <li>2023-09-07 02:26:52Z How to setup a contact us page in WordPress</li> <li>2023-09-07 02:26:52Z How to grab a specific item in a tar file</li> <li>2023-09-07 02:26:52Z Rust installation process annoyances</li> <li>2023-09-07 02:26:52Z How to configure the editor in WordPress</li> <li>2023-09-07 02:26:52Z How to load custom CSS for a WordPress block</li> <li>2023-09-07 02:26:52Z The brewery Clutch Brewing</li> <li>2023-09-07 02:26:52Z WordPress domain experts</li> <li>2023-09-07 02:26:52Z WordPress community</li> <li>2023-09-07 02:26:52Z Quick fix list in neovim</li> <li>2023-09-07 02:26:52Z What is the idea width for readable text</li> <li>2023-09-07 02:26:52Z My typical pattern of devices to target</li> <li>2023-09-07 02:26:52Z Common breakpoints between browsers on different devices</li> <li>2023-09-07 02:26:52Z SEO concepts</li> <li>2023-09-07 02:26:52Z What is the benefit of paid for SSL</li> <li>2023-09-07 02:26:52Z Web development security risk types</li> <li>2023-09-07 02:26:52Z A possible thing to look out for if you see a spike in traffic</li> <li>2023-09-07 02:26:52Z Pattern for managing keybindings in neovim</li> <li>2023-09-07 02:26:52Z Top stats for warlock in dragon flight season 2</li> <li>2023-09-07 02:26:52Z How to manage dependencies with git submodules</li> <li>2023-09-07 02:26:52Z A nifty way to compare versions</li> <li>2023-09-07 02:26:52Z WordPress hosting with WPEngine</li> <li>2023-09-07 02:26:52Z WordPress hosting</li> <li>2023-09-07 02:26:52Z Opinionated go repo naming conventions</li> <li>2023-09-07 02:26:52Z MX Vertical mouse</li> <li>2023-09-07 02:26:52Z What is <code>mim</code></li> <li>2023-09-07 02:26:52Z Common patterns that I use for headers for my Zettelkasten</li> <li>2023-09-07 02:26:52Z Mental health disability anomia</li> <li>2023-09-07 02:26:52Z How to use <code>PostCSS</code> and <code>autoprefixer</code> in WordPress</li> <li>2023-09-07 02:26:52Z How to include CSS in a block theme for WordPress</li> <li>2023-09-07 02:26:52Z WordPress hosting on WP Engine</li> <li>2023-09-07 02:26:52Z WordPress hosting on GoDaddy</li> <li>2023-09-07 02:26:52Z WordPress block theme development prompt for chatGPT</li> <li>2023-09-07 02:26:52Z What is a custom wire cutting service</li> <li>2023-09-07 02:26:52Z What is an electrical component distributor</li> <li>2023-09-07 02:26:52Z Example scan line effect with tailwind</li> <li>2023-09-07 02:26:52Z MLSGrid</li> <li>2023-09-07 02:26:52Z E-commerce headless CMS domain model</li> <li>2023-09-07 02:26:52Z Headless CMS options for managing content</li> <li>2023-09-07 02:26:52Z Overview of the sales CMS Zendesk</li> <li>2023-09-07 02:26:52Z Look into the fidget rewrite issue</li> <li>2023-09-07 02:26:52Z Overview of the block editor in WordPress</li> <li>2023-09-07 02:26:52Z Overview of a block theme in WordPress</li> <li>2023-09-07 02:26:52Z Query strings are thought to impede indexing of dynamic pages</li> <li>2023-09-07 02:26:52Z How to setup tailwind for WordPress</li> <li>2023-09-07 02:26:52Z Basics of skip links in web development</li> <li>2023-09-07 02:26:52Z Useful WordPress plugins</li> <li>2023-09-07 02:26:52Z Where to get started when design a system</li> </ul>"},{"location":"dex/hardware.html","title":"Physical haredware that I own","text":"<ul> <li>Hardware: Kineses Advantage 360</li> <li>Hardware: My Ooni Karu 12G</li> <li>Hardware: Think Server 140 (ts140)</li> <li>Hardware: Dell XPS 9710</li> <li>Hardware: Custom built PC Trooper (trooper)</li> <li>Hardware: TP-Link BE550 (be550)</li> <li>Hardware: Beelink EQ12 N100</li> <li>Hardware: Luna Leadville pacer</li> <li>Hardware: 42\u201d Flexispot corner raiser</li> <li>Hardware: My hands</li> <li>Hardware: Portable Weber grill</li> <li>Hardware: HFS shoes</li> <li>Hardware: Ibanez RG421 Electric Guitar</li> <li>Hardware: Focusrite Scarlett 2i2</li> <li>Hardware: Altra lone peak 8</li> </ul>"},{"location":"dex/homelab.html","title":"Homelab","text":"<ul> <li>Patch: Installing proxmox on Beelink SEi 9</li> <li>Creating an [Ubuntu Server](../670) template my [Homelab](../578)</li> <li>Ubuntu template version 1 for my homelab</li> <li>Ubuntu template cloud version 1 for my homelab</li> <li>Cloud init first experience on my homelab</li> <li>Patch: serving password protected static websites on my homelab</li> <li>Patch: homelab email admin@jlrickert.me</li> <li>[x] Issue: EOL for 25.1 Opnsense</li> <li>Patch: Add logging with Grafana Loki - 2025-09-14</li> <li>Patch: Add Home Assistant - homelab</li> <li>Home assistant research</li> <li>FreeBSD for homelab exploration</li> <li>Hardware: Think Server 140 (ts140)</li> <li>Project: Current Homelab (homelab)</li> <li>Hardware: Netgear R7000 router</li> <li>Think Server T140 hardware dump</li> <li>Hardware: Custom built PC Trooper (trooper)</li> <li>Time log: Homelab</li> <li>[x] Homelab 2024 Task | experiment with setup site to site configuration</li> <li>[x] Homelab Task | setup a vpn</li> <li>Issue: Generating documentation for nvim plugins</li> <li>Current Homelab topology</li> <li>[x] Homelab Task | setup pfSense on ts140</li> <li>[x] Homelab Task | setup proxmox</li> <li>Overview: Raspberry pi (pi)</li> <li>[x] Homelab Task | setup DNS</li> <li>Hardware: TP-Link BE550 (be550)</li> <li>Hardware: Beelink EQ12 N100</li> <li>[ ] Homelab Task | Explore next cloud</li> <li>Service announcement protocols</li> <li>[x] Homelab Task: OPNSense installation on Beelink EQ12 N1000</li> <li>Setting up Digital Ocean DDNS on OPNSense</li> <li>Task: TrueNas Installation on ts140</li> <li>[x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense</li> <li>[ ] Homelab Task: Updating CloudFlare based email forwarding</li> <li>[x] Homelab Task: Assign IP address to PHP VM\u2019s</li> <li>[ ] Homelab task: quick password protected https server</li> <li>Connecting to Truenas storage volumes with NFS on my MacOS</li> <li>Migrating Virtualbox VM to Proxmox</li> <li>Using TrueNAS NFS for Proxmox images</li> <li>Patch | Homelab - Setting up DNS with Unbound with DHCP DNS registration</li> <li>Setting up DHCP on OPNSense (2024-11-09)</li> <li>Creating a time machine backup on TrueNAS</li> <li>SPEC: homelab multi call binary monolith</li> </ul>"},{"location":"dex/issues.html","title":"Issues","text":"<ul> <li>Issue: Task to fix keybinding issues between MacOS and ranger</li> <li>Issue: Sticking issues with baking</li> <li>Issue: running a typescript library in deno</li> <li>Issue: saving files in vim updates the modified time stamp</li> <li>Issue: Rounded borders for a table header</li> <li>Layout strategies for webdev</li> <li>World wide web consortium (w3c)</li> <li>Issue: Proxmox inaccessible</li> <li>Issue: LSP may expose sensitive contents</li> <li>Issue: unable to change model of an ongoing <code>mods</code> conversation</li> <li>keg create git issue</li> </ul>"},{"location":"dex/overviews.html","title":"Overviews","text":"<ul> <li>Overview: Baking (baking)</li> <li>Overview: Zettelkasten definition</li> <li>Overview: Neovim Telescope Plugin</li> <li>Overview: My Note taking system</li> <li>Overview: Website development (webdev)</li> </ul>"},{"location":"dex/persons.html","title":"Persons","text":"<ul> <li>Person: ThePrimeagon</li> <li>Person: streamer s9tpepper</li> <li>Person: Trump</li> <li>Person: cmgriffing the streamer</li> <li>Person: Foony\u2019s developer acorn1010</li> <li>Person: VTuber Mischa van den Burg</li> <li>Person: Rob Muhlestein</li> <li>Person: Thor</li> <li>Person: Twitch streamer BlaiseBits</li> <li>Person: Streamer MarekCounts</li> <li>Person: het_tanis</li> <li>Person: Adrian Cantril</li> </ul>"},{"location":"dex/projects.html","title":"Projects","text":"<ul> <li>Hardware: My Ooni Karu 12G</li> <li>Flutter experiments</li> <li>Hardware: Think Server 140 (ts140)</li> <li>Hardware: Dell XPS 9710</li> <li>Research: buying Ethernet adapters for a PC or server</li> <li>Netgear R7000 router</li> <li>Hardware: Custom built PC Trooper (trooper)</li> <li>Hardware: My M2 Macbook Pro</li> <li>Hardware: Samsung S22+ android phone (s22)</li> <li>Hardware: Razer thunderbolt docking station</li> <li>Research: 2024 WiFi upgrade</li> <li>Overview: Raspberry pi</li> <li>Hardware: TP-Link BE550 (be550)</li> <li>Beelink EQ12 N100</li> <li>Overview: Beelink (beelink)</li> </ul>"},{"location":"dex/tasks.html","title":"Tasks","text":"<ul> <li>[ ] mintea Task | help with minttea</li> <li>[ ] Neovim Task | setup configuration</li> <li>[x] Homelab 2024 Task | experiment with setup site to site configuration</li> <li>[x] Homelab Task | setup a vpn</li> <li>[x] Homelab Task | setup pfSense on ts140</li> <li>[x] Homelab Task | setup proxmox</li> <li>[ ] Dotfiles Task | create a zetq script</li> <li>[x] Homelab Task | setup DNS</li> <li>[ ] Neovim Task | hunk text object visual navigation issue</li> <li>[ ] Dotfiles Task | create <code>sync-project</code> script</li> <li>[ ] Homelab Task | Explore next cloud</li> <li>[x] Homelab Task: OPNSense installation on Beelink EQ12 N1000</li> <li>Task: TrueNas Installation on ts140</li> <li>[x] TS140 Task: Installing upgrades to TS140</li> <li>[x] Homelab Task: Road Warrior WireGuard VPN setup on OPNSense</li> <li>[ ] Homelab task: quick password protected https server</li> </ul>"}]}